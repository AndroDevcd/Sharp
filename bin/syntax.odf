## Object Dump file for bin/syntax:

class: app#__srt_global[0] fields(0) methods(2)
class: std#__srt_global[1] fields(2) methods(55)
class: std#_enum_[2] fields(2) methods(17)
class: std#throwable[3] fields(3) methods(12)
class: std#exception[4] fields(3) methods(15)
class: std#illegal_argument_exception[5] fields(3) methods(18)
class: std#illegal_state_exception[6] fields(3) methods(18)
class: std#out_of_bounds_exception[7] fields(3) methods(18)
class: std#io_exception[8] fields(3) methods(18)
class: std#invalid_operation_exception[9] fields(3) methods(18)
class: std#nullptr_exception[10] fields(3) methods(18)
class: std#runtime_exception[11] fields(3) methods(18)
class: std#stack_overflow_exception[12] fields(3) methods(18)
class: std#thread_stack_exception[13] fields(3) methods(18)
class: std#class_cast_exception[14] fields(3) methods(18)
class: std#out_of_memory_exception[15] fields(3) methods(18)
class: std#not_implemented_error[16] fields(3) methods(21)
class: std#unsatisfied_link_error[17] fields(3) methods(21)
class: std#assertion_error[18] fields(3) methods(21)
class: std#error[19] fields(3) methods(18)
class: std.io#__srt_global[20] fields(1) methods(45)
class: std.io#file[21] fields(3) methods(50)
class: std.io#file_system[22] fields(18) methods(27)
class: std.io.task#__srt_global[23] fields(6) methods(18)
class: std.io.task#cancellation_exception[24] fields(3) methods(21)
class: std.io.task#job[25] fields(22) methods(28)
class: std.io.task#job_builder[26] fields(2) methods(21)
class: std.io.task#job_controller[27] fields(2) methods(8)
class: std.io.task#job_master[28] fields(5) methods(15)
enum: std.io.task#job_state[29] fields(6) methods(17)
class: std.io.task#task[30] fields(0) methods(16)
class: std.io#thread[31] fields(14) methods(45)
class: std.io#thread_group[32] fields(6) methods(20)
enum: std.io#thread_priority[33] fields(5) methods(17)
enum: std.io#thread_result[34] fields(20) methods(20)
interface: std.io#uncaught_exception_handler[35] fields(0) methods(9)
class: std.io#unix_fs[36] fields(20) methods(32)
class: std.io#win_fs[37] fields(20) methods(32)
class: std.math#__srt_global[38] fields(5) methods(27)
class: std#_nil_[39] fields(1) methods(11)
class: std#_object_[40] fields(0) methods(7)
class: platform#__srt_global[41] fields(0) methods(4)
class: platform#build[42] fields(4) methods(10)
class: platform.kernel#__srt_global[43] fields(0) methods(1)
class: platform.kernel#platform[44] fields(4) methods(16)
class: platform.kernel#stack_state[45] fields(2) methods(8)
class: platform.kernel#vm[46] fields(0) methods(29)
class: std#ulong[47] fields(1) methods(309)
class: std#long[48] fields(1) methods(309)
class: std#uint[49] fields(1) methods(309)
class: std#int[50] fields(1) methods(309)
class: std#ushort[51] fields(1) methods(309)
class: std#short[52] fields(1) methods(309)
class: std#uchar[53] fields(1) methods(309)
class: std#char[54] fields(1) methods(315)
class: std#byte[55] fields(1) methods(409)
class: std#bool[56] fields(1) methods(310)
class: std#double[57] fields(1) methods(316)
interface: std#printable[58] fields(0) methods(9)
class: std#tmp[59] fields(0) methods(9)
class: std.reflect#__srt_global[60] fields(0) methods(1)
class: std.reflect#_class_[61] fields(6) methods(9)
class: std.reflect#data_entity[62] fields(6) methods(8)
enum: std.reflect#data_type[63] fields(19) methods(17)
enum: std.reflect#property_type[64] fields(5) methods(17)
class: std.reflect#data_property[65] fields(6) methods(9)
class: std.reflect#field[66] fields(2) methods(8)
class: std.reflect#function[67] fields(6) methods(9)
class: std.reflect#reflect[68] fields(4) methods(11)
class: std#string[69] fields(3) methods(67)
class: std#string_builder[70] fields(7) methods(53)
class: std#time[71] fields(1) methods(20)
enum: std#time_request[72] fields(11) methods(17)
enum: std#time_unit[73] fields(6) methods(17)
interface: std#unique[74] fields(0) methods(10)
std#loopable<std.io#thread>[75] fields(0) methods(9)
generic: std#integer<_uint64>[76] fields(1) methods(215)
generic: std#integer<_int64>[77] fields(1) methods(215)
generic: std#integer<_uint32>[78] fields(1) methods(215)
generic: std#integer<_int32>[79] fields(1) methods(215)
generic: std#integer<_uint16>[80] fields(1) methods(215)
generic: std#integer<_int16>[81] fields(1) methods(215)
generic: std#integer<_uint8>[82] fields(1) methods(215)
generic: std#integer<_int8>[83] fields(1) methods(215)
generic: std#integer<var>[84] fields(1) methods(215)
std#loopable<_int8>[85] fields(0) methods(9)
generic: std#list<std#string>[86] fields(5) methods(34)
std#loopable<std#string>[87] fields(0) methods(9)
generic: std#hashtable<std.io#thread,std.io.task#job_controller>[88] fields(6) methods(15)
generic: std#hashtable<std#int,std.io#thread>[89] fields(6) methods(15)
generic: std#list<std.io#thread>[90] fields(5) methods(34)
generic: std#synced_list<std.io.task#job>[91] fields(5) methods(32)
std#loopable<std.io.task#job>[92] fields(0) methods(9)
generic: std#list<std.io.task#job>[93] fields(5) methods(34)
generic: std#list<var>[94] fields(5) methods(34)
std#loopable<var>[95] fields(0) methods(9)
generic: std.io.task#entry<std.io#thread,std.io.task#job_controller>[96] fields(3) methods(10)
generic: std.io#entry<std#int,std.io#thread>[97] fields(3) methods(10)


 strings: 

[0]: job#
[1]: nil
[2]: main
[3]: 
[4]: assertion failed!
[5]: file path cannot be null
[6]: file path cannot be empty
[7]: Negative time
[8]: file could not be resolved: 
[9]: cannot set update restart interval on non-recurring job
[10]: cannot set a timeout on a job that's blocking the calling thread
[11]: cannot set a job recurring that's blocking the calling thread
[12]: cannot block calling thread on job that has a timeout
[13]: cannot block calling thread on a recurring job
[14]: recurring jobs cannot be deferred tasks
[15]: Long term jobs
[16]: Short term jobs
[17]: task_scheduler
[18]: cannot modify max thread count after task library has started, 
[19]: try calling this before your first task
[20]: cannot modify max thread count after task library has started, try calling this before your first ta
[21]: cannot have less than 2 max threads
[22]: long_term_worker_thread#
[23]: worker_thread#
[24]: invalid thread priority 
[25]: win
[26]: posix
[27]: .dll
[28]: .so
[29]: length cannot be less than zero
[30]: length of: 
[31]:  is greater than the string: 
[32]: null
[33]: invalid precision: 
[34]: end_pos: 
[35]:  cannot be less than the start_pos: 
[36]: Index out of bounds exception at: 
[37]:  with size of: 
[38]: endPos: 
[39]:  cannot be less than the startPos: 
[40]: cannot sleep for negative time: 
[41]: created
[42]: active
[43]: completed
[44]: cancelled
[45]: min_priority
[46]: norm_priority
[47]: max_priority
[48]: result_ok
[49]: result_ill_thread_start
[50]: result_thread_running
[51]: result_thread_terminated
[52]: result_invalid_stack_size
[53]: result_thread_not_started
[54]: result_ill_thread_join
[55]: result_thread_join_failed
[56]: result_ill_thread_interrupt
[57]: result_thread_interrupt_failed
[58]: result_ill_thread_destroy
[59]: result_thread_create_failed
[60]: result_no_thread_id
[61]: result_thread_destroy_failed
[62]: result_ill_priority_set
[63]: result_ill_thread_suspend
[64]: result_max_spin
[65]: enums
[66]: int8
[67]: int16
[68]: int32
[69]: int64
[70]: uint8
[71]: uint16
[72]: uint32
[73]: uint64
[74]: fnptr
[75]: _var
[76]: _object
[77]: _class
[78]: method
[79]: _nil
[80]: any
[81]: untyped
[82]: undefined
[83]: class_property
[84]: field_property
[85]: function_property
[86]: tm_seconds
[87]: tm_minutes
[88]: tm_hour
[89]: tm_mday
[90]: tm_mon
[91]: tm_year
[92]: tm_wday
[93]: tm_yday
[94]: tm_isdst
[95]: seconds
[96]: milliseconds
[97]: microseconds
[98]: nanoseconds
[99]: illegal char in string: 
[100]: [ 
[101]: , 
[102]:  ]
[103]: Index: 
[104]: , size: 
[105]: key 
[106]:  value 

 constants: 

[0]: 2.7182818284590451e+00
[1]: 3.1415926535897931e+00
[2]: 1.0000000000000000e+00
[3]: 0.0000000000000000e+00
[4]: inf
[5]: nan
[6]: nan
[7]: 7.5000000000000000e-01
[8]: 3.7462847291118000e+15
[9]: 2.5000000000000000e-01
[10]: 5.0000000000000000e-01
[11]: 1.0000000000000000e+09

 methods: 
constructor: app#__srt_global.__srt_global[0] params(0) in file: tests/syntax.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std#__srt_global.__srt_global[1] params(0) in file: lib\support\0.2.805/console.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io#__srt_global.__srt_global[2] params(0) in file: lib\support\0.2.805/io//critical_section.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io.task#__srt_global.__srt_global[3] params(0) in file: lib\support\0.2.805/io//task//cancellation_exception.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.math#__srt_global.__srt_global[4] params(0) in file: lib\support\0.2.805/math//math.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform#__srt_global.__srt_global[5] params(0) in file: lib\support\0.2.805/platform//build.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform.kernel#__srt_global.__srt_global[6] params(0) in file: lib\support\0.2.805/platform//kernel//platform.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.reflect#__srt_global.__srt_global[7] params(0) in file: lib\support\0.2.805/reflect//class.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


std#loopable<std.io#thread>.get_elements[8] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:4:8: note:  
			
		       ^



constructor: std#loopable<std.io#thread>.loopable[9] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:3:10: note:  
		public class thread_group : loopable<thread> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_uint64>.integer[10] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 9 loadl ebx, fp+1   
3 [0x3]:         rstore ebx   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         loadval ebx   
8 [0x8]:         movu64 ebx, ebx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         rmov adx, ebx   
12 [0xc]:         ret   


function: std#integer<_uint64>.hash[11] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2405 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint64>.operator!=[12] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[13] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator!=[14] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[15] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator!=[16] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[17] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator!=[18] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[19] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator!=[20] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[21] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator!=[22] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[23] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator!=[24] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[25] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator!=[26] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[27] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator!=[28] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[29] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator!=[30] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[31] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[32] params(1) in file: lib\support\0.2.805/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator+[33] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[34] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[35] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[36] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[37] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[38] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[39] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[40] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[41] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[42] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[43] params(1) in file: lib\support\0.2.805/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator+[44] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint64>.operator-[45] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[46] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[47] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[48] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[49] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[50] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[51] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[52] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[53] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[54] params(1) in file: lib\support\0.2.805/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[55] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator-[56] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          sub ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint64>.operator*[57] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[58] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[59] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[60] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[61] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[62] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[63] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[64] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[65] params(1) in file: lib\support\0.2.805/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[66] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[67] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator*[68] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          mul ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint64>.operator/[69] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[70] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[71] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[72] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[73] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[74] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[75] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[76] params(1) in file: lib\support\0.2.805/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[77] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[78] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[79] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator/[80] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          div ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint64>.operator%[81] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator%[82] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator%[83] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator%[84] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator%[85] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator%[86] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator%[87] params(1) in file: lib\support\0.2.805/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator%[88] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator%[89] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator%[90] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint64>.operator%[91] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           mod ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator%[92] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           mod ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint64>.operator<[93] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[94] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[95] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[96] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[97] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[98] params(1) in file: lib\support\0.2.805/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[99] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[100] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[101] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[102] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[103] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<[104] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint64>.operator>[105] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[106] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[107] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[108] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[109] params(1) in file: lib\support\0.2.805/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[110] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[111] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[112] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[113] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[114] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[115] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator>[116] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint64>.operator<=[117] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[118] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[119] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[120] params(1) in file: lib\support\0.2.805/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[121] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[122] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[123] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[124] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[125] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[126] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[127] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator<=[128] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint64>.operator**[129] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[130] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[131] params(1) in file: lib\support\0.2.805/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[132] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[133] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[134] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[135] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[136] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[137] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[138] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[139] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator**[140] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           exp ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint64>.operator<<[141] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[142] params(1) in file: lib\support\0.2.805/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[143] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[144] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[145] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[146] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[147] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[148] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[149] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[150] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[151] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator<<[152] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shl ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint64>.operator>>[153] params(1) in file: lib\support\0.2.805/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[154] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[155] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[156] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[157] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[158] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[159] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[160] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[161] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[162] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[163] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint64>.operator>>[164] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shr ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint64>.operator^[165] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[166] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[167] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[168] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[169] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[170] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[171] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[172] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[173] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[174] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[175] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator^[176] params(1) in file: lib\support\0.2.805/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           xor ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint64>.operator&[177] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[178] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[179] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[180] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[181] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[182] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[183] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[184] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[185] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[186] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[187] params(1) in file: lib\support\0.2.805/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator&[188] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           uand ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint64>.operator|[189] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[190] params(1) in file: lib\support\0.2.805/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[191] params(1) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[192] params(1) in file: lib\support\0.2.805/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[193] params(1) in file: lib\support\0.2.805/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[194] params(1) in file: lib\support\0.2.805/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[195] params(1) in file: lib\support\0.2.805/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[196] params(1) in file: lib\support\0.2.805/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[197] params(1) in file: lib\support\0.2.805/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[198] params(1) in file: lib\support\0.2.805/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[199] params(1) in file: lib\support\0.2.805/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint64>.operator|[200] params(1) in file: lib\support\0.2.805/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           or ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint64>.operator!=[201] params(1) in file: lib\support\0.2.805/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint64>.operator==[202] params(1) in file: lib\support\0.2.805/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint64>.operator=[203] params(1) in file: lib\support\0.2.805/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           movu64 ebx, ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


function: std#integer<_uint64>.to_string[204] params(0) in file: lib\support\0.2.805/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3411 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint64>.parse[205] params(1) in file: lib\support\0.2.805/primitives.sharp:229:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 230 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+1   
3 [0x3]: line: 231 movi #0, ebx   
5 [0x5]:           movu64 ebx, ebx   
6 [0x6]:           smovr_2 ebx, fp+2   
7 [0x7]: line: 232 movi #0, ebx   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 233 movl 0   
11 [0xb]:           pushobj   
12 [0xc]:           call @3412 // <std#string.size>   
13 [0xd]:           loadval ebx   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 235 movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @3393 // <std#string.at>   
21 [0x15]:           loadval ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #45, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           test ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 236 movi #1, ebx   
32 [0x20]:           smovr_2 ebx, fp+3   
33 [0x21]: line: 237 movi #1, ebx   
35 [0x23]:           smovr_2 ebx, fp+1   
36 [0x24]:           nop   
37 [0x25]: line: 240 loadl ebx, fp+1   
38 [0x26]:           rstore ebx   
39 [0x27]:           loadl ebx, fp+4   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 95   
45 [0x2d]: line: 241 movl 0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+1   
48 [0x30]:           rstore ebx   
49 [0x31]:           call @3393 // <std#string.at>   
50 [0x32]:           call @3052 // <std#char.is_digit>   
51 [0x33]:           loadval ebx   
52 [0x34]:           not ebx, ebx   
53 [0x35]:           movr cmt, ebx   
54 [0x36]:           jne 69   
55 [0x37]: line: 242 new_class @5 // std#illegal_argument_exception   
56 [0x38]:           dup    
57 [0x39]:           new_class @69 // std#string   
58 [0x3a]:           dup    
59 [0x3b]:           newstr @99 // illegal char in string:    
60 [0x3c]:           call @3371 // <std#string.string>   
61 [0x3d]:           movl 0   
62 [0x3e]:           pushobj   
63 [0x3f]:           loadl ebx, fp+1   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @3393 // <std#string.at>   
66 [0x42]:           call @3404 // <std#string.operator+>   
67 [0x43]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
68 [0x44]:           throw    
69 [0x45]:           nop   
70 [0x46]: line: 246 movi #10, ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           mul ecx, ebx -> ebx   
74 [0x4a]:           movu64 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]: line: 247 movl 0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+1   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+1   
82 [0x52]:           rstore egx   
83 [0x53]:           call @3393 // <std#string.at>   
84 [0x54]:           loadval ebx   
85 [0x55]:           rstore ebx   
86 [0x56]:           movi #48, ebx   
88 [0x58]:           loadval ecx   
89 [0x59]:           sub ecx, ebx -> ebx   
90 [0x5a]:           loadl ecx, fp+2   
91 [0x5b]:           add ecx, ebx -> ebx   
92 [0x5c]:           movu64 ebx, ebx   
93 [0x5d]:           smovr_2 ebx, fp+2   
94 [0x5e]:           jmp @37   
95 [0x5f]: line: 249 loadl ebx, fp+3   
96 [0x60]:           movr cmt, ebx   
97 [0x61]:           jne 102   
98 [0x62]: line: 250 loadl ebx, fp+2   
99 [0x63]:           neg ebx, ebx   
100 [0x64]:           movu64 ebx, ebx   
101 [0x65]:           smovr_2 ebx, fp+2   
102 [0x66]:           nop   
103 [0x67]: line: 251 loadl ebx, fp+2   
104 [0x68]:           return_val ebx   
105 [0x69]:           ret   


function: std#integer<_uint64>.to_ulong[206] params(0) in file: lib\support\0.2.805/primitives.sharp:254:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 254 new_class @47 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_long[207] params(0) in file: lib\support\0.2.805/primitives.sharp:255:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 255 new_class @48 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_uint[208] params(0) in file: lib\support\0.2.805/primitives.sharp:256:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 256 new_class @49 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_int[209] params(0) in file: lib\support\0.2.805/primitives.sharp:257:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 257 new_class @50 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_ushort[210] params(0) in file: lib\support\0.2.805/primitives.sharp:258:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 258 new_class @51 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_short[211] params(0) in file: lib\support\0.2.805/primitives.sharp:259:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 259 new_class @52 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_uchar[212] params(0) in file: lib\support\0.2.805/primitives.sharp:260:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 260 new_class @53 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_char[213] params(0) in file: lib\support\0.2.805/primitives.sharp:261:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 261 new_class @54 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_byte[214] params(0) in file: lib\support\0.2.805/primitives.sharp:262:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 262 new_class @55 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_bool[215] params(0) in file: lib\support\0.2.805/primitives.sharp:263:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 263 new_class @56 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.get_value[216] params(0) in file: lib\support\0.2.805/primitives.sharp:265:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 265 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


constructor: std#integer<_uint64>.integer[217] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_int64>.integer[218] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 9 loadl ebx, fp+1   
3 [0x3]:         rstore ebx   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         loadval ebx   
8 [0x8]:         mov64 ebx, ebx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         rmov adx, ebx   
12 [0xc]:         ret   


function: std#integer<_int64>.hash[219] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2405 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int64>.operator!=[220] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[221] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator!=[222] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[223] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator!=[224] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[225] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator!=[226] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[227] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator!=[228] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[229] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator!=[230] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[231] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator!=[232] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[233] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator!=[234] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[235] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator!=[236] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[237] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator!=[238] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[239] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[240] params(1) in file: lib\support\0.2.805/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator+[241] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[242] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[243] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[244] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[245] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[246] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[247] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[248] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[249] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[250] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[251] params(1) in file: lib\support\0.2.805/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator+[252] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int64>.operator-[253] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[254] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[255] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[256] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[257] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[258] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[259] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[260] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[261] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[262] params(1) in file: lib\support\0.2.805/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[263] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator-[264] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          sub ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int64>.operator*[265] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[266] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[267] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[268] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[269] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[270] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[271] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[272] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[273] params(1) in file: lib\support\0.2.805/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[274] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[275] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator*[276] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          mul ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int64>.operator/[277] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[278] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[279] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[280] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[281] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[282] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[283] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[284] params(1) in file: lib\support\0.2.805/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[285] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[286] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[287] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator/[288] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          div ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int64>.operator%[289] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator%[290] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator%[291] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator%[292] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator%[293] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator%[294] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator%[295] params(1) in file: lib\support\0.2.805/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator%[296] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator%[297] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator%[298] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int64>.operator%[299] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           mod ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator%[300] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           mod ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int64>.operator<[301] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[302] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[303] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[304] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[305] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[306] params(1) in file: lib\support\0.2.805/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[307] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[308] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[309] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[310] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[311] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<[312] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int64>.operator>[313] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[314] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[315] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[316] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[317] params(1) in file: lib\support\0.2.805/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[318] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[319] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[320] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[321] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[322] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[323] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator>[324] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int64>.operator<=[325] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[326] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[327] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[328] params(1) in file: lib\support\0.2.805/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[329] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[330] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[331] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[332] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[333] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[334] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[335] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator<=[336] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int64>.operator**[337] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[338] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[339] params(1) in file: lib\support\0.2.805/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[340] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[341] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[342] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[343] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[344] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[345] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[346] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[347] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator**[348] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           exp ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int64>.operator<<[349] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[350] params(1) in file: lib\support\0.2.805/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[351] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[352] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[353] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[354] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[355] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[356] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[357] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[358] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[359] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator<<[360] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shl ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int64>.operator>>[361] params(1) in file: lib\support\0.2.805/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[362] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[363] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[364] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[365] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[366] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[367] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[368] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[369] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[370] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[371] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int64>.operator>>[372] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shr ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int64>.operator^[373] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[374] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[375] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[376] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[377] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[378] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[379] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[380] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[381] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[382] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[383] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator^[384] params(1) in file: lib\support\0.2.805/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           xor ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int64>.operator&[385] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[386] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[387] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[388] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[389] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[390] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[391] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[392] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[393] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[394] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[395] params(1) in file: lib\support\0.2.805/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator&[396] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           uand ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int64>.operator|[397] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[398] params(1) in file: lib\support\0.2.805/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[399] params(1) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[400] params(1) in file: lib\support\0.2.805/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[401] params(1) in file: lib\support\0.2.805/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[402] params(1) in file: lib\support\0.2.805/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[403] params(1) in file: lib\support\0.2.805/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[404] params(1) in file: lib\support\0.2.805/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[405] params(1) in file: lib\support\0.2.805/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[406] params(1) in file: lib\support\0.2.805/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[407] params(1) in file: lib\support\0.2.805/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int64>.operator|[408] params(1) in file: lib\support\0.2.805/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           or ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int64>.operator!=[409] params(1) in file: lib\support\0.2.805/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int64>.operator==[410] params(1) in file: lib\support\0.2.805/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int64>.operator=[411] params(1) in file: lib\support\0.2.805/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           mov64 ebx, ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


function: std#integer<_int64>.to_string[412] params(0) in file: lib\support\0.2.805/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3407 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int64>.parse[413] params(1) in file: lib\support\0.2.805/primitives.sharp:229:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 230 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+1   
3 [0x3]: line: 231 movi #0, ebx   
5 [0x5]:           mov64 ebx, ebx   
6 [0x6]:           smovr_2 ebx, fp+2   
7 [0x7]: line: 232 movi #0, ebx   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 233 movl 0   
11 [0xb]:           pushobj   
12 [0xc]:           call @3412 // <std#string.size>   
13 [0xd]:           loadval ebx   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 235 movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @3393 // <std#string.at>   
21 [0x15]:           loadval ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #45, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           test ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 236 movi #1, ebx   
32 [0x20]:           smovr_2 ebx, fp+3   
33 [0x21]: line: 237 movi #1, ebx   
35 [0x23]:           smovr_2 ebx, fp+1   
36 [0x24]:           nop   
37 [0x25]: line: 240 loadl ebx, fp+1   
38 [0x26]:           rstore ebx   
39 [0x27]:           loadl ebx, fp+4   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 95   
45 [0x2d]: line: 241 movl 0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+1   
48 [0x30]:           rstore ebx   
49 [0x31]:           call @3393 // <std#string.at>   
50 [0x32]:           call @3052 // <std#char.is_digit>   
51 [0x33]:           loadval ebx   
52 [0x34]:           not ebx, ebx   
53 [0x35]:           movr cmt, ebx   
54 [0x36]:           jne 69   
55 [0x37]: line: 242 new_class @5 // std#illegal_argument_exception   
56 [0x38]:           dup    
57 [0x39]:           new_class @69 // std#string   
58 [0x3a]:           dup    
59 [0x3b]:           newstr @99 // illegal char in string:    
60 [0x3c]:           call @3371 // <std#string.string>   
61 [0x3d]:           movl 0   
62 [0x3e]:           pushobj   
63 [0x3f]:           loadl ebx, fp+1   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @3393 // <std#string.at>   
66 [0x42]:           call @3404 // <std#string.operator+>   
67 [0x43]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
68 [0x44]:           throw    
69 [0x45]:           nop   
70 [0x46]: line: 246 movi #10, ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           mul ecx, ebx -> ebx   
74 [0x4a]:           mov64 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]: line: 247 movl 0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+1   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+1   
82 [0x52]:           rstore egx   
83 [0x53]:           call @3393 // <std#string.at>   
84 [0x54]:           loadval ebx   
85 [0x55]:           rstore ebx   
86 [0x56]:           movi #48, ebx   
88 [0x58]:           loadval ecx   
89 [0x59]:           sub ecx, ebx -> ebx   
90 [0x5a]:           loadl ecx, fp+2   
91 [0x5b]:           add ecx, ebx -> ebx   
92 [0x5c]:           mov64 ebx, ebx   
93 [0x5d]:           smovr_2 ebx, fp+2   
94 [0x5e]:           jmp @37   
95 [0x5f]: line: 249 loadl ebx, fp+3   
96 [0x60]:           movr cmt, ebx   
97 [0x61]:           jne 102   
98 [0x62]: line: 250 loadl ebx, fp+2   
99 [0x63]:           neg ebx, ebx   
100 [0x64]:           mov64 ebx, ebx   
101 [0x65]:           smovr_2 ebx, fp+2   
102 [0x66]:           nop   
103 [0x67]: line: 251 loadl ebx, fp+2   
104 [0x68]:           return_val ebx   
105 [0x69]:           ret   


function: std#integer<_int64>.to_ulong[414] params(0) in file: lib\support\0.2.805/primitives.sharp:254:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 254 new_class @47 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_long[415] params(0) in file: lib\support\0.2.805/primitives.sharp:255:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 255 new_class @48 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_uint[416] params(0) in file: lib\support\0.2.805/primitives.sharp:256:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 256 new_class @49 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_int[417] params(0) in file: lib\support\0.2.805/primitives.sharp:257:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 257 new_class @50 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_ushort[418] params(0) in file: lib\support\0.2.805/primitives.sharp:258:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 258 new_class @51 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_short[419] params(0) in file: lib\support\0.2.805/primitives.sharp:259:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 259 new_class @52 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_uchar[420] params(0) in file: lib\support\0.2.805/primitives.sharp:260:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 260 new_class @53 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_char[421] params(0) in file: lib\support\0.2.805/primitives.sharp:261:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 261 new_class @54 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_byte[422] params(0) in file: lib\support\0.2.805/primitives.sharp:262:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 262 new_class @55 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_bool[423] params(0) in file: lib\support\0.2.805/primitives.sharp:263:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 263 new_class @56 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.get_value[424] params(0) in file: lib\support\0.2.805/primitives.sharp:265:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 265 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


constructor: std#integer<_int64>.integer[425] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_uint32>.integer[426] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 9 loadl ebx, fp+1   
3 [0x3]:         rstore ebx   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         loadval ebx   
8 [0x8]:         movu32 ebx, ebx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         rmov adx, ebx   
12 [0xc]:         ret   


function: std#integer<_uint32>.hash[427] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2405 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint32>.operator!=[428] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[429] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator!=[430] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[431] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator!=[432] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[433] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator!=[434] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[435] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator!=[436] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[437] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator!=[438] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[439] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator!=[440] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[441] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator!=[442] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[443] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator!=[444] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[445] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator!=[446] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[447] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[448] params(1) in file: lib\support\0.2.805/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator+[449] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[450] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[451] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[452] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[453] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[454] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[455] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[456] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[457] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[458] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[459] params(1) in file: lib\support\0.2.805/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator+[460] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint32>.operator-[461] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[462] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[463] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[464] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[465] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[466] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[467] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[468] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[469] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[470] params(1) in file: lib\support\0.2.805/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[471] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator-[472] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          sub ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint32>.operator*[473] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[474] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[475] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[476] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[477] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[478] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[479] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[480] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[481] params(1) in file: lib\support\0.2.805/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[482] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[483] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator*[484] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          mul ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint32>.operator/[485] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[486] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[487] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[488] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[489] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[490] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[491] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[492] params(1) in file: lib\support\0.2.805/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[493] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[494] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[495] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator/[496] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          div ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint32>.operator%[497] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator%[498] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator%[499] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator%[500] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator%[501] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator%[502] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator%[503] params(1) in file: lib\support\0.2.805/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator%[504] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator%[505] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator%[506] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint32>.operator%[507] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           mod ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator%[508] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           mod ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint32>.operator<[509] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[510] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[511] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[512] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[513] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[514] params(1) in file: lib\support\0.2.805/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[515] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[516] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[517] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[518] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[519] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<[520] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint32>.operator>[521] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[522] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[523] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[524] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[525] params(1) in file: lib\support\0.2.805/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[526] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[527] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[528] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[529] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[530] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[531] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator>[532] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint32>.operator<=[533] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[534] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[535] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[536] params(1) in file: lib\support\0.2.805/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[537] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[538] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[539] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[540] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[541] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[542] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[543] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator<=[544] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint32>.operator**[545] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[546] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[547] params(1) in file: lib\support\0.2.805/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[548] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[549] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[550] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[551] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[552] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[553] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[554] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[555] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator**[556] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           exp ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint32>.operator<<[557] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[558] params(1) in file: lib\support\0.2.805/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[559] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[560] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[561] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[562] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[563] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[564] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[565] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[566] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[567] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator<<[568] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shl ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint32>.operator>>[569] params(1) in file: lib\support\0.2.805/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[570] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[571] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[572] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[573] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[574] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[575] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[576] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[577] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[578] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[579] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint32>.operator>>[580] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shr ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint32>.operator^[581] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[582] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[583] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[584] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[585] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[586] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[587] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[588] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[589] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[590] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[591] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator^[592] params(1) in file: lib\support\0.2.805/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           xor ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint32>.operator&[593] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[594] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[595] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[596] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[597] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[598] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[599] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[600] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[601] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[602] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[603] params(1) in file: lib\support\0.2.805/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator&[604] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           uand ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint32>.operator|[605] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[606] params(1) in file: lib\support\0.2.805/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[607] params(1) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[608] params(1) in file: lib\support\0.2.805/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[609] params(1) in file: lib\support\0.2.805/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[610] params(1) in file: lib\support\0.2.805/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[611] params(1) in file: lib\support\0.2.805/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[612] params(1) in file: lib\support\0.2.805/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[613] params(1) in file: lib\support\0.2.805/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[614] params(1) in file: lib\support\0.2.805/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[615] params(1) in file: lib\support\0.2.805/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint32>.operator|[616] params(1) in file: lib\support\0.2.805/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           or ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint32>.operator!=[617] params(1) in file: lib\support\0.2.805/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint32>.operator==[618] params(1) in file: lib\support\0.2.805/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint32>.operator=[619] params(1) in file: lib\support\0.2.805/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           movu32 ebx, ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


function: std#integer<_uint32>.to_string[620] params(0) in file: lib\support\0.2.805/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3410 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint32>.parse[621] params(1) in file: lib\support\0.2.805/primitives.sharp:229:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 230 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+1   
3 [0x3]: line: 231 movi #0, ebx   
5 [0x5]:           movu32 ebx, ebx   
6 [0x6]:           smovr_2 ebx, fp+2   
7 [0x7]: line: 232 movi #0, ebx   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 233 movl 0   
11 [0xb]:           pushobj   
12 [0xc]:           call @3412 // <std#string.size>   
13 [0xd]:           loadval ebx   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 235 movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @3393 // <std#string.at>   
21 [0x15]:           loadval ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #45, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           test ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 236 movi #1, ebx   
32 [0x20]:           smovr_2 ebx, fp+3   
33 [0x21]: line: 237 movi #1, ebx   
35 [0x23]:           smovr_2 ebx, fp+1   
36 [0x24]:           nop   
37 [0x25]: line: 240 loadl ebx, fp+1   
38 [0x26]:           rstore ebx   
39 [0x27]:           loadl ebx, fp+4   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 95   
45 [0x2d]: line: 241 movl 0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+1   
48 [0x30]:           rstore ebx   
49 [0x31]:           call @3393 // <std#string.at>   
50 [0x32]:           call @3052 // <std#char.is_digit>   
51 [0x33]:           loadval ebx   
52 [0x34]:           not ebx, ebx   
53 [0x35]:           movr cmt, ebx   
54 [0x36]:           jne 69   
55 [0x37]: line: 242 new_class @5 // std#illegal_argument_exception   
56 [0x38]:           dup    
57 [0x39]:           new_class @69 // std#string   
58 [0x3a]:           dup    
59 [0x3b]:           newstr @99 // illegal char in string:    
60 [0x3c]:           call @3371 // <std#string.string>   
61 [0x3d]:           movl 0   
62 [0x3e]:           pushobj   
63 [0x3f]:           loadl ebx, fp+1   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @3393 // <std#string.at>   
66 [0x42]:           call @3404 // <std#string.operator+>   
67 [0x43]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
68 [0x44]:           throw    
69 [0x45]:           nop   
70 [0x46]: line: 246 movi #10, ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           mul ecx, ebx -> ebx   
74 [0x4a]:           movu32 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]: line: 247 movl 0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+1   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+1   
82 [0x52]:           rstore egx   
83 [0x53]:           call @3393 // <std#string.at>   
84 [0x54]:           loadval ebx   
85 [0x55]:           rstore ebx   
86 [0x56]:           movi #48, ebx   
88 [0x58]:           loadval ecx   
89 [0x59]:           sub ecx, ebx -> ebx   
90 [0x5a]:           loadl ecx, fp+2   
91 [0x5b]:           add ecx, ebx -> ebx   
92 [0x5c]:           movu32 ebx, ebx   
93 [0x5d]:           smovr_2 ebx, fp+2   
94 [0x5e]:           jmp @37   
95 [0x5f]: line: 249 loadl ebx, fp+3   
96 [0x60]:           movr cmt, ebx   
97 [0x61]:           jne 102   
98 [0x62]: line: 250 loadl ebx, fp+2   
99 [0x63]:           neg ebx, ebx   
100 [0x64]:           movu32 ebx, ebx   
101 [0x65]:           smovr_2 ebx, fp+2   
102 [0x66]:           nop   
103 [0x67]: line: 251 loadl ebx, fp+2   
104 [0x68]:           return_val ebx   
105 [0x69]:           ret   


function: std#integer<_uint32>.to_ulong[622] params(0) in file: lib\support\0.2.805/primitives.sharp:254:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 254 new_class @47 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_long[623] params(0) in file: lib\support\0.2.805/primitives.sharp:255:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 255 new_class @48 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_uint[624] params(0) in file: lib\support\0.2.805/primitives.sharp:256:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 256 new_class @49 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_int[625] params(0) in file: lib\support\0.2.805/primitives.sharp:257:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 257 new_class @50 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_ushort[626] params(0) in file: lib\support\0.2.805/primitives.sharp:258:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 258 new_class @51 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_short[627] params(0) in file: lib\support\0.2.805/primitives.sharp:259:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 259 new_class @52 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_uchar[628] params(0) in file: lib\support\0.2.805/primitives.sharp:260:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 260 new_class @53 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_char[629] params(0) in file: lib\support\0.2.805/primitives.sharp:261:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 261 new_class @54 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_byte[630] params(0) in file: lib\support\0.2.805/primitives.sharp:262:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 262 new_class @55 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_bool[631] params(0) in file: lib\support\0.2.805/primitives.sharp:263:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 263 new_class @56 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.get_value[632] params(0) in file: lib\support\0.2.805/primitives.sharp:265:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 265 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


constructor: std#integer<_uint32>.integer[633] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_int32>.integer[634] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 9 loadl ebx, fp+1   
3 [0x3]:         rstore ebx   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         loadval ebx   
8 [0x8]:         mov32 ebx, ebx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         rmov adx, ebx   
12 [0xc]:         ret   


function: std#integer<_int32>.hash[635] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2405 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int32>.operator!=[636] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[637] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator!=[638] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[639] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator!=[640] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[641] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator!=[642] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[643] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator!=[644] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[645] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator!=[646] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[647] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator!=[648] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[649] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator!=[650] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[651] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator!=[652] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[653] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator!=[654] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[655] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[656] params(1) in file: lib\support\0.2.805/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator+[657] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[658] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[659] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[660] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[661] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[662] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[663] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[664] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[665] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[666] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[667] params(1) in file: lib\support\0.2.805/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator+[668] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int32>.operator-[669] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[670] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[671] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[672] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[673] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[674] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[675] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[676] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[677] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[678] params(1) in file: lib\support\0.2.805/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[679] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator-[680] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          sub ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int32>.operator*[681] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[682] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[683] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[684] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[685] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[686] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[687] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[688] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[689] params(1) in file: lib\support\0.2.805/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[690] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[691] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator*[692] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          mul ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int32>.operator/[693] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[694] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[695] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[696] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[697] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[698] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[699] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[700] params(1) in file: lib\support\0.2.805/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[701] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[702] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[703] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator/[704] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          div ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int32>.operator%[705] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator%[706] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator%[707] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator%[708] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator%[709] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator%[710] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator%[711] params(1) in file: lib\support\0.2.805/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator%[712] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator%[713] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator%[714] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int32>.operator%[715] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           mod ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator%[716] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           mod ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int32>.operator<[717] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[718] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[719] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[720] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[721] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[722] params(1) in file: lib\support\0.2.805/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[723] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[724] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[725] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[726] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[727] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<[728] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int32>.operator>[729] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[730] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[731] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[732] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[733] params(1) in file: lib\support\0.2.805/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[734] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[735] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[736] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[737] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[738] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[739] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator>[740] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int32>.operator<=[741] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[742] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[743] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[744] params(1) in file: lib\support\0.2.805/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[745] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[746] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[747] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[748] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[749] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[750] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[751] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator<=[752] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int32>.operator**[753] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[754] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[755] params(1) in file: lib\support\0.2.805/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[756] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[757] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[758] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[759] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[760] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[761] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[762] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[763] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator**[764] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           exp ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int32>.operator<<[765] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[766] params(1) in file: lib\support\0.2.805/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[767] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[768] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[769] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[770] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[771] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[772] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[773] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[774] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[775] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator<<[776] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shl ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int32>.operator>>[777] params(1) in file: lib\support\0.2.805/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[778] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[779] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[780] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[781] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[782] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[783] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[784] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[785] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[786] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[787] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int32>.operator>>[788] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shr ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int32>.operator^[789] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[790] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[791] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[792] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[793] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[794] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[795] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[796] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[797] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[798] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[799] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator^[800] params(1) in file: lib\support\0.2.805/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           xor ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int32>.operator&[801] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[802] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[803] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[804] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[805] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[806] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[807] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[808] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[809] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[810] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[811] params(1) in file: lib\support\0.2.805/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator&[812] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           uand ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int32>.operator|[813] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[814] params(1) in file: lib\support\0.2.805/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[815] params(1) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[816] params(1) in file: lib\support\0.2.805/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[817] params(1) in file: lib\support\0.2.805/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[818] params(1) in file: lib\support\0.2.805/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[819] params(1) in file: lib\support\0.2.805/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[820] params(1) in file: lib\support\0.2.805/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[821] params(1) in file: lib\support\0.2.805/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[822] params(1) in file: lib\support\0.2.805/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[823] params(1) in file: lib\support\0.2.805/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int32>.operator|[824] params(1) in file: lib\support\0.2.805/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           or ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int32>.operator!=[825] params(1) in file: lib\support\0.2.805/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int32>.operator==[826] params(1) in file: lib\support\0.2.805/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int32>.operator=[827] params(1) in file: lib\support\0.2.805/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           mov32 ebx, ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


function: std#integer<_int32>.to_string[828] params(0) in file: lib\support\0.2.805/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3406 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int32>.parse[829] params(1) in file: lib\support\0.2.805/primitives.sharp:229:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 230 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+1   
3 [0x3]: line: 231 movi #0, ebx   
5 [0x5]:           mov32 ebx, ebx   
6 [0x6]:           smovr_2 ebx, fp+2   
7 [0x7]: line: 232 movi #0, ebx   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 233 movl 0   
11 [0xb]:           pushobj   
12 [0xc]:           call @3412 // <std#string.size>   
13 [0xd]:           loadval ebx   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 235 movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @3393 // <std#string.at>   
21 [0x15]:           loadval ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #45, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           test ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 236 movi #1, ebx   
32 [0x20]:           smovr_2 ebx, fp+3   
33 [0x21]: line: 237 movi #1, ebx   
35 [0x23]:           smovr_2 ebx, fp+1   
36 [0x24]:           nop   
37 [0x25]: line: 240 loadl ebx, fp+1   
38 [0x26]:           rstore ebx   
39 [0x27]:           loadl ebx, fp+4   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 95   
45 [0x2d]: line: 241 movl 0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+1   
48 [0x30]:           rstore ebx   
49 [0x31]:           call @3393 // <std#string.at>   
50 [0x32]:           call @3052 // <std#char.is_digit>   
51 [0x33]:           loadval ebx   
52 [0x34]:           not ebx, ebx   
53 [0x35]:           movr cmt, ebx   
54 [0x36]:           jne 69   
55 [0x37]: line: 242 new_class @5 // std#illegal_argument_exception   
56 [0x38]:           dup    
57 [0x39]:           new_class @69 // std#string   
58 [0x3a]:           dup    
59 [0x3b]:           newstr @99 // illegal char in string:    
60 [0x3c]:           call @3371 // <std#string.string>   
61 [0x3d]:           movl 0   
62 [0x3e]:           pushobj   
63 [0x3f]:           loadl ebx, fp+1   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @3393 // <std#string.at>   
66 [0x42]:           call @3404 // <std#string.operator+>   
67 [0x43]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
68 [0x44]:           throw    
69 [0x45]:           nop   
70 [0x46]: line: 246 movi #10, ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           mul ecx, ebx -> ebx   
74 [0x4a]:           mov32 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]: line: 247 movl 0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+1   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+1   
82 [0x52]:           rstore egx   
83 [0x53]:           call @3393 // <std#string.at>   
84 [0x54]:           loadval ebx   
85 [0x55]:           rstore ebx   
86 [0x56]:           movi #48, ebx   
88 [0x58]:           loadval ecx   
89 [0x59]:           sub ecx, ebx -> ebx   
90 [0x5a]:           loadl ecx, fp+2   
91 [0x5b]:           add ecx, ebx -> ebx   
92 [0x5c]:           mov32 ebx, ebx   
93 [0x5d]:           smovr_2 ebx, fp+2   
94 [0x5e]:           jmp @37   
95 [0x5f]: line: 249 loadl ebx, fp+3   
96 [0x60]:           movr cmt, ebx   
97 [0x61]:           jne 102   
98 [0x62]: line: 250 loadl ebx, fp+2   
99 [0x63]:           neg ebx, ebx   
100 [0x64]:           mov32 ebx, ebx   
101 [0x65]:           smovr_2 ebx, fp+2   
102 [0x66]:           nop   
103 [0x67]: line: 251 loadl ebx, fp+2   
104 [0x68]:           return_val ebx   
105 [0x69]:           ret   


function: std#integer<_int32>.to_ulong[830] params(0) in file: lib\support\0.2.805/primitives.sharp:254:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 254 new_class @47 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_long[831] params(0) in file: lib\support\0.2.805/primitives.sharp:255:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 255 new_class @48 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_uint[832] params(0) in file: lib\support\0.2.805/primitives.sharp:256:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 256 new_class @49 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_int[833] params(0) in file: lib\support\0.2.805/primitives.sharp:257:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 257 new_class @50 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_ushort[834] params(0) in file: lib\support\0.2.805/primitives.sharp:258:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 258 new_class @51 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_short[835] params(0) in file: lib\support\0.2.805/primitives.sharp:259:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 259 new_class @52 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_uchar[836] params(0) in file: lib\support\0.2.805/primitives.sharp:260:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 260 new_class @53 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_char[837] params(0) in file: lib\support\0.2.805/primitives.sharp:261:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 261 new_class @54 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_byte[838] params(0) in file: lib\support\0.2.805/primitives.sharp:262:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 262 new_class @55 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_bool[839] params(0) in file: lib\support\0.2.805/primitives.sharp:263:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 263 new_class @56 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.get_value[840] params(0) in file: lib\support\0.2.805/primitives.sharp:265:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 265 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


constructor: std#integer<_int32>.integer[841] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_uint16>.integer[842] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 9 loadl ebx, fp+1   
3 [0x3]:         rstore ebx   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         loadval ebx   
8 [0x8]:         movu16 ebx, ebx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         rmov adx, ebx   
12 [0xc]:         ret   


function: std#integer<_uint16>.hash[843] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2405 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint16>.operator!=[844] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[845] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator!=[846] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[847] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator!=[848] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[849] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator!=[850] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[851] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator!=[852] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[853] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator!=[854] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[855] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator!=[856] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[857] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator!=[858] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[859] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator!=[860] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[861] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator!=[862] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[863] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[864] params(1) in file: lib\support\0.2.805/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator+[865] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[866] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[867] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[868] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[869] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[870] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[871] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[872] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[873] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[874] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[875] params(1) in file: lib\support\0.2.805/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator+[876] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint16>.operator-[877] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[878] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[879] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[880] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[881] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[882] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[883] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[884] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[885] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[886] params(1) in file: lib\support\0.2.805/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[887] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator-[888] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          sub ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint16>.operator*[889] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[890] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[891] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[892] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[893] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[894] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[895] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[896] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[897] params(1) in file: lib\support\0.2.805/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[898] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[899] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator*[900] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          mul ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint16>.operator/[901] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[902] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[903] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[904] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[905] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[906] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[907] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[908] params(1) in file: lib\support\0.2.805/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[909] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[910] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[911] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator/[912] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          div ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint16>.operator%[913] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator%[914] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator%[915] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator%[916] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator%[917] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator%[918] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator%[919] params(1) in file: lib\support\0.2.805/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator%[920] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator%[921] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator%[922] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint16>.operator%[923] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           mod ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator%[924] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           mod ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint16>.operator<[925] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[926] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[927] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[928] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[929] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[930] params(1) in file: lib\support\0.2.805/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[931] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[932] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[933] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[934] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[935] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<[936] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint16>.operator>[937] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[938] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[939] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[940] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[941] params(1) in file: lib\support\0.2.805/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[942] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[943] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[944] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[945] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[946] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[947] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator>[948] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint16>.operator<=[949] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[950] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[951] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[952] params(1) in file: lib\support\0.2.805/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[953] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[954] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[955] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[956] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[957] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[958] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[959] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator<=[960] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint16>.operator**[961] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[962] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[963] params(1) in file: lib\support\0.2.805/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[964] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[965] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[966] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[967] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[968] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[969] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[970] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[971] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator**[972] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           exp ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint16>.operator<<[973] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[974] params(1) in file: lib\support\0.2.805/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[975] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[976] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[977] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[978] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[979] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[980] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[981] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[982] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[983] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator<<[984] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shl ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint16>.operator>>[985] params(1) in file: lib\support\0.2.805/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[986] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[987] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[988] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[989] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[990] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[991] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[992] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[993] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[994] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[995] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint16>.operator>>[996] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shr ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint16>.operator^[997] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[998] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[999] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[1000] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[1001] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[1002] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[1003] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[1004] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[1005] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[1006] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[1007] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator^[1008] params(1) in file: lib\support\0.2.805/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           xor ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint16>.operator&[1009] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1010] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1011] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1012] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1013] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1014] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1015] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1016] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1017] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1018] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1019] params(1) in file: lib\support\0.2.805/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator&[1020] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           uand ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint16>.operator|[1021] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1022] params(1) in file: lib\support\0.2.805/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1023] params(1) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1024] params(1) in file: lib\support\0.2.805/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1025] params(1) in file: lib\support\0.2.805/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1026] params(1) in file: lib\support\0.2.805/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1027] params(1) in file: lib\support\0.2.805/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1028] params(1) in file: lib\support\0.2.805/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1029] params(1) in file: lib\support\0.2.805/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1030] params(1) in file: lib\support\0.2.805/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1031] params(1) in file: lib\support\0.2.805/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint16>.operator|[1032] params(1) in file: lib\support\0.2.805/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           or ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint16>.operator!=[1033] params(1) in file: lib\support\0.2.805/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint16>.operator==[1034] params(1) in file: lib\support\0.2.805/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint16>.operator=[1035] params(1) in file: lib\support\0.2.805/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           movu16 ebx, ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


function: std#integer<_uint16>.to_string[1036] params(0) in file: lib\support\0.2.805/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3409 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint16>.parse[1037] params(1) in file: lib\support\0.2.805/primitives.sharp:229:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 230 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+1   
3 [0x3]: line: 231 movi #0, ebx   
5 [0x5]:           movu16 ebx, ebx   
6 [0x6]:           smovr_2 ebx, fp+2   
7 [0x7]: line: 232 movi #0, ebx   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 233 movl 0   
11 [0xb]:           pushobj   
12 [0xc]:           call @3412 // <std#string.size>   
13 [0xd]:           loadval ebx   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 235 movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @3393 // <std#string.at>   
21 [0x15]:           loadval ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #45, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           test ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 236 movi #1, ebx   
32 [0x20]:           smovr_2 ebx, fp+3   
33 [0x21]: line: 237 movi #1, ebx   
35 [0x23]:           smovr_2 ebx, fp+1   
36 [0x24]:           nop   
37 [0x25]: line: 240 loadl ebx, fp+1   
38 [0x26]:           rstore ebx   
39 [0x27]:           loadl ebx, fp+4   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 95   
45 [0x2d]: line: 241 movl 0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+1   
48 [0x30]:           rstore ebx   
49 [0x31]:           call @3393 // <std#string.at>   
50 [0x32]:           call @3052 // <std#char.is_digit>   
51 [0x33]:           loadval ebx   
52 [0x34]:           not ebx, ebx   
53 [0x35]:           movr cmt, ebx   
54 [0x36]:           jne 69   
55 [0x37]: line: 242 new_class @5 // std#illegal_argument_exception   
56 [0x38]:           dup    
57 [0x39]:           new_class @69 // std#string   
58 [0x3a]:           dup    
59 [0x3b]:           newstr @99 // illegal char in string:    
60 [0x3c]:           call @3371 // <std#string.string>   
61 [0x3d]:           movl 0   
62 [0x3e]:           pushobj   
63 [0x3f]:           loadl ebx, fp+1   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @3393 // <std#string.at>   
66 [0x42]:           call @3404 // <std#string.operator+>   
67 [0x43]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
68 [0x44]:           throw    
69 [0x45]:           nop   
70 [0x46]: line: 246 movi #10, ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           mul ecx, ebx -> ebx   
74 [0x4a]:           movu16 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]: line: 247 movl 0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+1   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+1   
82 [0x52]:           rstore egx   
83 [0x53]:           call @3393 // <std#string.at>   
84 [0x54]:           loadval ebx   
85 [0x55]:           rstore ebx   
86 [0x56]:           movi #48, ebx   
88 [0x58]:           loadval ecx   
89 [0x59]:           sub ecx, ebx -> ebx   
90 [0x5a]:           loadl ecx, fp+2   
91 [0x5b]:           add ecx, ebx -> ebx   
92 [0x5c]:           movu16 ebx, ebx   
93 [0x5d]:           smovr_2 ebx, fp+2   
94 [0x5e]:           jmp @37   
95 [0x5f]: line: 249 loadl ebx, fp+3   
96 [0x60]:           movr cmt, ebx   
97 [0x61]:           jne 102   
98 [0x62]: line: 250 loadl ebx, fp+2   
99 [0x63]:           neg ebx, ebx   
100 [0x64]:           movu16 ebx, ebx   
101 [0x65]:           smovr_2 ebx, fp+2   
102 [0x66]:           nop   
103 [0x67]: line: 251 loadl ebx, fp+2   
104 [0x68]:           return_val ebx   
105 [0x69]:           ret   


function: std#integer<_uint16>.to_ulong[1038] params(0) in file: lib\support\0.2.805/primitives.sharp:254:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 254 new_class @47 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_long[1039] params(0) in file: lib\support\0.2.805/primitives.sharp:255:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 255 new_class @48 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_uint[1040] params(0) in file: lib\support\0.2.805/primitives.sharp:256:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 256 new_class @49 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_int[1041] params(0) in file: lib\support\0.2.805/primitives.sharp:257:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 257 new_class @50 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_ushort[1042] params(0) in file: lib\support\0.2.805/primitives.sharp:258:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 258 new_class @51 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_short[1043] params(0) in file: lib\support\0.2.805/primitives.sharp:259:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 259 new_class @52 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_uchar[1044] params(0) in file: lib\support\0.2.805/primitives.sharp:260:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 260 new_class @53 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_char[1045] params(0) in file: lib\support\0.2.805/primitives.sharp:261:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 261 new_class @54 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_byte[1046] params(0) in file: lib\support\0.2.805/primitives.sharp:262:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 262 new_class @55 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_bool[1047] params(0) in file: lib\support\0.2.805/primitives.sharp:263:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 263 new_class @56 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.get_value[1048] params(0) in file: lib\support\0.2.805/primitives.sharp:265:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 265 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


constructor: std#integer<_uint16>.integer[1049] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_int16>.integer[1050] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 9 loadl ebx, fp+1   
3 [0x3]:         rstore ebx   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         loadval ebx   
8 [0x8]:         mov16 ebx, ebx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         rmov adx, ebx   
12 [0xc]:         ret   


function: std#integer<_int16>.hash[1051] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2405 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int16>.operator!=[1052] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1053] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator!=[1054] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1055] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator!=[1056] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1057] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator!=[1058] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1059] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator!=[1060] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1061] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator!=[1062] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1063] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator!=[1064] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1065] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator!=[1066] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1067] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator!=[1068] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1069] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator!=[1070] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1071] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[1072] params(1) in file: lib\support\0.2.805/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator+[1073] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1074] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1075] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1076] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1077] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1078] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1079] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1080] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1081] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1082] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1083] params(1) in file: lib\support\0.2.805/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator+[1084] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int16>.operator-[1085] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1086] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1087] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1088] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1089] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1090] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1091] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1092] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1093] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1094] params(1) in file: lib\support\0.2.805/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1095] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator-[1096] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          sub ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int16>.operator*[1097] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1098] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1099] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1100] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1101] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1102] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1103] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1104] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1105] params(1) in file: lib\support\0.2.805/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1106] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1107] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator*[1108] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          mul ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int16>.operator/[1109] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1110] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1111] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1112] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1113] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1114] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1115] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1116] params(1) in file: lib\support\0.2.805/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1117] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1118] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1119] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator/[1120] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          div ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int16>.operator%[1121] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator%[1122] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator%[1123] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator%[1124] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator%[1125] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator%[1126] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator%[1127] params(1) in file: lib\support\0.2.805/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator%[1128] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator%[1129] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator%[1130] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int16>.operator%[1131] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           mod ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator%[1132] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           mod ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int16>.operator<[1133] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1134] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1135] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1136] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1137] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1138] params(1) in file: lib\support\0.2.805/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1139] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1140] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1141] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1142] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1143] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<[1144] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int16>.operator>[1145] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1146] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1147] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1148] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1149] params(1) in file: lib\support\0.2.805/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1150] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1151] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1152] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1153] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1154] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1155] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator>[1156] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int16>.operator<=[1157] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1158] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1159] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1160] params(1) in file: lib\support\0.2.805/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1161] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1162] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1163] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1164] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1165] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1166] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1167] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator<=[1168] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int16>.operator**[1169] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1170] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1171] params(1) in file: lib\support\0.2.805/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1172] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1173] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1174] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1175] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1176] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1177] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1178] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1179] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator**[1180] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           exp ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int16>.operator<<[1181] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1182] params(1) in file: lib\support\0.2.805/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1183] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1184] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1185] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1186] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1187] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1188] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1189] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1190] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1191] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator<<[1192] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shl ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int16>.operator>>[1193] params(1) in file: lib\support\0.2.805/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1194] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1195] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1196] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1197] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1198] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1199] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1200] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1201] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1202] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1203] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int16>.operator>>[1204] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shr ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int16>.operator^[1205] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1206] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1207] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1208] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1209] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1210] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1211] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1212] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1213] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1214] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1215] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator^[1216] params(1) in file: lib\support\0.2.805/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           xor ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int16>.operator&[1217] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1218] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1219] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1220] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1221] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1222] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1223] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1224] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1225] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1226] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1227] params(1) in file: lib\support\0.2.805/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator&[1228] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           uand ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int16>.operator|[1229] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1230] params(1) in file: lib\support\0.2.805/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1231] params(1) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1232] params(1) in file: lib\support\0.2.805/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1233] params(1) in file: lib\support\0.2.805/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1234] params(1) in file: lib\support\0.2.805/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1235] params(1) in file: lib\support\0.2.805/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1236] params(1) in file: lib\support\0.2.805/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1237] params(1) in file: lib\support\0.2.805/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1238] params(1) in file: lib\support\0.2.805/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1239] params(1) in file: lib\support\0.2.805/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int16>.operator|[1240] params(1) in file: lib\support\0.2.805/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           or ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int16>.operator!=[1241] params(1) in file: lib\support\0.2.805/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int16>.operator==[1242] params(1) in file: lib\support\0.2.805/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int16>.operator=[1243] params(1) in file: lib\support\0.2.805/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           mov16 ebx, ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


function: std#integer<_int16>.to_string[1244] params(0) in file: lib\support\0.2.805/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3405 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int16>.parse[1245] params(1) in file: lib\support\0.2.805/primitives.sharp:229:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 230 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+1   
3 [0x3]: line: 231 movi #0, ebx   
5 [0x5]:           mov16 ebx, ebx   
6 [0x6]:           smovr_2 ebx, fp+2   
7 [0x7]: line: 232 movi #0, ebx   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 233 movl 0   
11 [0xb]:           pushobj   
12 [0xc]:           call @3412 // <std#string.size>   
13 [0xd]:           loadval ebx   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 235 movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @3393 // <std#string.at>   
21 [0x15]:           loadval ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #45, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           test ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 236 movi #1, ebx   
32 [0x20]:           smovr_2 ebx, fp+3   
33 [0x21]: line: 237 movi #1, ebx   
35 [0x23]:           smovr_2 ebx, fp+1   
36 [0x24]:           nop   
37 [0x25]: line: 240 loadl ebx, fp+1   
38 [0x26]:           rstore ebx   
39 [0x27]:           loadl ebx, fp+4   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 95   
45 [0x2d]: line: 241 movl 0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+1   
48 [0x30]:           rstore ebx   
49 [0x31]:           call @3393 // <std#string.at>   
50 [0x32]:           call @3052 // <std#char.is_digit>   
51 [0x33]:           loadval ebx   
52 [0x34]:           not ebx, ebx   
53 [0x35]:           movr cmt, ebx   
54 [0x36]:           jne 69   
55 [0x37]: line: 242 new_class @5 // std#illegal_argument_exception   
56 [0x38]:           dup    
57 [0x39]:           new_class @69 // std#string   
58 [0x3a]:           dup    
59 [0x3b]:           newstr @99 // illegal char in string:    
60 [0x3c]:           call @3371 // <std#string.string>   
61 [0x3d]:           movl 0   
62 [0x3e]:           pushobj   
63 [0x3f]:           loadl ebx, fp+1   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @3393 // <std#string.at>   
66 [0x42]:           call @3404 // <std#string.operator+>   
67 [0x43]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
68 [0x44]:           throw    
69 [0x45]:           nop   
70 [0x46]: line: 246 movi #10, ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           mul ecx, ebx -> ebx   
74 [0x4a]:           mov16 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]: line: 247 movl 0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+1   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+1   
82 [0x52]:           rstore egx   
83 [0x53]:           call @3393 // <std#string.at>   
84 [0x54]:           loadval ebx   
85 [0x55]:           rstore ebx   
86 [0x56]:           movi #48, ebx   
88 [0x58]:           loadval ecx   
89 [0x59]:           sub ecx, ebx -> ebx   
90 [0x5a]:           loadl ecx, fp+2   
91 [0x5b]:           add ecx, ebx -> ebx   
92 [0x5c]:           mov16 ebx, ebx   
93 [0x5d]:           smovr_2 ebx, fp+2   
94 [0x5e]:           jmp @37   
95 [0x5f]: line: 249 loadl ebx, fp+3   
96 [0x60]:           movr cmt, ebx   
97 [0x61]:           jne 102   
98 [0x62]: line: 250 loadl ebx, fp+2   
99 [0x63]:           neg ebx, ebx   
100 [0x64]:           mov16 ebx, ebx   
101 [0x65]:           smovr_2 ebx, fp+2   
102 [0x66]:           nop   
103 [0x67]: line: 251 loadl ebx, fp+2   
104 [0x68]:           return_val ebx   
105 [0x69]:           ret   


function: std#integer<_int16>.to_ulong[1246] params(0) in file: lib\support\0.2.805/primitives.sharp:254:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 254 new_class @47 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_long[1247] params(0) in file: lib\support\0.2.805/primitives.sharp:255:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 255 new_class @48 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_uint[1248] params(0) in file: lib\support\0.2.805/primitives.sharp:256:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 256 new_class @49 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_int[1249] params(0) in file: lib\support\0.2.805/primitives.sharp:257:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 257 new_class @50 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_ushort[1250] params(0) in file: lib\support\0.2.805/primitives.sharp:258:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 258 new_class @51 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_short[1251] params(0) in file: lib\support\0.2.805/primitives.sharp:259:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 259 new_class @52 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_uchar[1252] params(0) in file: lib\support\0.2.805/primitives.sharp:260:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 260 new_class @53 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_char[1253] params(0) in file: lib\support\0.2.805/primitives.sharp:261:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 261 new_class @54 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_byte[1254] params(0) in file: lib\support\0.2.805/primitives.sharp:262:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 262 new_class @55 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_bool[1255] params(0) in file: lib\support\0.2.805/primitives.sharp:263:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 263 new_class @56 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.get_value[1256] params(0) in file: lib\support\0.2.805/primitives.sharp:265:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 265 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


constructor: std#integer<_int16>.integer[1257] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_uint8>.integer[1258] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 9 loadl ebx, fp+1   
3 [0x3]:         rstore ebx   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         loadval ebx   
8 [0x8]:         movu8 ebx, ebx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         rmov adx, ebx   
12 [0xc]:         ret   


function: std#integer<_uint8>.hash[1259] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2405 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint8>.operator!=[1260] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1261] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator!=[1262] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1263] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator!=[1264] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1265] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator!=[1266] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1267] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator!=[1268] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1269] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator!=[1270] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1271] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator!=[1272] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1273] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator!=[1274] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1275] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator!=[1276] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1277] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator!=[1278] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1279] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[1280] params(1) in file: lib\support\0.2.805/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator+[1281] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1282] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1283] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1284] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1285] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1286] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1287] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1288] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1289] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1290] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1291] params(1) in file: lib\support\0.2.805/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator+[1292] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint8>.operator-[1293] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1294] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1295] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1296] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1297] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1298] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1299] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1300] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1301] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1302] params(1) in file: lib\support\0.2.805/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1303] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator-[1304] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          sub ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint8>.operator*[1305] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1306] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1307] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1308] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1309] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1310] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1311] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1312] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1313] params(1) in file: lib\support\0.2.805/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1314] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1315] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator*[1316] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          mul ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint8>.operator/[1317] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1318] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1319] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1320] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1321] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1322] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1323] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1324] params(1) in file: lib\support\0.2.805/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1325] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1326] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1327] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator/[1328] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          div ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint8>.operator%[1329] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator%[1330] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator%[1331] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator%[1332] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator%[1333] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator%[1334] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator%[1335] params(1) in file: lib\support\0.2.805/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator%[1336] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator%[1337] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator%[1338] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_uint8>.operator%[1339] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           mod ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator%[1340] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           mod ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint8>.operator<[1341] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1342] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1343] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1344] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1345] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1346] params(1) in file: lib\support\0.2.805/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1347] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1348] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1349] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1350] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1351] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<[1352] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint8>.operator>[1353] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1354] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1355] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1356] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1357] params(1) in file: lib\support\0.2.805/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1358] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1359] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1360] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1361] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1362] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1363] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator>[1364] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint8>.operator<=[1365] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1366] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1367] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1368] params(1) in file: lib\support\0.2.805/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1369] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1370] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1371] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1372] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1373] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1374] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1375] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator<=[1376] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint8>.operator**[1377] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1378] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1379] params(1) in file: lib\support\0.2.805/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1380] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1381] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1382] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1383] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1384] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1385] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1386] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1387] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator**[1388] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           exp ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint8>.operator<<[1389] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1390] params(1) in file: lib\support\0.2.805/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1391] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1392] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1393] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1394] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1395] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1396] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1397] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1398] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1399] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator<<[1400] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shl ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint8>.operator>>[1401] params(1) in file: lib\support\0.2.805/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1402] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1403] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1404] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1405] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1406] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1407] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1408] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1409] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1410] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1411] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_uint8>.operator>>[1412] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shr ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_uint8>.operator^[1413] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1414] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1415] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1416] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1417] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1418] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1419] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1420] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1421] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1422] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1423] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator^[1424] params(1) in file: lib\support\0.2.805/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           xor ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint8>.operator&[1425] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1426] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1427] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1428] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1429] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1430] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1431] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1432] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1433] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1434] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1435] params(1) in file: lib\support\0.2.805/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator&[1436] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           uand ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint8>.operator|[1437] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1438] params(1) in file: lib\support\0.2.805/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1439] params(1) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1440] params(1) in file: lib\support\0.2.805/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1441] params(1) in file: lib\support\0.2.805/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1442] params(1) in file: lib\support\0.2.805/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1443] params(1) in file: lib\support\0.2.805/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1444] params(1) in file: lib\support\0.2.805/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1445] params(1) in file: lib\support\0.2.805/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1446] params(1) in file: lib\support\0.2.805/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1447] params(1) in file: lib\support\0.2.805/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_uint8>.operator|[1448] params(1) in file: lib\support\0.2.805/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           or ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint8>.operator!=[1449] params(1) in file: lib\support\0.2.805/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint8>.operator==[1450] params(1) in file: lib\support\0.2.805/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_uint8>.operator=[1451] params(1) in file: lib\support\0.2.805/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           movu8 ebx, ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


function: std#integer<_uint8>.to_string[1452] params(0) in file: lib\support\0.2.805/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3408 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint8>.parse[1453] params(1) in file: lib\support\0.2.805/primitives.sharp:229:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 230 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+1   
3 [0x3]: line: 231 movi #0, ebx   
5 [0x5]:           movu8 ebx, ebx   
6 [0x6]:           smovr_2 ebx, fp+2   
7 [0x7]: line: 232 movi #0, ebx   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 233 movl 0   
11 [0xb]:           pushobj   
12 [0xc]:           call @3412 // <std#string.size>   
13 [0xd]:           loadval ebx   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 235 movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @3393 // <std#string.at>   
21 [0x15]:           loadval ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #45, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           test ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 236 movi #1, ebx   
32 [0x20]:           smovr_2 ebx, fp+3   
33 [0x21]: line: 237 movi #1, ebx   
35 [0x23]:           smovr_2 ebx, fp+1   
36 [0x24]:           nop   
37 [0x25]: line: 240 loadl ebx, fp+1   
38 [0x26]:           rstore ebx   
39 [0x27]:           loadl ebx, fp+4   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 95   
45 [0x2d]: line: 241 movl 0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+1   
48 [0x30]:           rstore ebx   
49 [0x31]:           call @3393 // <std#string.at>   
50 [0x32]:           call @3052 // <std#char.is_digit>   
51 [0x33]:           loadval ebx   
52 [0x34]:           not ebx, ebx   
53 [0x35]:           movr cmt, ebx   
54 [0x36]:           jne 69   
55 [0x37]: line: 242 new_class @5 // std#illegal_argument_exception   
56 [0x38]:           dup    
57 [0x39]:           new_class @69 // std#string   
58 [0x3a]:           dup    
59 [0x3b]:           newstr @99 // illegal char in string:    
60 [0x3c]:           call @3371 // <std#string.string>   
61 [0x3d]:           movl 0   
62 [0x3e]:           pushobj   
63 [0x3f]:           loadl ebx, fp+1   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @3393 // <std#string.at>   
66 [0x42]:           call @3404 // <std#string.operator+>   
67 [0x43]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
68 [0x44]:           throw    
69 [0x45]:           nop   
70 [0x46]: line: 246 movi #10, ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           mul ecx, ebx -> ebx   
74 [0x4a]:           movu8 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]: line: 247 movl 0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+1   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+1   
82 [0x52]:           rstore egx   
83 [0x53]:           call @3393 // <std#string.at>   
84 [0x54]:           loadval ebx   
85 [0x55]:           rstore ebx   
86 [0x56]:           movi #48, ebx   
88 [0x58]:           loadval ecx   
89 [0x59]:           sub ecx, ebx -> ebx   
90 [0x5a]:           loadl ecx, fp+2   
91 [0x5b]:           add ecx, ebx -> ebx   
92 [0x5c]:           movu8 ebx, ebx   
93 [0x5d]:           smovr_2 ebx, fp+2   
94 [0x5e]:           jmp @37   
95 [0x5f]: line: 249 loadl ebx, fp+3   
96 [0x60]:           movr cmt, ebx   
97 [0x61]:           jne 102   
98 [0x62]: line: 250 loadl ebx, fp+2   
99 [0x63]:           neg ebx, ebx   
100 [0x64]:           movu8 ebx, ebx   
101 [0x65]:           smovr_2 ebx, fp+2   
102 [0x66]:           nop   
103 [0x67]: line: 251 loadl ebx, fp+2   
104 [0x68]:           return_val ebx   
105 [0x69]:           ret   


function: std#integer<_uint8>.to_ulong[1454] params(0) in file: lib\support\0.2.805/primitives.sharp:254:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 254 new_class @47 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_long[1455] params(0) in file: lib\support\0.2.805/primitives.sharp:255:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 255 new_class @48 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_uint[1456] params(0) in file: lib\support\0.2.805/primitives.sharp:256:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 256 new_class @49 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_int[1457] params(0) in file: lib\support\0.2.805/primitives.sharp:257:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 257 new_class @50 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_ushort[1458] params(0) in file: lib\support\0.2.805/primitives.sharp:258:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 258 new_class @51 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_short[1459] params(0) in file: lib\support\0.2.805/primitives.sharp:259:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 259 new_class @52 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_uchar[1460] params(0) in file: lib\support\0.2.805/primitives.sharp:260:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 260 new_class @53 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_char[1461] params(0) in file: lib\support\0.2.805/primitives.sharp:261:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 261 new_class @54 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_byte[1462] params(0) in file: lib\support\0.2.805/primitives.sharp:262:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 262 new_class @55 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_bool[1463] params(0) in file: lib\support\0.2.805/primitives.sharp:263:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 263 new_class @56 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.get_value[1464] params(0) in file: lib\support\0.2.805/primitives.sharp:265:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 265 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


constructor: std#integer<_uint8>.integer[1465] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<_int8>.integer[1466] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 9 loadl ebx, fp+1   
3 [0x3]:         rstore ebx   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         loadval ebx   
8 [0x8]:         mov8 ebx, ebx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         rmov adx, ebx   
12 [0xc]:         ret   


function: std#integer<_int8>.hash[1467] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2405 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int8>.operator!=[1468] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1469] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator!=[1470] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1471] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator!=[1472] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1473] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator!=[1474] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1475] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator!=[1476] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1477] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator!=[1478] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1479] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator!=[1480] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1481] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator!=[1482] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1483] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator!=[1484] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1485] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator!=[1486] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1487] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[1488] params(1) in file: lib\support\0.2.805/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator+[1489] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1490] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1491] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1492] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1493] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1494] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1495] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1496] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1497] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1498] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1499] params(1) in file: lib\support\0.2.805/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator+[1500] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int8>.operator-[1501] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1502] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1503] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1504] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1505] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1506] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1507] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1508] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1509] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1510] params(1) in file: lib\support\0.2.805/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1511] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator-[1512] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          sub ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int8>.operator*[1513] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1514] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1515] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1516] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1517] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1518] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1519] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1520] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1521] params(1) in file: lib\support\0.2.805/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1522] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1523] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator*[1524] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          mul ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int8>.operator/[1525] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1526] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1527] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1528] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1529] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1530] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1531] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1532] params(1) in file: lib\support\0.2.805/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1533] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1534] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1535] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator/[1536] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          div ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int8>.operator%[1537] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator%[1538] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator%[1539] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator%[1540] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator%[1541] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator%[1542] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator%[1543] params(1) in file: lib\support\0.2.805/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator%[1544] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator%[1545] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator%[1546] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<_int8>.operator%[1547] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           mod ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator%[1548] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           mod ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int8>.operator<[1549] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1550] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1551] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1552] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1553] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1554] params(1) in file: lib\support\0.2.805/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1555] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1556] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1557] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1558] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1559] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<[1560] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int8>.operator>[1561] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1562] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1563] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1564] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1565] params(1) in file: lib\support\0.2.805/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1566] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1567] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1568] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1569] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1570] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1571] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator>[1572] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int8>.operator<=[1573] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1574] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1575] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1576] params(1) in file: lib\support\0.2.805/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1577] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1578] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1579] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1580] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1581] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1582] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1583] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator<=[1584] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int8>.operator**[1585] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1586] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1587] params(1) in file: lib\support\0.2.805/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1588] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1589] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1590] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1591] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1592] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1593] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1594] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1595] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator**[1596] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           exp ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int8>.operator<<[1597] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1598] params(1) in file: lib\support\0.2.805/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1599] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1600] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1601] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1602] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1603] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1604] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1605] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1606] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1607] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator<<[1608] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shl ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int8>.operator>>[1609] params(1) in file: lib\support\0.2.805/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1610] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1611] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1612] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1613] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1614] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1615] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1616] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1617] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1618] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1619] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<_int8>.operator>>[1620] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shr ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<_int8>.operator^[1621] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1622] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1623] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1624] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1625] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1626] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1627] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1628] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1629] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1630] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1631] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator^[1632] params(1) in file: lib\support\0.2.805/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           xor ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int8>.operator&[1633] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1634] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1635] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1636] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1637] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1638] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1639] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1640] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1641] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1642] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1643] params(1) in file: lib\support\0.2.805/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator&[1644] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           uand ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int8>.operator|[1645] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1646] params(1) in file: lib\support\0.2.805/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1647] params(1) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1648] params(1) in file: lib\support\0.2.805/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1649] params(1) in file: lib\support\0.2.805/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1650] params(1) in file: lib\support\0.2.805/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1651] params(1) in file: lib\support\0.2.805/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1652] params(1) in file: lib\support\0.2.805/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1653] params(1) in file: lib\support\0.2.805/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1654] params(1) in file: lib\support\0.2.805/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1655] params(1) in file: lib\support\0.2.805/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<_int8>.operator|[1656] params(1) in file: lib\support\0.2.805/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           or ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int8>.operator!=[1657] params(1) in file: lib\support\0.2.805/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int8>.operator==[1658] params(1) in file: lib\support\0.2.805/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<_int8>.operator=[1659] params(1) in file: lib\support\0.2.805/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           mov8 ebx, ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


function: std#integer<_int8>.to_string[1660] params(0) in file: lib\support\0.2.805/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3404 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int8>.parse[1661] params(1) in file: lib\support\0.2.805/primitives.sharp:229:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 230 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+1   
3 [0x3]: line: 231 movi #0, ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           smovr_2 ebx, fp+2   
7 [0x7]: line: 232 movi #0, ebx   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 233 movl 0   
11 [0xb]:           pushobj   
12 [0xc]:           call @3412 // <std#string.size>   
13 [0xd]:           loadval ebx   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 235 movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @3393 // <std#string.at>   
21 [0x15]:           loadval ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #45, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           test ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 236 movi #1, ebx   
32 [0x20]:           smovr_2 ebx, fp+3   
33 [0x21]: line: 237 movi #1, ebx   
35 [0x23]:           smovr_2 ebx, fp+1   
36 [0x24]:           nop   
37 [0x25]: line: 240 loadl ebx, fp+1   
38 [0x26]:           rstore ebx   
39 [0x27]:           loadl ebx, fp+4   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 95   
45 [0x2d]: line: 241 movl 0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+1   
48 [0x30]:           rstore ebx   
49 [0x31]:           call @3393 // <std#string.at>   
50 [0x32]:           call @3052 // <std#char.is_digit>   
51 [0x33]:           loadval ebx   
52 [0x34]:           not ebx, ebx   
53 [0x35]:           movr cmt, ebx   
54 [0x36]:           jne 69   
55 [0x37]: line: 242 new_class @5 // std#illegal_argument_exception   
56 [0x38]:           dup    
57 [0x39]:           new_class @69 // std#string   
58 [0x3a]:           dup    
59 [0x3b]:           newstr @99 // illegal char in string:    
60 [0x3c]:           call @3371 // <std#string.string>   
61 [0x3d]:           movl 0   
62 [0x3e]:           pushobj   
63 [0x3f]:           loadl ebx, fp+1   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @3393 // <std#string.at>   
66 [0x42]:           call @3404 // <std#string.operator+>   
67 [0x43]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
68 [0x44]:           throw    
69 [0x45]:           nop   
70 [0x46]: line: 246 movi #10, ebx   
72 [0x48]:           loadl ecx, fp+2   
73 [0x49]:           mul ecx, ebx -> ebx   
74 [0x4a]:           mov8 ebx, ebx   
75 [0x4b]:           smovr_2 ebx, fp+2   
76 [0x4c]: line: 247 movl 0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+1   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+1   
82 [0x52]:           rstore egx   
83 [0x53]:           call @3393 // <std#string.at>   
84 [0x54]:           loadval ebx   
85 [0x55]:           rstore ebx   
86 [0x56]:           movi #48, ebx   
88 [0x58]:           loadval ecx   
89 [0x59]:           sub ecx, ebx -> ebx   
90 [0x5a]:           loadl ecx, fp+2   
91 [0x5b]:           add ecx, ebx -> ebx   
92 [0x5c]:           mov8 ebx, ebx   
93 [0x5d]:           smovr_2 ebx, fp+2   
94 [0x5e]:           jmp @37   
95 [0x5f]: line: 249 loadl ebx, fp+3   
96 [0x60]:           movr cmt, ebx   
97 [0x61]:           jne 102   
98 [0x62]: line: 250 loadl ebx, fp+2   
99 [0x63]:           neg ebx, ebx   
100 [0x64]:           mov8 ebx, ebx   
101 [0x65]:           smovr_2 ebx, fp+2   
102 [0x66]:           nop   
103 [0x67]: line: 251 loadl ebx, fp+2   
104 [0x68]:           return_val ebx   
105 [0x69]:           ret   


function: std#integer<_int8>.to_ulong[1662] params(0) in file: lib\support\0.2.805/primitives.sharp:254:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 254 new_class @47 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_long[1663] params(0) in file: lib\support\0.2.805/primitives.sharp:255:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 255 new_class @48 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_uint[1664] params(0) in file: lib\support\0.2.805/primitives.sharp:256:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 256 new_class @49 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_int[1665] params(0) in file: lib\support\0.2.805/primitives.sharp:257:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 257 new_class @50 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_ushort[1666] params(0) in file: lib\support\0.2.805/primitives.sharp:258:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 258 new_class @51 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_short[1667] params(0) in file: lib\support\0.2.805/primitives.sharp:259:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 259 new_class @52 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_uchar[1668] params(0) in file: lib\support\0.2.805/primitives.sharp:260:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 260 new_class @53 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_char[1669] params(0) in file: lib\support\0.2.805/primitives.sharp:261:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 261 new_class @54 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_byte[1670] params(0) in file: lib\support\0.2.805/primitives.sharp:262:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 262 new_class @55 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_bool[1671] params(0) in file: lib\support\0.2.805/primitives.sharp:263:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 263 new_class @56 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.get_value[1672] params(0) in file: lib\support\0.2.805/primitives.sharp:265:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 265 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


constructor: std#integer<_int8>.integer[1673] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#integer<var>.integer[1674] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 9 loadl ebx, fp+1   
3 [0x3]:         rstore ebx   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         loadval ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         ret   


function: std#integer<var>.hash[1675] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2405 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<var>.operator!=[1676] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1677] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator!=[1678] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1679] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator!=[1680] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1681] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator!=[1682] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1683] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator!=[1684] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1685] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator!=[1686] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1687] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator!=[1688] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1689] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator!=[1690] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1691] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator!=[1692] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1693] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator!=[1694] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1695] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator==[1696] params(1) in file: lib\support\0.2.805/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<var>.operator+[1697] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1698] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1699] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1700] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1701] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1702] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1703] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1704] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1705] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1706] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1707] params(1) in file: lib\support\0.2.805/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          add ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator+[1708] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<var>.operator-[1709] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1710] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1711] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1712] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1713] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1714] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1715] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1716] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1717] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1718] params(1) in file: lib\support\0.2.805/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1719] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          sub ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator-[1720] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          sub ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<var>.operator*[1721] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1722] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1723] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1724] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1725] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1726] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1727] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1728] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1729] params(1) in file: lib\support\0.2.805/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1730] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1731] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator*[1732] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          mul ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<var>.operator/[1733] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1734] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1735] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1736] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1737] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1738] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1739] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1740] params(1) in file: lib\support\0.2.805/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1741] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1742] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1743] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          div ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator/[1744] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          div ecx, ebx -> ebx   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<var>.operator%[1745] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator%[1746] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator%[1747] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator%[1748] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator%[1749] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator%[1750] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator%[1751] params(1) in file: lib\support\0.2.805/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator%[1752] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator%[1753] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator%[1754] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mod ecx, ebx -> ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


overload function: std#integer<var>.operator%[1755] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           mod ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator%[1756] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           mod ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<var>.operator<[1757] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1758] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1759] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1760] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1761] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1762] params(1) in file: lib\support\0.2.805/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1763] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1764] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1765] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1766] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1767] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<[1768] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<var>.operator>[1769] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1770] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1771] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1772] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1773] params(1) in file: lib\support\0.2.805/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1774] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1775] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1776] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1777] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1778] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1779] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator>[1780] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<var>.operator<=[1781] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1782] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1783] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1784] params(1) in file: lib\support\0.2.805/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1785] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1786] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1787] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1788] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1789] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1790] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1791] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator<=[1792] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<var>.operator**[1793] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1794] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1795] params(1) in file: lib\support\0.2.805/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1796] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1797] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1798] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1799] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1800] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1801] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1802] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1803] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           exp ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator**[1804] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           exp ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<var>.operator<<[1805] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1806] params(1) in file: lib\support\0.2.805/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1807] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1808] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1809] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1810] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1811] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1812] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1813] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1814] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1815] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shl ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator<<[1816] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shl ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<var>.operator>>[1817] params(1) in file: lib\support\0.2.805/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1818] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1819] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1820] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1821] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1822] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1823] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1824] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1825] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1826] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1827] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           shr ecx, ebx -> ebx   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


overload function: std#integer<var>.operator>>[1828] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           shr ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#integer<var>.operator^[1829] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1830] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1831] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1832] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1833] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1834] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1835] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1836] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1837] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1838] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1839] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           xor ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator^[1840] params(1) in file: lib\support\0.2.805/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           xor ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<var>.operator&[1841] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1842] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1843] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1844] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1845] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1846] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1847] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1848] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1849] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1850] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1851] params(1) in file: lib\support\0.2.805/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator&[1852] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           uand ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<var>.operator|[1853] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1854] params(1) in file: lib\support\0.2.805/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1855] params(1) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1856] params(1) in file: lib\support\0.2.805/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1857] params(1) in file: lib\support\0.2.805/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1858] params(1) in file: lib\support\0.2.805/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1859] params(1) in file: lib\support\0.2.805/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1860] params(1) in file: lib\support\0.2.805/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1861] params(1) in file: lib\support\0.2.805/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1862] params(1) in file: lib\support\0.2.805/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1863] params(1) in file: lib\support\0.2.805/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           or ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


overload function: std#integer<var>.operator|[1864] params(1) in file: lib\support\0.2.805/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           or ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<var>.operator!=[1865] params(1) in file: lib\support\0.2.805/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<var>.operator==[1866] params(1) in file: lib\support\0.2.805/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#integer<var>.operator=[1867] params(1) in file: lib\support\0.2.805/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<var>.to_string[1868] params(0) in file: lib\support\0.2.805/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @3 //    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3403 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<var>.parse[1869] params(1) in file: lib\support\0.2.805/primitives.sharp:229:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 230 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+1   
3 [0x3]: line: 231 movi #0, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 232 movi #0, ebx   
8 [0x8]:           smovr_2 ebx, fp+3   
9 [0x9]: line: 233 movl 0   
10 [0xa]:           pushobj   
11 [0xb]:           call @3412 // <std#string.size>   
12 [0xc]:           loadval ebx   
13 [0xd]:           smovr_2 ebx, fp+4   
14 [0xe]: line: 235 movl 0   
15 [0xf]:           pushobj   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @3393 // <std#string.at>   
20 [0x14]:           loadval ebx   
21 [0x15]:           rstore ebx   
22 [0x16]:           movi #45, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           test ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 35   
29 [0x1d]: line: 236 movi #1, ebx   
31 [0x1f]:           smovr_2 ebx, fp+3   
32 [0x20]: line: 237 movi #1, ebx   
34 [0x22]:           smovr_2 ebx, fp+1   
35 [0x23]:           nop   
36 [0x24]: line: 240 loadl ebx, fp+1   
37 [0x25]:           rstore ebx   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 88   
44 [0x2c]: line: 241 movl 0   
45 [0x2d]:           pushobj   
46 [0x2e]:           loadl ebx, fp+1   
47 [0x2f]:           rstore ebx   
48 [0x30]:           call @3393 // <std#string.at>   
49 [0x31]:           call @3052 // <std#char.is_digit>   
50 [0x32]:           loadval ebx   
51 [0x33]:           not ebx, ebx   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 68   
54 [0x36]: line: 242 new_class @5 // std#illegal_argument_exception   
55 [0x37]:           dup    
56 [0x38]:           new_class @69 // std#string   
57 [0x39]:           dup    
58 [0x3a]:           newstr @99 // illegal char in string:    
59 [0x3b]:           call @3371 // <std#string.string>   
60 [0x3c]:           movl 0   
61 [0x3d]:           pushobj   
62 [0x3e]:           loadl ebx, fp+1   
63 [0x3f]:           rstore ebx   
64 [0x40]:           call @3393 // <std#string.at>   
65 [0x41]:           call @3404 // <std#string.operator+>   
66 [0x42]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
67 [0x43]:           throw    
68 [0x44]:           nop   
69 [0x45]: line: 246 movi #10, ebx   
71 [0x47]:           mull ebx, fp@2   
72 [0x48]: line: 247 movl 0   
73 [0x49]:           pushobj   
74 [0x4a]:           loadl ebx, fp+1   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+1   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3393 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           addl ebx, fp@2   
87 [0x57]:           jmp @36   
88 [0x58]: line: 249 loadl ebx, fp+3   
89 [0x59]:           movr cmt, ebx   
90 [0x5a]:           jne 94   
91 [0x5b]: line: 250 loadl ebx, fp+2   
92 [0x5c]:           neg ebx, ebx   
93 [0x5d]:           smovr_2 ebx, fp+2   
94 [0x5e]:           nop   
95 [0x5f]: line: 251 loadl ebx, fp+2   
96 [0x60]:           return_val ebx   
97 [0x61]:           ret   


function: std#integer<var>.to_ulong[1870] params(0) in file: lib\support\0.2.805/primitives.sharp:254:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 254 new_class @47 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_long[1871] params(0) in file: lib\support\0.2.805/primitives.sharp:255:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 255 new_class @48 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_uint[1872] params(0) in file: lib\support\0.2.805/primitives.sharp:256:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 256 new_class @49 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_int[1873] params(0) in file: lib\support\0.2.805/primitives.sharp:257:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 257 new_class @50 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_ushort[1874] params(0) in file: lib\support\0.2.805/primitives.sharp:258:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 258 new_class @51 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_short[1875] params(0) in file: lib\support\0.2.805/primitives.sharp:259:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 259 new_class @52 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_uchar[1876] params(0) in file: lib\support\0.2.805/primitives.sharp:260:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 260 new_class @53 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_char[1877] params(0) in file: lib\support\0.2.805/primitives.sharp:261:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 261 new_class @54 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_byte[1878] params(0) in file: lib\support\0.2.805/primitives.sharp:262:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 262 new_class @55 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_bool[1879] params(0) in file: lib\support\0.2.805/primitives.sharp:263:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 263 new_class @56 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           chklen adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.get_value[1880] params(0) in file: lib\support\0.2.805/primitives.sharp:265:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 265 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


constructor: std#integer<var>.integer[1881] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


std#loopable<_int8>.get_elements[1882] params(0) in file: lib\support\0.2.805/string.sharp:4:8: note:  
		
		       ^



constructor: std#loopable<_int8>.loopable[1883] params(0) in file: lib\support\0.2.805/string.sharp:3:10: note:  
		import std.io;
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


function: app#__srt_global.main[1884] params(1) in file: tests/syntax.sharp:8:4: note:  
		def main(args: string[]) {
		   ^

0 [0x0]: line: 10 movi #10, ebx   
2 [0x2]:          newarry ebx: 0   
3 [0x3]:          popobj2    
4 [0x4]:          smovr_3 fp+1   
5 [0x5]: line: 11 movl 1   
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 12 movl 2   
8 [0x8]:          vcast 0 -> []   
9 [0x9]:          smovr_3 fp+1   
10 [0xa]:          ret   


function: std#__srt_global.snprintf[1885] params(3) in file: lib\support\0.2.805/console.sharp:3:4: note:  
		def snprintf(fmt: var, num: var, precision: var) : var[] {
		   ^

0 [0x0]: line: 4 loadl egx, fp+0   : protected asm start
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         loadl ecx, fp+2   
3 [0x3]:         int 0x1   
4 [0x4]:         popobj2    
5 [0x5]:         returnobj   
6 [0x6]:         ret   
7 [0x7]: line: 13 pushnull    : protected asm end
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#__srt_global.print[1886] params(1) in file: lib\support\0.2.805/console.sharp:16:4: note:  
		def print(data: _int8[]) {
		   ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1914 // <std#__srt_global.print_chars>   
3 [0x3]:          ret   


function: std#__srt_global.print[1887] params(1) in file: lib\support\0.2.805/console.sharp:20:4: note:  
		def print(str: string) {
		   ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @3397 // <std#string.get_data>   
3 [0x3]:          call @1914 // <std#__srt_global.print_chars>   
4 [0x4]:          ret   


function: std#__srt_global.println[1888] params(1) in file: lib\support\0.2.805/console.sharp:24:4: note:  
		def println(data: var[]) {
		   ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1917 // <std#__srt_global.print_numbers>   
3 [0x3]: line: 26 movi #10, ebx   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @1916 // <std#__srt_global.print_char>   
7 [0x7]:          ret   


function: std#__srt_global.println[1889] params(1) in file: lib\support\0.2.805/console.sharp:29:4: note:  
		def println(data: _int8[]) {
		   ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1914 // <std#__srt_global.print_chars>   
3 [0x3]: line: 31 movi #10, ebx   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @1916 // <std#__srt_global.print_char>   
7 [0x7]:          ret   


function: std#__srt_global.println[1890] params(1) in file: lib\support\0.2.805/console.sharp:34:4: note:  
		def println(data: _int16[]) {
		   ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1918 // <std#__srt_global.print_numbers>   
3 [0x3]: line: 36 movi #10, ebx   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @1916 // <std#__srt_global.print_char>   
7 [0x7]:          ret   


function: std#__srt_global.println[1891] params(1) in file: lib\support\0.2.805/console.sharp:39:4: note:  
		def println(data: _int32[]) {
		   ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1919 // <std#__srt_global.print_numbers>   
3 [0x3]: line: 41 movi #10, ebx   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @1916 // <std#__srt_global.print_char>   
7 [0x7]:          ret   


function: std#__srt_global.println[1892] params(1) in file: lib\support\0.2.805/console.sharp:44:4: note:  
		def println(data: _int64[]) {
		   ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1920 // <std#__srt_global.print_numbers>   
3 [0x3]: line: 46 movi #10, ebx   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @1916 // <std#__srt_global.print_char>   
7 [0x7]:          ret   


function: std#__srt_global.println[1893] params(1) in file: lib\support\0.2.805/console.sharp:49:4: note:  
		def println(data: _uint8[]) {
		   ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1921 // <std#__srt_global.print_numbers>   
3 [0x3]: line: 51 movi #10, ebx   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @1916 // <std#__srt_global.print_char>   
7 [0x7]:          ret   


function: std#__srt_global.println[1894] params(1) in file: lib\support\0.2.805/console.sharp:54:4: note:  
		def println(data: _uint16[]) {
		   ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1922 // <std#__srt_global.print_numbers>   
3 [0x3]: line: 56 movi #10, ebx   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @1916 // <std#__srt_global.print_char>   
7 [0x7]:          ret   


function: std#__srt_global.println[1895] params(1) in file: lib\support\0.2.805/console.sharp:59:4: note:  
		def println(data: _uint32[]) {
		   ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1923 // <std#__srt_global.print_numbers>   
3 [0x3]: line: 61 movi #10, ebx   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @1916 // <std#__srt_global.print_char>   
7 [0x7]:          ret   


function: std#__srt_global.println[1896] params(1) in file: lib\support\0.2.805/console.sharp:64:4: note:  
		def println(data: _uint64[]) {
		   ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1924 // <std#__srt_global.print_numbers>   
3 [0x3]: line: 66 movi #10, ebx   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @1916 // <std#__srt_global.print_char>   
7 [0x7]:          ret   


function: std#__srt_global.println[1897] params(1) in file: lib\support\0.2.805/console.sharp:69:4: note:  
		def println(data: var) {
		   ^

0 [0x0]: line: 70 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          call @1915 // <std#__srt_global.print_num>   
3 [0x3]: line: 71 movi #10, ebx   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @1916 // <std#__srt_global.print_char>   
7 [0x7]:          ret   


function: std#__srt_global.println[1898] params(0) in file: lib\support\0.2.805/console.sharp:74:4: note:  
		def println() {
		   ^

0 [0x0]: line: 75 movi #10, ebx   
2 [0x2]:          rstore ebx   
3 [0x3]:          call @1916 // <std#__srt_global.print_char>   
4 [0x4]:          ret   


function: std#__srt_global.println[1899] params(1) in file: lib\support\0.2.805/console.sharp:78:4: note:  
		def println(e: _enum_) {
		   ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1933 // <std#_enum_.get_name>   
3 [0x3]:          call @1914 // <std#__srt_global.print_chars>   
4 [0x4]: line: 80 movi #10, ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @1916 // <std#__srt_global.print_char>   
8 [0x8]:          ret   


function: std#__srt_global.read_line[1900] params(0) in file: lib\support\0.2.805/console.sharp:83:4: note:  
		def read_line() : string {
		   ^

0 [0x0]: line: 84 istorel 0, fp+0   
2 [0x2]: line: 85 new_class @69 // std#string   
3 [0x3]:          dup    
4 [0x4]:          newstr @3 //    
5 [0x5]:          call @3371 // <std#string.string>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 87 call @1902 // <std#__srt_global.read_char>   
9 [0x9]:          loadval ebx   
10 [0xa]:          mov8 ebx, ebx   
11 [0xb]:          smovr_2 ebx, fp+0   
12 [0xc]: line: 88 loadl ebx, fp+0   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #13, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          tne ecx, ebx   
18 [0x12]:          movr ebx, cmt   
19 [0x13]:          skne ebx // pc = 27   
20 [0x14]:          loadl ebx, fp+0   
21 [0x15]:          rstore ebx   
22 [0x16]:          movi #10, ebx   
24 [0x18]:          loadval ecx   
25 [0x19]:          tne ecx, ebx   
26 [0x1a]:          movr ebx, cmt   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 40   
29 [0x1d]: line: 89 movl 1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+0   
32 [0x20]:          rstore ebx   
33 [0x21]:          call @3378 // <std#string.append>   
34 [0x22]:          pop   
35 [0x23]: line: 90 call @1902 // <std#__srt_global.read_char>   
36 [0x24]:          loadval ebx   
37 [0x25]:          mov8 ebx, ebx   
38 [0x26]:          smovr_2 ebx, fp+0   
39 [0x27]:          jmp @12   
40 [0x28]: line: 93 movl 1   
41 [0x29]:          returnobj   
42 [0x2a]:          ret   


function: std#__srt_global.read_passwd[1901] params(0) in file: lib\support\0.2.805/console.sharp:96:4: note:  
		def read_passwd() : string {
		   ^

0 [0x0]: line: 97 istorel 0, fp+0   
2 [0x2]: line: 98 new_class @69 // std#string   
3 [0x3]:          dup    
4 [0x4]:          newstr @3 //    
5 [0x5]:          call @3371 // <std#string.string>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 100 call @1903 // <std#__srt_global.read_raw_char>   
9 [0x9]:           loadval ebx   
10 [0xa]:           mov8 ebx, ebx   
11 [0xb]:           smovr_2 ebx, fp+0   
12 [0xc]: line: 101 loadl ebx, fp+0   
13 [0xd]:           rstore ebx   
14 [0xe]:           movi #13, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           skne ebx // pc = 27   
20 [0x14]:           loadl ebx, fp+0   
21 [0x15]:           rstore ebx   
22 [0x16]:           movi #10, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           tne ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 40   
29 [0x1d]: line: 102 movl 1   
30 [0x1e]:           pushobj   
31 [0x1f]:           loadl ebx, fp+0   
32 [0x20]:           rstore ebx   
33 [0x21]:           call @3378 // <std#string.append>   
34 [0x22]:           pop   
35 [0x23]: line: 103 call @1903 // <std#__srt_global.read_raw_char>   
36 [0x24]:           loadval ebx   
37 [0x25]:           mov8 ebx, ebx   
38 [0x26]:           smovr_2 ebx, fp+0   
39 [0x27]:           jmp @12   
40 [0x28]: line: 106 movl 1   
41 [0x29]:           returnobj   
42 [0x2a]:           ret   


function: std#__srt_global.read_char[1902] params(0) in file: lib\support\0.2.805/console.sharp:109:4: note:  
		def read_char() : var {
		   ^

0 [0x0]: line: 110 movi #0, ebx   
2 [0x2]:           rstore ebx   
3 [0x3]:           call @1926 // <std#__srt_global.read_ch>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std#__srt_global.read_raw_char[1903] params(0) in file: lib\support\0.2.805/console.sharp:113:4: note:  
		def read_raw_char() : var {
		   ^

0 [0x0]: line: 114 movi #1, ebx   
2 [0x2]:           rstore ebx   
3 [0x3]:           call @1926 // <std#__srt_global.read_ch>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std#__srt_global.println[1904] params(1) in file: lib\support\0.2.805/console.sharp:117:4: note:  
		def println(str: string) {
		   ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           call @3397 // <std#string.get_data>   
3 [0x3]:           call @1914 // <std#__srt_global.print_chars>   
4 [0x4]: line: 119 movi #10, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @1916 // <std#__srt_global.print_char>   
8 [0x8]:           ret   


function: std#__srt_global.println[1905] params(1) in file: lib\support\0.2.805/console.sharp:122:4: note:  
		def println(o: printable) {
		   ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           invoke_delegate 3355 { static=0, args=0 }   
4 [0x4]:           call @3397 // <std#string.get_data>   
5 [0x5]:           call @1914 // <std#__srt_global.print_chars>   
6 [0x6]: line: 124 movi #10, ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           call @1916 // <std#__srt_global.print_char>   
10 [0xa]:           ret   


function: std#__srt_global.print[1906] params(1) in file: lib\support\0.2.805/console.sharp:127:4: note:  
		def print(o: printable) {
		   ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           invoke_delegate 3355 { static=0, args=0 }   
4 [0x4]:           popobj2    
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @1914 // <std#__srt_global.print_chars>   
9 [0x9]:           ret   


function: std#__srt_global.print[1907] params(1) in file: lib\support\0.2.805/console.sharp:131:4: note:  
		def print(data: var) {
		   ^

0 [0x0]: line: 132 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @1915 // <std#__srt_global.print_num>   
3 [0x3]:           ret   


function: std#__srt_global.flush[1908] params(0) in file: lib\support\0.2.805/console.sharp:135:4: note:  
		def flush() {
		   ^

0 [0x0]: line: 136 int 0x34   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#__srt_global.utc_mills_time[1909] params(0) in file: lib\support\0.2.805/console.sharp:139:4: note:  
		def utc_mills_time() : var {
		   ^

0 [0x0]: line: 140 call @3480 // <std#time.mills_time>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#__srt_global.nano_time[1910] params(0) in file: lib\support\0.2.805/console.sharp:143:4: note:  
		def nano_time() : var {
		   ^

0 [0x0]: line: 144 call @3475 // <std#time.nano_time>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#__srt_global.exit[1911] params(0) in file: lib\support\0.2.805/console.sharp:147:4: note:  
		def exit() {
		   ^

0 [0x0]: line: 148 int 0x1d   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#__srt_global.sizeOf[1912] params(1) in file: lib\support\0.2.805/console.sharp:151:4: note:  
		def sizeOf(data: object) : var {
		   ^

0 [0x0]: line: 152 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 158 movi #0, ebx   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#__srt_global.sizeOf[1913] params(1) in file: lib\support\0.2.805/console.sharp:161:4: note:  
		def sizeOf(data: object[]) : var {
		   ^

0 [0x0]: line: 162 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 168 movi #0, ebx   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#__srt_global.print_chars[1914] params(1) in file: lib\support\0.2.805/console.sharp:171:10: note:  
		local def print_chars(str: _int8[]) {
		         ^

0 [0x0]: line: 172 istorel -1, fp+2   
2 [0x2]:           movl 0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 3   
5 [0x5]:           popobj   
6 [0x6]:           iaddl 1, fp@2   
8 [0x8]:           movl 3   
9 [0x9]:           sizeof ecx   
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           lt ebx, ecx   
12 [0xc]:           jne 18   
13 [0xd]:           iaload ecx, ebx   
14 [0xe]:           smovr_2 ecx, fp+1   
15 [0xf]: line: 173 loadl ebx, fp+1   : protected asm start
16 [0x10]:           _putc ebx   
17 [0x11]:           jmp @6   : protected asm end
18 [0x12]:           ret   


function: std#__srt_global.print_num[1915] params(1) in file: lib\support\0.2.805/console.sharp:180:10: note:  
		local def print_num(val: var) {
		         ^

0 [0x0]: line: 181 loadl ebx, fp+0   : protected asm start
1 [0x1]:           put ebx   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_char[1916] params(1) in file: lib\support\0.2.805/console.sharp:187:10: note:  
		local def print_char(val: _int8) {
		         ^

0 [0x0]: line: 188 loadl ebx, fp+0   : protected asm start
1 [0x1]:           _putc ebx   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1917] params(1) in file: lib\support\0.2.805/console.sharp:194:10: note:  
		local def print_numbers(str: var[]) {
		         ^

0 [0x0]: line: 195 movi #91, ebx   : protected asm start
2 [0x2]:           movi #32, ecx   
4 [0x4]:           _putc ebx   
5 [0x5]:           _putc ecx   
6 [0x6]: line: 201 movi #0, ebx   : protected asm end
8 [0x8]:           smovr_2 ebx, fp+1   
9 [0x9]:           loadl ebx, fp+1   
10 [0xa]:           rstore ebx   
11 [0xb]:           movl 0   
12 [0xc]:           sizeof ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 54   
18 [0x12]: line: 202 movl 0   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+1   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           smovr_2 ebx, fp+2   
26 [0x1a]: line: 203 loadl ebx, fp+2   : protected asm start
27 [0x1b]:           put ebx   
28 [0x1c]: line: 208 loadl ebx, fp+1   : protected asm end
29 [0x1d]:           rstore ebx   
30 [0x1e]:           movi #1, ebx   
32 [0x20]:           loadval ecx   
33 [0x21]:           add ecx, ebx -> ebx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movl 0   
36 [0x24]:           sizeof ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 48   
42 [0x2a]: line: 209 movi #44, ebx   : protected asm start
44 [0x2c]:           movi #32, ecx   
46 [0x2e]:           _putc ebx   
47 [0x2f]:           _putc ecx   
48 [0x30]:           nop   : protected asm end
49 [0x31]:           loadl ebx, fp+1   
50 [0x32]:           movr egx, ebx   
51 [0x33]:           inc ebx   
52 [0x34]:           smovr_2 ebx, fp+1   
53 [0x35]:           jmp @9   
54 [0x36]: line: 217 movi #32, ebx   : protected asm start
56 [0x38]:           movi #93, ecx   
58 [0x3a]:           _putc ebx   
59 [0x3b]:           _putc ecx   
60 [0x3c]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1918] params(1) in file: lib\support\0.2.805/console.sharp:225:10: note:  
		local def print_numbers(str: _int16[]) {
		         ^

0 [0x0]: line: 226 pushl 0   : protected asm start
1 [0x1]:           call @1917 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1919] params(1) in file: lib\support\0.2.805/console.sharp:232:10: note:  
		local def print_numbers(str: _int32[]) {
		         ^

0 [0x0]: line: 233 pushl 0   : protected asm start
1 [0x1]:           call @1917 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1920] params(1) in file: lib\support\0.2.805/console.sharp:239:10: note:  
		local def print_numbers(str: _int64[]) {
		         ^

0 [0x0]: line: 240 pushl 0   : protected asm start
1 [0x1]:           call @1917 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1921] params(1) in file: lib\support\0.2.805/console.sharp:246:10: note:  
		local def print_numbers(str: _uint8[]) {
		         ^

0 [0x0]: line: 247 pushl 0   : protected asm start
1 [0x1]:           call @1917 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1922] params(1) in file: lib\support\0.2.805/console.sharp:253:10: note:  
		local def print_numbers(str: _uint16[]) {
		         ^

0 [0x0]: line: 254 pushl 0   : protected asm start
1 [0x1]:           call @1917 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1923] params(1) in file: lib\support\0.2.805/console.sharp:260:10: note:  
		local def print_numbers(str: _uint32[]) {
		         ^

0 [0x0]: line: 261 pushl 0   : protected asm start
1 [0x1]:           call @1917 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1924] params(1) in file: lib\support\0.2.805/console.sharp:267:10: note:  
		local def print_numbers(str: _uint64[]) {
		         ^

0 [0x0]: line: 268 pushl 0   : protected asm start
1 [0x1]:           call @1917 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_chars[1925] params(1) in file: lib\support\0.2.805/console.sharp:274:10: note:  
		local def print_chars(str: _int16[]) {
		         ^

0 [0x0]: line: 275 pushl 0   : protected asm start
1 [0x1]:           call @1914 // <std#__srt_global.print_chars>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.read_ch[1926] params(1) in file: lib\support\0.2.805/console.sharp:281:10: note:  
		local def read_ch(hide: var) : var {
		         ^

0 [0x0]: line: 282 loadl cmt, fp+0   : protected asm start
1 [0x1]:           get ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 288 movi #0, ebx   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#_enum_._enum_[1927] params(1) in file: lib\support\0.2.805/enum.sharp:18:11: note:  
		    _enum_(ord : var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 19 loadl ebx, fp+1   
3 [0x3]:          rstore ebx   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          loadval ebx   
8 [0x8]:          mov64 ebx, ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


constructor: std#_enum_._enum_[1928] params(1) in file: lib\support\0.2.805/enum.sharp:22:11: note:  
		    _enum_(e : _enum_) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 23 movl 1   
3 [0x3]:          movn #1   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          loadval ebx   
14 [0xe]:          mov64 ebx, ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 24 movl 1   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          movi #0, ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          sizeof ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2080 // <std.io#__srt_global.copy>   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          popobj   
35 [0x23]:          ret   


overload function: std#_enum_.operator!=[1929] params(1) in file: lib\support\0.2.805/enum.sharp:27:8: note:  
		    def operator!=(e : _enum_) : var {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #1   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#_enum_.operator!=[1930] params(1) in file: lib\support\0.2.805/enum.sharp:31:8: note:  
		    def operator!=(num : var) : var {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          tne ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          return_val ebx   
13 [0xd]:          ret   


overload function: std#_enum_.operator==[1931] params(1) in file: lib\support\0.2.805/enum.sharp:35:8: note:  
		    def operator==(e : _enum_) : var {
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #1   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#_enum_.operator==[1932] params(1) in file: lib\support\0.2.805/enum.sharp:39:8: note:  
		    def operator==(num : var) : var {
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          return_val ebx   
13 [0xd]:          ret   


function: std#_enum_.get_name[1933] params(0) in file: lib\support\0.2.805/enum.sharp:43:8: note:  
		    def get_name() : _int8[] {
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std#_enum_.get_ordinal[1934] params(0) in file: lib\support\0.2.805/enum.sharp:47:8: note:  
		    def get_ordinal() : _int64 {
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std#_enum_.to_string[1935] params(0) in file: lib\support\0.2.805/enum.sharp:51:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 52 new_class @69 // std#string   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          call @3371 // <std#string.string>   
7 [0x7]:          popobj2    
8 [0x8]:          returnobj   
9 [0x9]:          ret   


constructor: std#_enum_._enum_[1936] params(0) in file: lib\support\0.2.805/enum.sharp:14:17: note:  
		stable ext class _enum_ {
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#throwable.throwable[1937] params(1) in file: lib\support\0.2.805/exceptions.sharp:30:21: note:  
		    public throwable(message : _int8[]) {
		                    ^

0 [0x0]: line: 26 call @2279 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]:          call @2262 // <std#_object_._object_>   
7 [0x7]: line: 31 movl 1   
8 [0x8]:          pushobj   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]:          ret   


constructor: std#throwable.throwable[1938] params(1) in file: lib\support\0.2.805/exceptions.sharp:34:21: note:  
		    public throwable(message : string) {
		                    ^

0 [0x0]: line: 26 call @2279 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]:          call @2262 // <std#_object_._object_>   
7 [0x7]: line: 35 movl 1   
8 [0x8]:          pushobj   
9 [0x9]:          call @3397 // <std#string.get_data>   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          popobj   
14 [0xe]:          ret   


function: std#throwable.get_message[1939] params(0) in file: lib\support\0.2.805/exceptions.sharp:38:8: note:  
		    def get_message() : string {
		       ^

0 [0x0]: line: 39 new_class @69 // std#string   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          call @3371 // <std#string.string>   
7 [0x7]:          popobj2    
8 [0x8]:          returnobj   
9 [0x9]:          ret   


constructor: std#throwable.throwable[1940] params(0) in file: lib\support\0.2.805/exceptions.sharp:10:6: note:  
		class throwable {
		     ^

0 [0x0]: line: 26 call @2279 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          ret   


constructor: std#exception.exception[1941] params(1) in file: lib\support\0.2.805/exceptions.sharp:47:21: note:  
		    public exception(message : _int8[]) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1937 // <std#throwable.throwable>   
4 [0x4]:         ret   


constructor: std#exception.exception[1942] params(1) in file: lib\support\0.2.805/exceptions.sharp:48:21: note:  
		    public exception(message : string) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1938 // <std#throwable.throwable>   
4 [0x4]:         ret   


constructor: std#exception.exception[1943] params(0) in file: lib\support\0.2.805/exceptions.sharp:46:6: note:  
		class exception base throwable {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1940 // <std#throwable.throwable>   
2 [0x2]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1944] params(1) in file: lib\support\0.2.805/exceptions.sharp:52:38: note:  
		    public illegal_argument_exception(message : _int8[]) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1945] params(1) in file: lib\support\0.2.805/exceptions.sharp:53:38: note:  
		    public illegal_argument_exception(message : string) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1946] params(0) in file: lib\support\0.2.805/exceptions.sharp:51:6: note:  
		class illegal_argument_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1947] params(1) in file: lib\support\0.2.805/exceptions.sharp:56:35: note:  
		    public illegal_state_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1948] params(1) in file: lib\support\0.2.805/exceptions.sharp:57:35: note:  
		    public illegal_state_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1949] params(0) in file: lib\support\0.2.805/exceptions.sharp:55:6: note:  
		class illegal_state_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1950] params(1) in file: lib\support\0.2.805/exceptions.sharp:60:35: note:  
		    public out_of_bounds_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1951] params(1) in file: lib\support\0.2.805/exceptions.sharp:61:35: note:  
		    public out_of_bounds_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1952] params(0) in file: lib\support\0.2.805/exceptions.sharp:59:6: note:  
		class out_of_bounds_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#io_exception.io_exception[1953] params(1) in file: lib\support\0.2.805/exceptions.sharp:64:24: note:  
		    public io_exception(message : _int8[]) -> base(message) {}
		                       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#io_exception.io_exception[1954] params(1) in file: lib\support\0.2.805/exceptions.sharp:65:24: note:  
		    public io_exception(message : string) -> base(message) {}
		                       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#io_exception.io_exception[1955] params(0) in file: lib\support\0.2.805/exceptions.sharp:63:6: note:  
		class io_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1956] params(1) in file: lib\support\0.2.805/exceptions.sharp:68:39: note:  
		    public invalid_operation_exception(message : _int8[]) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1957] params(1) in file: lib\support\0.2.805/exceptions.sharp:69:39: note:  
		    public invalid_operation_exception(message : string) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1958] params(0) in file: lib\support\0.2.805/exceptions.sharp:67:6: note:  
		class invalid_operation_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1959] params(1) in file: lib\support\0.2.805/exceptions.sharp:72:29: note:  
		    public nullptr_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1960] params(1) in file: lib\support\0.2.805/exceptions.sharp:73:29: note:  
		    public nullptr_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1961] params(0) in file: lib\support\0.2.805/exceptions.sharp:71:6: note:  
		class nullptr_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#runtime_exception.runtime_exception[1962] params(1) in file: lib\support\0.2.805/exceptions.sharp:76:29: note:  
		    public runtime_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#runtime_exception.runtime_exception[1963] params(1) in file: lib\support\0.2.805/exceptions.sharp:77:29: note:  
		    public runtime_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#runtime_exception.runtime_exception[1964] params(0) in file: lib\support\0.2.805/exceptions.sharp:75:6: note:  
		class runtime_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1965] params(1) in file: lib\support\0.2.805/exceptions.sharp:80:36: note:  
		    public stack_overflow_exception(message : _int8[]) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1966] params(1) in file: lib\support\0.2.805/exceptions.sharp:81:36: note:  
		    public stack_overflow_exception(message : string) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1967] params(0) in file: lib\support\0.2.805/exceptions.sharp:79:6: note:  
		class stack_overflow_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1968] params(1) in file: lib\support\0.2.805/exceptions.sharp:84:34: note:  
		    public thread_stack_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1969] params(1) in file: lib\support\0.2.805/exceptions.sharp:85:34: note:  
		    public thread_stack_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1970] params(0) in file: lib\support\0.2.805/exceptions.sharp:83:6: note:  
		class thread_stack_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1971] params(1) in file: lib\support\0.2.805/exceptions.sharp:88:32: note:  
		    public class_cast_exception(message : _int8[]) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1972] params(1) in file: lib\support\0.2.805/exceptions.sharp:89:32: note:  
		    public class_cast_exception(message : string) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1973] params(0) in file: lib\support\0.2.805/exceptions.sharp:87:6: note:  
		class class_cast_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1974] params(1) in file: lib\support\0.2.805/exceptions.sharp:92:35: note:  
		    public out_of_memory_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1975] params(1) in file: lib\support\0.2.805/exceptions.sharp:93:35: note:  
		    public out_of_memory_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1976] params(0) in file: lib\support\0.2.805/exceptions.sharp:91:6: note:  
		class out_of_memory_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1977] params(1) in file: lib\support\0.2.805/exceptions.sharp:96:33: note:  
		    public not_implemented_error(message : _int8[]) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1986 // <std#error.error>   
4 [0x4]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1978] params(1) in file: lib\support\0.2.805/exceptions.sharp:97:33: note:  
		    public not_implemented_error(message : string) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1987 // <std#error.error>   
4 [0x4]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1979] params(0) in file: lib\support\0.2.805/exceptions.sharp:95:6: note:  
		class not_implemented_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1988 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[1980] params(1) in file: lib\support\0.2.805/exceptions.sharp:100:34: note:  
		    public unsatisfied_link_error(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1986 // <std#error.error>   
4 [0x4]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[1981] params(1) in file: lib\support\0.2.805/exceptions.sharp:101:34: note:  
		    public unsatisfied_link_error(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1987 // <std#error.error>   
4 [0x4]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[1982] params(0) in file: lib\support\0.2.805/exceptions.sharp:99:6: note:  
		class unsatisfied_link_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1988 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#assertion_error.assertion_error[1983] params(1) in file: lib\support\0.2.805/exceptions.sharp:104:27: note:  
		    public assertion_error(message : _int8[]) -> base(message) {}
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1986 // <std#error.error>   
4 [0x4]:         ret   


constructor: std#assertion_error.assertion_error[1984] params(1) in file: lib\support\0.2.805/exceptions.sharp:105:27: note:  
		    public assertion_error(message : string) -> base(message) {}
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1987 // <std#error.error>   
4 [0x4]:         ret   


constructor: std#assertion_error.assertion_error[1985] params(0) in file: lib\support\0.2.805/exceptions.sharp:103:6: note:  
		class assertion_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1988 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#error.error[1986] params(1) in file: lib\support\0.2.805/exceptions.sharp:109:17: note:  
		    public error(message : _int8[]) -> base(message) {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1941 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#error.error[1987] params(1) in file: lib\support\0.2.805/exceptions.sharp:110:17: note:  
		    public error(message : string) -> base(message) {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1942 // <std#exception.exception>   
4 [0x4]:         ret   


constructor: std#error.error[1988] params(0) in file: lib\support\0.2.805/exceptions.sharp:108:6: note:  
		class error base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1943 // <std#exception.exception>   
2 [0x2]:         ret   


function: std#__srt_global.runtime_error[1989] params(1) in file: lib\support\0.2.805/exceptions.sharp:126:4: note:  
		def runtime_error(message: string) : runtime_except {
		   ^

0 [0x0]: line: 127 new_class @11 // std#runtime_exception   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           pushobj   
4 [0x4]:           call @1963 // <std#runtime_exception.runtime_exception>   
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: std#__srt_global.runtime_error[1990] params(0) in file: lib\support\0.2.805/exceptions.sharp:130:4: note:  
		def runtime_error() : runtime_except {
		   ^

0 [0x0]: line: 131 new_class @11 // std#runtime_exception   
1 [0x1]:           dup    
2 [0x2]:           call @1964 // <std#runtime_exception.runtime_exception>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#__srt_global.todo[1991] params(1) in file: lib\support\0.2.805/exceptions.sharp:134:4: note:  
		def todo(message: string) {
		   ^

0 [0x0]: line: 135 new_class @16 // std#not_implemented_error   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           pushobj   
4 [0x4]:           call @1978 // <std#not_implemented_error.not_implemented_error>   
5 [0x5]:           throw    
6 [0x6]:           ret   


function: std#__srt_global.assert[1992] params(1) in file: lib\support\0.2.805/exceptions.sharp:138:4: note:  
		def assert(cond : var) {
		   ^

0 [0x0]: line: 139 loadl ebx, fp+0   
1 [0x1]:           not ebx, ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 9   
4 [0x4]: line: 140 new_class @18 // std#assertion_error   
5 [0x5]:           dup    
6 [0x6]:           newstr @4 // assertion failed!   
7 [0x7]:           call @1983 // <std#assertion_error.assertion_error>   
8 [0x8]:           throw    
9 [0x9]:           nop   
10 [0xa]:           ret   


function: std#__srt_global.assert[1993] params(2) in file: lib\support\0.2.805/exceptions.sharp:144:4: note:  
		def assert(cond : var, message: string) {
		   ^

0 [0x0]: line: 145 loadl ebx, fp+0   
1 [0x1]:           not ebx, ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 10   
4 [0x4]: line: 146 new_class @18 // std#assertion_error   
5 [0x5]:           dup    
6 [0x6]:           movl 1   
7 [0x7]:           pushobj   
8 [0x8]:           call @1984 // <std#assertion_error.assertion_error>   
9 [0x9]:           throw    
10 [0xa]:           nop   
11 [0xb]:           ret   


function: std.io#__srt_global.critical_section[1994] params(1) in file: lib\support\0.2.805/io//critical_section.sharp:4:4: note:  
		def critical_section(block : ()()) {
		   ^

0 [0x0]: line: 5 movg @20 // @std.io#__srt_global   : protected asm start: try start: try block start
1 [0x1]: line: 6 movn #0   
3 [0x3]:         _lck    
4 [0x4]: line: 11 loadl ebx, fp+0   : protected asm end
5 [0x5]:          rstore ebx   
6 [0x6]:          loadval ebx   
7 [0x7]:          calld ebx   
8 [0x8]:          jmp @9   : try block end
9 [0x9]:          movl 1   : try end
10 [0xa]:          del   
11 [0xb]: line: 13 movg @20 // @std.io#__srt_global   : protected asm start: finally start
12 [0xc]:          movn #0   
14 [0xe]:          _ulck   
15 [0xf]:          movl 1   : protected asm end
16 [0x10]:          checknull   
17 [0x11]:          je 20   
18 [0x12]:          pushobj   
19 [0x13]:          ret ERR   
20 [0x14]:          nop   : finally end
21 [0x15]:          ret   


function: std.io#__srt_global.critical_section[1995] params(2) in file: lib\support\0.2.805/io//critical_section.sharp:21:4: note:  
		def critical_section(block : ()(), lock_obj : object) {
		   ^

0 [0x0]: line: 22 movl 1   : protected asm start: try start: try block start
1 [0x1]: line: 23 _lck    
2 [0x2]: line: 27 loadl ebx, fp+0   : protected asm end
3 [0x3]:          rstore ebx   
4 [0x4]:          loadval ebx   
5 [0x5]:          calld ebx   
6 [0x6]:          jmp @7   : try block end
7 [0x7]:          movl 2   : try end
8 [0x8]:          del   
9 [0x9]: line: 29 movl 1   : protected asm start: finally start
10 [0xa]:          _ulck   
11 [0xb]:          movl 2   : protected asm end
12 [0xc]:          checknull   
13 [0xd]:          je 16   
14 [0xe]:          pushobj   
15 [0xf]:          ret ERR   
16 [0x10]:          nop   : finally end
17 [0x11]:          ret   


constructor: std.io#file.file[1996] params(1) in file: lib\support\0.2.805/io//file.sharp:23:9: note:  
		    file(path: string) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 24 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @2000 // <std.io#file.update_path>   
7 [0x7]:          ret   


constructor: std.io#file.file[1997] params(1) in file: lib\support\0.2.805/io//file.sharp:27:9: note:  
		    file(path: _int8[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 28 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          new_class @69 // std#string   
5 [0x5]:          dup    
6 [0x6]:          newstr @3 //    
7 [0x7]:          call @3371 // <std#string.string>   
8 [0x8]:          movl 1   
9 [0x9]:          pushobj   
10 [0xa]:          call @3383 // <std#string.operator+>   
11 [0xb]:          call @2000 // <std.io#file.update_path>   
12 [0xc]:          ret   


function: std.io#file.get_name[1998] params(0) in file: lib\support\0.2.805/io//file.sharp:31:8: note:  
		    def get_name() : string {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          skpe ebx // pc = 19   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3412 // <std#string.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          movr ebx, cmt   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 25   
21 [0x15]: line: 33 pushnull    
22 [0x16]:          popobj2    
23 [0x17]:          returnobj   
24 [0x18]:          ret   
25 [0x19]:          nop   
26 [0x1a]: line: 36 movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          pushobj   
30 [0x1e]:          call @3412 // <std#string.size>   
31 [0x1f]:          loadval ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movi #1, ebx   
35 [0x23]:          loadval ecx   
36 [0x24]:          sub ecx, ebx -> ebx   
37 [0x25]:          smovr_2 ebx, fp+1   
38 [0x26]:          loadl ebx, fp+1   
39 [0x27]:          rstore ebx   
40 [0x28]:          movi #0, ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          gt ecx, ebx   
44 [0x2c]:          movr ebx, cmt   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 94   
47 [0x2f]: line: 37 movl 0   
48 [0x30]:          movn #0   
50 [0x32]:          pushobj   
51 [0x33]:          loadl ebx, fp+1   
52 [0x34]:          rstore ebx   
53 [0x35]:          call @3394 // <std#string.operator[>   
54 [0x36]:          loadval ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          movg @21 // @std.io#file   
57 [0x39]:          movn #1   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          chklen adx   
62 [0x3e]:          iaload ebx, adx   
63 [0x3f]:          loadval ecx   
64 [0x40]:          test ecx, ebx   
65 [0x41]:          movr ebx, cmt   
66 [0x42]:          movr cmt, ebx   
67 [0x43]:          jne 88   
68 [0x44]: line: 38 movl 0   
69 [0x45]:          movn #0   
71 [0x47]:          pushobj   
72 [0x48]:          loadl ebx, fp+1   
73 [0x49]:          rstore ebx   
74 [0x4a]:          movi #1, ebx   
76 [0x4c]:          loadval ecx   
77 [0x4d]:          add ecx, ebx -> ebx   
78 [0x4e]:          rstore ebx   
79 [0x4f]:          movl 0   
80 [0x50]:          movn #0   
82 [0x52]:          pushobj   
83 [0x53]:          call @3412 // <std#string.size>   
84 [0x54]:          call @3426 // <std#string.substring>   
85 [0x55]:          popobj2    
86 [0x56]:          returnobj   
87 [0x57]:          ret   
88 [0x58]:          nop   
89 [0x59]:          loadl ebx, fp+1   
90 [0x5a]:          movr egx, ebx   
91 [0x5b]:          dec ebx   
92 [0x5c]:          smovr_2 ebx, fp+1   
93 [0x5d]:          jmp @38   
94 [0x5e]: line: 42 movl 0   
95 [0x5f]:          movn #0   
97 [0x61]:          returnobj   
98 [0x62]:          ret   


function: std.io#file.to_string[1999] params(0) in file: lib\support\0.2.805/io//file.sharp:45:8: note:  
		    def to_string() := path;
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#file.update_path[2000] params(1) in file: lib\support\0.2.805/io//file.sharp:47:5: note:  
			def update_path(path: string) {
		    ^

0 [0x0]: line: 48 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          pushnull    
3 [0x3]:          itest ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 11   
6 [0x6]: line: 49 new_class @10 // std#nullptr_exception   
7 [0x7]:          dup    
8 [0x8]:          newstr @5 // file path cannot be null   
9 [0x9]:          call @1959 // <std#nullptr_exception.nullptr_exception>   
10 [0xa]:          throw    
11 [0xb]:          nop   
12 [0xc]: line: 51 movl 1   
13 [0xd]:          pushobj   
14 [0xe]:          call @3379 // <std#string.empty>   
15 [0xf]:          loadval ebx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 23   
18 [0x12]: line: 52 new_class @10 // std#nullptr_exception   
19 [0x13]:          dup    
20 [0x14]:          newstr @6 // file path cannot be empty   
21 [0x15]:          call @1959 // <std#nullptr_exception.nullptr_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 53 movg @21 // @std.io#file   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 1   
29 [0x1d]:          pushobj   
30 [0x1e]:          invoke_delegate 2039 { static=0, args=1 }   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          popobj   
36 [0x24]:          ret   


function: std.io#file.get_parent_file[2001] params(0) in file: lib\support\0.2.805/io//file.sharp:56:8: note:  
		    def get_parent_file() : file {
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          skpe ebx // pc = 19   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3412 // <std#string.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          movr ebx, cmt   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 25   
21 [0x15]: line: 58 pushnull    
22 [0x16]:          popobj2    
23 [0x17]:          returnobj   
24 [0x18]:          ret   
25 [0x19]:          nop   
26 [0x1a]: line: 61 movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          pushobj   
30 [0x1e]:          call @3412 // <std#string.size>   
31 [0x1f]:          loadval ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movi #1, ebx   
35 [0x23]:          loadval ecx   
36 [0x24]:          sub ecx, ebx -> ebx   
37 [0x25]:          smovr_2 ebx, fp+1   
38 [0x26]:          loadl ebx, fp+1   
39 [0x27]:          rstore ebx   
40 [0x28]:          movi #0, ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          gt ecx, ebx   
44 [0x2c]:          movr ebx, cmt   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 95   
47 [0x2f]: line: 62 movl 0   
48 [0x30]:          movn #0   
50 [0x32]:          pushobj   
51 [0x33]:          loadl ebx, fp+1   
52 [0x34]:          rstore ebx   
53 [0x35]:          call @3394 // <std#string.operator[>   
54 [0x36]:          loadval ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          movg @21 // @std.io#file   
57 [0x39]:          movn #1   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          chklen adx   
62 [0x3e]:          iaload ebx, adx   
63 [0x3f]:          loadval ecx   
64 [0x40]:          test ecx, ebx   
65 [0x41]:          movr ebx, cmt   
66 [0x42]:          movr cmt, ebx   
67 [0x43]:          jne 89   
68 [0x44]: line: 63 new_class @21 // std.io#file   
69 [0x45]:          dup    
70 [0x46]:          movl 0   
71 [0x47]:          movn #0   
73 [0x49]:          pushobj   
74 [0x4a]:          movi #0, ebx   
76 [0x4c]:          rstore ebx   
77 [0x4d]:          loadl ebx, fp+1   
78 [0x4e]:          rstore ebx   
79 [0x4f]:          movi #1, ebx   
81 [0x51]:          loadval ecx   
82 [0x52]:          add ecx, ebx -> ebx   
83 [0x53]:          rstore ebx   
84 [0x54]:          call @3426 // <std#string.substring>   
85 [0x55]:          call @1996 // <std.io#file.file>   
86 [0x56]:          popobj2    
87 [0x57]:          returnobj   
88 [0x58]:          ret   
89 [0x59]:          nop   
90 [0x5a]:          loadl ebx, fp+1   
91 [0x5b]:          movr egx, ebx   
92 [0x5c]:          dec ebx   
93 [0x5d]:          smovr_2 ebx, fp+1   
94 [0x5e]:          jmp @38   
95 [0x5f]: line: 67 pushnull    
96 [0x60]:          popobj2    
97 [0x61]:          returnobj   
98 [0x62]:          ret   


function: std.io#file.get_path[2002] params(0) in file: lib\support\0.2.805/io//file.sharp:70:8: note:  
		    def get_path() : string {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#file.get_absolute_path[2003] params(0) in file: lib\support\0.2.805/io//file.sharp:87:8: note:  
		    def get_absolute_path() : string {
		       ^

0 [0x0]: line: 88 movg @21 // @std.io#file   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 0   
5 [0x5]:          pushobj   
6 [0x6]:          call @2040 // <std.io#file_system.resolve>   
7 [0x7]:          popobj2    
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: std.io#file.is_readable[2004] params(0) in file: lib\support\0.2.805/io//file.sharp:96:8: note:  
		    def is_readable() : var {
		       ^

0 [0x0]: line: 97 movg @21 // @std.io#file   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 0   
5 [0x5]:          pushobj   
6 [0x6]:          movi #4, ebx   
8 [0x8]:          rstore ebx   
9 [0x9]:          invoke_delegate 2042 { static=0, args=2 }   
11 [0xb]:          loadval ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          movi #0, ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


function: std.io#file.is_writeable[2005] params(0) in file: lib\support\0.2.805/io//file.sharp:105:8: note:  
		    def is_writeable() : var {
		       ^

0 [0x0]: line: 106 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           movi #2, ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           invoke_delegate 2042 { static=0, args=2 }   
11 [0xb]:           loadval ebx   
12 [0xc]:           rstore ebx   
13 [0xd]:           movi #0, ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           test ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


function: std.io#file.exists[2006] params(0) in file: lib\support\0.2.805/io//file.sharp:114:8: note:  
		    def exists() : var {
		       ^

0 [0x0]: line: 115 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           ldc ebx // 0   
7 [0x7]:           rstore ebx   
8 [0x8]:           invoke_delegate 2042 { static=0, args=2 }   
10 [0xa]:           loadval ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           test ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


function: std.io#file.is_directory[2007] params(0) in file: lib\support\0.2.805/io//file.sharp:123:8: note:  
		    def is_directory() : var {
		       ^

0 [0x0]: line: 124 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           invoke_delegate 2041 { static=0, args=1 }   
8 [0x8]:           loadval ebx   
9 [0x9]:           rstore ebx   
10 [0xa]:           movi #4, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           uand ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           tne ecx, ebx   
20 [0x14]:           movr ebx, cmt   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


function: std.io#file.is_file[2008] params(0) in file: lib\support\0.2.805/io//file.sharp:133:8: note:  
		    def is_file() : var {
		       ^

0 [0x0]: line: 134 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           invoke_delegate 2041 { static=0, args=1 }   
8 [0x8]:           loadval ebx   
9 [0x9]:           rstore ebx   
10 [0xa]:           movi #2, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           uand ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           tne ecx, ebx   
20 [0x14]:           movr ebx, cmt   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


function: std.io#file.is_hidden[2009] params(0) in file: lib\support\0.2.805/io//file.sharp:145:8: note:  
		    def is_hidden() : var {
		       ^

0 [0x0]: line: 146 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           invoke_delegate 2041 { static=0, args=1 }   
8 [0x8]:           loadval ebx   
9 [0x9]:           rstore ebx   
10 [0xa]:           movi #128, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           uand ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           tne ecx, ebx   
20 [0x14]:           movr ebx, cmt   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


function: std.io#file.last_modified[2010] params(0) in file: lib\support\0.2.805/io//file.sharp:154:8: note:  
		    def last_modified() : var {
		       ^

0 [0x0]: line: 155 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           ldc ebx // 0   
7 [0x7]:           rstore ebx   
8 [0x8]:           call @2044 // <std.io#file_system.last_modified_time>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: std.io#file.last_status_changed[2011] params(0) in file: lib\support\0.2.805/io//file.sharp:158:8: note:  
		    def last_status_changed() : var {
		       ^

0 [0x0]: line: 159 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           ldc ebx // 1   
7 [0x7]:           rstore ebx   
8 [0x8]:           call @2044 // <std.io#file_system.last_modified_time>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: std.io#file.last_accessed[2012] params(0) in file: lib\support\0.2.805/io//file.sharp:162:8: note:  
		    def last_accessed() : var {
		       ^

0 [0x0]: line: 163 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           movi #2, ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           call @2044 // <std.io#file_system.last_modified_time>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.length[2013] params(0) in file: lib\support\0.2.805/io//file.sharp:171:8: note:  
		    def length() : var {
		       ^

0 [0x0]: line: 172 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2045 // <std.io#file_system.get_length>   
7 [0x7]:           loadval ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


function: std.io#file.create[2014] params(0) in file: lib\support\0.2.805/io//file.sharp:186:8: note:  
		    def create() {
		       ^

0 [0x0]: line: 187 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @2046 // <std.io#file_system.create_file>   
9 [0x9]:           ret   


function: std.io#file.delete[2015] params(0) in file: lib\support\0.2.805/io//file.sharp:196:8: note:  
		    def delete() : var {
		       ^

0 [0x0]: line: 197 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2048 // <std.io#file_system.delete>   
7 [0x7]:           loadval ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


function: std.io#file.list[2016] params(0) in file: lib\support\0.2.805/io//file.sharp:212:8: note:  
		    def list() : list<string> {
		       ^

0 [0x0]: line: 213 new_class @86 // std#list<std#string>   
1 [0x1]:           dup    
2 [0x2]:           movg @21 // @std.io#file   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           movl 0   
7 [0x7]:           pushobj   
8 [0x8]:           call @2049 // <std.io#file_system.list>   
9 [0x9]:           call @3494 // <std#list<std#string>.list>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


function: std.io#file.mkdir[2017] params(0) in file: lib\support\0.2.805/io//file.sharp:220:8: note:  
		    def mkdir() : var {
		       ^

0 [0x0]: line: 221 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2050 // <std.io#file_system.create_directory>   
7 [0x7]:           loadval ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


function: std.io#file.rename[2018] params(1) in file: lib\support\0.2.805/io//file.sharp:239:8: note:  
		    def rename(dest: file) : var {
		       ^

0 [0x0]: line: 240 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           pushnull    
3 [0x3]:           itest ebx   
4 [0x4]:           movr cmt, ebx   
5 [0x5]:           jne 10   
6 [0x6]: line: 241 new_class @10 // std#nullptr_exception   
7 [0x7]:           dup    
8 [0x8]:           call @1961 // <std#nullptr_exception.nullptr_exception>   
9 [0x9]:           throw    
10 [0xa]:           nop   
11 [0xb]: line: 244 movg @21 // @std.io#file   
12 [0xc]:           movn #0   
14 [0xe]:           pushobj   
15 [0xf]:           movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movl 1   
18 [0x12]:           pushobj   
19 [0x13]:           call @2051 // <std.io#file_system.rename>   
20 [0x14]:           loadval ebx   
21 [0x15]:           smovr_2 ebx, fp+2   
22 [0x16]: line: 245 loadl ebx, fp+2   
23 [0x17]:           rstore ebx   
24 [0x18]:           movi #0, ebx   
26 [0x1a]:           loadval ecx   
27 [0x1b]:           test ecx, ebx   
28 [0x1c]:           movr ebx, cmt   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 39   
31 [0x1f]: line: 247 movl 1   
32 [0x20]:           movn #0   
34 [0x22]:           pushobj   
35 [0x23]:           movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           popobj   
39 [0x27]:           nop   
40 [0x28]: line: 251 loadl ebx, fp+2   
41 [0x29]:           return_val ebx   
42 [0x2a]:           ret   


function: std.io#file.set_last_modified[2019] params(1) in file: lib\support\0.2.805/io//file.sharp:266:8: note:  
		    def set_last_modified(time: var) : var {
		       ^

0 [0x0]: line: 267 loadl ebx, fp+1   
1 [0x1]:           mov32 ebx, ebx   
2 [0x2]:           rstore ebx   
3 [0x3]:           movi #0, ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           lt ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 15   
10 [0xa]:           new_class @5 // std#illegal_argument_exception   
11 [0xb]:           dup    
12 [0xc]:           newstr @7 // Negative time   
13 [0xd]:           call @1944 // <std#illegal_argument_exception.illegal_argument_exception>   
14 [0xe]:           throw    
15 [0xf]:           nop   
16 [0x10]: line: 268 movg @21 // @std.io#file   
17 [0x11]:           movn #0   
19 [0x13]:           pushobj   
20 [0x14]:           movl 0   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+1   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @2054 // <std.io#file_system.set_last_modified_time>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   


function: std.io#file.set_read_only[2020] params(0) in file: lib\support\0.2.805/io//file.sharp:279:8: note:  
		    def set_read_only() : var {
		       ^

0 [0x0]: line: 280 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2055 // <std.io#file_system.set_read_only>   
7 [0x7]:           loadval ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


function: std.io#file.set_writable[2021] params(2) in file: lib\support\0.2.805/io//file.sharp:288:8: note:  
		    def set_writable(writable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 289 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           movi #2, ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           loadl ebx, fp+1   
10 [0xa]:           rstore ebx   
11 [0xb]:           loadl ebx, fp+2   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @2043 // <std.io#file_system.set_permission>   
14 [0xe]:           loadval ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


function: std.io#file.set_writable[2022] params(1) in file: lib\support\0.2.805/io//file.sharp:297:8: note:  
		    def set_writable(writable: var) : var {
		       ^

0 [0x0]: line: 298 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           movi #1, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2021 // <std.io#file.set_writable>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#file.set_readable[2023] params(2) in file: lib\support\0.2.805/io//file.sharp:306:8: note:  
		    def set_readable(readable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 307 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           movi #4, ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           loadl ebx, fp+1   
10 [0xa]:           rstore ebx   
11 [0xb]:           loadl ebx, fp+2   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @2043 // <std.io#file_system.set_permission>   
14 [0xe]:           loadval ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


function: std.io#file.set_readable[2024] params(1) in file: lib\support\0.2.805/io//file.sharp:315:8: note:  
		    def set_readable(readable: var) : var {
		       ^

0 [0x0]: line: 316 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           movi #1, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2023 // <std.io#file.set_readable>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#file.set_executable[2025] params(2) in file: lib\support\0.2.805/io//file.sharp:324:8: note:  
		    def set_executable(executable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 325 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           ldc ebx // 1   
7 [0x7]:           rstore ebx   
8 [0x8]:           loadl ebx, fp+1   
9 [0x9]:           rstore ebx   
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @2043 // <std.io#file_system.set_permission>   
13 [0xd]:           loadval ebx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


function: std.io#file.set_executable[2026] params(1) in file: lib\support\0.2.805/io//file.sharp:333:8: note:  
		    def set_executable(executable: var) : var {
		       ^

0 [0x0]: line: 334 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           movi #1, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2025 // <std.io#file.set_executable>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#file.is_executable[2027] params(0) in file: lib\support\0.2.805/io//file.sharp:342:8: note:  
		    def is_executable() : var {
		       ^

0 [0x0]: line: 343 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           ldc ebx // 1   
7 [0x7]:           rstore ebx   
8 [0x8]:           invoke_delegate 2042 { static=0, args=2 }   
10 [0xa]:           loadval ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           test ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


function: std.io#file.get_total_space[2028] params(0) in file: lib\support\0.2.805/io//file.sharp:354:8: note:  
		    def get_total_space() : var {
		       ^

0 [0x0]: line: 355 ldc ebx // 0   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @2056 // <std.io#file_system.get_space_available>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.get_free_space[2029] params(0) in file: lib\support\0.2.805/io//file.sharp:363:8: note:  
		    def get_free_space() : var {
		       ^

0 [0x0]: line: 364 ldc ebx // 1   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @2056 // <std.io#file_system.get_space_available>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.get_usable_space[2030] params(0) in file: lib\support\0.2.805/io//file.sharp:386:8: note:  
		    def get_usable_space() : var {
		       ^

0 [0x0]: line: 387 movi #2, ebx   
2 [0x2]:           rstore ebx   
3 [0x3]:           call @2056 // <std.io#file_system.get_space_available>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.io#file.generate_temp_file[2031] params(3) in file: lib\support\0.2.805/io//file.sharp:393:22: note:  
		    private static def generate_temp_file(prefix: string, suffix: string, dir: file) : file
		                     ^

0 [0x0]: line: 405 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#file.create_temp_file[2032] params(3) in file: lib\support\0.2.805/io//file.sharp:414:15: note:  
		    static def create_temp_file(prefix: string, suffix: string,
		              ^

0 [0x0]: line: 437 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#file.create_temp_file[2033] params(2) in file: lib\support\0.2.805/io//file.sharp:448:15: note:  
		    static def create_temp_file(prefix: string, suffix: string) : file
		              ^

0 [0x0]: line: 451 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           call @2032 // <std.io#file.create_temp_file>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


function: std.io#file.read_all_text[2034] params(0) in file: lib\support\0.2.805/io//file.sharp:454:8: note:  
		    def read_all_text() := fs.read(self);
		       ^

0 [0x0]: line: 454 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           call @2052 // <std.io#file_system.read>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std.io#file.write[2035] params(1) in file: lib\support\0.2.805/io//file.sharp:456:8: note:  
		    def write(data: string) := fs.write(self, data);
		       ^

0 [0x0]: line: 456 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           call @2053 // <std.io#file_system.write>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#file.get_file_system[2036] params(0) in file: lib\support\0.2.805/io//file.sharp:458:23: note:  
		    private static def get_file_system() : file_system {
		                      ^

0 [0x0]: line: 459 call @2263 // <platform#build.is_windows>   
1 [0x1]:           loadval ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 11   
4 [0x4]: line: 460 new_class @37 // std.io#win_fs   
5 [0x5]:           dup    
6 [0x6]:           call @2227 // <std.io#win_fs.win_fs>   
7 [0x7]:           popobj2    
8 [0x8]:           returnobj   
9 [0x9]:           ret   
10 [0xa]:           jmp @17   
11 [0xb]: line: 462 new_class @36 // std.io#unix_fs   
12 [0xc]:           dup    
13 [0xd]:           call @2222 // <std.io#unix_fs.unix_fs>   
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   
17 [0x11]:           nop   


constructor: std.io#file.file[2037] params(0) in file: lib\support\0.2.805/io//file.sharp:17:13: note:  
		public class file {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


std.io#file_system.path_separator[2038] params(0) in file: lib\support\0.2.805/io//file_system.sharp:18:8: note:  
		    def path_separator() : var;
		       ^



std.io#file_system.normalize[2039] params(1) in file: lib\support\0.2.805/io//file_system.sharp:24:8: note:  
		    def normalize(path: string) : string;
		       ^



function: std.io#file_system.resolve[2040] params(1) in file: lib\support\0.2.805/io//file_system.sharp:30:9: note:  
		     def resolve(f: file) : string {
		        ^

0 [0x0]: line: 32 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3397 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 38 pushl 2   : protected asm start
8 [0x8]:          int 0x20   
9 [0x9]:          popl 2   
10 [0xa]: line: 44 movl 2   : protected asm end
11 [0xb]:          pushobj   
12 [0xc]:          pushnull    
13 [0xd]:          itest ebx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 29   
16 [0x10]: line: 45 new_class @8 // std#io_exception   
17 [0x11]:          dup    
18 [0x12]:          new_class @69 // std#string   
19 [0x13]:          dup    
20 [0x14]:          newstr @8 // file could not be resolved:    
21 [0x15]:          call @3371 // <std#string.string>   
22 [0x16]:          movl 1   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3386 // <std#string.operator+>   
27 [0x1b]:          call @1954 // <std#io_exception.io_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 48 new_class @69 // std#string   
31 [0x1f]:          dup    
32 [0x20]:          newstr @3 //    
33 [0x21]:          call @3371 // <std#string.string>   
34 [0x22]:          movl 2   
35 [0x23]:          pushobj   
36 [0x24]:          call @3383 // <std#string.operator+>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   


std.io#file_system.get_attributes[2041] params(1) in file: lib\support\0.2.805/io//file_system.sharp:67:9: note:  
		     def get_attributes(f: file) : var;
		        ^



std.io#file_system.check_access[2042] params(2) in file: lib\support\0.2.805/io//file_system.sharp:81:9: note:  
		     def check_access(f: file, access: var) : var;
		        ^



function: std.io#file_system.set_permission[2043] params(4) in file: lib\support\0.2.805/io//file_system.sharp:88:9: note:  
		     def set_permission(f: file, access: var, enable: var, owneronly: var) : var {
		        ^

0 [0x0]: line: 90 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          call @2003 // <std.io#file.get_absolute_path>   
3 [0x3]:          call @3397 // <std#string.get_data>   
4 [0x4]:          popobj2    
5 [0x5]:          smovr_3 fp+5   
6 [0x6]: line: 91 movi #0, ebx   
8 [0x8]:          smovr_2 ebx, fp+6   
9 [0x9]: line: 93 call @2263 // <platform#build.is_windows>   
10 [0xa]:          loadval ebx   
11 [0xb]:          skne ebx // pc = 18   
12 [0xc]:          loadl ebx, fp+2   
13 [0xd]:          rstore ebx   
14 [0xe]:          ldc ebx // 1   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 24   
20 [0x14]: line: 94 movi #-1, ebx   
22 [0x16]:          return_val ebx   
23 [0x17]:          ret   
24 [0x18]:          nop   
25 [0x19]: line: 100 pushl 5   : protected asm start
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           loadl egx, fp+3   
28 [0x1c]:           loadl ecx, fp+4   
29 [0x1d]:           int 0x2e   
30 [0x1e]:           smovr_2 ebx, fp+6   
31 [0x1f]: line: 109 loadl ebx, fp+6   : protected asm end
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   


function: std.io#file_system.last_modified_time[2044] params(2) in file: lib\support\0.2.805/io//file_system.sharp:121:9: note:  
		     def last_modified_time(f: file, stat_id: var) : var {
		        ^

0 [0x0]: line: 123 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           call @2003 // <std.io#file.get_absolute_path>   
3 [0x3]:           call @3397 // <std#string.get_data>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+3   
6 [0x6]: line: 124 movi #0, ebx   
8 [0x8]:           smovr_2 ebx, fp+4   
9 [0x9]: line: 130 pushl 3   : protected asm start
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           int 0x26   
12 [0xc]:           smovr_2 ebx, fp+4   
13 [0xd]: line: 137 loadl ebx, fp+4   : protected asm end
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


function: std.io#file_system.get_length[2045] params(1) in file: lib\support\0.2.805/io//file_system.sharp:145:9: note:  
		     def get_length(f: file) : var {
		        ^

0 [0x0]: line: 147 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           call @2003 // <std.io#file.get_absolute_path>   
3 [0x3]:           call @3397 // <std#string.get_data>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+2   
6 [0x6]: line: 148 movi #0, ebx   
8 [0x8]:           smovr_2 ebx, fp+3   
9 [0x9]: line: 154 pushl 2   : protected asm start
10 [0xa]:           int 0x27   
11 [0xb]:           smovr_2 ebx, fp+3   
12 [0xc]: line: 160 loadl ebx, fp+3   : protected asm end
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


function: std.io#file_system.create_file[2046] params(1) in file: lib\support\0.2.805/io//file_system.sharp:170:8: note:  
		    def create_file(pathname: string) {
		       ^

0 [0x0]: line: 172 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           call @3397 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 178 pushl 2   : protected asm start
6 [0x6]:           int 0x28   
7 [0x7]:           ret   : protected asm end


function: std.io#file_system.delete_directory[2047] params(1) in file: lib\support\0.2.805/io//file_system.sharp:188:16: note:  
		    private def delete_directory(f: file) : var {
		               ^

0 [0x0]: line: 190 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           call @2003 // <std.io#file.get_absolute_path>   
3 [0x3]:           call @3397 // <std#string.get_data>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+2   
6 [0x6]: line: 191 movi #0, ebx   
8 [0x8]:           smovr_2 ebx, fp+3   
9 [0x9]: line: 197 pushl 2   : protected asm start
10 [0xa]:           int 0x2c   
11 [0xb]:           smovr_2 ebx, fp+3   
12 [0xc]: line: 203 loadl ebx, fp+3   : protected asm end
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


function: std.io#file_system.delete[2048] params(1) in file: lib\support\0.2.805/io//file_system.sharp:210:8: note:  
		    def delete(f: file) : var {
		       ^

0 [0x0]: line: 212 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           call @2003 // <std.io#file.get_absolute_path>   
3 [0x3]:           call @3397 // <std#string.get_data>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+2   
6 [0x6]: line: 213 movi #0, ebx   
8 [0x8]:           smovr_2 ebx, fp+3   
9 [0x9]: line: 215 movl 1   
10 [0xa]:           pushobj   
11 [0xb]:           call @2007 // <std.io#file.is_directory>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 216 movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movl 1   
18 [0x12]:           pushobj   
19 [0x13]:           call @2047 // <std.io#file_system.delete_directory>   
20 [0x14]:           loadval ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 222 pushl 2   : protected asm start
25 [0x19]:           int 0x29   
26 [0x1a]:           smovr_2 ebx, fp+3   
27 [0x1b]: line: 228 loadl ebx, fp+3   : protected asm end
28 [0x1c]:           return_val ebx   
29 [0x1d]:           ret   


function: std.io#file_system.list[2049] params(1) in file: lib\support\0.2.805/io//file_system.sharp:236:8: note:  
		    def list(f: file) : string[] {
		       ^

0 [0x0]: line: 238 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           call @2003 // <std.io#file.get_absolute_path>   
3 [0x3]:           call @3397 // <std#string.get_data>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+2   
6 [0x6]: line: 239 movl 3   
7 [0x7]:           del   
8 [0x8]: line: 241 movl 1   
9 [0x9]:           pushobj   
10 [0xa]:           call @2007 // <std.io#file.is_directory>   
11 [0xb]:           loadval ebx   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 19   
15 [0xf]: line: 242 pushnull    
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   
19 [0x13]:           nop   
20 [0x14]: line: 248 pushl 2   : protected asm start
21 [0x15]:           int 0x2a   
22 [0x16]:           popl 3   
23 [0x17]: line: 254 movl 3   : protected asm end
24 [0x18]:           returnobj   
25 [0x19]:           ret   


function: std.io#file_system.create_directory[2050] params(1) in file: lib\support\0.2.805/io//file_system.sharp:261:8: note:  
		    def create_directory(f: file) : var {
		       ^

0 [0x0]: line: 263 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           call @2002 // <std.io#file.get_path>   
3 [0x3]:           call @3397 // <std#string.get_data>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+2   
6 [0x6]: line: 264 istorel 0, fp+3   
8 [0x8]: line: 270 pushl 2   : protected asm start
9 [0x9]:           int 0x2b   
10 [0xa]:           smovr_2 ebx, fp+3   
11 [0xb]: line: 276 loadl ebx, fp+3   : protected asm end
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


function: std.io#file_system.rename[2051] params(2) in file: lib\support\0.2.805/io//file_system.sharp:284:8: note:  
		    def rename(f1: file, f2: file) : var {
		       ^

0 [0x0]: line: 286 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           call @2003 // <std.io#file.get_absolute_path>   
3 [0x3]:           call @3397 // <std#string.get_data>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+3   
6 [0x6]: line: 287 movl 2   
7 [0x7]:           pushobj   
8 [0x8]:           call @2002 // <std.io#file.get_path>   
9 [0x9]:           call @3397 // <std#string.get_data>   
10 [0xa]:           popobj2    
11 [0xb]:           smovr_3 fp+4   
12 [0xc]: line: 288 movi #0, ebx   
14 [0xe]:           smovr_2 ebx, fp+5   
15 [0xf]: line: 294 pushl 4   : protected asm start
16 [0x10]:           pushl 3   
17 [0x11]:           int 0x30   
18 [0x12]:           smovr_2 ebx, fp+5   
19 [0x13]: line: 301 loadl ebx, fp+5   : protected asm end
20 [0x14]:           return_val ebx   
21 [0x15]:           ret   


function: std.io#file_system.read[2052] params(1) in file: lib\support\0.2.805/io//file_system.sharp:305:15: note:  
		    static def read(f: file) : string {
		              ^

0 [0x0]: line: 306 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           call @2003 // <std.io#file.get_absolute_path>   
3 [0x3]:           call @3397 // <std#string.get_data>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 307 movl 2   
7 [0x7]:           del   
8 [0x8]: line: 308 movi #0, ebx   
10 [0xa]:           smovr_2 ebx, fp+3   
11 [0xb]: line: 314 pushl 1   : protected asm start
12 [0xc]:           int 0x2f   
13 [0xd]:           popl 2   
14 [0xe]: line: 320 movl 2   : protected asm end
15 [0xf]:           returnobj   
16 [0x10]:           ret   


function: std.io#file_system.write[2053] params(2) in file: lib\support\0.2.805/io//file_system.sharp:324:15: note:  
		    static def write(f: file, data: string) : var {
		              ^

0 [0x0]: line: 325 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           call @2003 // <std.io#file.get_absolute_path>   
3 [0x3]:           call @3397 // <std#string.get_data>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+2   
6 [0x6]: line: 326 movl 1   
7 [0x7]:           pushobj   
8 [0x8]:           call @3397 // <std#string.get_data>   
9 [0x9]:           popobj2    
10 [0xa]:           smovr_3 fp+3   
11 [0xb]: line: 327 movi #0, ebx   
13 [0xd]:           smovr_2 ebx, fp+4   
14 [0xe]: line: 333 pushl 3   : protected asm start
15 [0xf]:           pushl 2   
16 [0x10]:           int 0x31   
17 [0x11]:           smovr_2 ebx, fp+4   
18 [0x12]: line: 340 loadl ebx, fp+4   : protected asm end
19 [0x13]:           return_val ebx   
20 [0x14]:           ret   


function: std.io#file_system.set_last_modified_time[2054] params(2) in file: lib\support\0.2.805/io//file_system.sharp:348:15: note:  
		    public def set_last_modified_time(f: file, time: var) : var {
		              ^

0 [0x0]: line: 350 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           call @2003 // <std.io#file.get_absolute_path>   
3 [0x3]:           call @3397 // <std#string.get_data>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+3   
6 [0x6]: line: 351 movi #0, ebx   
8 [0x8]:           smovr_2 ebx, fp+4   
9 [0x9]: line: 357 pushl 3   : protected asm start
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           int 0x2d   
12 [0xc]:           smovr_2 ebx, fp+4   
13 [0xd]: line: 364 loadl ebx, fp+4   : protected asm end
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


function: std.io#file_system.set_read_only[2055] params(1) in file: lib\support\0.2.805/io//file_system.sharp:372:15: note:  
		    public def set_read_only(f: file) : var {
		              ^

0 [0x0]: line: 373 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           movi #2, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           rstore ebx   
10 [0xa]:           movi #1, ebx   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @2043 // <std.io#file_system.set_permission>   
14 [0xe]:           pop   
15 [0xf]: line: 374 movl 0   
16 [0x10]:           pushobj   
17 [0x11]:           movl 1   
18 [0x12]:           pushobj   
19 [0x13]:           movi #4, ebx   
21 [0x15]:           rstore ebx   
22 [0x16]:           movi #1, ebx   
24 [0x18]:           rstore ebx   
25 [0x19]:           movi #1, ebx   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           call @2043 // <std.io#file_system.set_permission>   
29 [0x1d]:           loadval ebx   
30 [0x1e]:           return_val ebx   
31 [0x1f]:           ret   


function: std.io#file_system.get_space_available[2056] params(1) in file: lib\support\0.2.805/io//file_system.sharp:382:15: note:  
		    static def get_space_available(request: var) : var {
		              ^

0 [0x0]: line: 384 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+1   
3 [0x3]: line: 390 loadl ebx, fp+0   : protected asm start
4 [0x4]:           int 0x32   
5 [0x5]:           smovr_2 ebx, fp+1   
6 [0x6]: line: 396 loadl ebx, fp+1   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


constructor: std.io#file_system.file_system[2057] params(0) in file: lib\support\0.2.805/io//file_system.sharp:10:16: note:  
		protected class file_system {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


function: std.io#__srt_global.realloc[2058] params(2) in file: lib\support\0.2.805/io//memory.sharp:4:4: note:  
		def realloc(data: object[], size: var) {
		   ^

0 [0x0]: line: 5 pushl 0   : protected asm start
1 [0x1]:         ipushl #1   
2 [0x2]:         int 0x23   
3 [0x3]:         ret   : protected asm end


function: std.io#__srt_global.realloc[2059] params(2) in file: lib\support\0.2.805/io//memory.sharp:12:4: note:  
		def realloc(data: var[], size: var) {
		   ^

0 [0x0]: line: 13 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2060] params(2) in file: lib\support\0.2.805/io//memory.sharp:20:4: note:  
		def realloc(data: _int8[], size: var) {
		   ^

0 [0x0]: line: 21 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2061] params(2) in file: lib\support\0.2.805/io//memory.sharp:28:4: note:  
		def realloc(data: _int16[], size: var) {
		   ^

0 [0x0]: line: 29 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2062] params(2) in file: lib\support\0.2.805/io//memory.sharp:36:4: note:  
		def realloc(data: _int32[], size: var) {
		   ^

0 [0x0]: line: 37 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2063] params(2) in file: lib\support\0.2.805/io//memory.sharp:44:4: note:  
		def realloc(data: _int64[], size: var) {
		   ^

0 [0x0]: line: 45 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2064] params(2) in file: lib\support\0.2.805/io//memory.sharp:52:4: note:  
		def realloc(data: _uint8[], size: var) {
		   ^

0 [0x0]: line: 53 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2065] params(2) in file: lib\support\0.2.805/io//memory.sharp:60:4: note:  
		def realloc(data: _uint16[], size: var) {
		   ^

0 [0x0]: line: 61 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2066] params(2) in file: lib\support\0.2.805/io//memory.sharp:68:4: note:  
		def realloc(data: _uint32[], size: var) {
		   ^

0 [0x0]: line: 69 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2067] params(2) in file: lib\support\0.2.805/io//memory.sharp:76:4: note:  
		def realloc(data: _uint64[], size: var) {
		   ^

0 [0x0]: line: 77 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[2068] params(5) in file: lib\support\0.2.805/io//memory.sharp:84:4: note:  
		def memcopy(src: object[], dest: object[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 85 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[2069] params(5) in file: lib\support\0.2.805/io//memory.sharp:95:4: note:  
		def memcopy(src: var[], dest: var[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 96 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[2070] params(5) in file: lib\support\0.2.805/io//memory.sharp:106:4: note:  
		def memcopy(src: _int8[], dest: _int8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 107 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2071] params(5) in file: lib\support\0.2.805/io//memory.sharp:117:4: note:  
		def memcopy(src: _int16[], dest: _int16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 118 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2072] params(5) in file: lib\support\0.2.805/io//memory.sharp:128:4: note:  
		def memcopy(src: _int32[], dest: _int32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 129 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2073] params(5) in file: lib\support\0.2.805/io//memory.sharp:139:4: note:  
		def memcopy(src: _int64[], dest: _int64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 140 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2074] params(5) in file: lib\support\0.2.805/io//memory.sharp:150:4: note:  
		def memcopy(src: _uint8[], dest: _uint8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 151 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2075] params(5) in file: lib\support\0.2.805/io//memory.sharp:161:4: note:  
		def memcopy(src: _uint16[], dest: _uint16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 162 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2076] params(5) in file: lib\support\0.2.805/io//memory.sharp:172:4: note:  
		def memcopy(src: _uint32[], dest: _uint32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 173 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2077] params(5) in file: lib\support\0.2.805/io//memory.sharp:183:4: note:  
		def memcopy(src: _uint64[], dest: _uint64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 184 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.copy[2078] params(3) in file: lib\support\0.2.805/io//memory.sharp:194:4: note:  
		def copy(src: object[], srcStart: var, srcEnd: var) : object[] {
		   ^

0 [0x0]: line: 195 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 204 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2079] params(3) in file: lib\support\0.2.805/io//memory.sharp:207:4: note:  
		def copy(src: var[], srcStart: var, srcEnd: var) : var[] {
		   ^

0 [0x0]: line: 208 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 217 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2080] params(3) in file: lib\support\0.2.805/io//memory.sharp:220:4: note:  
		def copy(src: _int8[], srcStart: var, srcEnd: var) : _int8[] {
		   ^

0 [0x0]: line: 221 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 230 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2081] params(3) in file: lib\support\0.2.805/io//memory.sharp:233:4: note:  
		def copy(src: _int16[], srcStart: var, srcEnd: var) : _int16[] {
		   ^

0 [0x0]: line: 234 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 243 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2082] params(3) in file: lib\support\0.2.805/io//memory.sharp:246:4: note:  
		def copy(src: _int32[], srcStart: var, srcEnd: var) : _int32[] {
		   ^

0 [0x0]: line: 247 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 256 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2083] params(3) in file: lib\support\0.2.805/io//memory.sharp:259:4: note:  
		def copy(src: _uint8[], srcStart: var, srcEnd: var) : _uint8[] {
		   ^

0 [0x0]: line: 260 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 269 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2084] params(3) in file: lib\support\0.2.805/io//memory.sharp:272:4: note:  
		def copy(src: _uint16[], srcStart: var, srcEnd: var) : _uint16[] {
		   ^

0 [0x0]: line: 273 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 282 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2085] params(3) in file: lib\support\0.2.805/io//memory.sharp:285:4: note:  
		def copy(src: _uint32[], srcStart: var, srcEnd: var) : _uint32[] {
		   ^

0 [0x0]: line: 286 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 295 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2086] params(3) in file: lib\support\0.2.805/io//memory.sharp:298:4: note:  
		def copy(src: _uint64[], srcStart: var, srcEnd: var) : _uint64[] {
		   ^

0 [0x0]: line: 299 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 308 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2087] params(3) in file: lib\support\0.2.805/io//memory.sharp:311:4: note:  
		def copy(src: _int64[], srcStart: var, srcEnd: var) : _int64[] {
		   ^

0 [0x0]: line: 312 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 321 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2088] params(3) in file: lib\support\0.2.805/io//memory.sharp:325:4: note:  
		def invert(src: object[], start: var, len: var) : object[] {
		   ^

0 [0x0]: line: 326 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 335 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2089] params(3) in file: lib\support\0.2.805/io//memory.sharp:338:4: note:  
		def invert(src: var[], start: var, len: var) : var[] {
		   ^

0 [0x0]: line: 339 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 348 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2090] params(3) in file: lib\support\0.2.805/io//memory.sharp:351:4: note:  
		def invert(src: _int8[], start: var, len: var) : _int8[] {
		   ^

0 [0x0]: line: 352 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 361 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2091] params(3) in file: lib\support\0.2.805/io//memory.sharp:364:4: note:  
		def invert(src: _int16[], start: var, len: var) : _int16[] {
		   ^

0 [0x0]: line: 365 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 374 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2092] params(3) in file: lib\support\0.2.805/io//memory.sharp:377:4: note:  
		def invert(src: _int32[], start: var, len: var) : _int32[] {
		   ^

0 [0x0]: line: 378 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 387 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2093] params(3) in file: lib\support\0.2.805/io//memory.sharp:390:4: note:  
		def invert(src: _int64[], start: var, len: var) : _int64[] {
		   ^

0 [0x0]: line: 391 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 400 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2094] params(3) in file: lib\support\0.2.805/io//memory.sharp:403:4: note:  
		def invert(src: _uint8[], start: var, len: var) : _uint8[] {
		   ^

0 [0x0]: line: 404 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 413 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2095] params(3) in file: lib\support\0.2.805/io//memory.sharp:416:4: note:  
		def invert(src: _uint16[], start: var, len: var) : _uint16[] {
		   ^

0 [0x0]: line: 417 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 426 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2096] params(3) in file: lib\support\0.2.805/io//memory.sharp:429:4: note:  
		def invert(src: _uint32[], start: var, len: var) : _uint32[] {
		   ^

0 [0x0]: line: 430 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 439 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2097] params(3) in file: lib\support\0.2.805/io//memory.sharp:442:4: note:  
		def invert(src: _uint64[], start: var, len: var) : _uint64[] {
		   ^

0 [0x0]: line: 443 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 452 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[2098] params(1) in file: lib\support\0.2.805/io//task//cancellation_exception.sharp:4:34: note:  
		    public cancellation_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1962 // <std#runtime_exception.runtime_exception>   
4 [0x4]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[2099] params(1) in file: lib\support\0.2.805/io//task//cancellation_exception.sharp:5:34: note:  
		    public cancellation_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         pushobj   
3 [0x3]:         call @1963 // <std#runtime_exception.runtime_exception>   
4 [0x4]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[2100] params(0) in file: lib\support\0.2.805/io//task//cancellation_exception.sharp:3:6: note:  
		class cancellation_exception base runtime_except {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1964 // <std#runtime_exception.runtime_exception>   
2 [0x2]:         ret   


constructor: std.io.task#job.job[2101] params(0) in file: lib\support\0.2.805/io//task//job.sharp:7:13: note:  
			private job() {}
		            ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #8   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         movi #0, ebx   
12 [0xc]:         rstore ebx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #9   
16 [0x10]:         loadval ebx   
17 [0x11]:         movi #0, adx   
19 [0x13]:         rmov adx, ebx   
20 [0x14]:         movi #0, ebx   
22 [0x16]:         rstore ebx   
23 [0x17]:         movl 0   
24 [0x18]:         movn #10   
26 [0x1a]:         loadval ebx   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]:         movi #0, ebx   
32 [0x20]:         rstore ebx   
33 [0x21]:         movl 0   
34 [0x22]:         movn #11   
36 [0x24]:         loadval ebx   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         rstore ebx   
43 [0x2b]:         movl 0   
44 [0x2c]:         movn #12   
46 [0x2e]:         loadval ebx   
47 [0x2f]:         movi #0, adx   
49 [0x31]:         rmov adx, ebx   
50 [0x32]:         movi #0, ebx   
52 [0x34]:         rstore ebx   
53 [0x35]:         movl 0   
54 [0x36]:         movn #14   
56 [0x38]:         loadval ebx   
57 [0x39]:         movi #0, adx   
59 [0x3b]:         rmov adx, ebx   
60 [0x3c]:         movi #0, ebx   
62 [0x3e]:         rstore ebx   
63 [0x3f]:         movl 0   
64 [0x40]:         movn #15   
66 [0x42]:         loadval ebx   
67 [0x43]:         movi #0, adx   
69 [0x45]:         rmov adx, ebx   
70 [0x46]:         movi #0, ebx   
72 [0x48]:         rstore ebx   
73 [0x49]:         movl 0   
74 [0x4a]:         movn #16   
76 [0x4c]:         loadval ebx   
77 [0x4d]:         movi #0, adx   
79 [0x4f]:         rmov adx, ebx   
80 [0x50]:         movi #0, ebx   
82 [0x52]:         rstore ebx   
83 [0x53]:         movl 0   
84 [0x54]:         movn #17   
86 [0x56]:         loadval ebx   
87 [0x57]:         movi #0, adx   
89 [0x59]:         rmov adx, ebx   
90 [0x5a]:         movg @29 // @std.io.task#job_state   
91 [0x5b]:         movn #0   
93 [0x5d]:         pushobj   
94 [0x5e]:         movl 0   
95 [0x5f]:         movn #18   
97 [0x61]:         popobj   
98 [0x62]:         new_class @90 // std#list<std.io#thread>   
99 [0x63]:         dup    
100 [0x64]:         call @3536 // <std#list<std.io#thread>.list>   
101 [0x65]:         movl 0   
102 [0x66]:         movn #20   
104 [0x68]:         popobj   
105 [0x69]:         pushl 0   
106 [0x6a]:         call @2262 // <std#_object_._object_>   
107 [0x6b]:         ret   


constructor: std.io.task#job.job[2102] params(1) in file: lib\support\0.2.805/io//task//job.sharp:9:5: note:  
			job(name : string) {
		    ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #8   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         movi #0, ebx   
12 [0xc]:         rstore ebx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #9   
16 [0x10]:         loadval ebx   
17 [0x11]:         movi #0, adx   
19 [0x13]:         rmov adx, ebx   
20 [0x14]:         movi #0, ebx   
22 [0x16]:         rstore ebx   
23 [0x17]:         movl 0   
24 [0x18]:         movn #10   
26 [0x1a]:         loadval ebx   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]:         movi #0, ebx   
32 [0x20]:         rstore ebx   
33 [0x21]:         movl 0   
34 [0x22]:         movn #11   
36 [0x24]:         loadval ebx   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         rstore ebx   
43 [0x2b]:         movl 0   
44 [0x2c]:         movn #12   
46 [0x2e]:         loadval ebx   
47 [0x2f]:         movi #0, adx   
49 [0x31]:         rmov adx, ebx   
50 [0x32]:         movi #0, ebx   
52 [0x34]:         rstore ebx   
53 [0x35]:         movl 0   
54 [0x36]:         movn #14   
56 [0x38]:         loadval ebx   
57 [0x39]:         movi #0, adx   
59 [0x3b]:         rmov adx, ebx   
60 [0x3c]:         movi #0, ebx   
62 [0x3e]:         rstore ebx   
63 [0x3f]:         movl 0   
64 [0x40]:         movn #15   
66 [0x42]:         loadval ebx   
67 [0x43]:         movi #0, adx   
69 [0x45]:         rmov adx, ebx   
70 [0x46]:         movi #0, ebx   
72 [0x48]:         rstore ebx   
73 [0x49]:         movl 0   
74 [0x4a]:         movn #16   
76 [0x4c]:         loadval ebx   
77 [0x4d]:         movi #0, adx   
79 [0x4f]:         rmov adx, ebx   
80 [0x50]:         movi #0, ebx   
82 [0x52]:         rstore ebx   
83 [0x53]:         movl 0   
84 [0x54]:         movn #17   
86 [0x56]:         loadval ebx   
87 [0x57]:         movi #0, adx   
89 [0x59]:         rmov adx, ebx   
90 [0x5a]:         movg @29 // @std.io.task#job_state   
91 [0x5b]:         movn #0   
93 [0x5d]:         pushobj   
94 [0x5e]:         movl 0   
95 [0x5f]:         movn #18   
97 [0x61]:         popobj   
98 [0x62]:         new_class @90 // std#list<std.io#thread>   
99 [0x63]:         dup    
100 [0x64]:         call @3536 // <std#list<std.io#thread>.list>   
101 [0x65]:         movl 0   
102 [0x66]:         movn #20   
104 [0x68]:         popobj   
105 [0x69]:         pushl 0   
106 [0x6a]:         call @2262 // <std#_object_._object_>   
107 [0x6b]: line: 10 movl 1   
108 [0x6c]:          pushobj   
109 [0x6d]:          movl 0   
110 [0x6e]:          movn #5   
112 [0x70]:          popobj   
113 [0x71]: line: 11 movg @23 // @std.io.task#__srt_global   
114 [0x72]:          movn #5   
116 [0x74]:          _lck    
117 [0x75]: line: 12 movg @25 // @std.io.task#job   
118 [0x76]:          movn #0   
120 [0x78]:          movi #0, adx   
122 [0x7a]:          chklen adx   
123 [0x7b]:          iaload ebx, adx   
124 [0x7c]:          movr egx, ebx   
125 [0x7d]:          inc ebx   
126 [0x7e]:          movi #0, adx   
128 [0x80]:          rmov adx, ebx   
129 [0x81]:          rstore egx   
130 [0x82]:          movl 0   
131 [0x83]:          movn #15   
133 [0x85]:          loadval ebx   
134 [0x86]:          movi #0, adx   
136 [0x88]:          rmov adx, ebx   
137 [0x89]:          movg @23 // @std.io.task#__srt_global   
138 [0x8a]:          movn #5   
140 [0x8c]:          _ulck   
141 [0x8d]:          ret   


function: std.io.task#job.execute_async[2103] params(0) in file: lib\support\0.2.805/io//task//job.sharp:16:15: note:  
			protected def execute_async() : var {
		              ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          pushobj   
4 [0x4]:          movg @29 // @std.io.task#job_state   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @1931 // <std#_enum_.operator==>   
9 [0x9]:          loadval ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 85   
12 [0xc]: line: 18 movl 0   
13 [0xd]:          pushobj   
14 [0xe]:          movl 0   
15 [0xf]:          movn #19   
17 [0x11]:          movn #0   
19 [0x13]:          popobj   
20 [0x14]: line: 19 call @3480 // <std#time.mills_time>   
21 [0x15]:          movl 0   
22 [0x16]:          movn #19   
24 [0x18]:          movn #1   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]: line: 21 movl 0   
31 [0x1f]:          movn #4   
33 [0x21]:          pushobj   
34 [0x22]:          call @2197 // <std.io#thread.is_active>   
35 [0x23]:          loadval ebx   
36 [0x24]:          not ebx, ebx   
37 [0x25]:          movr cmt, ebx   
38 [0x26]:          jne 74   
39 [0x27]: line: 22 movl 0   
40 [0x28]:          movn #4   
42 [0x2a]:          pushobj   
43 [0x2b]:          movi #1, ebx   
45 [0x2d]:          newobj_arry ebx   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #19   
49 [0x31]:          pushobj   
50 [0x32]:          movsl #-1   
51 [0x33]:          movn #0   
53 [0x35]:          popobj   
54 [0x36]:          call @2171 // <std.io#thread.start>   
55 [0x37]:          movg @34 // @std.io#thread_result   
56 [0x38]:          movn #0   
58 [0x3a]:          pushobj   
59 [0x3b]:          call @1929 // <std#_enum_.operator!=>   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          movr cmt, ebx   
62 [0x3e]:          jne 73   
63 [0x3f]: line: 24 movl 0   
64 [0x40]:          movn #19   
66 [0x42]:          movn #0   
68 [0x44]:          del   
69 [0x45]: line: 25 movi #2, ebx   
71 [0x47]:          return_val ebx   
72 [0x48]:          ret   
73 [0x49]:          nop   
74 [0x4a]:          nop   
75 [0x4b]: line: 29 movl 0   
76 [0x4c]:          movn #19   
78 [0x4e]:          pushobj   
79 [0x4f]:          call @2258 // <std#_object_.notify>   
80 [0x50]: line: 30 movi #0, ebx   
82 [0x52]:          return_val ebx   
83 [0x53]:          ret   
84 [0x54]:          jmp @101   
85 [0x55]:          movl 0   
86 [0x56]:          movn #18   
88 [0x58]:          pushobj   
89 [0x59]:          movg @29 // @std.io.task#job_state   
90 [0x5a]:          movn #1   
92 [0x5c]:          pushobj   
93 [0x5d]:          call @1931 // <std#_enum_.operator==>   
94 [0x5e]:          loadval ebx   
95 [0x5f]:          movr cmt, ebx   
96 [0x60]:          jne 101   
97 [0x61]: line: 32 movi #1, ebx   
99 [0x63]:          return_val ebx   
100 [0x64]:          ret   
101 [0x65]:          nop   
102 [0x66]: line: 35 movi #2, ebx   
104 [0x68]:          return_val ebx   
105 [0x69]:          ret   


function: std.io.task#job.cancel[2104] params(0) in file: lib\support\0.2.805/io//task//job.sharp:38:12: note:  
			public def cancel() {
		           ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 40 movl 0   
3 [0x3]:          movn #18   
5 [0x5]:          pushobj   
6 [0x6]:          movg @29 // @std.io.task#job_state   
7 [0x7]:          movn #1   
9 [0x9]:          pushobj   
10 [0xa]:          call @1931 // <std#_enum_.operator==>   
11 [0xb]:          loadval ebx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 50   
14 [0xe]: line: 41 movg @29 // @std.io.task#job_state   
15 [0xf]:          movn #3   
17 [0x11]:          pushobj   
18 [0x12]:          movl 0   
19 [0x13]:          movn #18   
21 [0x15]:          popobj   
22 [0x16]: line: 43 call @2178 // <std.io#thread.current>   
23 [0x17]:          movl 0   
24 [0x18]:          movn #4   
26 [0x1a]:          pushobj   
27 [0x1b]:          itest ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 45   
31 [0x1f]: line: 44 movl 0   
32 [0x20]:          movn #4   
34 [0x22]:          pushobj   
35 [0x23]:          call @2177 // <std.io#thread.interrupt>   
36 [0x24]:          pop   
37 [0x25]: line: 45 movg @23 // @std.io.task#__srt_global   
38 [0x26]:          movn #5   
40 [0x28]:          pushobj   
41 [0x29]:          movl 0   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @2142 // <std.io.task#job_master.cleanup_job>   
44 [0x2c]:          jmp @49   
45 [0x2d]: line: 48 new_class @24 // std.io.task#cancellation_exception   
46 [0x2e]:          dup    
47 [0x2f]:          call @2100 // <std.io.task#cancellation_exception.cancellation_exception>   
48 [0x30]:          throw    
49 [0x31]:          nop   
50 [0x32]:          nop   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]:          ret   


function: std.io.task#job.cancel_future[2105] params(0) in file: lib\support\0.2.805/io//task//job.sharp:54:15: note:  
			protected def cancel_future() {
		              ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 movl 0   
3 [0x3]:          movn #14   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 37   
11 [0xb]: line: 57 movl 0   
12 [0xc]:          movn #13   
14 [0xe]:          smovr_3 fp+1   
15 [0xf]: line: 58 movl 1   
16 [0x10]:          pushobj   
17 [0x11]:          pushnull    
18 [0x12]:          itest ebx   
19 [0x13]:          not ebx, ebx   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 37   
22 [0x16]: line: 59 movl 1   
23 [0x17]:          pushobj   
24 [0x18]:          call @2104 // <std.io.task#job.cancel>   
25 [0x19]: line: 60 movg @23 // @std.io.task#__srt_global   
26 [0x1a]:          movn #5   
28 [0x1c]:          pushobj   
29 [0x1d]:          movl 1   
30 [0x1e]:          pushobj   
31 [0x1f]:          call @2142 // <std.io.task#job_master.cleanup_job>   
32 [0x20]: line: 62 movl 1   
33 [0x21]:          movn #13   
35 [0x23]:          smovr_3 fp+1   
36 [0x24]:          jmp @15   
37 [0x25]:          nop   
38 [0x26]:          movl 0   
39 [0x27]:          _ulck   
40 [0x28]:          ret   


function: std.io.task#job.join[2106] params(0) in file: lib\support\0.2.805/io//task//job.sharp:68:12: note:  
			public def join() {
		           ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #16   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          skpe ebx // pc = 29   
8 [0x8]:          movl 0   
9 [0x9]:          movn #18   
11 [0xb]:          pushobj   
12 [0xc]:          movg @29 // @std.io.task#job_state   
13 [0xd]:          movn #3   
15 [0xf]:          pushobj   
16 [0x10]:          call @1931 // <std#_enum_.operator==>   
17 [0x11]:          loadval ebx   
18 [0x12]:          skpe ebx // pc = 29   
19 [0x13]:          movl 0   
20 [0x14]:          movn #18   
22 [0x16]:          pushobj   
23 [0x17]:          movg @29 // @std.io.task#job_state   
24 [0x18]:          movn #2   
26 [0x1a]:          pushobj   
27 [0x1b]:          call @1931 // <std#_enum_.operator==>   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 32   
31 [0x1f]: line: 72 ret   
32 [0x20]:          nop   
33 [0x21]: line: 74 movi #0, ebx   
35 [0x23]:          smovr_2 ebx, fp+1   
36 [0x24]: line: 75 movl 0   
37 [0x25]:          _lck    
38 [0x26]: line: 76 movl 0   
39 [0x27]:          pushobj   
40 [0x28]:          call @2116 // <std.io.task#job.is_finished>   
41 [0x29]:          loadval ebx   
42 [0x2a]:          not ebx, ebx   
43 [0x2b]:          movr cmt, ebx   
44 [0x2c]:          jne 54   
45 [0x2d]: line: 77 movi #1, ebx   
47 [0x2f]:          smovr_2 ebx, fp+1   
48 [0x30]: line: 78 movl 0   
49 [0x31]:          movn #20   
51 [0x33]:          pushobj   
52 [0x34]:          call @2178 // <std.io#thread.current>   
53 [0x35]:          call @3550 // <std#list<std.io#thread>.add>   
54 [0x36]:          nop   
55 [0x37]:          movl 0   
56 [0x38]:          _ulck   
57 [0x39]: line: 82 loadl ebx, fp+1   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 61   
60 [0x3c]: line: 83 call @2180 // <std.io#thread.wait>   
61 [0x3d]:          nop   
62 [0x3e]:          ret   


function: std.io.task#job.get_state[2107] params(0) in file: lib\support\0.2.805/io//task//job.sharp:87:12: note:  
			public def get_state() := state;
		           ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io.task#job.get_name[2108] params(0) in file: lib\support\0.2.805/io//task//job.sharp:88:12: note:  
			public def get_name() := name;
		           ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #5   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io.task#job.get_id[2109] params(0) in file: lib\support\0.2.805/io//task//job.sharp:89:12: note:  
			public def get_id() := id;
		           ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


overload function: std.io.task#job.operator=[2110] params(1) in file: lib\support\0.2.805/io//task//job.sharp:91:15: note:  
			protected def operator=(block: ()()) {
		              ^

0 [0x0]: line: 92 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          loadval ebx   
6 [0x6]:          movi #0, adx   
8 [0x8]:          rmov adx, ebx   
9 [0x9]:          ret   


overload function: std.io.task#job.operator=[2111] params(1) in file: lib\support\0.2.805/io//task//job.sharp:95:15: note:  
			protected def operator=(block: (args : object[])()) {
		              ^

0 [0x0]: line: 96 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          movi #0, adx   
8 [0x8]:          rmov adx, ebx   
9 [0x9]:          ret   


overload function: std.io.task#job.operator=[2112] params(1) in file: lib\support\0.2.805/io//task//job.sharp:99:15: note:  
			protected def operator=(block: (deferred : object, args : object[])()) {
		              ^

0 [0x0]: line: 100 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #2   
5 [0x5]:           loadval ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           ret   


overload function: std.io.task#job.operator=[2113] params(1) in file: lib\support\0.2.805/io//task//job.sharp:103:15: note:  
			protected def operator=(block: (deferred : object)()) {
		              ^

0 [0x0]: line: 104 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #3   
5 [0x5]:           loadval ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           ret   


function: std.io.task#job.job_main[2114] params(1) in file: lib\support\0.2.805/io//task//job.sharp:107:22: note:  
			protected static def job_main(args : object[]) : var {
		                     ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movi #0, ebx   
4 [0x4]:           popobj2    
5 [0x5]:           movr adx, ebx   
6 [0x6]:           chklen adx   
7 [0x7]:           movnd adx   
8 [0x8]:           movi #27, cmt   
10 [0xa]:           cast cmt   
11 [0xb]:           smovr_3 fp+1   
12 [0xc]: line: 110 movl 1   
13 [0xd]: line: 111 pushobj   
14 [0xe]:           call @2257 // <std#_object_.wait>   
15 [0xf]: line: 113 movl 1   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           pushnull    
20 [0x14]:           itest ebx   
21 [0x15]:           not ebx, ebx   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 82   
24 [0x18]: line: 114 movl 1   : try start: try block start
25 [0x19]: line: 115 movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           call @2115 // <std.io.task#job.execute>   
29 [0x1d]:           jmp @77   : try block end
30 [0x1e]: line: 117 movg @29 // @std.io.task#job_state   : catch(std.io.task#cancellation_exception)
31 [0x1f]:           movn #3   
33 [0x21]:           pushobj   
34 [0x22]:           movl 1   
35 [0x23]:           movn #0   
37 [0x25]:           movn #18   
39 [0x27]:           popobj   
40 [0x28]: line: 118 movg @23 // @std.io.task#__srt_global   
41 [0x29]:           movn #5   
43 [0x2b]:           pushobj   
44 [0x2c]:           movl 1   
45 [0x2d]:           movn #0   
47 [0x2f]:           pushobj   
48 [0x30]:           call @2142 // <std.io.task#job_master.cleanup_job>   
49 [0x31]:           jmp @77   
50 [0x32]: line: 120 movg @29 // @std.io.task#job_state   : catch(std#error)
51 [0x33]:           movn #3   
53 [0x35]:           pushobj   
54 [0x36]:           movl 1   
55 [0x37]:           movn #0   
57 [0x39]:           movn #18   
59 [0x3b]:           popobj   
60 [0x3c]: line: 121 movg @23 // @std.io.task#__srt_global   
61 [0x3d]:           movn #5   
63 [0x3f]:           pushobj   
64 [0x40]:           movl 1   
65 [0x41]:           movn #0   
67 [0x43]:           pushobj   
68 [0x44]:           call @2142 // <std.io.task#job_master.cleanup_job>   
69 [0x45]: line: 122 movl 1   
70 [0x46]:           movn #0   
72 [0x48]:           del   
73 [0x49]: line: 123 movl 2   
74 [0x4a]:           pushobj   
75 [0x4b]:           throw    
76 [0x4c]:           jmp @77   
77 [0x4d]:           nop   : try end
78 [0x4e]: line: 126 movl 1   
79 [0x4f]:           movn #0   
81 [0x51]:           del   
82 [0x52]:           nop   
83 [0x53]:           jmp @12   
84 [0x54]: line: 130 movi #0, ebx   
86 [0x56]:           return_val ebx   
87 [0x57]:           ret   


function: std.io.task#job.execute[2115] params(0) in file: lib\support\0.2.805/io//task//job.sharp:133:15: note:  
			protected def execute() {
		              ^

0 [0x0]: line: 134 call @3480 // <std#time.mills_time>   
1 [0x1]:           movl 0   
2 [0x2]:           movn #10   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 135 movg @29 // @std.io.task#job_state   
9 [0x9]:           movn #1   
11 [0xb]:           pushobj   
12 [0xc]:           movl 0   
13 [0xd]:           movn #18   
15 [0xf]:           popobj   
16 [0x10]: line: 136 movl 0   
17 [0x11]:           movn #14   
19 [0x13]:           movi #0, adx   
21 [0x15]:           chklen adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 28   
25 [0x19]: line: 137 movl 0   
26 [0x1a]:           pushobj   
27 [0x1b]:           call @2120 // <std.io.task#job.reschedule>   
28 [0x1c]:           nop   
29 [0x1d]: line: 139 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           chklen adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 48   
38 [0x26]: line: 140 movl 0   
39 [0x27]:           movn #0   
41 [0x29]:           movi #0, adx   
43 [0x2b]:           iaload ebx, adx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           loadval ebx   
46 [0x2e]:           calld ebx   
47 [0x2f]:           jmp @120   
48 [0x30]:           movl 0   
49 [0x31]:           movn #1   
51 [0x33]:           movi #0, adx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 71   
57 [0x39]: line: 141 movl 0   
58 [0x3a]:           movn #1   
60 [0x3c]:           movi #0, adx   
62 [0x3e]:           iaload ebx, adx   
63 [0x3f]:           rstore ebx   
64 [0x40]:           movl 0   
65 [0x41]:           movn #6   
67 [0x43]:           pushobj   
68 [0x44]:           smov ebx, sp+[-1]   
69 [0x45]:           calld ebx   
70 [0x46]:           jmp @120   
71 [0x47]:           movl 0   
72 [0x48]:           movn #2   
74 [0x4a]:           movi #0, adx   
76 [0x4c]:           chklen adx   
77 [0x4d]:           iaload ebx, adx   
78 [0x4e]:           movr cmt, ebx   
79 [0x4f]:           jne 98   
80 [0x50]: line: 142 movl 0   
81 [0x51]:           movn #2   
83 [0x53]:           movi #0, adx   
85 [0x55]:           iaload ebx, adx   
86 [0x56]:           rstore ebx   
87 [0x57]:           movl 0   
88 [0x58]:           movn #7   
90 [0x5a]:           pushobj   
91 [0x5b]:           movl 0   
92 [0x5c]:           movn #6   
94 [0x5e]:           pushobj   
95 [0x5f]:           smov ebx, sp+[-2]   
96 [0x60]:           calld ebx   
97 [0x61]:           jmp @120   
98 [0x62]:           movl 0   
99 [0x63]:           movn #3   
101 [0x65]:           movi #0, adx   
103 [0x67]:           chklen adx   
104 [0x68]:           iaload ebx, adx   
105 [0x69]:           movr cmt, ebx   
106 [0x6a]:           jne 120   
107 [0x6b]: line: 143 movl 0   
108 [0x6c]:           movn #3   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           iaload ebx, adx   
113 [0x71]:           rstore ebx   
114 [0x72]:           movl 0   
115 [0x73]:           movn #7   
117 [0x75]:           pushobj   
118 [0x76]:           smov ebx, sp+[-1]   
119 [0x77]:           calld ebx   
120 [0x78]:           nop   
121 [0x79]: line: 146 movg @29 // @std.io.task#job_state   
122 [0x7a]:           movn #2   
124 [0x7c]:           pushobj   
125 [0x7d]:           movl 0   
126 [0x7e]:           movn #18   
128 [0x80]:           popobj   
129 [0x81]: line: 147 movg @23 // @std.io.task#__srt_global   
130 [0x82]:           movn #5   
132 [0x84]:           pushobj   
133 [0x85]:           movl 0   
134 [0x86]:           pushobj   
135 [0x87]:           call @2142 // <std.io.task#job_master.cleanup_job>   
136 [0x88]:           ret   


function: std.io.task#job.is_finished[2116] params(0) in file: lib\support\0.2.805/io//task//job.sharp:150:8: note:  
		    def is_finished() := state == completed || state == cancelled;
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @29 // @std.io.task#job_state   
5 [0x5]:           movn #2   
7 [0x7]:           pushobj   
8 [0x8]:           call @1931 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           skpe ebx // pc = 21   
11 [0xb]:           movl 0   
12 [0xc]:           movn #18   
14 [0xe]:           pushobj   
15 [0xf]:           movg @29 // @std.io.task#job_state   
16 [0x10]:           movn #3   
18 [0x12]:           pushobj   
19 [0x13]:           call @1931 // <std#_enum_.operator==>   
20 [0x14]:           loadval ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


function: std.io.task#job.is_active[2117] params(0) in file: lib\support\0.2.805/io//task//job.sharp:151:8: note:  
		    def is_active() := state == active;
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @29 // @std.io.task#job_state   
5 [0x5]:           movn #1   
7 [0x7]:           pushobj   
8 [0x8]:           call @1931 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: std.io.task#job.update_timeout[2118] params(1) in file: lib\support\0.2.805/io//task//job.sharp:153:15: note:  
		    public def update_timeout(tm: var) {
		              ^

0 [0x0]: line: 154 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #9   
5 [0x5]:           loadval ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           ret   


function: std.io.task#job.update_interval[2119] params(2) in file: lib\support\0.2.805/io//task//job.sharp:157:15: note:  
		    public def update_interval(tm: var, interval: time_unit) {
		              ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #14   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 15   
10 [0xa]: line: 159 new_class @6 // std#illegal_state_exception   
11 [0xb]:           dup    
12 [0xc]:           newstr @9 // cannot set update restart interval on non-recurring job   
13 [0xd]:           call @1947 // <std#illegal_state_exception.illegal_state_exception>   
14 [0xe]:           throw    
15 [0xf]:           nop   
16 [0x10]: line: 161 movl 0   
17 [0x11]:           movn #18   
19 [0x13]:           pushobj   
20 [0x14]:           movg @29 // @std.io.task#job_state   
21 [0x15]:           movn #1   
23 [0x17]:           pushobj   
24 [0x18]:           call @1931 // <std#_enum_.operator==>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 35   
28 [0x1c]: line: 162 movl 0   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @2105 // <std.io.task#job.cancel_future>   
31 [0x1f]: line: 163 movl 0   
32 [0x20]:           movn #13   
34 [0x22]:           del   
35 [0x23]:           nop   
36 [0x24]: line: 166 movl 2   
37 [0x25]:           pushobj   
38 [0x26]:           movg @73 // @std#time_unit   
39 [0x27]:           movn #3   
41 [0x29]:           pushobj   
42 [0x2a]:           call @1931 // <std#_enum_.operator==>   
43 [0x2b]:           loadval ebx   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 57   
46 [0x2e]: line: 167 loadl ebx, fp+1   
47 [0x2f]:           rstore ebx   
48 [0x30]:           call @3478 // <std#time.nano_to_mills>   
49 [0x31]:           movl 0   
50 [0x32]:           movn #11   
52 [0x34]:           loadval ebx   
53 [0x35]:           movi #0, adx   
55 [0x37]:           rmov adx, ebx   
56 [0x38]:           jmp @126   
57 [0x39]:           movl 2   
58 [0x3a]:           pushobj   
59 [0x3b]:           movg @73 // @std#time_unit   
60 [0x3c]:           movn #2   
62 [0x3e]:           pushobj   
63 [0x3f]:           call @1931 // <std#_enum_.operator==>   
64 [0x40]:           loadval ebx   
65 [0x41]:           movr cmt, ebx   
66 [0x42]:           jne 82   
67 [0x43]: line: 169 loadl ebx, fp+1   
68 [0x44]:           rstore ebx   
69 [0x45]:           movi #1000, ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           div ecx, ebx -> ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           movl 0   
75 [0x4b]:           movn #11   
77 [0x4d]:           loadval ebx   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           rmov adx, ebx   
81 [0x51]:           jmp @126   
82 [0x52]:           movl 2   
83 [0x53]:           pushobj   
84 [0x54]:           movg @73 // @std#time_unit   
85 [0x55]:           movn #1   
87 [0x57]:           pushobj   
88 [0x58]:           call @1931 // <std#_enum_.operator==>   
89 [0x59]:           loadval ebx   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 102   
92 [0x5c]: line: 171 loadl ebx, fp+1   
93 [0x5d]:           rstore ebx   
94 [0x5e]:           movl 0   
95 [0x5f]:           movn #11   
97 [0x61]:           loadval ebx   
98 [0x62]:           movi #0, adx   
100 [0x64]:           rmov adx, ebx   
101 [0x65]:           jmp @126   
102 [0x66]:           movl 2   
103 [0x67]:           pushobj   
104 [0x68]:           movg @73 // @std#time_unit   
105 [0x69]:           movn #0   
107 [0x6b]:           pushobj   
108 [0x6c]:           call @1931 // <std#_enum_.operator==>   
109 [0x6d]:           loadval ebx   
110 [0x6e]:           movr cmt, ebx   
111 [0x6f]:           jne 126   
112 [0x70]: line: 173 loadl ebx, fp+1   
113 [0x71]:           rstore ebx   
114 [0x72]:           movi #1000, ebx   
116 [0x74]:           loadval ecx   
117 [0x75]:           mul ecx, ebx -> ebx   
118 [0x76]:           rstore ebx   
119 [0x77]:           movl 0   
120 [0x78]:           movn #11   
122 [0x7a]:           loadval ebx   
123 [0x7b]:           movi #0, adx   
125 [0x7d]:           rmov adx, ebx   
126 [0x7e]:           nop   
127 [0x7f]: line: 176 movl 0   
128 [0x80]:           movn #18   
130 [0x82]:           pushobj   
131 [0x83]:           movg @29 // @std.io.task#job_state   
132 [0x84]:           movn #1   
134 [0x86]:           pushobj   
135 [0x87]:           call @1931 // <std#_enum_.operator==>   
136 [0x88]:           loadval ebx   
137 [0x89]:           movr cmt, ebx   
138 [0x8a]:           jne 142   
139 [0x8b]: line: 177 movl 0   
140 [0x8c]:           pushobj   
141 [0x8d]:           call @2120 // <std.io.task#job.reschedule>   
142 [0x8e]:           nop   
143 [0x8f]:           ret   


function: std.io.task#job.reschedule[2120] params(0) in file: lib\support\0.2.805/io//task//job.sharp:180:18: note:  
		    protected def reschedule() {
		                 ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #11   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           add ecx, ebx -> ebx   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @3480 // <std#time.mills_time>   
19 [0x13]:           loadval ebx   
20 [0x14]:           loadval ecx   
21 [0x15]:           sub ecx, ebx -> ebx   
22 [0x16]:           smovr_2 ebx, fp+1   
23 [0x17]: line: 183 call @2160 // <std.io.task#task.builder>   
24 [0x18]:           movl 0   
25 [0x19]:           movn #5   
27 [0x1b]:           pushobj   
28 [0x1c]:           call @2126 // <std.io.task#job_builder.with_name>   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #11   
32 [0x20]:           movi #0, adx   
34 [0x22]:           chklen adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movg @73 // @std#time_unit   
38 [0x26]:           movn #1   
40 [0x28]:           pushobj   
41 [0x29]:           call @2125 // <std.io.task#job_builder.recurring>   
42 [0x2a]:           popobj2    
43 [0x2b]:           smovr_3 fp+2   
44 [0x2c]: line: 187 movl 0   
45 [0x2d]:           movn #6   
47 [0x2f]:           sizeof ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           sub ecx, ebx -> ebx   
53 [0x35]:           newobj_arry ebx   
54 [0x36]:           popobj2    
55 [0x37]:           smovr_3 fp+3   
56 [0x38]: line: 188 movi #0, ebx   
58 [0x3a]:           smovr_2 ebx, fp+4   
59 [0x3b]: line: 189 movi #1, ebx   
61 [0x3d]:           smovr_2 ebx, fp+5   
62 [0x3e]:           loadl ebx, fp+5   
63 [0x3f]:           rstore ebx   
64 [0x40]:           movl 0   
65 [0x41]:           movn #6   
67 [0x43]:           sizeof ebx   
68 [0x44]:           loadval ecx   
69 [0x45]:           lt ecx, ebx   
70 [0x46]:           movr ebx, cmt   
71 [0x47]:           movr cmt, ebx   
72 [0x48]:           jne 100   
73 [0x49]: line: 190 movl 0   
74 [0x4a]:           movn #6   
76 [0x4c]:           pushobj   
77 [0x4d]:           loadl ebx, fp+5   
78 [0x4e]:           popobj2    
79 [0x4f]:           movr adx, ebx   
80 [0x50]:           chklen adx   
81 [0x51]:           movnd adx   
82 [0x52]:           pushobj   
83 [0x53]:           movl 3   
84 [0x54]:           pushobj   
85 [0x55]:           loadl ebx, fp+4   
86 [0x56]:           movr egx, ebx   
87 [0x57]:           inc ebx   
88 [0x58]:           smovr_2 ebx, fp+4   
89 [0x59]:           movr ebx, egx   
90 [0x5a]:           popobj2    
91 [0x5b]:           movr adx, ebx   
92 [0x5c]:           chklen adx   
93 [0x5d]:           movnd adx   
94 [0x5e]:           popobj   
95 [0x5f]:           loadl ebx, fp+5   
96 [0x60]:           movr egx, ebx   
97 [0x61]:           inc ebx   
98 [0x62]:           smovr_2 ebx, fp+5   
99 [0x63]:           jmp @62   
100 [0x64]: line: 193 movl 0   
101 [0x65]:           movn #17   
103 [0x67]:           movi #0, adx   
105 [0x69]:           chklen adx   
106 [0x6a]:           iaload ebx, adx   
107 [0x6b]:           movr cmt, ebx   
108 [0x6c]:           jne 113   
109 [0x6d]: line: 194 movl 2   
110 [0x6e]:           pushobj   
111 [0x6f]:           call @2129 // <std.io.task#job_builder.long_term>   
112 [0x70]:           pop   
113 [0x71]:           nop   
114 [0x72]: line: 195 movl 2   
115 [0x73]:           pushobj   
116 [0x74]:           movl 3   
117 [0x75]:           pushobj   
118 [0x76]:           call @2127 // <std.io.task#job_builder.with_args>   
119 [0x77]:           pop   
120 [0x78]: line: 197 movl 0   
121 [0x79]:           movn #0   
123 [0x7b]:           movi #0, adx   
125 [0x7d]:           chklen adx   
126 [0x7e]:           iaload ebx, adx   
127 [0x7f]:           movr cmt, ebx   
128 [0x80]:           jne 147   
129 [0x81]: line: 198 movl 0   
130 [0x82]:           movn #0   
132 [0x84]:           movi #0, adx   
134 [0x86]:           chklen adx   
135 [0x87]:           iaload ebx, adx   
136 [0x88]:           rstore ebx   
137 [0x89]:           movl 2   
138 [0x8a]:           movn #1   
140 [0x8c]:           movn #0   
142 [0x8e]:           loadval ebx   
143 [0x8f]:           movi #0, adx   
145 [0x91]:           rmov adx, ebx   
146 [0x92]:           jmp @227   
147 [0x93]:           movl 0   
148 [0x94]:           movn #1   
150 [0x96]:           movi #0, adx   
152 [0x98]:           chklen adx   
153 [0x99]:           iaload ebx, adx   
154 [0x9a]:           movr cmt, ebx   
155 [0x9b]:           jne 174   
156 [0x9c]: line: 199 movl 0   
157 [0x9d]:           movn #1   
159 [0x9f]:           movi #0, adx   
161 [0xa1]:           chklen adx   
162 [0xa2]:           iaload ebx, adx   
163 [0xa3]:           rstore ebx   
164 [0xa4]:           movl 2   
165 [0xa5]:           movn #1   
167 [0xa7]:           movn #1   
169 [0xa9]:           loadval ebx   
170 [0xaa]:           movi #0, adx   
172 [0xac]:           rmov adx, ebx   
173 [0xad]:           jmp @227   
174 [0xae]:           movl 0   
175 [0xaf]:           movn #2   
177 [0xb1]:           movi #0, adx   
179 [0xb3]:           chklen adx   
180 [0xb4]:           iaload ebx, adx   
181 [0xb5]:           movr cmt, ebx   
182 [0xb6]:           jne 201   
183 [0xb7]: line: 200 movl 0   
184 [0xb8]:           movn #2   
186 [0xba]:           movi #0, adx   
188 [0xbc]:           chklen adx   
189 [0xbd]:           iaload ebx, adx   
190 [0xbe]:           rstore ebx   
191 [0xbf]:           movl 2   
192 [0xc0]:           movn #1   
194 [0xc2]:           movn #2   
196 [0xc4]:           loadval ebx   
197 [0xc5]:           movi #0, adx   
199 [0xc7]:           rmov adx, ebx   
200 [0xc8]:           jmp @227   
201 [0xc9]:           movl 0   
202 [0xca]:           movn #3   
204 [0xcc]:           movi #0, adx   
206 [0xce]:           chklen adx   
207 [0xcf]:           iaload ebx, adx   
208 [0xd0]:           movr cmt, ebx   
209 [0xd1]:           jne 227   
210 [0xd2]: line: 201 movl 0   
211 [0xd3]:           movn #3   
213 [0xd5]:           movi #0, adx   
215 [0xd7]:           chklen adx   
216 [0xd8]:           iaload ebx, adx   
217 [0xd9]:           rstore ebx   
218 [0xda]:           movl 2   
219 [0xdb]:           movn #1   
221 [0xdd]:           movn #3   
223 [0xdf]:           loadval ebx   
224 [0xe0]:           movi #0, adx   
226 [0xe2]:           rmov adx, ebx   
227 [0xe3]:           nop   
228 [0xe4]: line: 204 loadl ebx, fp+1   
229 [0xe5]:           rstore ebx   
230 [0xe6]:           movi #0, ebx   
232 [0xe8]:           loadval ecx   
233 [0xe9]:           gt ecx, ebx   
234 [0xea]:           movr ebx, cmt   
235 [0xeb]:           movr cmt, ebx   
236 [0xec]:           jne 243   
237 [0xed]: line: 205 movl 2   
238 [0xee]:           pushobj   
239 [0xef]:           loadl ebx, fp+1   
240 [0xf0]:           rstore ebx   
241 [0xf1]:           call @2124 // <std.io.task#job_builder.schedule>   
242 [0xf2]:           pop   
243 [0xf3]:           nop   
244 [0xf4]: line: 206 movl 0   
245 [0xf5]:           movn #8   
247 [0xf7]:           movi #0, adx   
249 [0xf9]:           chklen adx   
250 [0xfa]:           iaload ebx, adx   
251 [0xfb]:           movr cmt, ebx   
252 [0xfc]:           jne 265   
253 [0xfd]: line: 207 movl 2   
254 [0xfe]:           pushobj   
255 [0xff]:           movl 0   
256 [0x100]:           movn #9   
258 [0x102]:           movi #0, adx   
260 [0x104]:           chklen adx   
261 [0x105]:           iaload ebx, adx   
262 [0x106]:           rstore ebx   
263 [0x107]:           call @2123 // <std.io.task#job_builder.with_timeout>   
264 [0x108]:           pop   
265 [0x109]:           nop   
266 [0x10a]: line: 209 movl 2   
267 [0x10b]:           movn #1   
269 [0x10d]:           pushobj   
270 [0x10e]:           movl 0   
271 [0x10f]:           movn #13   
273 [0x111]:           popobj   
274 [0x112]: line: 210 movl 2   
275 [0x113]:           movn #0   
277 [0x115]:           pushobj   
278 [0x116]:           movl 2   
279 [0x117]:           movn #1   
281 [0x119]:           pushobj   
282 [0x11a]:           call @2140 // <std.io.task#job_master.start_job>   
283 [0x11b]:           ret   


constructor: std.io.task#job_builder.job_builder[2121] params(0) in file: lib\support\0.2.805/io//task//job_builder.sharp:6:21: note:  
			private job_builder() {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.io.task#job_builder.job_builder[2122] params(2) in file: lib\support\0.2.805/io//task//job_builder.sharp:8:23: note:  
			protected job_builder(scheduled_job : job, master : job_master) {
		                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 9 movl 1   
3 [0x3]:         pushobj   
4 [0x4]:         movl 0   
5 [0x5]:         movn #1   
7 [0x7]:         popobj   
8 [0x8]: line: 10 movl 2   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          popobj   
14 [0xe]: line: 12 movi #1, ebx   
16 [0x10]:          newobj_arry ebx   
17 [0x11]:          popobj2    
18 [0x12]:          smovr_3 fp+3   
19 [0x13]: line: 13 movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          pushobj   
23 [0x17]:          movl 3   
24 [0x18]:          pushobj   
25 [0x19]:          movi #0, ebx   
27 [0x1b]:          popobj2    
28 [0x1c]:          movr adx, ebx   
29 [0x1d]:          chklen adx   
30 [0x1e]:          movnd adx   
31 [0x1f]:          popobj   
32 [0x20]: line: 14 movl 3   
33 [0x21]:          pushobj   
34 [0x22]:          movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          movn #6   
39 [0x27]:          popobj   
40 [0x28]:          ret   


function: std.io.task#job_builder.with_timeout[2123] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:17:5: note:  
			def with_timeout(mills_time : var) : job_builder {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #16   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 16   
11 [0xb]: line: 19 new_class @6 // std#illegal_state_exception   
12 [0xc]:          dup    
13 [0xd]:          newstr @10 // cannot set a timeout on a job that's blocking the calling thread   
14 [0xe]:          call @1947 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 22 loadl ebx, fp+1   
18 [0x12]:          rstore ebx   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          movn #9   
24 [0x18]:          loadval ebx   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          rmov adx, ebx   
28 [0x1c]: line: 23 movi #1, ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          movn #8   
36 [0x24]:          loadval ebx   
37 [0x25]:          movi #0, adx   
39 [0x27]:          rmov adx, ebx   
40 [0x28]: line: 24 movl 0   
41 [0x29]:          returnobj   
42 [0x2a]:          ret   


function: std.io.task#job_builder.schedule[2124] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:27:5: note:  
			def schedule(future : var) : job_builder {
		    ^

0 [0x0]: line: 28 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          movn #12   
7 [0x7]:          loadval ebx   
8 [0x8]:          movi #0, adx   
10 [0xa]:          rmov adx, ebx   
11 [0xb]: line: 29 movl 0   
12 [0xc]:          returnobj   
13 [0xd]:          ret   


function: std.io.task#job_builder.recurring[2125] params(2) in file: lib\support\0.2.805/io//task//job_builder.sharp:32:5: note:  
			def recurring(tm : var, interval: time_unit) : job_builder {
		    ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #16   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 16   
11 [0xb]: line: 34 new_class @6 // std#illegal_state_exception   
12 [0xc]:          dup    
13 [0xd]:          newstr @11 // cannot set a job recurring that's blocking the calling thread   
14 [0xe]:          call @1947 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 37 movi #1, ebx   
19 [0x13]:          rstore ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          movn #14   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 38 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          rstore ebx   
35 [0x23]:          movl 2   
36 [0x24]:          pushobj   
37 [0x25]:          call @2119 // <std.io.task#job.update_interval>   
38 [0x26]: line: 39 movl 0   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std.io.task#job_builder.with_name[2126] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:42:5: note:  
			def with_name(job_name : string) : job_builder {
		    ^

0 [0x0]: line: 43 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          movn #5   
7 [0x7]:          popobj   
8 [0x8]: line: 44 movl 0   
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std.io.task#job_builder.with_args[2127] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:47:5: note:  
			def with_args(args : object[]) : job_builder {
		    ^

0 [0x0]: line: 48 movi #1, ebx   
2 [0x2]:          rstore ebx   
3 [0x3]:          movl 1   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          add ecx, ebx -> ebx   
7 [0x7]:          newobj_arry ebx   
8 [0x8]:          popobj2    
9 [0x9]:          smovr_3 fp+2   
10 [0xa]: line: 49 movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          movl 2   
15 [0xf]:          pushobj   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          popobj2    
19 [0x13]:          movr adx, ebx   
20 [0x14]:          chklen adx   
21 [0x15]:          movnd adx   
22 [0x16]:          popobj   
23 [0x17]: line: 51 movi #0, ebx   
25 [0x19]:          smovr_2 ebx, fp+3   
26 [0x1a]: line: 52 istorel -1, fp+5   
28 [0x1c]:          movl 1   
29 [0x1d]:          pushobj   
30 [0x1e]:          movl 6   
31 [0x1f]:          popobj   
32 [0x20]:          iaddl 1, fp@5   
34 [0x22]:          movl 6   
35 [0x23]:          sizeof ecx   
36 [0x24]:          loadl ebx, fp+5   
37 [0x25]:          lt ebx, ecx   
38 [0x26]:          jne 56   
39 [0x27]:          movnd ebx   
40 [0x28]:          pushobj   
41 [0x29]:          movl 4   
42 [0x2a]:          popobj   
43 [0x2b]: line: 53 movl 4   
44 [0x2c]:          pushobj   
45 [0x2d]:          movl 2   
46 [0x2e]:          pushobj   
47 [0x2f]:          loadl ebx, fp+3   
48 [0x30]:          inc ebx   
49 [0x31]:          smovr_2 ebx, fp+3   
50 [0x32]:          popobj2    
51 [0x33]:          movr adx, ebx   
52 [0x34]:          chklen adx   
53 [0x35]:          movnd adx   
54 [0x36]:          popobj   
55 [0x37]:          jmp @32   
56 [0x38]: line: 56 movl 2   
57 [0x39]:          pushobj   
58 [0x3a]:          movl 0   
59 [0x3b]:          movn #1   
61 [0x3d]:          movn #6   
63 [0x3f]:          popobj   
64 [0x40]: line: 57 movl 0   
65 [0x41]:          returnobj   
66 [0x42]:          ret   


function: std.io.task#job_builder.block[2128] params(0) in file: lib\support\0.2.805/io//task//job_builder.sharp:60:5: note:  
			def block() : job_builder {
		    ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #8   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 16   
11 [0xb]: line: 62 new_class @6 // std#illegal_state_exception   
12 [0xc]:          dup    
13 [0xd]:          newstr @12 // cannot block calling thread on job that has a timeout   
14 [0xe]:          call @1947 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 65 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          movn #14   
22 [0x16]:          movi #0, adx   
24 [0x18]:          chklen adx   
25 [0x19]:          iaload ebx, adx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 33   
28 [0x1c]: line: 66 new_class @6 // std#illegal_state_exception   
29 [0x1d]:          dup    
30 [0x1e]:          newstr @13 // cannot block calling thread on a recurring job   
31 [0x1f]:          call @1947 // <std#illegal_state_exception.illegal_state_exception>   
32 [0x20]:          throw    
33 [0x21]:          nop   
34 [0x22]: line: 69 movi #1, ebx   
36 [0x24]:          rstore ebx   
37 [0x25]:          movl 0   
38 [0x26]:          movn #1   
40 [0x28]:          movn #16   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          rmov adx, ebx   
46 [0x2e]: line: 70 movl 0   
47 [0x2f]:          returnobj   
48 [0x30]:          ret   


function: std.io.task#job_builder.long_term[2129] params(0) in file: lib\support\0.2.805/io//task//job_builder.sharp:73:5: note:  
			def long_term() : job_builder {
		    ^

0 [0x0]: line: 74 movi #1, ebx   
2 [0x2]:          rstore ebx   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          movn #17   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]: line: 75 movl 0   
13 [0xd]:          returnobj   
14 [0xe]:          ret   


overload function: std.io.task#job_builder.operator=[2130] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:78:12: note:  
			public def operator=(main: ()()) : job {
		           ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          loadl ebx, fp+1   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @2110 // <std.io.task#job.operator=>   
7 [0x7]: line: 80 movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          pushobj   
15 [0xf]:          call @2140 // <std.io.task#job_master.start_job>   
16 [0x10]: line: 81 movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          returnobj   
20 [0x14]:          ret   


overload function: std.io.task#job_builder.operator=[2131] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:84:12: note:  
			public def operator=(main: (args : object[])()) : job {
		           ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          loadl ebx, fp+1   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @2111 // <std.io.task#job.operator=>   
7 [0x7]: line: 86 movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          pushobj   
15 [0xf]:          call @2140 // <std.io.task#job_master.start_job>   
16 [0x10]: line: 87 movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          returnobj   
20 [0x14]:          ret   


overload function: std.io.task#job_builder.operator=[2132] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:90:18: note:  
		    protected def operator=(main: (deferred : object, args : object[])()) : job {
		                 ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          loadl ebx, fp+1   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @2112 // <std.io.task#job.operator=>   
7 [0x7]: line: 92 movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          movn #14   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 23   
18 [0x12]: line: 93 new_class @6 // std#illegal_state_exception   
19 [0x13]:          dup    
20 [0x14]:          newstr @14 // recurring jobs cannot be deferred tasks   
21 [0x15]:          call @1947 // <std#illegal_state_exception.illegal_state_exception>   
22 [0x16]:          throw    
23 [0x17]:          nop   
24 [0x18]: line: 96 movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          call @2140 // <std.io.task#job_master.start_job>   
33 [0x21]: line: 97 movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


overload function: std.io.task#job_builder.operator=[2133] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:100:18: note:  
		    protected def operator=(main: (deferred : object)()) : job {
		                 ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           loadl ebx, fp+1   
5 [0x5]:           rstore ebx   
6 [0x6]:           call @2113 // <std.io.task#job.operator=>   
7 [0x7]: line: 102 movl 0   
8 [0x8]:           movn #1   
10 [0xa]:           movn #14   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 23   
18 [0x12]: line: 103 new_class @6 // std#illegal_state_exception   
19 [0x13]:           dup    
20 [0x14]:           newstr @14 // recurring jobs cannot be deferred tasks   
21 [0x15]:           call @1947 // <std#illegal_state_exception.illegal_state_exception>   
22 [0x16]:           throw    
23 [0x17]:           nop   
24 [0x18]: line: 106 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #1   
31 [0x1f]:           pushobj   
32 [0x20]:           call @2140 // <std.io.task#job_master.start_job>   
33 [0x21]: line: 107 movl 0   
34 [0x22]:           movn #1   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: std.io.task#job_builder.get_job[2134] params(0) in file: lib\support\0.2.805/io//task//job_builder.sharp:110:12: note:  
			public def get_job() := scheduled_job;
		           ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


constructor: std.io.task#job_controller.job_controller[2135] params(0) in file: lib\support\0.2.805/io//task//job_controller.sharp:5:6: note:  
		class job_controller {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.io.task#job_master.job_master[2136] params(0) in file: lib\support\0.2.805/io//task//job_master.sharp:7:12: note:  
			job_master() {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 8 new_class @32 // std.io#thread_group   
3 [0x3]:         dup    
4 [0x4]:         new_class @69 // std#string   
5 [0x5]:         dup    
6 [0x6]:         newstr @15 // Long term jobs   
7 [0x7]:         call @3371 // <std#string.string>   
8 [0x8]:         movg @33 // @std.io#thread_priority   
9 [0x9]:         movn #0   
11 [0xb]:         pushobj   
12 [0xc]:         call @2202 // <std.io#thread_group.thread_group>   
13 [0xd]:         movl 0   
14 [0xe]:         movn #2   
16 [0x10]:         popobj   
17 [0x11]: line: 9 new_class @32 // std.io#thread_group   
18 [0x12]:         dup    
19 [0x13]:         new_class @69 // std#string   
20 [0x14]:         dup    
21 [0x15]:         newstr @16 // Short term jobs   
22 [0x16]:         call @3371 // <std#string.string>   
23 [0x17]:         movg @33 // @std.io#thread_priority   
24 [0x18]:         movn #2   
26 [0x1a]:         pushobj   
27 [0x1b]:         call @2202 // <std.io#thread_group.thread_group>   
28 [0x1c]:         movl 0   
29 [0x1d]:         movn #3   
31 [0x1f]:         popobj   
32 [0x20]: line: 10 new_class @91 // std#synced_list<std.io.task#job>   
33 [0x21]:          dup    
34 [0x22]:          call @3565 // <std#synced_list<std.io.task#job>.synced_list>   
35 [0x23]:          movl 0   
36 [0x24]:          movn #0   
38 [0x26]:          popobj   
39 [0x27]: line: 11 new_class @88 // std#hashtable<std.io#thread,std.io.task#job_controller>   
40 [0x28]:          dup    
41 [0x29]:          call @3520 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable>   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          ret   


overload function: std.io.task#job_master.operator=[2137] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:14:5: note:  
			def operator=(main: ()()) : job {
		    ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @2138 // <std.io.task#job_master.create_job>   
3 [0x3]:          popobj2    
4 [0x4]:          smovr_3 fp+2   
5 [0x5]: line: 16 movl 2   
6 [0x6]:          pushobj   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          rstore ebx   
9 [0x9]:          call @2110 // <std.io.task#job.operator=>   
10 [0xa]: line: 17 movl 0   
11 [0xb]:          pushobj   
12 [0xc]:          movl 2   
13 [0xd]:          pushobj   
14 [0xe]:          call @2140 // <std.io.task#job_master.start_job>   
15 [0xf]: line: 18 movl 2   
16 [0x10]:          returnobj   
17 [0x11]:          ret   


function: std.io.task#job_master.create_job[2138] params(0) in file: lib\support\0.2.805/io//task//job_master.sharp:21:15: note:  
			protected def create_job() := new job("job#${job.guid}");
		              ^

0 [0x0]: line: 21 new_class @25 // std.io.task#job   
1 [0x1]:          dup    
2 [0x2]:          new_class @69 // std#string   
3 [0x3]:          dup    
4 [0x4]:          newstr @0 // job#   
5 [0x5]:          call @3371 // <std#string.string>   
6 [0x6]:          movg @25 // @std.io.task#job   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          chklen adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          rstore ebx   
14 [0xe]:          call @3403 // <std#string.operator+>   
15 [0xf]:          call @2102 // <std.io.task#job.job>   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std.io.task#job_master.create_job[2139] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:23:15: note:  
			protected def create_job(name : string) := new job(name);
		              ^

0 [0x0]: line: 23 new_class @25 // std.io.task#job   
1 [0x1]:          dup    
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @2102 // <std.io.task#job.job>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: std.io.task#job_master.start_job[2140] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:25:15: note:  
			protected def start_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 27 movl 0   
3 [0x3]:          movn #4   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          not ebx, ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 23   
12 [0xc]: line: 28 call @2144 // <std.io.task#__srt_global.start_scheduler>   
13 [0xd]: line: 29 movi #1, ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #4   
19 [0x13]:          loadval ebx   
20 [0x14]:          movi #0, adx   
22 [0x16]:          rmov adx, ebx   
23 [0x17]:          nop   
24 [0x18]:          movl 0   
25 [0x19]:          _ulck   
26 [0x1a]: line: 33 movl 1   
27 [0x1b]:          movn #12   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          chklen adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          movr cmt, ebx   
34 [0x22]:          jne 55   
35 [0x23]: line: 34 movl 1   
36 [0x24]:          movn #12   
38 [0x26]:          movi #0, adx   
40 [0x28]:          chklen adx   
41 [0x29]:          iaload ebx, adx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          call @3480 // <std#time.mills_time>   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          loadval ecx   
46 [0x2e]:          add ecx, ebx -> ebx   
47 [0x2f]:          rstore ebx   
48 [0x30]:          movl 1   
49 [0x31]:          movn #12   
51 [0x33]:          loadval ebx   
52 [0x34]:          movi #0, adx   
54 [0x36]:          rmov adx, ebx   
55 [0x37]:          nop   
56 [0x38]: line: 36 movl 1   
57 [0x39]:          movn #16   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          chklen adx   
62 [0x3e]:          iaload ebx, adx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 69   
65 [0x41]: line: 37 movl 1   
66 [0x42]:          pushobj   
67 [0x43]:          call @2151 // <std.io.task#__srt_global.execute_synchronous>   
68 [0x44]:          jmp @76   
69 [0x45]: line: 40 movl 0   
70 [0x46]:          movn #0   
72 [0x48]:          pushobj   
73 [0x49]:          movl 1   
74 [0x4a]:          pushobj   
75 [0x4b]:          call @3603 // <std#synced_list<std.io.task#job>.add>   
76 [0x4c]:          nop   
77 [0x4d]:          ret   


function: std.io.task#job_master.get_host_controller[2141] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:44:15: note:  
			protected def get_host_controller(host: thread) := controllers.at(host);
		              ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @3524 // <std#hashtable<std.io#thread,std.io.task#job_controller>.at>   
7 [0x7]:          popobj2    
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: std.io.task#job_master.cleanup_job[2142] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:46:15: note:  
			protected def cleanup_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 47 movl 1   
1 [0x1]:          movn #7   
3 [0x3]:          del   
4 [0x4]: line: 48 movl 1   
5 [0x5]:          movn #4   
7 [0x7]:          del   
8 [0x8]: line: 49 movl 1   
9 [0x9]:          movn #13   
11 [0xb]:          del   
12 [0xc]: line: 50 movl 1   
13 [0xd]:          movn #6   
15 [0xf]:          del   
16 [0x10]: line: 51 movl 1   
17 [0x11]:          movn #5   
19 [0x13]:          del   
20 [0x14]: line: 53 movl 1   
21 [0x15]: line: 54 _lck    
22 [0x16]: line: 55 movl 1   
23 [0x17]:          movn #20   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3539 // <std#list<std.io#thread>.empty>   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 56   
31 [0x1f]: line: 56 istorel -1, fp+3   
33 [0x21]:          movl 1   
34 [0x22]:          movn #20   
36 [0x24]:          pushobj   
37 [0x25]:          invoke_delegate 8 { static=0, args=0 }   
39 [0x27]:          movl 4   
40 [0x28]:          popobj   
41 [0x29]:          iaddl 1, fp@3   
43 [0x2b]:          movl 4   
44 [0x2c]:          sizeof ecx   
45 [0x2d]:          loadl ebx, fp+3   
46 [0x2e]:          lt ebx, ecx   
47 [0x2f]:          jne 56   
48 [0x30]:          movnd ebx   
49 [0x31]:          pushobj   
50 [0x32]:          movl 2   
51 [0x33]:          popobj   
52 [0x34]: line: 57 movl 2   
53 [0x35]:          pushobj   
54 [0x36]:          call @2258 // <std#_object_.notify>   
55 [0x37]:          jmp @41   
56 [0x38]:          nop   
57 [0x39]: line: 61 movl 1   
58 [0x3a]:          movn #20   
60 [0x3c]:          pushobj   
61 [0x3d]:          call @3547 // <std#list<std.io#thread>.clear>   
62 [0x3e]:          movl 1   
63 [0x3f]:          _ulck   
64 [0x40]: line: 64 movl 1   
65 [0x41]:          _lck    
66 [0x42]: line: 65 movl 1   
67 [0x43]:          movn #20   
69 [0x45]:          pushobj   
70 [0x46]:          call @3539 // <std#list<std.io#thread>.empty>   
71 [0x47]:          loadval ebx   
72 [0x48]:          not ebx, ebx   
73 [0x49]:          movr cmt, ebx   
74 [0x4a]:          jne 78   
75 [0x4b]: line: 66 movl 1   
76 [0x4c]:          _ulck   
77 [0x4d]:          jmp @20   
78 [0x4e]:          nop   
79 [0x4f]:          movl 1   
80 [0x50]:          _ulck   
81 [0x51]: line: 70 movl 1   
82 [0x52]:          movn #20   
84 [0x54]:          del   
85 [0x55]: line: 71 movl 0   
86 [0x56]:          movn #0   
88 [0x58]:          pushobj   
89 [0x59]:          movl 1   
90 [0x5a]:          pushobj   
91 [0x5b]:          movi #3667, ebx   
93 [0x5d]:          rstore ebx   
94 [0x5e]:          call @3610 // <std#synced_list<std.io.task#job>.remove>   
95 [0x5f]:          ret   


function: std.io.task#job_master.cancel_jobs_by_name[2143] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:74:15: note:  
			protected def cancel_jobs_by_name(name: string) {
		              ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          _lck    
4 [0x4]: line: 76 movi #0, ebx   
6 [0x6]:          smovr_2 ebx, fp+2   
7 [0x7]:          loadl ebx, fp+2   
8 [0x8]:          rstore ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          pushobj   
13 [0xd]:          call @3606 // <std#synced_list<std.io.task#job>.size>   
14 [0xe]:          loadval ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 53   
20 [0x14]: line: 77 movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          loadl ebx, fp+2   
25 [0x19]:          rstore ebx   
26 [0x1a]:          call @3570 // <std#synced_list<std.io.task#job>.at>   
27 [0x1b]:          popobj2    
28 [0x1c]:          movn #5   
30 [0x1e]:          pushobj   
31 [0x1f]:          movl 1   
32 [0x20]:          pushobj   
33 [0x21]:          call @3389 // <std#string.operator==>   
34 [0x22]:          loadval ebx   
35 [0x23]:          movr cmt, ebx   
36 [0x24]:          jne 47   
37 [0x25]: line: 78 movl 0   
38 [0x26]:          movn #0   
40 [0x28]:          pushobj   
41 [0x29]:          loadl ebx, fp+2   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          call @3611 // <std#synced_list<std.io.task#job>.remove_at>   
44 [0x2c]: line: 79 movi #0, ebx   
46 [0x2e]:          smovr_2 ebx, fp+2   
47 [0x2f]:          nop   
48 [0x30]:          loadl ebx, fp+2   
49 [0x31]:          movr egx, ebx   
50 [0x32]:          inc ebx   
51 [0x33]:          smovr_2 ebx, fp+2   
52 [0x34]:          jmp @7   
53 [0x35]: line: 83 istorel -1, fp+4   
55 [0x37]:          movl 0   
56 [0x38]:          movn #3   
58 [0x3a]:          pushobj   
59 [0x3b]:          invoke_delegate 8 { static=0, args=0 }   
61 [0x3d]:          movl 5   
62 [0x3e]:          popobj   
63 [0x3f]:          iaddl 1, fp@4   
65 [0x41]:          movl 5   
66 [0x42]:          sizeof ecx   
67 [0x43]:          loadl ebx, fp+4   
68 [0x44]:          lt ebx, ecx   
69 [0x45]:          jne 104   
70 [0x46]:          movnd ebx   
71 [0x47]:          pushobj   
72 [0x48]:          movl 3   
73 [0x49]:          popobj   
74 [0x4a]: line: 84 movl 0   
75 [0x4b]:          pushobj   
76 [0x4c]:          movl 3   
77 [0x4d]:          pushobj   
78 [0x4e]:          call @2141 // <std.io.task#job_master.get_host_controller>   
79 [0x4f]:          popobj2    
80 [0x50]:          movn #0   
82 [0x52]:          smovr_3 fp+6   
83 [0x53]: line: 85 movl 6   
84 [0x54]:          pushobj   
85 [0x55]:          pushnull    
86 [0x56]:          itest ebx   
87 [0x57]:          not ebx, ebx   
88 [0x58]:          skne ebx // pc = 97   
89 [0x59]:          movl 6   
90 [0x5a]:          movn #5   
92 [0x5c]:          pushobj   
93 [0x5d]:          movl 1   
94 [0x5e]:          pushobj   
95 [0x5f]:          call @3389 // <std#string.operator==>   
96 [0x60]:          loadval ebx   
97 [0x61]:          movr cmt, ebx   
98 [0x62]:          jne 102   
99 [0x63]: line: 86 movl 6   
100 [0x64]:          pushobj   
101 [0x65]:          call @2104 // <std.io.task#job.cancel>   
102 [0x66]:          nop   
103 [0x67]:          jmp @63   
104 [0x68]: line: 90 istorel -1, fp+8   
106 [0x6a]:          movl 0   
107 [0x6b]:          movn #2   
109 [0x6d]:          pushobj   
110 [0x6e]:          invoke_delegate 8 { static=0, args=0 }   
112 [0x70]:          movl 9   
113 [0x71]:          popobj   
114 [0x72]:          iaddl 1, fp@8   
116 [0x74]:          movl 9   
117 [0x75]:          sizeof ecx   
118 [0x76]:          loadl ebx, fp+8   
119 [0x77]:          lt ebx, ecx   
120 [0x78]:          jne 167   
121 [0x79]:          movnd ebx   
122 [0x7a]:          pushobj   
123 [0x7b]:          movl 7   
124 [0x7c]:          popobj   
125 [0x7d]: line: 91 movl 7   
126 [0x7e]:          pushobj   
127 [0x7f]:          movg @23 // @std.io.task#__srt_global   
128 [0x80]:          movn #3   
130 [0x82]:          pushobj   
131 [0x83]:          call @2200 // <std.io#thread.operator==>   
132 [0x84]:          loadval ebx   
133 [0x85]:          movr cmt, ebx   
134 [0x86]:          jne 136   
135 [0x87]:          jmp @114   
136 [0x88]:          nop   
137 [0x89]: line: 93 movl 0   
138 [0x8a]:          pushobj   
139 [0x8b]:          movl 7   
140 [0x8c]:          pushobj   
141 [0x8d]:          call @2141 // <std.io.task#job_master.get_host_controller>   
142 [0x8e]:          popobj2    
143 [0x8f]:          movn #0   
145 [0x91]:          smovr_3 fp+10   
146 [0x92]: line: 94 movl 10   
147 [0x93]:          pushobj   
148 [0x94]:          pushnull    
149 [0x95]:          itest ebx   
150 [0x96]:          not ebx, ebx   
151 [0x97]:          skne ebx // pc = 160   
152 [0x98]:          movl 10   
153 [0x99]:          movn #5   
155 [0x9b]:          pushobj   
156 [0x9c]:          movl 1   
157 [0x9d]:          pushobj   
158 [0x9e]:          call @3389 // <std#string.operator==>   
159 [0x9f]:          loadval ebx   
160 [0xa0]:          movr cmt, ebx   
161 [0xa1]:          jne 165   
162 [0xa2]: line: 95 movl 10   
163 [0xa3]:          pushobj   
164 [0xa4]:          call @2104 // <std.io.task#job.cancel>   
165 [0xa5]:          nop   
166 [0xa6]:          jmp @114   
167 [0xa7]:          movl 0   
168 [0xa8]:          movn #0   
170 [0xaa]:          _ulck   
171 [0xab]:          ret   


function: std.io.task#__srt_global.start_scheduler[2144] params(0) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:12:14: note:  
		protected def start_scheduler() {
		             ^

0 [0x0]: line: 13 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 14 movg @23 // @std.io.task#__srt_global   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          chklen adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          test ecx, ebx   
16 [0x10]:          movr ebx, cmt   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 20   
19 [0x13]: line: 15 call @2145 // <std.io.task#__srt_global.calculate_max_threads>   
20 [0x14]:          nop   
21 [0x15]: line: 16 new_class @31 // std.io#thread   
22 [0x16]:          dup    
23 [0x17]:          new_class @69 // std#string   
24 [0x18]:          dup    
25 [0x19]:          newstr @17 // task_scheduler   
26 [0x1a]:          call @3371 // <std#string.string>   
27 [0x1b]:          movi #2148, ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          movg @23 // @std.io.task#__srt_global   
31 [0x1f]:          movn #5   
33 [0x21]:          movn #2   
35 [0x23]:          pushobj   
36 [0x24]:          call @2169 // <std.io#thread.thread>   
37 [0x25]:          movg @23 // @std.io.task#__srt_global   
38 [0x26]:          movn #3   
40 [0x28]:          popobj   
41 [0x29]: line: 17 movg @23 // @std.io.task#__srt_global   
42 [0x2a]:          movn #3   
44 [0x2c]:          pushobj   
45 [0x2d]:          pushnull    
46 [0x2e]:          call @2171 // <std.io#thread.start>   
47 [0x2f]:          pop   
48 [0x30]:          movg @23 // @std.io.task#__srt_global   
49 [0x31]:          movn #5   
51 [0x33]:          _ulck   
52 [0x34]:          ret   


function: std.io.task#__srt_global.calculate_max_threads[2145] params(0) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:21:12: note:  
		private def calculate_max_threads() {
		           ^

0 [0x0]: line: 22 call @2294 // <platform.kernel#vm.cores>   
1 [0x1]:          loadval ebx   
2 [0x2]:          smovr_2 ebx, fp+0   
3 [0x3]: line: 23 movi #2, ebx   
5 [0x5]:          mull ebx, fp@0   
6 [0x6]: line: 24 movi #4, ebx   
8 [0x8]:          subl ebx, fp@0   
9 [0x9]: line: 26 loadl ebx, fp+0   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #2, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 46   
18 [0x12]: line: 27 loadl ebx, fp+0   
19 [0x13]:          rstore ebx   
20 [0x14]:          ldc ebx // 0.75   
21 [0x15]:          loadval ecx   
22 [0x16]:          mul ecx, ebx -> ebx   
23 [0x17]:          rstore ebx   
24 [0x18]:          call @2251 // <std.math#__srt_global.round>   
25 [0x19]:          movg @23 // @std.io.task#__srt_global   
26 [0x1a]:          movn #0   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          rmov adx, ebx   
32 [0x20]: line: 28 loadl ebx, fp+0   
33 [0x21]:          rstore ebx   
34 [0x22]:          ldc ebx // 0.25   
35 [0x23]:          loadval ecx   
36 [0x24]:          mul ecx, ebx -> ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          call @2251 // <std.math#__srt_global.round>   
39 [0x27]:          movg @23 // @std.io.task#__srt_global   
40 [0x28]:          movn #1   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          rmov adx, ebx   
46 [0x2e]:          nop   
47 [0x2f]: line: 31 movg @23 // @std.io.task#__srt_global   
48 [0x30]:          movn #0   
50 [0x32]:          movi #0, adx   
52 [0x34]:          chklen adx   
53 [0x35]:          iaload ebx, adx   
54 [0x36]:          rstore ebx   
55 [0x37]:          movi #0, ebx   
57 [0x39]:          loadval ecx   
58 [0x3a]:          test ecx, ebx   
59 [0x3b]:          movr ebx, cmt   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 72   
62 [0x3e]: line: 32 movi #1, ebx   
64 [0x40]:          rstore ebx   
65 [0x41]:          movg @23 // @std.io.task#__srt_global   
66 [0x42]:          movn #0   
68 [0x44]:          loadval ebx   
69 [0x45]:          movi #0, adx   
71 [0x47]:          rmov adx, ebx   
72 [0x48]:          nop   
73 [0x49]: line: 34 movg @23 // @std.io.task#__srt_global   
74 [0x4a]:          movn #1   
76 [0x4c]:          movi #0, adx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          iaload ebx, adx   
80 [0x50]:          rstore ebx   
81 [0x51]:          movi #0, ebx   
83 [0x53]:          loadval ecx   
84 [0x54]:          test ecx, ebx   
85 [0x55]:          movr ebx, cmt   
86 [0x56]:          movr cmt, ebx   
87 [0x57]:          jne 98   
88 [0x58]: line: 35 movi #1, ebx   
90 [0x5a]:          rstore ebx   
91 [0x5b]:          movg @23 // @std.io.task#__srt_global   
92 [0x5c]:          movn #1   
94 [0x5e]:          loadval ebx   
95 [0x5f]:          movi #0, adx   
97 [0x61]:          rmov adx, ebx   
98 [0x62]:          nop   
99 [0x63]: line: 36 movg @23 // @std.io.task#__srt_global   
100 [0x64]:          movn #0   
102 [0x66]:          movi #0, adx   
104 [0x68]:          chklen adx   
105 [0x69]:          iaload ebx, adx   
106 [0x6a]:          rstore ebx   
107 [0x6b]:          movg @23 // @std.io.task#__srt_global   
108 [0x6c]:          movn #1   
110 [0x6e]:          movi #0, adx   
112 [0x70]:          chklen adx   
113 [0x71]:          iaload ebx, adx   
114 [0x72]:          loadval ecx   
115 [0x73]:          add ecx, ebx -> ebx   
116 [0x74]:          rstore ebx   
117 [0x75]:          movg @23 // @std.io.task#__srt_global   
118 [0x76]:          movn #2   
120 [0x78]:          loadval ebx   
121 [0x79]:          movi #0, adx   
123 [0x7b]:          rmov adx, ebx   
124 [0x7c]:          ret   


function: std.io.task#__srt_global.set_thread_max[2146] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:39:4: note:  
		def set_thread_max(max: var) {
		   ^

0 [0x0]: line: 40 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 41 movg @23 // @std.io.task#__srt_global   
5 [0x5]:          movn #3   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          not ebx, ebx   
11 [0xb]:          movr cmt, ebx   
12 [0xc]:          jne 18   
13 [0xd]: line: 42 new_class @5 // std#illegal_argument_exception   
14 [0xe]:          dup    
15 [0xf]:          newstr @20 // cannot modify max thread count after task library has started, try calling this before your first task   
16 [0x10]:          call @1944 // <std#illegal_argument_exception.illegal_argument_exception>   
17 [0x11]:          throw    
18 [0x12]:          nop   
19 [0x13]: line: 46 loadl ebx, fp+0   
20 [0x14]:          rstore ebx   
21 [0x15]:          movi #2, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          gte ecx, ebx   
25 [0x19]:          movr ebx, cmt   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 128   
28 [0x1c]: line: 47 loadl ebx, fp+0   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          movi #2, ebx   
32 [0x20]:          loadval ecx   
33 [0x21]:          gt ecx, ebx   
34 [0x22]:          movr ebx, cmt   
35 [0x23]:          movr cmt, ebx   
36 [0x24]:          jne 65   
37 [0x25]: line: 48 loadl ebx, fp+0   
38 [0x26]:          rstore ebx   
39 [0x27]:          ldc ebx // 0.75   
40 [0x28]:          loadval ecx   
41 [0x29]:          mul ecx, ebx -> ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          call @2251 // <std.math#__srt_global.round>   
44 [0x2c]:          movg @23 // @std.io.task#__srt_global   
45 [0x2d]:          movn #0   
47 [0x2f]:          loadval ebx   
48 [0x30]:          movi #0, adx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 49 loadl ebx, fp+0   
52 [0x34]:          rstore ebx   
53 [0x35]:          ldc ebx // 0.25   
54 [0x36]:          loadval ecx   
55 [0x37]:          mul ecx, ebx -> ebx   
56 [0x38]:          rstore ebx   
57 [0x39]:          call @2251 // <std.math#__srt_global.round>   
58 [0x3a]:          movg @23 // @std.io.task#__srt_global   
59 [0x3b]:          movn #1   
61 [0x3d]:          loadval ebx   
62 [0x3e]:          movi #0, adx   
64 [0x40]:          rmov adx, ebx   
65 [0x41]:          nop   
66 [0x42]: line: 52 movg @23 // @std.io.task#__srt_global   
67 [0x43]:          movn #0   
69 [0x45]:          movi #0, adx   
71 [0x47]:          chklen adx   
72 [0x48]:          iaload ebx, adx   
73 [0x49]:          rstore ebx   
74 [0x4a]:          movi #0, ebx   
76 [0x4c]:          loadval ecx   
77 [0x4d]:          test ecx, ebx   
78 [0x4e]:          movr ebx, cmt   
79 [0x4f]:          movr cmt, ebx   
80 [0x50]:          jne 91   
81 [0x51]: line: 53 movi #1, ebx   
83 [0x53]:          rstore ebx   
84 [0x54]:          movg @23 // @std.io.task#__srt_global   
85 [0x55]:          movn #0   
87 [0x57]:          loadval ebx   
88 [0x58]:          movi #0, adx   
90 [0x5a]:          rmov adx, ebx   
91 [0x5b]:          nop   
92 [0x5c]: line: 55 movg @23 // @std.io.task#__srt_global   
93 [0x5d]:          movn #1   
95 [0x5f]:          movi #0, adx   
97 [0x61]:          chklen adx   
98 [0x62]:          iaload ebx, adx   
99 [0x63]:          rstore ebx   
100 [0x64]:          movi #0, ebx   
102 [0x66]:          loadval ecx   
103 [0x67]:          test ecx, ebx   
104 [0x68]:          movr ebx, cmt   
105 [0x69]:          movr cmt, ebx   
106 [0x6a]:          jne 117   
107 [0x6b]: line: 56 movi #1, ebx   
109 [0x6d]:          rstore ebx   
110 [0x6e]:          movg @23 // @std.io.task#__srt_global   
111 [0x6f]:          movn #1   
113 [0x71]:          loadval ebx   
114 [0x72]:          movi #0, adx   
116 [0x74]:          rmov adx, ebx   
117 [0x75]:          nop   
118 [0x76]: line: 57 loadl ebx, fp+0   
119 [0x77]:          rstore ebx   
120 [0x78]:          movg @23 // @std.io.task#__srt_global   
121 [0x79]:          movn #2   
123 [0x7b]:          loadval ebx   
124 [0x7c]:          movi #0, adx   
126 [0x7e]:          rmov adx, ebx   
127 [0x7f]:          jmp @133   
128 [0x80]: line: 59 new_class @5 // std#illegal_argument_exception   
129 [0x81]:          dup    
130 [0x82]:          newstr @21 // cannot have less than 2 max threads   
131 [0x83]:          call @1944 // <std#illegal_argument_exception.illegal_argument_exception>   
132 [0x84]:          throw    
133 [0x85]:          nop   
134 [0x86]:          movg @23 // @std.io.task#__srt_global   
135 [0x87]:          movn #5   
137 [0x89]:          _ulck   
138 [0x8a]:          ret   


function: std.io.task#__srt_global.get_thread_max[2147] params(0) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:64:4: note:  
		def get_thread_max() : var {
		   ^

0 [0x0]: line: 65 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 66 movg @23 // @std.io.task#__srt_global   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          chklen adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          test ecx, ebx   
16 [0x10]:          movr ebx, cmt   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 20   
19 [0x13]: line: 67 call @2145 // <std.io.task#__srt_global.calculate_max_threads>   
20 [0x14]:          nop   
21 [0x15]: line: 68 movg @23 // @std.io.task#__srt_global   
22 [0x16]:          movn #2   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          chklen adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          return_val ebx   
29 [0x1d]:          movg @23 // @std.io.task#__srt_global   
30 [0x1e]:          movn #5   
32 [0x20]:          _ulck   
33 [0x21]:          ret   
34 [0x22]:          movg @23 // @std.io.task#__srt_global   
35 [0x23]:          movn #5   
37 [0x25]:          _ulck   


function: std.io.task#__srt_global.scheduler_main[2148] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:72:12: note:  
		private def scheduler_main(args : object[]) : var
		           ^

0 [0x0]: line: 74 movi #36000, ebx   
2 [0x2]: line: 75 smovr_2 ebx, fp+1   
3 [0x3]: line: 76 movg @23 // @std.io.task#__srt_global   
4 [0x4]:          movn #5   
6 [0x6]:          movn #0   
8 [0x8]:          smovr_3 fp+2   
9 [0x9]: line: 77 movi #1, ebx   
11 [0xb]:          movr cmt, ebx   
12 [0xc]:          jne 226   
13 [0xd]: line: 79 call @2184 // <std.io#thread.yield>   
14 [0xe]: line: 80 movi #0, ebx   
16 [0x10]:          smovr_2 ebx, fp+3   
17 [0x11]:          loadl ebx, fp+3   
18 [0x12]:          rstore ebx   
19 [0x13]:          movl 2   
20 [0x14]:          pushobj   
21 [0x15]:          call @3606 // <std#synced_list<std.io.task#job>.size>   
22 [0x16]:          loadval ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          lt ecx, ebx   
25 [0x19]:          movr ebx, cmt   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 203   
28 [0x1c]: line: 81 movl 2   
29 [0x1d]:          pushobj   
30 [0x1e]:          loadl ebx, fp+3   
31 [0x1f]:          rstore ebx   
32 [0x20]:          call @3570 // <std#synced_list<std.io.task#job>.at>   
33 [0x21]:          popobj2    
34 [0x22]:          smovr_3 fp+4   
35 [0x23]: line: 83 movl 4   
36 [0x24]:          movn #12   
38 [0x26]:          movi #0, adx   
40 [0x28]:          chklen adx   
41 [0x29]:          iaload ebx, adx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          movi #0, ebx   
45 [0x2d]:          loadval ecx   
46 [0x2e]:          tne ecx, ebx   
47 [0x2f]:          movr ebx, cmt   
48 [0x30]:          movr cmt, ebx   
49 [0x31]:          jne 103   
50 [0x32]: line: 84 call @3480 // <std#time.mills_time>   
51 [0x33]:          loadval ebx   
52 [0x34]:          rstore ebx   
53 [0x35]:          movl 4   
54 [0x36]:          movn #12   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          chklen adx   
59 [0x3b]:          iaload ebx, adx   
60 [0x3c]:          loadval ecx   
61 [0x3d]:          gte ecx, ebx   
62 [0x3e]:          movr ebx, cmt   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 101   
65 [0x41]: line: 85 movi #0, ebx   
67 [0x43]:          rstore ebx   
68 [0x44]:          movl 4   
69 [0x45]:          movn #12   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 86 movl 4   
76 [0x4c]:          pushobj   
77 [0x4d]:          call @2152 // <std.io.task#__srt_global.execute_job>   
78 [0x4e]:          loadval ebx   
79 [0x4f]:          smovr_2 ebx, fp+5   
80 [0x50]: line: 88 loadl ebx, fp+5   
81 [0x51]:          skne ebx // pc = 90   
82 [0x52]:          movl 4   
83 [0x53]:          movn #8   
85 [0x55]:          movi #0, adx   
87 [0x57]:          chklen adx   
88 [0x58]:          iaload ebx, adx   
89 [0x59]:          not ebx, ebx   
90 [0x5a]:          movr cmt, ebx   
91 [0x5b]:          jne 100   
92 [0x5c]: line: 89 movl 2   
93 [0x5d]:          pushobj   
94 [0x5e]:          movl 4   
95 [0x5f]:          pushobj   
96 [0x60]:          movi #3668, ebx   
98 [0x62]:          rstore ebx   
99 [0x63]:          call @3610 // <std#synced_list<std.io.task#job>.remove>   
100 [0x64]:          nop   
101 [0x65]:          nop   
102 [0x66]:          jmp @197   
103 [0x67]:          movl 4   
104 [0x68]:          movn #8   
106 [0x6a]:          movi #0, adx   
108 [0x6c]:          chklen adx   
109 [0x6d]:          iaload ebx, adx   
110 [0x6e]:          movr cmt, ebx   
111 [0x6f]:          jne 182   
112 [0x70]: line: 93 movl 4   
113 [0x71]:          movn #4   
115 [0x73]:          pushobj   
116 [0x74]:          pushnull    
117 [0x75]:          itest ebx   
118 [0x76]:          movr cmt, ebx   
119 [0x77]:          jne 124   
120 [0x78]: line: 94 movl 4   
121 [0x79]:          pushobj   
122 [0x7a]:          call @2152 // <std.io.task#__srt_global.execute_job>   
123 [0x7b]:          pop   
124 [0x7c]:          nop   
125 [0x7d]: line: 97 movl 4   
126 [0x7e]:          movn #18   
128 [0x80]:          pushobj   
129 [0x81]:          movg @29 // @std.io.task#job_state   
130 [0x82]:          movn #1   
132 [0x84]:          pushobj   
133 [0x85]:          call @1931 // <std#_enum_.operator==>   
134 [0x86]:          loadval ebx   
135 [0x87]:          skne ebx // pc = 159   
136 [0x88]:          call @3480 // <std#time.mills_time>   
137 [0x89]:          loadval ebx   
138 [0x8a]:          rstore ebx   
139 [0x8b]:          movl 4   
140 [0x8c]:          movn #10   
142 [0x8e]:          movi #0, adx   
144 [0x90]:          chklen adx   
145 [0x91]:          iaload ebx, adx   
146 [0x92]:          rstore ebx   
147 [0x93]:          movl 4   
148 [0x94]:          movn #9   
150 [0x96]:          movi #0, adx   
152 [0x98]:          chklen adx   
153 [0x99]:          iaload ebx, adx   
154 [0x9a]:          loadval ecx   
155 [0x9b]:          add ecx, ebx -> ebx   
156 [0x9c]:          loadval ecx   
157 [0x9d]:          gte ecx, ebx   
158 [0x9e]:          movr ebx, cmt   
159 [0x9f]:          movr cmt, ebx   
160 [0xa0]:          jne 180   
161 [0xa1]: line: 98 movl 4   
162 [0xa2]:          movn #13   
164 [0xa4]:          pushobj   
165 [0xa5]:          pushnull    
166 [0xa6]:          itest ebx   
167 [0xa7]:          movr cmt, ebx   
168 [0xa8]:          jne 170   
169 [0xa9]:          jmp @161   
170 [0xaa]: line: 99 movl 4   
171 [0xab]:          pushobj   
172 [0xac]:          call @2104 // <std.io.task#job.cancel>   
173 [0xad]: line: 100 movg @23 // @std.io.task#__srt_global   
174 [0xae]:           movn #5   
176 [0xb0]:           pushobj   
177 [0xb1]:           movl 4   
178 [0xb2]:           pushobj   
179 [0xb3]:           call @2142 // <std.io.task#job_master.cleanup_job>   
180 [0xb4]:           nop   
181 [0xb5]:           jmp @197   
182 [0xb6]: line: 103 movl 4   
183 [0xb7]:           pushobj   
184 [0xb8]:           call @2152 // <std.io.task#__srt_global.execute_job>   
185 [0xb9]:           loadval ebx   
186 [0xba]:           movr cmt, ebx   
187 [0xbb]:           jne 196   
188 [0xbc]: line: 104 movl 2   
189 [0xbd]:           pushobj   
190 [0xbe]:           movl 4   
191 [0xbf]:           pushobj   
192 [0xc0]:           movi #3669, ebx   
194 [0xc2]:           rstore ebx   
195 [0xc3]:           call @3610 // <std#synced_list<std.io.task#job>.remove>   
196 [0xc4]:           nop   
197 [0xc5]:           nop   
198 [0xc6]:           loadl ebx, fp+3   
199 [0xc7]:           movr egx, ebx   
200 [0xc8]:           inc ebx   
201 [0xc9]:           smovr_2 ebx, fp+3   
202 [0xca]:           jmp @17   
203 [0xcb]: line: 109 loadl ebx, fp+1   
204 [0xcc]:           movr egx, ebx   
205 [0xcd]:           dec ebx   
206 [0xce]:           smovr_2 ebx, fp+1   
207 [0xcf]:           movr ebx, egx   
208 [0xd0]:           rstore ebx   
209 [0xd1]:           movi #0, ebx   
211 [0xd3]:           loadval ecx   
212 [0xd4]:           lte ecx, ebx   
213 [0xd5]:           movr ebx, cmt   
214 [0xd6]:           movr cmt, ebx   
215 [0xd7]:           jne 220   
216 [0xd8]: line: 110 movi #36000, ebx   
218 [0xda]:           smovr_2 ebx, fp+1   
219 [0xdb]: line: 111 call @2150 // <std.io.task#__srt_global.kill_threads>   
220 [0xdc]:           nop   
221 [0xdd]: line: 114 movi #5, ebx   
223 [0xdf]:           rstore ebx   
224 [0xe0]:           call @2179 // <std.io#thread.sleep>   
225 [0xe1]:           jmp @9   
226 [0xe2]: line: 116 movi #0, ebx   
228 [0xe4]:           return_val ebx   
229 [0xe5]:           ret   


function: std.io.task#__srt_global.get_host[2149] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:119:12: note:  
		private def get_host(long_running : var) : thread {
		           ^

0 [0x0]: line: 120 movl 1   
1 [0x1]:           del   
2 [0x2]: line: 121 loadl ebx, fp+0   
3 [0x3]:           movr cmt, ebx   
4 [0x4]:           jne 12   
5 [0x5]: line: 122 movg @23 // @std.io.task#__srt_global   
6 [0x6]:           movn #5   
8 [0x8]:           movn #2   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]:           jmp @18   
12 [0xc]: line: 124 movg @23 // @std.io.task#__srt_global   
13 [0xd]:           movn #5   
15 [0xf]:           movn #3   
17 [0x11]:           smovr_3 fp+1   
18 [0x12]:           nop   
19 [0x13]: line: 127 movl 1   
20 [0x14]:           pushobj   
21 [0x15]:           movi #3670, ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @2210 // <std.io#thread_group.find>   
25 [0x19]:           popobj2    
26 [0x1a]:           smovr_3 fp+2   
27 [0x1b]: line: 135 movl 2   
28 [0x1c]:           pushobj   
29 [0x1d]:           pushnull    
30 [0x1e]:           itest ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 178   
33 [0x21]: line: 136 loadl ebx, fp+0   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 107   
36 [0x24]: line: 137 movg @23 // @std.io.task#__srt_global   
37 [0x25]:           movn #1   
39 [0x27]:           movi #0, adx   
41 [0x29]:           chklen adx   
42 [0x2a]:           iaload ebx, adx   
43 [0x2b]:           rstore ebx   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 105   
51 [0x33]: line: 138 movg @23 // @std.io.task#__srt_global   
52 [0x34]:           movn #1   
54 [0x36]:           movi #0, adx   
56 [0x38]:           chklen adx   
57 [0x39]:           iaload ebx, adx   
58 [0x3a]:           movr egx, ebx   
59 [0x3b]:           dec ebx   
60 [0x3c]:           movi #0, adx   
62 [0x3e]:           rmov adx, ebx   
63 [0x3f]: line: 139 new_class @27 // std.io.task#job_controller   
64 [0x40]:           dup    
65 [0x41]:           call @2135 // <std.io.task#job_controller.job_controller>   
66 [0x42]:           popobj2    
67 [0x43]:           smovr_3 fp+3   
68 [0x44]: line: 140 new_class @31 // std.io#thread   
69 [0x45]:           dup    
70 [0x46]:           new_class @69 // std#string   
71 [0x47]:           dup    
72 [0x48]:           newstr @22 // long_term_worker_thread#   
73 [0x49]:           call @3371 // <std#string.string>   
74 [0x4a]:           movl 1   
75 [0x4b]:           pushobj   
76 [0x4c]:           call @2205 // <std.io#thread_group.size>   
77 [0x4d]:           loadval ebx   
78 [0x4e]:           rstore ebx   
79 [0x4f]:           movi #1, ebx   
81 [0x51]:           loadval ecx   
82 [0x52]:           add ecx, ebx -> ebx   
83 [0x53]:           rstore ebx   
84 [0x54]:           call @3403 // <std#string.operator+>   
85 [0x55]:           movi #2114, ebx   
87 [0x57]:           rstore ebx   
88 [0x58]:           movl 1   
89 [0x59]:           pushobj   
90 [0x5a]:           call @2169 // <std.io#thread.thread>   
91 [0x5b]:           popobj2    
92 [0x5c]:           smovr_3 fp+2   
93 [0x5d]: line: 141 movg @23 // @std.io.task#__srt_global   
94 [0x5e]:           movn #5   
96 [0x60]:           movn #1   
98 [0x62]:           pushobj   
99 [0x63]:           movl 2   
100 [0x64]:           pushobj   
101 [0x65]:           movl 3   
102 [0x66]:           pushobj   
103 [0x67]:           call @3525 // <std#hashtable<std.io#thread,std.io.task#job_controller>.put>   
104 [0x68]:           pop   
105 [0x69]:           nop   
106 [0x6a]:           jmp @177   
107 [0x6b]: line: 144 movg @23 // @std.io.task#__srt_global   
108 [0x6c]:           movn #0   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           chklen adx   
113 [0x71]:           iaload ebx, adx   
114 [0x72]:           rstore ebx   
115 [0x73]:           movi #0, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           gt ecx, ebx   
119 [0x77]:           movr ebx, cmt   
120 [0x78]:           movr cmt, ebx   
121 [0x79]:           jne 176   
122 [0x7a]: line: 145 movg @23 // @std.io.task#__srt_global   
123 [0x7b]:           movn #0   
125 [0x7d]:           movi #0, adx   
127 [0x7f]:           chklen adx   
128 [0x80]:           iaload ebx, adx   
129 [0x81]:           movr egx, ebx   
130 [0x82]:           dec ebx   
131 [0x83]:           movi #0, adx   
133 [0x85]:           rmov adx, ebx   
134 [0x86]: line: 146 new_class @27 // std.io.task#job_controller   
135 [0x87]:           dup    
136 [0x88]:           call @2135 // <std.io.task#job_controller.job_controller>   
137 [0x89]:           popobj2    
138 [0x8a]:           smovr_3 fp+4   
139 [0x8b]: line: 147 new_class @31 // std.io#thread   
140 [0x8c]:           dup    
141 [0x8d]:           new_class @69 // std#string   
142 [0x8e]:           dup    
143 [0x8f]:           newstr @23 // worker_thread#   
144 [0x90]:           call @3371 // <std#string.string>   
145 [0x91]:           movl 1   
146 [0x92]:           pushobj   
147 [0x93]:           call @2205 // <std.io#thread_group.size>   
148 [0x94]:           loadval ebx   
149 [0x95]:           rstore ebx   
150 [0x96]:           movi #1, ebx   
152 [0x98]:           loadval ecx   
153 [0x99]:           add ecx, ebx -> ebx   
154 [0x9a]:           rstore ebx   
155 [0x9b]:           call @3403 // <std#string.operator+>   
156 [0x9c]:           movi #2114, ebx   
158 [0x9e]:           rstore ebx   
159 [0x9f]:           movl 1   
160 [0xa0]:           pushobj   
161 [0xa1]:           call @2169 // <std.io#thread.thread>   
162 [0xa2]:           popobj2    
163 [0xa3]:           smovr_3 fp+2   
164 [0xa4]: line: 148 movg @23 // @std.io.task#__srt_global   
165 [0xa5]:           movn #5   
167 [0xa7]:           movn #1   
169 [0xa9]:           pushobj   
170 [0xaa]:           movl 2   
171 [0xab]:           pushobj   
172 [0xac]:           movl 4   
173 [0xad]:           pushobj   
174 [0xae]:           call @3525 // <std#hashtable<std.io#thread,std.io.task#job_controller>.put>   
175 [0xaf]:           pop   
176 [0xb0]:           nop   
177 [0xb1]:           nop   
178 [0xb2]:           nop   
179 [0xb3]: line: 153 movl 2   
180 [0xb4]:           returnobj   
181 [0xb5]:           ret   


function: std.io.task#__srt_global.kill_threads[2150] params(0) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:157:12: note:  
		private def kill_threads() {
		           ^

0 [0x0]: line: 158 movg @23 // @std.io.task#__srt_global   
1 [0x1]:           movn #5   
3 [0x3]:           movn #2   
5 [0x5]:           smovr_3 fp+0   
6 [0x6]: line: 160 call @3480 // <std#time.mills_time>   
7 [0x7]:           movg @23 // @std.io.task#__srt_global   
8 [0x8]:           movn #4   
10 [0xa]:           loadval ebx   
11 [0xb]:           movi #0, adx   
13 [0xd]:           rmov adx, ebx   
14 [0xe]: line: 161 movl 0   
15 [0xf]:           pushobj   
16 [0x10]:           movi #3671, ebx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @2210 // <std.io#thread_group.find>   
20 [0x14]:           popobj2    
21 [0x15]:           smovr_3 fp+1   
22 [0x16]: line: 170 movl 1   
23 [0x17]:           pushobj   
24 [0x18]:           pushnull    
25 [0x19]:           itest ebx   
26 [0x1a]:           not ebx, ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 171 movl 1   
30 [0x1e]:           pushobj   
31 [0x1f]:           call @2177 // <std.io#thread.interrupt>   
32 [0x20]:           pop   
33 [0x21]:           nop   
34 [0x22]: line: 174 movg @23 // @std.io.task#__srt_global   
35 [0x23]:           movn #5   
37 [0x25]:           movn #3   
39 [0x27]:           smovr_3 fp+0   
40 [0x28]: line: 176 movl 0   
41 [0x29]:           pushobj   
42 [0x2a]:           movi #3672, ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           call @2210 // <std.io#thread_group.find>   
46 [0x2e]:           popobj2    
47 [0x2f]:           smovr_3 fp+1   
48 [0x30]: line: 183 movl 1   
49 [0x31]:           pushobj   
50 [0x32]:           pushnull    
51 [0x33]:           itest ebx   
52 [0x34]:           not ebx, ebx   
53 [0x35]:           movr cmt, ebx   
54 [0x36]:           jne 59   
55 [0x37]: line: 184 movl 1   
56 [0x38]:           pushobj   
57 [0x39]:           call @2177 // <std.io#thread.interrupt>   
58 [0x3a]:           pop   
59 [0x3b]:           nop   
60 [0x3c]:           ret   


function: std.io.task#__srt_global.execute_synchronous[2151] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:188:14: note:  
		protected def execute_synchronous(scheduled_job : job) {
		             ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #0, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           tne ecx, ebx   
12 [0xc]:           movr ebx, cmt   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 41   
15 [0xf]: line: 190 movl 0   
16 [0x10]:           movn #12   
18 [0x12]:           movi #0, adx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           rstore ebx   
23 [0x17]:           call @3480 // <std#time.mills_time>   
24 [0x18]:           loadval ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           sub ecx, ebx -> ebx   
27 [0x1b]:           smovr_2 ebx, fp+1   
28 [0x1c]: line: 191 loadl ebx, fp+1   
29 [0x1d]:           rstore ebx   
30 [0x1e]:           movi #0, ebx   
32 [0x20]:           loadval ecx   
33 [0x21]:           gt ecx, ebx   
34 [0x22]:           movr ebx, cmt   
35 [0x23]:           movr cmt, ebx   
36 [0x24]:           jne 40   
37 [0x25]:           loadl ebx, fp+1   
38 [0x26]:           rstore ebx   
39 [0x27]:           call @2179 // <std.io#thread.sleep>   
40 [0x28]:           nop   
41 [0x29]:           nop   
42 [0x2a]: line: 193 movl 0   
43 [0x2b]:           pushobj   
44 [0x2c]:           call @2115 // <std.io.task#job.execute>   
45 [0x2d]:           ret   


function: std.io.task#__srt_global.execute_job[2152] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:196:14: note:  
		protected def execute_job(scheduled_job : job) : var {
		             ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #17   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           call @2149 // <std.io.task#__srt_global.get_host>   
9 [0x9]:           popobj2    
10 [0xa]:           smovr_3 fp+1   
11 [0xb]: line: 199 movl 1   
12 [0xc]:           pushobj   
13 [0xd]:           pushnull    
14 [0xe]:           itest ebx   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 65   
18 [0x12]: line: 200 movl 1   
19 [0x13]:           pushobj   
20 [0x14]:           movl 0   
21 [0x15]:           movn #4   
23 [0x17]:           popobj   
24 [0x18]: line: 201 movg @23 // @std.io.task#__srt_global   
25 [0x19]:           movn #5   
27 [0x1b]:           pushobj   
28 [0x1c]:           movl 1   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @2141 // <std.io.task#job_master.get_host_controller>   
31 [0x1f]:           movl 0   
32 [0x20]:           movn #19   
34 [0x22]:           popobj   
35 [0x23]: line: 202 movl 0   
36 [0x24]:           pushobj   
37 [0x25]:           call @2103 // <std.io.task#job.execute_async>   
38 [0x26]:           loadval ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #0, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           tne ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 59   
47 [0x2f]: line: 203 movl 0   
48 [0x30]:           movn #4   
50 [0x32]:           del   
51 [0x33]: line: 204 movl 0   
52 [0x34]:           movn #19   
54 [0x36]:           del   
55 [0x37]: line: 205 movi #0, ebx   
57 [0x39]:           return_val ebx   
58 [0x3a]:           ret   
59 [0x3b]:           nop   
60 [0x3c]: line: 208 movi #1, ebx   
62 [0x3e]:           return_val ebx   
63 [0x3f]:           ret   
64 [0x40]:           jmp @69   
65 [0x41]: line: 209 movi #0, ebx   
67 [0x43]:           return_val ebx   
68 [0x44]:           ret   
69 [0x45]:           nop   


function: std.io.task#__srt_global.finish[2153] params(0) in file: lib\support\0.2.805/io//task//task.sharp:5:4: note:  
		def finish() {
		   ^

0 [0x0]: line: 6 new_class @24 // std.io.task#cancellation_exception   
1 [0x1]:         dup    
2 [0x2]:         call @2100 // <std.io.task#cancellation_exception.cancellation_exception>   
3 [0x3]:         throw    
4 [0x4]:         ret   


function: std.io.task#task.with_timeout[2154] params(1) in file: lib\support\0.2.805/io//task//task.sharp:10:15: note:  
		    static def with_timeout(mills_time : var) : job_builder {
		              ^

0 [0x0]: line: 11 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2138 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 12 new_class @26 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          movl 1   
10 [0xa]:          pushobj   
11 [0xb]:          movg @23 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2122 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 13 movl 2   
19 [0x13]:          pushobj   
20 [0x14]:          loadl ebx, fp+0   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2123 // <std.io.task#job_builder.with_timeout>   
23 [0x17]:          popobj2    
24 [0x18]:          returnobj   
25 [0x19]:          ret   


function: std.io.task#task.schedule[2155] params(1) in file: lib\support\0.2.805/io//task//task.sharp:16:15: note:  
		    static def schedule(future : var) : job_builder {
		              ^

0 [0x0]: line: 17 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2138 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 18 new_class @26 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          movl 1   
10 [0xa]:          pushobj   
11 [0xb]:          movg @23 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2122 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 19 movl 2   
19 [0x13]:          pushobj   
20 [0x14]:          loadl ebx, fp+0   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2124 // <std.io.task#job_builder.schedule>   
23 [0x17]:          popobj2    
24 [0x18]:          returnobj   
25 [0x19]:          ret   


function: std.io.task#task.with_name[2156] params(1) in file: lib\support\0.2.805/io//task//task.sharp:22:15: note:  
		    static def with_name(job_name : string) : job_builder {
		              ^

0 [0x0]: line: 23 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          movl 0   
5 [0x5]:          pushobj   
6 [0x6]:          call @2139 // <std.io.task#job_master.create_job>   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+1   
9 [0x9]: line: 24 new_class @26 // std.io.task#job_builder   
10 [0xa]:          dup    
11 [0xb]:          movl 1   
12 [0xc]:          pushobj   
13 [0xd]:          movg @23 // @std.io.task#__srt_global   
14 [0xe]:          movn #5   
16 [0x10]:          pushobj   
17 [0x11]:          call @2122 // <std.io.task#job_builder.job_builder>   
18 [0x12]:          popobj2    
19 [0x13]:          smovr_3 fp+2   
20 [0x14]: line: 25 movl 2   
21 [0x15]:          pushobj   
22 [0x16]:          movl 0   
23 [0x17]:          pushobj   
24 [0x18]:          call @2126 // <std.io.task#job_builder.with_name>   
25 [0x19]:          popobj2    
26 [0x1a]:          returnobj   
27 [0x1b]:          ret   


function: std.io.task#task.with_args[2157] params(1) in file: lib\support\0.2.805/io//task//task.sharp:28:15: note:  
		    static def with_args(args : object[]) : job_builder {
		              ^

0 [0x0]: line: 29 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2138 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 30 new_class @26 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          movl 1   
10 [0xa]:          pushobj   
11 [0xb]:          movg @23 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2122 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 31 movl 2   
19 [0x13]:          pushobj   
20 [0x14]:          movl 0   
21 [0x15]:          pushobj   
22 [0x16]:          call @2127 // <std.io.task#job_builder.with_args>   
23 [0x17]:          popobj2    
24 [0x18]:          returnobj   
25 [0x19]:          ret   


function: std.io.task#task.block[2158] params(0) in file: lib\support\0.2.805/io//task//task.sharp:34:12: note:  
			static def block() : job_builder {
		           ^

0 [0x0]: line: 35 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2138 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 36 new_class @26 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          movl 0   
10 [0xa]:          pushobj   
11 [0xb]:          movg @23 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2122 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 37 movl 1   
19 [0x13]:          pushobj   
20 [0x14]:          call @2128 // <std.io.task#job_builder.block>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: std.io.task#task.long_term[2159] params(0) in file: lib\support\0.2.805/io//task//task.sharp:40:12: note:  
			static def long_term() : job_builder {
		           ^

0 [0x0]: line: 41 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2138 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 42 new_class @26 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          movl 0   
10 [0xa]:          pushobj   
11 [0xb]:          movg @23 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2122 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 43 movl 1   
19 [0x13]:          pushobj   
20 [0x14]:          call @2129 // <std.io.task#job_builder.long_term>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: std.io.task#task.builder[2160] params(0) in file: lib\support\0.2.805/io//task//task.sharp:46:15: note:  
		    static def builder() : job_builder {
		              ^

0 [0x0]: line: 47 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2138 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 48 new_class @26 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          movl 0   
10 [0xa]:          pushobj   
11 [0xb]:          movg @23 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2122 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 49 movl 1   
19 [0x13]:          returnobj   
20 [0x14]:          ret   


function: std.io.task#task.cancel_all_jobs_by_name[2161] params(1) in file: lib\support\0.2.805/io//task//task.sharp:52:19: note:  
			public static def cancel_all_jobs_by_name(name: string) {
		                  ^

0 [0x0]: line: 53 movg @23 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          movl 0   
5 [0x5]:          pushobj   
6 [0x6]:          call @2143 // <std.io.task#job_master.cancel_jobs_by_name>   
7 [0x7]:          ret   


constructor: std.io.task#task.task[2162] params(0) in file: lib\support\0.2.805/io//task//task.sharp:9:6: note:  
		class task {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.io#thread.thread[2163] params(0) in file: lib\support\0.2.805/io//thread.sharp:7:19: note:  
		    private thread() {} // the user must use standardized constructor
		                  ^

0 [0x0]:         new_class @69 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @3371 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #6   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @2262 // <std#_object_._object_>   
10 [0xa]:         ret   


constructor: std.io#thread.thread[2164] params(2) in file: lib\support\0.2.805/io//thread.sharp:9:15: note:  
			public thread(name : string, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @69 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @3371 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #6   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @2262 // <std#_object_._object_>   
10 [0xa]: line: 10 loadl ebx, fp+2   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #11   
15 [0xf]:          loadval ebx   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]: line: 11 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #6   
24 [0x18]:          popobj   
25 [0x19]: line: 12 movg @32 // @std.io#thread_group   
26 [0x1a]:          movn #0   
28 [0x1c]:          pushobj   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #7   
32 [0x20]:          popobj   
33 [0x21]: line: 13 movl 0   
34 [0x22]:          movn #7   
36 [0x24]:          pushobj   
37 [0x25]:          call @2207 // <std.io#thread_group.get_priority>   
38 [0x26]:          movl 0   
39 [0x27]:          movn #3   
41 [0x29]:          popobj   
42 [0x2a]: line: 14 movi #-1, ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #1   
48 [0x30]:          loadval ebx   
49 [0x31]:          movi #0, adx   
51 [0x33]:          rmov adx, ebx   
52 [0x34]: line: 15 movg @31 // @std.io#thread   
53 [0x35]:          movn #0   
55 [0x37]:          movi #0, adx   
57 [0x39]:          chklen adx   
58 [0x3a]:          iaload ebx, adx   
59 [0x3b]:          movr egx, ebx   
60 [0x3c]:          inc ebx   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]:          rstore egx   
65 [0x41]:          movl 0   
66 [0x42]:          movn #2   
68 [0x44]:          loadval ebx   
69 [0x45]:          movi #0, adx   
71 [0x47]:          rmov adx, ebx   
72 [0x48]: line: 17 movl 0   
73 [0x49]:          movn #7   
75 [0x4b]:          pushobj   
76 [0x4c]:          movl 0   
77 [0x4d]:          pushobj   
78 [0x4e]:          call @2204 // <std.io#thread_group.add>   
79 [0x4f]:          ret   


constructor: std.io#thread.thread[2165] params(3) in file: lib\support\0.2.805/io//thread.sharp:20:15: note:  
			public thread(name : string, daemon: var, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @69 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @3371 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #6   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @2262 // <std#_object_._object_>   
10 [0xa]: line: 21 loadl ebx, fp+3   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #11   
15 [0xf]:          loadval ebx   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]: line: 22 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #6   
24 [0x18]:          popobj   
25 [0x19]: line: 23 loadl ebx, fp+2   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #4   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]: line: 24 movg @32 // @std.io#thread_group   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          movl 0   
39 [0x27]:          movn #7   
41 [0x29]:          popobj   
42 [0x2a]: line: 25 movl 0   
43 [0x2b]:          movn #7   
45 [0x2d]:          pushobj   
46 [0x2e]:          call @2207 // <std.io#thread_group.get_priority>   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #3   
50 [0x32]:          popobj   
51 [0x33]: line: 26 movi #-1, ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          movl 0   
55 [0x37]:          movn #1   
57 [0x39]:          loadval ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 27 movg @31 // @std.io#thread   
62 [0x3e]:          movn #0   
64 [0x40]:          movi #0, adx   
66 [0x42]:          chklen adx   
67 [0x43]:          iaload ebx, adx   
68 [0x44]:          movr egx, ebx   
69 [0x45]:          inc ebx   
70 [0x46]:          movi #0, adx   
72 [0x48]:          rmov adx, ebx   
73 [0x49]:          rstore egx   
74 [0x4a]:          movl 0   
75 [0x4b]:          movn #2   
77 [0x4d]:          loadval ebx   
78 [0x4e]:          movi #0, adx   
80 [0x50]:          rmov adx, ebx   
81 [0x51]: line: 29 movl 0   
82 [0x52]:          movn #7   
84 [0x54]:          pushobj   
85 [0x55]:          movl 0   
86 [0x56]:          pushobj   
87 [0x57]:          call @2204 // <std.io#thread_group.add>   
88 [0x58]:          ret   


constructor: std.io#thread.thread[2166] params(3) in file: lib\support\0.2.805/io//thread.sharp:32:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @69 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @3371 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #6   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @2262 // <std#_object_._object_>   
10 [0xa]: line: 33 loadl ebx, fp+2   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #11   
15 [0xf]:          loadval ebx   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]: line: 34 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #6   
24 [0x18]:          popobj   
25 [0x19]: line: 35 loadl ebx, fp+3   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #10   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]: line: 36 movg @32 // @std.io#thread_group   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          movl 0   
39 [0x27]:          movn #7   
41 [0x29]:          popobj   
42 [0x2a]: line: 37 movl 0   
43 [0x2b]:          movn #7   
45 [0x2d]:          pushobj   
46 [0x2e]:          call @2207 // <std.io#thread_group.get_priority>   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #3   
50 [0x32]:          popobj   
51 [0x33]: line: 38 movi #-1, ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          movl 0   
55 [0x37]:          movn #1   
57 [0x39]:          loadval ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 39 movg @31 // @std.io#thread   
62 [0x3e]:          movn #0   
64 [0x40]:          movi #0, adx   
66 [0x42]:          chklen adx   
67 [0x43]:          iaload ebx, adx   
68 [0x44]:          movr egx, ebx   
69 [0x45]:          inc ebx   
70 [0x46]:          movi #0, adx   
72 [0x48]:          rmov adx, ebx   
73 [0x49]:          rstore egx   
74 [0x4a]:          movl 0   
75 [0x4b]:          movn #2   
77 [0x4d]:          loadval ebx   
78 [0x4e]:          movi #0, adx   
80 [0x50]:          rmov adx, ebx   
81 [0x51]: line: 41 movl 0   
82 [0x52]:          movn #7   
84 [0x54]:          pushobj   
85 [0x55]:          movl 0   
86 [0x56]:          pushobj   
87 [0x57]:          call @2204 // <std.io#thread_group.add>   
88 [0x58]:          ret   


constructor: std.io#thread.thread[2167] params(4) in file: lib\support\0.2.805/io//thread.sharp:44:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @69 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @3371 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #6   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @2262 // <std#_object_._object_>   
10 [0xa]: line: 45 loadl ebx, fp+3   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #11   
15 [0xf]:          loadval ebx   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]: line: 46 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #6   
24 [0x18]:          popobj   
25 [0x19]: line: 47 loadl ebx, fp+4   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #10   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]: line: 48 loadl ebx, fp+2   
35 [0x23]:          rstore ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #4   
39 [0x27]:          loadval ebx   
40 [0x28]:          movi #0, adx   
42 [0x2a]:          rmov adx, ebx   
43 [0x2b]: line: 49 movg @32 // @std.io#thread_group   
44 [0x2c]:          movn #0   
46 [0x2e]:          pushobj   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #7   
50 [0x32]:          popobj   
51 [0x33]: line: 50 movl 0   
52 [0x34]:          movn #7   
54 [0x36]:          pushobj   
55 [0x37]:          call @2207 // <std.io#thread_group.get_priority>   
56 [0x38]:          movl 0   
57 [0x39]:          movn #3   
59 [0x3b]:          popobj   
60 [0x3c]: line: 51 movi #-1, ebx   
62 [0x3e]:          rstore ebx   
63 [0x3f]:          movl 0   
64 [0x40]:          movn #1   
66 [0x42]:          loadval ebx   
67 [0x43]:          movi #0, adx   
69 [0x45]:          rmov adx, ebx   
70 [0x46]: line: 52 movg @31 // @std.io#thread   
71 [0x47]:          movn #0   
73 [0x49]:          movi #0, adx   
75 [0x4b]:          chklen adx   
76 [0x4c]:          iaload ebx, adx   
77 [0x4d]:          movr egx, ebx   
78 [0x4e]:          inc ebx   
79 [0x4f]:          movi #0, adx   
81 [0x51]:          rmov adx, ebx   
82 [0x52]:          rstore egx   
83 [0x53]:          movl 0   
84 [0x54]:          movn #2   
86 [0x56]:          loadval ebx   
87 [0x57]:          movi #0, adx   
89 [0x59]:          rmov adx, ebx   
90 [0x5a]: line: 54 movl 0   
91 [0x5b]:          movn #7   
93 [0x5d]:          pushobj   
94 [0x5e]:          movl 0   
95 [0x5f]:          pushobj   
96 [0x60]:          call @2204 // <std.io#thread_group.add>   
97 [0x61]:          ret   


constructor: std.io#thread.thread[2168] params(4) in file: lib\support\0.2.805/io//thread.sharp:57:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @69 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @3371 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #6   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @2262 // <std#_object_._object_>   
10 [0xa]: line: 58 loadl ebx, fp+2   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #11   
15 [0xf]:          loadval ebx   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]: line: 59 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #6   
24 [0x18]:          popobj   
25 [0x19]: line: 60 loadl ebx, fp+3   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #10   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]: line: 61 movl 4   
35 [0x23]:          pushobj   
36 [0x24]:          movl 0   
37 [0x25]:          movn #7   
39 [0x27]:          popobj   
40 [0x28]: line: 62 movl 4   
41 [0x29]:          pushobj   
42 [0x2a]:          call @2207 // <std.io#thread_group.get_priority>   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #3   
46 [0x2e]:          popobj   
47 [0x2f]: line: 63 movi #-1, ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          loadval ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]: line: 64 movg @31 // @std.io#thread   
58 [0x3a]:          movn #0   
60 [0x3c]:          movi #0, adx   
62 [0x3e]:          chklen adx   
63 [0x3f]:          iaload ebx, adx   
64 [0x40]:          movr egx, ebx   
65 [0x41]:          inc ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]:          rstore egx   
70 [0x46]:          movl 0   
71 [0x47]:          movn #2   
73 [0x49]:          loadval ebx   
74 [0x4a]:          movi #0, adx   
76 [0x4c]:          rmov adx, ebx   
77 [0x4d]: line: 66 movl 0   
78 [0x4e]:          movn #7   
80 [0x50]:          pushobj   
81 [0x51]:          movl 0   
82 [0x52]:          pushobj   
83 [0x53]:          call @2204 // <std.io#thread_group.add>   
84 [0x54]:          ret   


constructor: std.io#thread.thread[2169] params(3) in file: lib\support\0.2.805/io//thread.sharp:69:18: note:  
		    public thread(name : string, main: (object[])(var), group : thread_group) {
		                 ^

0 [0x0]:         new_class @69 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @3371 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #6   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @2262 // <std#_object_._object_>   
10 [0xa]: line: 70 loadl ebx, fp+2   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #11   
15 [0xf]:          loadval ebx   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]: line: 71 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #6   
24 [0x18]:          popobj   
25 [0x19]: line: 72 movl 3   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #7   
30 [0x1e]:          popobj   
31 [0x1f]: line: 73 movl 3   
32 [0x20]:          pushobj   
33 [0x21]:          call @2207 // <std.io#thread_group.get_priority>   
34 [0x22]:          movl 0   
35 [0x23]:          movn #3   
37 [0x25]:          popobj   
38 [0x26]: line: 74 movi #-1, ebx   
40 [0x28]:          rstore ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #1   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]: line: 75 movg @31 // @std.io#thread   
49 [0x31]:          movn #0   
51 [0x33]:          movi #0, adx   
53 [0x35]:          chklen adx   
54 [0x36]:          iaload ebx, adx   
55 [0x37]:          movr egx, ebx   
56 [0x38]:          inc ebx   
57 [0x39]:          movi #0, adx   
59 [0x3b]:          rmov adx, ebx   
60 [0x3c]:          rstore egx   
61 [0x3d]:          movl 0   
62 [0x3e]:          movn #2   
64 [0x40]:          loadval ebx   
65 [0x41]:          movi #0, adx   
67 [0x43]:          rmov adx, ebx   
68 [0x44]: line: 77 movl 0   
69 [0x45]:          movn #7   
71 [0x47]:          pushobj   
72 [0x48]:          movl 0   
73 [0x49]:          pushobj   
74 [0x4a]:          call @2204 // <std.io#thread_group.add>   
75 [0x4b]:          ret   


constructor: std.io#thread.thread[2170] params(5) in file: lib\support\0.2.805/io//thread.sharp:80:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @69 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @3 //    
3 [0x3]:         call @3371 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #6   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]:         call @2262 // <std#_object_._object_>   
10 [0xa]: line: 81 loadl ebx, fp+3   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #11   
15 [0xf]:          loadval ebx   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]: line: 82 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #6   
24 [0x18]:          popobj   
25 [0x19]: line: 83 loadl ebx, fp+2   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #4   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]: line: 84 loadl ebx, fp+4   
35 [0x23]:          rstore ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #10   
39 [0x27]:          loadval ebx   
40 [0x28]:          movi #0, adx   
42 [0x2a]:          rmov adx, ebx   
43 [0x2b]: line: 85 movl 5   
44 [0x2c]:          pushobj   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #7   
48 [0x30]:          popobj   
49 [0x31]: line: 86 movl 5   
50 [0x32]:          pushobj   
51 [0x33]:          call @2207 // <std.io#thread_group.get_priority>   
52 [0x34]:          movl 0   
53 [0x35]:          movn #3   
55 [0x37]:          popobj   
56 [0x38]: line: 87 movi #-1, ebx   
58 [0x3a]:          rstore ebx   
59 [0x3b]:          movl 0   
60 [0x3c]:          movn #1   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          movi #0, adx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]: line: 88 movg @31 // @std.io#thread   
67 [0x43]:          movn #0   
69 [0x45]:          movi #0, adx   
71 [0x47]:          chklen adx   
72 [0x48]:          iaload ebx, adx   
73 [0x49]:          movr egx, ebx   
74 [0x4a]:          inc ebx   
75 [0x4b]:          movi #0, adx   
77 [0x4d]:          rmov adx, ebx   
78 [0x4e]:          rstore egx   
79 [0x4f]:          movl 0   
80 [0x50]:          movn #2   
82 [0x52]:          loadval ebx   
83 [0x53]:          movi #0, adx   
85 [0x55]:          rmov adx, ebx   
86 [0x56]: line: 90 movl 0   
87 [0x57]:          movn #7   
89 [0x59]:          pushobj   
90 [0x5a]:          movl 0   
91 [0x5b]:          pushobj   
92 [0x5c]:          call @2204 // <std.io#thread_group.add>   
93 [0x5d]:          ret   


function: std.io#thread.start[2171] params(1) in file: lib\support\0.2.805/io//thread.sharp:93:15: note:  
		    public def start(args : object[]) : thread_result {
		              ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #-1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 31   
15 [0xf]: line: 95 movl 0   
16 [0x10]:          movn #4   
18 [0x12]:          movi #0, adx   
20 [0x14]:          chklen adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @2281 // <platform.kernel#vm.thread_create>   
24 [0x18]:          movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]:          nop   
32 [0x20]: line: 96 movl 0   
33 [0x21]:          pushobj   
34 [0x22]:          movl 1   
35 [0x23]:          pushobj   
36 [0x24]:          call @2290 // <platform.kernel#vm.thread_start>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   


function: std.io#thread.start[2172] params(0) in file: lib\support\0.2.805/io//thread.sharp:99:15: note:  
		    public def start() : thread_result {
		              ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           pushnull    
3 [0x3]:           call @2171 // <std.io#thread.start>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std.io#thread.suspend[2173] params(0) in file: lib\support\0.2.805/io//thread.sharp:103:12: note:  
			public def suspend() : thread_result {
		           ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           call @2282 // <platform.kernel#vm.suspend>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 105 movl 1   
6 [0x6]:           pushobj   
7 [0x7]:           movg @34 // @std.io#thread_result   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @1931 // <std#_enum_.operator==>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 25   
15 [0xf]: line: 106 movi #1, ebx   
17 [0x11]:           rstore ebx   
18 [0x12]:           movl 0   
19 [0x13]:           movn #9   
21 [0x15]:           loadval ebx   
22 [0x16]:           movi #0, adx   
24 [0x18]:           rmov adx, ebx   
25 [0x19]:           nop   
26 [0x1a]: line: 107 movl 1   
27 [0x1b]:           returnobj   
28 [0x1c]:           ret   


function: std.io#thread.unsuspend[2174] params(0) in file: lib\support\0.2.805/io//thread.sharp:110:12: note:  
			public def unsuspend() : thread_result {
		           ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movi #0, ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           call @2283 // <platform.kernel#vm.unsuspend>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 112 movl 1   
9 [0x9]:           pushobj   
10 [0xa]:           movg @34 // @std.io#thread_result   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           call @1931 // <std#_enum_.operator==>   
15 [0xf]:           loadval ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 28   
18 [0x12]: line: 113 movi #0, ebx   
20 [0x14]:           rstore ebx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #9   
24 [0x18]:           loadval ebx   
25 [0x19]:           movi #0, adx   
27 [0x1b]:           rmov adx, ebx   
28 [0x1c]:           nop   
29 [0x1d]: line: 114 movl 1   
30 [0x1e]:           returnobj   
31 [0x1f]:           ret   


function: std.io#thread.unsuspend_and_wait[2175] params(0) in file: lib\support\0.2.805/io//thread.sharp:117:12: note:  
			public def unsuspend_and_wait() : thread_result {
		           ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movi #1, ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           call @2283 // <platform.kernel#vm.unsuspend>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 119 movl 1   
9 [0x9]:           pushobj   
10 [0xa]:           movg @34 // @std.io#thread_result   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           call @1931 // <std#_enum_.operator==>   
15 [0xf]:           loadval ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 28   
18 [0x12]: line: 120 movi #0, ebx   
20 [0x14]:           rstore ebx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #9   
24 [0x18]:           loadval ebx   
25 [0x19]:           movi #0, adx   
27 [0x1b]:           rmov adx, ebx   
28 [0x1c]:           nop   
29 [0x1d]: line: 121 movl 1   
30 [0x1e]:           returnobj   
31 [0x1f]:           ret   


function: std.io#thread.join[2176] params(0) in file: lib\support\0.2.805/io//thread.sharp:124:15: note:  
		    public def join() := vm.thread_join(self);
		              ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           call @2285 // <platform.kernel#vm.thread_join>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std.io#thread.interrupt[2177] params(0) in file: lib\support\0.2.805/io//thread.sharp:126:15: note:  
		    public def interrupt() := vm.kill(self);
		              ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           call @2286 // <platform.kernel#vm.kill>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std.io#thread.current[2178] params(0) in file: lib\support\0.2.805/io//thread.sharp:128:22: note:  
		    public static def current() := vm.current_thread();
		                     ^

0 [0x0]: line: 128 call @2287 // <platform.kernel#vm.current_thread>   
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#thread.sleep[2179] params(1) in file: lib\support\0.2.805/io//thread.sharp:130:22: note:  
		    public static def sleep(mills_time : var) := time.sleep(milliseconds, mills_time);
		                     ^

0 [0x0]: line: 130 movg @73 // @std#time_unit   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           loadl ebx, fp+0   
5 [0x5]:           rstore ebx   
6 [0x6]:           call @3482 // <std#time.sleep>   
7 [0x7]:           ret   


function: std.io#thread.wait[2180] params(0) in file: lib\support\0.2.805/io//thread.sharp:132:22: note:  
		    public static def wait() {
		                     ^

0 [0x0]: line: 133 movg @71 // @std#time   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           call @2181 // <std.io#thread.wait>   
9 [0x9]:           ret   


function: std.io#thread.wait[2181] params(1) in file: lib\support\0.2.805/io//thread.sharp:136:22: note:  
		    public static def wait(mills_time : var) {
		                     ^

0 [0x0]: line: 137 movi #1, ebx   
2 [0x2]:           rstore ebx   
3 [0x3]:           call @2287 // <platform.kernel#vm.current_thread>   
4 [0x4]:           popobj2    
5 [0x5]:           movn #9   
7 [0x7]:           loadval ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]: line: 138 movg @73 // @std#time_unit   
12 [0xc]:           movn #1   
14 [0xe]:           pushobj   
15 [0xf]:           loadl ebx, fp+0   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @3483 // <std#time.wait>   
18 [0x12]: line: 139 movi #0, ebx   
20 [0x14]:           rstore ebx   
21 [0x15]:           call @2287 // <platform.kernel#vm.current_thread>   
22 [0x16]:           popobj2    
23 [0x17]:           movn #9   
25 [0x19]:           loadval ebx   
26 [0x1a]:           movi #0, adx   
28 [0x1c]:           rmov adx, ebx   
29 [0x1d]:           ret   


function: std.io#thread.exit[2182] params(1) in file: lib\support\0.2.805/io//thread.sharp:142:22: note:  
		    public static def exit(code : var) {
		                     ^

0 [0x0]: line: 143 call @2178 // <std.io#thread.current>   
1 [0x1]:           loadl ebx, fp+0   
2 [0x2]:           rstore ebx   
3 [0x3]:           call @2288 // <platform.kernel#vm.exit_thread>   
4 [0x4]: line: 144 hlt   : protected asm start
5 [0x5]:           ret   : protected asm end


function: std.io#thread.hash[2183] params(0) in file: lib\support\0.2.805/io//thread.sharp:147:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 148 new_class @48 // std#long   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #2   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           call @2405 // <std#long.long>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: std.io#thread.yield[2184] params(0) in file: lib\support\0.2.805/io//thread.sharp:151:22: note:  
		    public static def yield() := vm.thread_yield();
		                     ^

0 [0x0]: line: 151 call @2289 // <platform.kernel#vm.thread_yield>   
1 [0x1]:           ret   


function: std.io#thread.set_exception_handler[2185] params(1) in file: lib\support\0.2.805/io//thread.sharp:153:15: note:  
		    public def set_exception_handler(error_handler: uncaught_exception_handler) {
		              ^

0 [0x0]: line: 154 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           movl 0   
3 [0x3]:           movn #12   
5 [0x5]:           popobj   
6 [0x6]:           ret   


function: std.io#thread.set_priority[2186] params(1) in file: lib\support\0.2.805/io//thread.sharp:157:15: note:  
		    public def set_priority(priority : thread_priority) : thread_result {
		              ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 159 movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           movg @33 // @std.io#thread_priority   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @1931 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           je 32   
12 [0xc]:           movl 1   
13 [0xd]:           pushobj   
14 [0xe]:           movg @33 // @std.io#thread_priority   
15 [0xf]:           movn #1   
17 [0x11]:           pushobj   
18 [0x12]:           call @1931 // <std#_enum_.operator==>   
19 [0x13]:           loadval ebx   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           je 32   
22 [0x16]:           movl 1   
23 [0x17]:           pushobj   
24 [0x18]:           movg @33 // @std.io#thread_priority   
25 [0x19]:           movn #2   
27 [0x1b]:           pushobj   
28 [0x1c]:           call @1931 // <std#_enum_.operator==>   
29 [0x1d]:           loadval ebx   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 44   
32 [0x20]: line: 163 movl 0   
33 [0x21]:           pushobj   
34 [0x22]:           movl 1   
35 [0x23]:           pushobj   
36 [0x24]:           call @1934 // <std#_enum_.get_ordinal>   
37 [0x25]:           call @2291 // <platform.kernel#vm.set_thread_priority>   
38 [0x26]:           popobj2    
39 [0x27]:           returnobj   
40 [0x28]:           movl 0   
41 [0x29]:           _ulck   
42 [0x2a]:           ret   
43 [0x2b]:           jmp @55   
44 [0x2c]: line: 166 new_class @5 // std#illegal_argument_exception   
45 [0x2d]:           dup    
46 [0x2e]:           new_class @69 // std#string   
47 [0x2f]:           dup    
48 [0x30]:           newstr @24 // invalid thread priority    
49 [0x31]:           call @3371 // <std#string.string>   
50 [0x32]:           movl 1   
51 [0x33]:           pushobj   
52 [0x34]:           call @3385 // <std#string.operator+>   
53 [0x35]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
54 [0x36]:           throw    
55 [0x37]:           nop   
56 [0x38]:           movl 0   
57 [0x39]:           _ulck   


function: std.io#thread.remove_thread[2187] params(1) in file: lib\support\0.2.805/io//thread.sharp:172:16: note:  
		    private def remove_thread(t : thread) {
		               ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #7   
3 [0x3]:           pushobj   
4 [0x4]:           movl 1   
5 [0x5]:           movn #1   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @2208 // <std.io#thread_group.remove>   
13 [0xd]:           pop   
14 [0xe]:           ret   


function: std.io#thread.get_id[2188] params(0) in file: lib\support\0.2.805/io//thread.sharp:176:15: note:  
		    public def get_id() := id;
		              ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#thread.get_native_handle[2189] params(0) in file: lib\support\0.2.805/io//thread.sharp:177:15: note:  
		    public def get_native_handle() := native_handle;
		              ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#thread.get_stack_size[2190] params(0) in file: lib\support\0.2.805/io//thread.sharp:178:15: note:  
		    public def get_stack_size() := stack_size;
		              ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#thread.get_name[2191] params(0) in file: lib\support\0.2.805/io//thread.sharp:179:15: note:  
		    public def get_name() := name;
		              ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #6   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.is_exited[2192] params(0) in file: lib\support\0.2.805/io//thread.sharp:180:15: note:  
		    public def is_exited() := exited;
		              ^

0 [0x0]: line: 180 movl 0   
1 [0x1]:           movn #5   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#thread.is_daemon[2193] params(0) in file: lib\support\0.2.805/io//thread.sharp:181:15: note:  
		    public def is_daemon() := daemon;
		              ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#thread.is_started[2194] params(0) in file: lib\support\0.2.805/io//thread.sharp:182:15: note:  
		    public def is_started() := started;
		              ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#thread.is_suspended[2195] params(0) in file: lib\support\0.2.805/io//thread.sharp:183:15: note:  
		    public def is_suspended() := suspended;
		              ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #9   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#thread.set_main[2196] params(1) in file: lib\support\0.2.805/io//thread.sharp:184:12: note:  
			public def set_main(main: (object[])(var)) := self->main = main;
		           ^

0 [0x0]: line: 184 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #11   
5 [0x5]:           loadval ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#thread.is_active[2197] params(0) in file: lib\support\0.2.805/io//thread.sharp:185:12: note:  
			public def is_active() := started && !exited;
		           ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           skne ebx // pc = 16   
8 [0x8]:           movl 0   
9 [0x9]:           movn #5   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   


function: std.io#thread.get_exit_code[2198] params(0) in file: lib\support\0.2.805/io//thread.sharp:186:12: note:  
			public def get_exit_code() := exit_code;
		           ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#thread.get_exception_handler[2199] params(0) in file: lib\support\0.2.805/io//thread.sharp:187:12: note:  
			public def get_exception_handler() := error_handler;
		           ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std.io#thread.operator==[2200] params(1) in file: lib\support\0.2.805/io//thread.sharp:189:15: note:  
		    public def operator==(t : thread) : var = native_handle==t.native_handle;
		              ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #1   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           test ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


constructor: std.io#thread_group.thread_group[2201] params(1) in file: lib\support\0.2.805/io//thread_group.sharp:5:21: note:  
			public thread_group(name : string) {
		                    ^

0 [0x0]:         new_class @89 // std#hashtable<std#int,std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @3528 // <std#hashtable<std#int,std.io#thread>.hashtable>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         new_class @94 // std#list<var>   
8 [0x8]:         dup    
9 [0x9]:         call @3619 // <std#list<var>.list>   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]:         movi #0, ebx   
16 [0x10]:         rstore ebx   
17 [0x11]:         movl 0   
18 [0x12]:         movn #4   
20 [0x14]:         loadval ebx   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         pushl 0   
25 [0x19]:         call @2262 // <std#_object_._object_>   
26 [0x1a]: line: 6 movl 1   
27 [0x1b]:         pushobj   
28 [0x1c]:         movl 0   
29 [0x1d]:         movn #2   
31 [0x1f]:         popobj   
32 [0x20]: line: 7 movg @33 // @std.io#thread_priority   
33 [0x21]:         movn #1   
35 [0x23]:         pushobj   
36 [0x24]:         movl 0   
37 [0x25]:         movn #3   
39 [0x27]:         popobj   
40 [0x28]:         ret   


constructor: std.io#thread_group.thread_group[2202] params(2) in file: lib\support\0.2.805/io//thread_group.sharp:10:21: note:  
			public thread_group(name : string, priority : thread_priority) {
		                    ^

0 [0x0]:         new_class @89 // std#hashtable<std#int,std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @3528 // <std#hashtable<std#int,std.io#thread>.hashtable>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         new_class @94 // std#list<var>   
8 [0x8]:         dup    
9 [0x9]:         call @3619 // <std#list<var>.list>   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]:         movi #0, ebx   
16 [0x10]:         rstore ebx   
17 [0x11]:         movl 0   
18 [0x12]:         movn #4   
20 [0x14]:         loadval ebx   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         pushl 0   
25 [0x19]:         call @2262 // <std#_object_._object_>   
26 [0x1a]: line: 11 movl 1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #2   
31 [0x1f]:          popobj   
32 [0x20]: line: 12 movl 2   
33 [0x21]:          pushobj   
34 [0x22]:          movl 0   
35 [0x23]:          movn #3   
37 [0x25]:          popobj   
38 [0x26]:          ret   


function: std.io#thread_group.at[2203] params(1) in file: lib\support\0.2.805/io//thread_group.sharp:15:5: note:  
			def at(id : var) := handles.at(id);
		    ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          new_class @50 // std#int   
5 [0x5]:          dup    
6 [0x6]:          loadl ebx, fp+1   
7 [0x7]:          rstore ebx   
8 [0x8]:          call @2593 // <std#int.int>   
9 [0x9]:          call @3532 // <std#hashtable<std#int,std.io#thread>.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io#thread_group.add[2204] params(1) in file: lib\support\0.2.805/io//thread_group.sharp:17:5: note:  
			def add(t : thread) {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 19 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @50 // std#int   
7 [0x7]:          dup    
8 [0x8]:          movl 1   
9 [0x9]:          pushobj   
10 [0xa]:          call @2188 // <std.io#thread.get_id>   
11 [0xb]:          call @2593 // <std#int.int>   
12 [0xc]:          movl 1   
13 [0xd]:          pushobj   
14 [0xe]:          call @3533 // <std#hashtable<std#int,std.io#thread>.put>   
15 [0xf]:          loadval ebx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 20 movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          pushobj   
22 [0x16]:          movl 1   
23 [0x17]:          pushobj   
24 [0x18]:          call @2188 // <std.io#thread.get_id>   
25 [0x19]:          call @3633 // <std#list<var>.add>   
26 [0x1a]:          nop   
27 [0x1b]: line: 22 movl 0   
28 [0x1c]:          movn #4   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          chklen adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          dec ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          ret   


function: std.io#thread_group.size[2205] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:26:5: note:  
			def size() := n_threads;
		    ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #4   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.io#thread_group.get_name[2206] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:27:5: note:  
			def get_name() := name;
		    ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#thread_group.get_priority[2207] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:28:5: note:  
			def get_priority() := default_priority;
		    ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#thread_group.remove[2208] params(1) in file: lib\support\0.2.805/io//thread_group.sharp:29:5: note:  
			def remove(id : var) : var {
		    ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 31 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @50 // std#int   
7 [0x7]:          dup    
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2593 // <std#int.int>   
11 [0xb]:          call @3534 // <std#hashtable<std#int,std.io#thread>.remove>   
12 [0xc]:          loadval ebx   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 40   
15 [0xf]: line: 32 movl 0   
16 [0x10]:          movn #4   
18 [0x12]:          movi #0, adx   
20 [0x14]:          chklen adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          movr egx, ebx   
23 [0x17]:          dec ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]: line: 33 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          rstore ebx   
33 [0x21]:          call @3639 // <std#list<var>.remove>   
34 [0x22]: line: 34 movi #1, ebx   
36 [0x24]:          return_val ebx   
37 [0x25]:          movl 0   
38 [0x26]:          _ulck   
39 [0x27]:          ret   
40 [0x28]:          nop   
41 [0x29]: line: 37 movi #0, ebx   
43 [0x2b]:          return_val ebx   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   
46 [0x2e]:          ret   
47 [0x2f]:          movl 0   
48 [0x30]:          _ulck   


function: std.io#thread_group.get_elements[2209] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:41:8: note:  
		    def get_elements() : thread[] {
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          call @3636 // <std#list<var>.size>   
5 [0x5]:          loadval ebx   
6 [0x6]:          new_classarray ebx  // std.io#thread[]   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+1   
9 [0x9]: line: 43 movi #0, ebx   
11 [0xb]:          smovr_2 ebx, fp+2   
12 [0xc]: line: 45 istorel -1, fp+4   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          pushobj   
18 [0x12]:          invoke_delegate 3617 { static=0, args=0 }   
20 [0x14]:          movl 5   
21 [0x15]:          popobj   
22 [0x16]:          iaddl 1, fp@4   
24 [0x18]:          movl 5   
25 [0x19]:          sizeof ecx   
26 [0x1a]:          loadl ebx, fp+4   
27 [0x1b]:          lt ebx, ecx   
28 [0x1c]:          jne 54   
29 [0x1d]:          iaload ecx, ebx   
30 [0x1e]:          smovr_2 ecx, fp+3   
31 [0x1f]: line: 46 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          new_class @50 // std#int   
36 [0x24]:          dup    
37 [0x25]:          loadl ebx, fp+3   
38 [0x26]:          rstore ebx   
39 [0x27]:          call @2593 // <std#int.int>   
40 [0x28]:          call @3532 // <std#hashtable<std#int,std.io#thread>.at>   
41 [0x29]:          movl 1   
42 [0x2a]:          pushobj   
43 [0x2b]:          loadl ebx, fp+2   
44 [0x2c]:          movr egx, ebx   
45 [0x2d]:          inc ebx   
46 [0x2e]:          smovr_2 ebx, fp+2   
47 [0x2f]:          movr ebx, egx   
48 [0x30]:          popobj2    
49 [0x31]:          movr adx, ebx   
50 [0x32]:          chklen adx   
51 [0x33]:          movnd adx   
52 [0x34]:          popobj   
53 [0x35]:          jmp @22   
54 [0x36]: line: 49 movl 1   
55 [0x37]:          returnobj   
56 [0x38]:          ret   


function: std.io#thread_group.find[2210] params(1) in file: lib\support\0.2.805/io//thread_group.sharp:52:8: note:  
		    def find(find_func: (thread)(var)) : thread {
		       ^

0 [0x0]: line: 53 movi #0, ebx   
2 [0x2]:          smovr_2 ebx, fp+2   
3 [0x3]:          loadl ebx, fp+2   
4 [0x4]:          rstore ebx   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          pushobj   
9 [0x9]:          call @3636 // <std#list<var>.size>   
10 [0xa]:          loadval ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          lt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 57   
16 [0x10]: line: 54 movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          new_class @50 // std#int   
21 [0x15]:          dup    
22 [0x16]:          movl 0   
23 [0x17]:          movn #1   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+2   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3626 // <std#list<var>.at>   
29 [0x1d]:          call @2593 // <std#int.int>   
30 [0x1e]:          call @3532 // <std#hashtable<std#int,std.io#thread>.at>   
31 [0x1f]:          popobj2    
32 [0x20]:          smovr_3 fp+3   
33 [0x21]: line: 55 movl 3   
34 [0x22]:          pushobj   
35 [0x23]:          pushnull    
36 [0x24]:          itest ebx   
37 [0x25]:          not ebx, ebx   
38 [0x26]:          skne ebx // pc = 46   
39 [0x27]:          loadl ebx, fp+1   
40 [0x28]:          rstore ebx   
41 [0x29]:          movl 3   
42 [0x2a]:          pushobj   
43 [0x2b]:          smov ebx, sp+[-1]   
44 [0x2c]:          calld ebx   
45 [0x2d]:          loadval ebx   
46 [0x2e]:          movr cmt, ebx   
47 [0x2f]:          jne 51   
48 [0x30]: line: 56 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   
51 [0x33]:          nop   
52 [0x34]:          loadl ebx, fp+2   
53 [0x35]:          movr egx, ebx   
54 [0x36]:          inc ebx   
55 [0x37]:          smovr_2 ebx, fp+2   
56 [0x38]:          jmp @3   
57 [0x39]: line: 60 pushnull    
58 [0x3a]:          popobj2    
59 [0x3b]:          returnobj   
60 [0x3c]:          ret   


function: std.io#thread_group.kill_all[2211] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:63:5: note:  
			def kill_all() {
		    ^

0 [0x0]: line: 64 istorel -1, fp+2   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          invoke_delegate 3617 { static=0, args=0 }   
8 [0x8]:          movl 3   
9 [0x9]:          popobj   
10 [0xa]:          iaddl 1, fp@2   
12 [0xc]:          movl 3   
13 [0xd]:          sizeof ecx   
14 [0xe]:          loadl ebx, fp+2   
15 [0xf]:          lt ebx, ecx   
16 [0x10]:          jne 32   
17 [0x11]:          iaload ecx, ebx   
18 [0x12]:          smovr_2 ecx, fp+1   
19 [0x13]: line: 65 movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          pushobj   
23 [0x17]:          new_class @50 // std#int   
24 [0x18]:          dup    
25 [0x19]:          loadl ebx, fp+1   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          call @2593 // <std#int.int>   
28 [0x1c]:          call @3532 // <std#hashtable<std#int,std.io#thread>.at>   
29 [0x1d]:          call @2177 // <std.io#thread.interrupt>   
30 [0x1e]:          pop   
31 [0x1f]:          jmp @10   
32 [0x20]:          ret   


constructor: std.io#thread_group.thread_group[2212] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @89 // std#hashtable<std#int,std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @3528 // <std#hashtable<std#int,std.io#thread>.hashtable>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         new_class @94 // std#list<var>   
8 [0x8]:         dup    
9 [0x9]:         call @3619 // <std#list<var>.list>   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]:         movi #0, ebx   
16 [0x10]:         rstore ebx   
17 [0x11]:         movl 0   
18 [0x12]:         movn #4   
20 [0x14]:         loadval ebx   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         ret   


function: std.io#__srt_global._srt_thread_start[2213] params(0) in file: lib\support\0.2.805/io//thread_kernel.sharp:5:4: note:  
		def _srt_thread_start() {
		   ^

0 [0x0]: line: 6 call @2287 // <platform.kernel#vm.current_thread>   
1 [0x1]:         popobj2    
2 [0x2]:         smovr_3 fp+0   
3 [0x3]: line: 8 movi #1, ebx   : protected asm start
5 [0x5]:         movi #0, egx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #5   
12 [0xc]:         rmov adx, egx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #8   
16 [0x10]:         rmov adx, ebx   
17 [0x11]: line: 21 call @2269 // <platform.kernel#platform.tls_init>   : protected asm end
18 [0x12]: line: 22 movi #1, ebx   
20 [0x14]:          smovr_2 ebx, fp+1   
21 [0x15]: line: 24 movl 0   : try start: try block start
22 [0x16]: line: 25 movn #11   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          iaload ebx, adx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @2293 // <platform.kernel#vm.thread_args>   
29 [0x1d]:          smov ebx, sp+[-1]   
30 [0x1e]:          calld ebx   
31 [0x1f]:          loadval ebx   
32 [0x20]:          smovr_2 ebx, fp+1   
33 [0x21]:          jmp @60   : try block end
34 [0x22]: line: 27 movl 0   : catch(std#error)
35 [0x23]:          pushobj   
36 [0x24]:          call @2199 // <std.io#thread.get_exception_handler>   
37 [0x25]:          pushnull    
38 [0x26]:          itest ebx   
39 [0x27]:          not ebx, ebx   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 50   
42 [0x2a]: line: 28 movl 0   
43 [0x2b]:          pushobj   
44 [0x2c]:          call @2199 // <std.io#thread.get_exception_handler>   
45 [0x2d]:          movl 2   
46 [0x2e]:          pushobj   
47 [0x2f]:          invoke_delegate 2216 { static=0, args=1 }   
49 [0x31]:          jmp @58   
50 [0x32]: line: 30 movl 0   
51 [0x33]:          pushobj   
52 [0x34]:          loadl ebx, fp+1   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @2288 // <platform.kernel#vm.exit_thread>   
55 [0x37]: line: 31 movl 2   
56 [0x38]:          pushobj   
57 [0x39]:          throw    
58 [0x3a]:          nop   
59 [0x3b]:          jmp @60   
60 [0x3c]:          nop   : try end
61 [0x3d]: line: 35 movl 0   
62 [0x3e]:          pushobj   
63 [0x3f]:          loadl ebx, fp+1   
64 [0x40]:          rstore ebx   
65 [0x41]:          call @2288 // <platform.kernel#vm.exit_thread>   
66 [0x42]:          ret   


function: std.io#thread_result.at[2214] params(1) in file: lib\support\0.2.805/io//thread_kernel.sharp:63:15: note:  
		    static def at(index: var) : thread_result {
		              ^

0 [0x0]: line: 64 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movg @34 // @std.io#thread_result   
3 [0x3]:          movn #16   
5 [0x5]:          pushobj   
6 [0x6]:          call @1934 // <std#_enum_.get_ordinal>   
7 [0x7]:          loadval ebx   
8 [0x8]:          loadval ecx   
9 [0x9]:          test ecx, ebx   
10 [0xa]:          movr ebx, cmt   
11 [0xb]:          movr cmt, ebx   
12 [0xc]:          jne 32   
13 [0xd]: line: 65 movg @34 // @std.io#thread_result   
14 [0xe]:          movn #17   
16 [0x10]:          pushobj   
17 [0x11]:          movg @34 // @std.io#thread_result   
18 [0x12]:          movn #17   
20 [0x14]:          sizeof ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          movi #1, ebx   
24 [0x18]:          loadval ecx   
25 [0x19]:          sub ecx, ebx -> ebx   
26 [0x1a]:          popobj2    
27 [0x1b]:          movr adx, ebx   
28 [0x1c]:          chklen adx   
29 [0x1d]:          movnd adx   
30 [0x1e]:          returnobj   
31 [0x1f]:          ret   
32 [0x20]:          nop   
33 [0x21]: line: 67 movg @34 // @std.io#thread_result   
34 [0x22]:          movn #17   
36 [0x24]:          pushobj   
37 [0x25]:          loadl ebx, fp+0   
38 [0x26]:          popobj2    
39 [0x27]:          movr adx, ebx   
40 [0x28]:          chklen adx   
41 [0x29]:          movnd adx   
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   


constructor: std.io#thread_result.thread_result[2215] params(0) in file: lib\support\0.2.805/io//thread_kernel.sharp:38:7: note:  
		mutate thread_result {
		      ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1936 // <std#_enum_._enum_>   
2 [0x2]:         ret   


std.io#uncaught_exception_handler.uncaught_exception[2216] params(1) in file: lib\support\0.2.805/io//uncaught_exception_handler.sharp:4:8: note:  
		    def uncaught_exception(err: throwable);
		       ^



constructor: std.io#uncaught_exception_handler.uncaught_exception_handler[2217] params(0) in file: lib\support\0.2.805/io//uncaught_exception_handler.sharp:3:10: note:  
		interface uncaught_exception_handler {
		         ^

0 [0x0]:         ret   


function: std.io#unix_fs.path_separator[2218] params(0) in file: lib\support\0.2.805/io//unix_fs.sharp:12:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]: line: 13 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.io#unix_fs.normalize[2219] params(1) in file: lib\support\0.2.805/io//unix_fs.sharp:20:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]: line: 21 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          call @3412 // <std#string.size>   
3 [0x3]:          loadval ebx   
4 [0x4]:          smovr_2 ebx, fp+2   
5 [0x5]: line: 22 movi #0, ebx   
7 [0x7]:          smovr_2 ebx, fp+3   
8 [0x8]: line: 23 movi #0, ebx   
10 [0xa]:          smovr_2 ebx, fp+4   
11 [0xb]:          loadl ebx, fp+4   
12 [0xc]:          rstore ebx   
13 [0xd]:          loadl ebx, fp+2   
14 [0xe]:          loadval ecx   
15 [0xf]:          lt ecx, ebx   
16 [0x10]:          movr ebx, cmt   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 317   
19 [0x13]: line: 25 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          loadl ebx, fp+4   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @3394 // <std#string.operator[>   
24 [0x18]:          loadval ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          movi #92, ebx   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          test ecx, ebx   
30 [0x1e]:          movr ebx, cmt   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 136   
33 [0x21]: line: 26 loadl ebx, fp+3   
34 [0x22]:          rstore ebx   
35 [0x23]:          movi #0, ebx   
37 [0x25]:          loadval ecx   
38 [0x26]:          gt ecx, ebx   
39 [0x27]:          movr ebx, cmt   
40 [0x28]:          skne ebx // pc = 61   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #1   
44 [0x2c]:          pushobj   
45 [0x2d]:          loadl ebx, fp+3   
46 [0x2e]:          rstore ebx   
47 [0x2f]:          movi #1, ebx   
49 [0x31]:          loadval ecx   
50 [0x32]:          sub ecx, ebx -> ebx   
51 [0x33]:          popobj2    
52 [0x34]:          movr adx, ebx   
53 [0x35]:          chklen adx   
54 [0x36]:          iaload ebx, adx   
55 [0x37]:          rstore ebx   
56 [0x38]:          movi #47, ebx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          tne ecx, ebx   
60 [0x3c]:          movr ebx, cmt   
61 [0x3d]:          movr cmt, ebx   
62 [0x3e]:          jne 80   
63 [0x3f]: line: 27 movi #47, ebx   
65 [0x41]:          rstore ebx   
66 [0x42]:          movl 0   
67 [0x43]:          movn #1   
69 [0x45]:          pushobj   
70 [0x46]:          loadl ebx, fp+3   
71 [0x47]:          movr egx, ebx   
72 [0x48]:          inc ebx   
73 [0x49]:          smovr_2 ebx, fp+3   
74 [0x4a]:          movr ebx, egx   
75 [0x4b]:          popobj2    
76 [0x4c]:          movr adx, ebx   
77 [0x4d]:          chklen adx   
78 [0x4e]:          loadval ebx   
79 [0x4f]:          rmov adx, ebx   
80 [0x50]:          nop   
81 [0x51]: line: 29 loadl ebx, fp+4   
82 [0x52]:          rstore ebx   
83 [0x53]:          movi #1, ebx   
85 [0x55]:          loadval ecx   
86 [0x56]:          add ecx, ebx -> ebx   
87 [0x57]:          rstore ebx   
88 [0x58]:          loadl ebx, fp+2   
89 [0x59]:          loadval ecx   
90 [0x5a]:          lt ecx, ebx   
91 [0x5b]:          movr ebx, cmt   
92 [0x5c]:          skne ebx // pc = 110   
93 [0x5d]:          movl 1   
94 [0x5e]:          pushobj   
95 [0x5f]:          loadl ebx, fp+4   
96 [0x60]:          rstore ebx   
97 [0x61]:          movi #1, ebx   
99 [0x63]:          loadval ecx   
100 [0x64]:          add ecx, ebx -> ebx   
101 [0x65]:          rstore ebx   
102 [0x66]:          call @3394 // <std#string.operator[>   
103 [0x67]:          loadval ebx   
104 [0x68]:          rstore ebx   
105 [0x69]:          movi #92, ebx   
107 [0x6b]:          loadval ecx   
108 [0x6c]:          test ecx, ebx   
109 [0x6d]:          movr ebx, cmt   
110 [0x6e]:          movr cmt, ebx   
111 [0x6f]:          jne 134   
112 [0x70]: line: 30 loadl ebx, fp+4   
113 [0x71]: line: 31 movr egx, ebx   
114 [0x72]:          inc ebx   
115 [0x73]:          smovr_2 ebx, fp+4   
116 [0x74]:          movl 1   
117 [0x75]:          pushobj   
118 [0x76]:          loadl ebx, fp+4   
119 [0x77]:          rstore ebx   
120 [0x78]:          call @3394 // <std#string.operator[>   
121 [0x79]:          loadval ebx   
122 [0x7a]:          rstore ebx   
123 [0x7b]:          movi #92, ebx   
125 [0x7d]:          loadval ecx   
126 [0x7e]:          test ecx, ebx   
127 [0x7f]:          movr ebx, cmt   
128 [0x80]:          movr cmt, ebx   
129 [0x81]:          je 112   
130 [0x82]: line: 33 loadl ebx, fp+4   
131 [0x83]:          movr egx, ebx   
132 [0x84]:          dec ebx   
133 [0x85]:          smovr_2 ebx, fp+4   
134 [0x86]:          nop   
135 [0x87]:          jmp @311   
136 [0x88]:          movl 1   
137 [0x89]:          pushobj   
138 [0x8a]:          loadl ebx, fp+4   
139 [0x8b]:          rstore ebx   
140 [0x8c]:          call @3394 // <std#string.operator[>   
141 [0x8d]:          loadval ebx   
142 [0x8e]:          rstore ebx   
143 [0x8f]:          movi #47, ebx   
145 [0x91]:          loadval ecx   
146 [0x92]:          test ecx, ebx   
147 [0x93]:          movr ebx, cmt   
148 [0x94]:          movr cmt, ebx   
149 [0x95]:          jne 292   
150 [0x96]: line: 37 loadl ebx, fp+4   
151 [0x97]:          rstore ebx   
152 [0x98]:          movi #1, ebx   
154 [0x9a]:          loadval ecx   
155 [0x9b]:          add ecx, ebx -> ebx   
156 [0x9c]:          rstore ebx   
157 [0x9d]:          loadl ebx, fp+2   
158 [0x9e]:          loadval ecx   
159 [0x9f]:          lt ecx, ebx   
160 [0xa0]:          movr ebx, cmt   
161 [0xa1]:          skne ebx // pc = 179   
162 [0xa2]:          movl 1   
163 [0xa3]:          pushobj   
164 [0xa4]:          loadl ebx, fp+4   
165 [0xa5]:          rstore ebx   
166 [0xa6]:          movi #1, ebx   
168 [0xa8]:          loadval ecx   
169 [0xa9]:          add ecx, ebx -> ebx   
170 [0xaa]:          rstore ebx   
171 [0xab]:          call @3394 // <std#string.operator[>   
172 [0xac]:          loadval ebx   
173 [0xad]:          rstore ebx   
174 [0xae]:          movi #47, ebx   
176 [0xb0]:          loadval ecx   
177 [0xb1]:          test ecx, ebx   
178 [0xb2]:          movr ebx, cmt   
179 [0xb3]:          movr cmt, ebx   
180 [0xb4]:          jne 234   
181 [0xb5]: line: 38 loadl ebx, fp+4   
182 [0xb6]: line: 39 movr egx, ebx   
183 [0xb7]:          inc ebx   
184 [0xb8]:          smovr_2 ebx, fp+4   
185 [0xb9]:          movl 1   
186 [0xba]:          pushobj   
187 [0xbb]:          loadl ebx, fp+4   
188 [0xbc]:          rstore ebx   
189 [0xbd]:          call @3394 // <std#string.operator[>   
190 [0xbe]:          loadval ebx   
191 [0xbf]:          rstore ebx   
192 [0xc0]:          movi #47, ebx   
194 [0xc2]:          loadval ecx   
195 [0xc3]:          test ecx, ebx   
196 [0xc4]:          movr ebx, cmt   
197 [0xc5]:          movr cmt, ebx   
198 [0xc6]:          je 181   
199 [0xc7]: line: 42 loadl ebx, fp+3   
200 [0xc8]:          rstore ebx   
201 [0xc9]:          movi #0, ebx   
203 [0xcb]:          loadval ecx   
204 [0xcc]:          gt ecx, ebx   
205 [0xcd]:          movr ebx, cmt   
206 [0xce]:          skne ebx // pc = 227   
207 [0xcf]:          movl 0   
208 [0xd0]:          movn #1   
210 [0xd2]:          pushobj   
211 [0xd3]:          loadl ebx, fp+3   
212 [0xd4]:          rstore ebx   
213 [0xd5]:          movi #1, ebx   
215 [0xd7]:          loadval ecx   
216 [0xd8]:          sub ecx, ebx -> ebx   
217 [0xd9]:          popobj2    
218 [0xda]:          movr adx, ebx   
219 [0xdb]:          chklen adx   
220 [0xdc]:          iaload ebx, adx   
221 [0xdd]:          rstore ebx   
222 [0xde]:          movi #47, ebx   
224 [0xe0]:          loadval ecx   
225 [0xe1]:          tne ecx, ebx   
226 [0xe2]:          movr ebx, cmt   
227 [0xe3]:          movr cmt, ebx   
228 [0xe4]:          jne 233   
229 [0xe5]: line: 43 loadl ebx, fp+4   
230 [0xe6]:          movr egx, ebx   
231 [0xe7]:          dec ebx   
232 [0xe8]:          smovr_2 ebx, fp+4   
233 [0xe9]:          nop   
234 [0xea]:          nop   
235 [0xeb]: line: 46 loadl ebx, fp+3   
236 [0xec]:          rstore ebx   
237 [0xed]:          movi #0, ebx   
239 [0xef]:          loadval ecx   
240 [0xf0]:          test ecx, ebx   
241 [0xf1]:          movr ebx, cmt   
242 [0xf2]:          skpe ebx // pc = 271   
243 [0xf3]:          loadl ebx, fp+3   
244 [0xf4]:          rstore ebx   
245 [0xf5]:          movi #0, ebx   
247 [0xf7]:          loadval ecx   
248 [0xf8]:          gt ecx, ebx   
249 [0xf9]:          movr ebx, cmt   
250 [0xfa]:          skne ebx // pc = 271   
251 [0xfb]:          movl 0   
252 [0xfc]:          movn #1   
254 [0xfe]:          pushobj   
255 [0xff]:          loadl ebx, fp+3   
256 [0x100]:          rstore ebx   
257 [0x101]:          movi #1, ebx   
259 [0x103]:          loadval ecx   
260 [0x104]:          sub ecx, ebx -> ebx   
261 [0x105]:          popobj2    
262 [0x106]:          movr adx, ebx   
263 [0x107]:          chklen adx   
264 [0x108]:          iaload ebx, adx   
265 [0x109]:          rstore ebx   
266 [0x10a]:          movi #47, ebx   
268 [0x10c]:          loadval ecx   
269 [0x10d]:          tne ecx, ebx   
270 [0x10e]:          movr ebx, cmt   
271 [0x10f]:          movr cmt, ebx   
272 [0x110]:          jne 290   
273 [0x111]: line: 47 movi #47, ebx   
275 [0x113]:          rstore ebx   
276 [0x114]:          movl 0   
277 [0x115]:          movn #1   
279 [0x117]:          pushobj   
280 [0x118]:          loadl ebx, fp+3   
281 [0x119]:          movr egx, ebx   
282 [0x11a]:          inc ebx   
283 [0x11b]:          smovr_2 ebx, fp+3   
284 [0x11c]:          movr ebx, egx   
285 [0x11d]:          popobj2    
286 [0x11e]:          movr adx, ebx   
287 [0x11f]:          chklen adx   
288 [0x120]:          loadval ebx   
289 [0x121]:          rmov adx, ebx   
290 [0x122]:          nop   
291 [0x123]:          jmp @311   
292 [0x124]: line: 50 movl 1   
293 [0x125]:          pushobj   
294 [0x126]:          loadl ebx, fp+4   
295 [0x127]:          rstore ebx   
296 [0x128]:          call @3394 // <std#string.operator[>   
297 [0x129]:          movl 0   
298 [0x12a]:          movn #1   
300 [0x12c]:          pushobj   
301 [0x12d]:          loadl ebx, fp+3   
302 [0x12e]:          movr egx, ebx   
303 [0x12f]:          inc ebx   
304 [0x130]:          smovr_2 ebx, fp+3   
305 [0x131]:          movr ebx, egx   
306 [0x132]:          popobj2    
307 [0x133]:          movr adx, ebx   
308 [0x134]:          chklen adx   
309 [0x135]:          loadval ebx   
310 [0x136]:          rmov adx, ebx   
311 [0x137]:          nop   
312 [0x138]:          loadl ebx, fp+4   
313 [0x139]:          movr egx, ebx   
314 [0x13a]:          inc ebx   
315 [0x13b]:          smovr_2 ebx, fp+4   
316 [0x13c]:          jmp @11   
317 [0x13d]: line: 53 new_class @69 // std#string   
318 [0x13e]:          dup    
319 [0x13f]:          movl 0   
320 [0x140]:          movn #1   
322 [0x142]:          pushobj   
323 [0x143]:          movi #0, ebx   
325 [0x145]:          rstore ebx   
326 [0x146]:          loadl ebx, fp+3   
327 [0x147]:          rstore ebx   
328 [0x148]:          call @3376 // <std#string.string>   
329 [0x149]:          popobj2    
330 [0x14a]:          returnobj   
331 [0x14b]:          ret   


function: std.io#unix_fs.get_attributes[2220] params(1) in file: lib\support\0.2.805/io//unix_fs.sharp:61:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]: line: 62 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3397 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 63 movi #0, ebx   
9 [0x9]:          smovr_2 ebx, fp+3   
10 [0xa]: line: 69 pushl 2   : protected asm start
11 [0xb]:          int 0x25   
12 [0xc]:          smovr_2 ebx, fp+3   
13 [0xd]: line: 75 loadl ebx, fp+3   : protected asm end
14 [0xe]:          return_val ebx   
15 [0xf]:          ret   


function: std.io#unix_fs.check_access[2221] params(2) in file: lib\support\0.2.805/io//unix_fs.sharp:85:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]: line: 86 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3397 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 87 movi #0, ebx   
9 [0x9]:          smovr_2 ebx, fp+4   
10 [0xa]: line: 93 pushl 3   : protected asm start
11 [0xb]:          loadl ebx, fp+2   
12 [0xc]:          int 0x24   
13 [0xd]:          smovr_2 ebx, fp+4   
14 [0xe]: line: 100 loadl ebx, fp+4   : protected asm end
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


constructor: std.io#unix_fs.unix_fs[2222] params(0) in file: lib\support\0.2.805/io//unix_fs.sharp:8:16: note:  
		protected class unix_fs base file_system {
		               ^

0 [0x0]:         movi #47, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         mov8 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         movi #512, ebx   
13 [0xd]:         newarry ebx: 0   
14 [0xe]:         movl 0   
15 [0xf]:         movn #1   
17 [0x11]:         popobj   
18 [0x12]:         ret   


function: std.io#win_fs.path_separator[2223] params(0) in file: lib\support\0.2.805/io//win_fs.sharp:15:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.io#win_fs.normalize[2224] params(1) in file: lib\support\0.2.805/io//win_fs.sharp:23:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]: line: 24 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          call @3412 // <std#string.size>   
3 [0x3]:          loadval ebx   
4 [0x4]:          smovr_2 ebx, fp+2   
5 [0x5]: line: 25 movi #0, ebx   
7 [0x7]:          smovr_2 ebx, fp+3   
8 [0x8]: line: 26 movi #0, ebx   
10 [0xa]:          smovr_2 ebx, fp+4   
11 [0xb]:          loadl ebx, fp+4   
12 [0xc]:          rstore ebx   
13 [0xd]:          loadl ebx, fp+2   
14 [0xe]:          loadval ecx   
15 [0xf]:          lt ecx, ebx   
16 [0x10]:          movr ebx, cmt   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 309   
19 [0x13]: line: 28 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          loadl ebx, fp+4   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @3394 // <std#string.operator[>   
24 [0x18]:          loadval ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          movi #47, ebx   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          test ecx, ebx   
30 [0x1e]:          movr ebx, cmt   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 136   
33 [0x21]: line: 29 loadl ebx, fp+3   
34 [0x22]:          rstore ebx   
35 [0x23]:          movi #0, ebx   
37 [0x25]:          loadval ecx   
38 [0x26]:          gt ecx, ebx   
39 [0x27]:          movr ebx, cmt   
40 [0x28]:          skne ebx // pc = 61   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #1   
44 [0x2c]:          pushobj   
45 [0x2d]:          loadl ebx, fp+3   
46 [0x2e]:          rstore ebx   
47 [0x2f]:          movi #1, ebx   
49 [0x31]:          loadval ecx   
50 [0x32]:          sub ecx, ebx -> ebx   
51 [0x33]:          popobj2    
52 [0x34]:          movr adx, ebx   
53 [0x35]:          chklen adx   
54 [0x36]:          iaload ebx, adx   
55 [0x37]:          rstore ebx   
56 [0x38]:          movi #92, ebx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          tne ecx, ebx   
60 [0x3c]:          movr ebx, cmt   
61 [0x3d]:          movr cmt, ebx   
62 [0x3e]:          jne 80   
63 [0x3f]: line: 30 movi #92, ebx   
65 [0x41]:          rstore ebx   
66 [0x42]:          movl 0   
67 [0x43]:          movn #1   
69 [0x45]:          pushobj   
70 [0x46]:          loadl ebx, fp+3   
71 [0x47]:          movr egx, ebx   
72 [0x48]:          inc ebx   
73 [0x49]:          smovr_2 ebx, fp+3   
74 [0x4a]:          movr ebx, egx   
75 [0x4b]:          popobj2    
76 [0x4c]:          movr adx, ebx   
77 [0x4d]:          chklen adx   
78 [0x4e]:          loadval ebx   
79 [0x4f]:          rmov adx, ebx   
80 [0x50]:          nop   
81 [0x51]: line: 32 loadl ebx, fp+4   
82 [0x52]:          rstore ebx   
83 [0x53]:          movi #1, ebx   
85 [0x55]:          loadval ecx   
86 [0x56]:          add ecx, ebx -> ebx   
87 [0x57]:          rstore ebx   
88 [0x58]:          loadl ebx, fp+2   
89 [0x59]:          loadval ecx   
90 [0x5a]:          lt ecx, ebx   
91 [0x5b]:          movr ebx, cmt   
92 [0x5c]:          skne ebx // pc = 110   
93 [0x5d]:          movl 1   
94 [0x5e]:          pushobj   
95 [0x5f]:          loadl ebx, fp+4   
96 [0x60]:          rstore ebx   
97 [0x61]:          movi #1, ebx   
99 [0x63]:          loadval ecx   
100 [0x64]:          add ecx, ebx -> ebx   
101 [0x65]:          rstore ebx   
102 [0x66]:          call @3394 // <std#string.operator[>   
103 [0x67]:          loadval ebx   
104 [0x68]:          rstore ebx   
105 [0x69]:          movi #47, ebx   
107 [0x6b]:          loadval ecx   
108 [0x6c]:          test ecx, ebx   
109 [0x6d]:          movr ebx, cmt   
110 [0x6e]:          movr cmt, ebx   
111 [0x6f]:          jne 134   
112 [0x70]: line: 33 loadl ebx, fp+4   
113 [0x71]: line: 34 movr egx, ebx   
114 [0x72]:          inc ebx   
115 [0x73]:          smovr_2 ebx, fp+4   
116 [0x74]:          movl 1   
117 [0x75]:          pushobj   
118 [0x76]:          loadl ebx, fp+4   
119 [0x77]:          rstore ebx   
120 [0x78]:          call @3394 // <std#string.operator[>   
121 [0x79]:          loadval ebx   
122 [0x7a]:          rstore ebx   
123 [0x7b]:          movi #47, ebx   
125 [0x7d]:          loadval ecx   
126 [0x7e]:          test ecx, ebx   
127 [0x7f]:          movr ebx, cmt   
128 [0x80]:          movr cmt, ebx   
129 [0x81]:          je 112   
130 [0x82]: line: 36 loadl ebx, fp+4   
131 [0x83]:          movr egx, ebx   
132 [0x84]:          dec ebx   
133 [0x85]:          smovr_2 ebx, fp+4   
134 [0x86]:          nop   
135 [0x87]:          jmp @303   
136 [0x88]:          movl 1   
137 [0x89]:          pushobj   
138 [0x8a]:          loadl ebx, fp+4   
139 [0x8b]:          rstore ebx   
140 [0x8c]:          call @3394 // <std#string.operator[>   
141 [0x8d]:          loadval ebx   
142 [0x8e]:          rstore ebx   
143 [0x8f]:          movi #92, ebx   
145 [0x91]:          loadval ecx   
146 [0x92]:          test ecx, ebx   
147 [0x93]:          movr ebx, cmt   
148 [0x94]:          movr cmt, ebx   
149 [0x95]:          jne 284   
150 [0x96]: line: 40 loadl ebx, fp+4   
151 [0x97]:          rstore ebx   
152 [0x98]:          movi #1, ebx   
154 [0x9a]:          loadval ecx   
155 [0x9b]:          add ecx, ebx -> ebx   
156 [0x9c]:          rstore ebx   
157 [0x9d]:          loadl ebx, fp+2   
158 [0x9e]:          loadval ecx   
159 [0x9f]:          lt ecx, ebx   
160 [0xa0]:          movr ebx, cmt   
161 [0xa1]:          skne ebx // pc = 179   
162 [0xa2]:          movl 1   
163 [0xa3]:          pushobj   
164 [0xa4]:          loadl ebx, fp+4   
165 [0xa5]:          rstore ebx   
166 [0xa6]:          movi #1, ebx   
168 [0xa8]:          loadval ecx   
169 [0xa9]:          add ecx, ebx -> ebx   
170 [0xaa]:          rstore ebx   
171 [0xab]:          call @3394 // <std#string.operator[>   
172 [0xac]:          loadval ebx   
173 [0xad]:          rstore ebx   
174 [0xae]:          movi #92, ebx   
176 [0xb0]:          loadval ecx   
177 [0xb1]:          test ecx, ebx   
178 [0xb2]:          movr ebx, cmt   
179 [0xb3]:          movr cmt, ebx   
180 [0xb4]:          jne 234   
181 [0xb5]: line: 41 loadl ebx, fp+4   
182 [0xb6]: line: 42 movr egx, ebx   
183 [0xb7]:          inc ebx   
184 [0xb8]:          smovr_2 ebx, fp+4   
185 [0xb9]:          movl 1   
186 [0xba]:          pushobj   
187 [0xbb]:          loadl ebx, fp+4   
188 [0xbc]:          rstore ebx   
189 [0xbd]:          call @3394 // <std#string.operator[>   
190 [0xbe]:          loadval ebx   
191 [0xbf]:          rstore ebx   
192 [0xc0]:          movi #92, ebx   
194 [0xc2]:          loadval ecx   
195 [0xc3]:          test ecx, ebx   
196 [0xc4]:          movr ebx, cmt   
197 [0xc5]:          movr cmt, ebx   
198 [0xc6]:          je 181   
199 [0xc7]: line: 45 loadl ebx, fp+3   
200 [0xc8]:          rstore ebx   
201 [0xc9]:          movi #0, ebx   
203 [0xcb]:          loadval ecx   
204 [0xcc]:          gt ecx, ebx   
205 [0xcd]:          movr ebx, cmt   
206 [0xce]:          skne ebx // pc = 227   
207 [0xcf]:          movl 0   
208 [0xd0]:          movn #1   
210 [0xd2]:          pushobj   
211 [0xd3]:          loadl ebx, fp+3   
212 [0xd4]:          rstore ebx   
213 [0xd5]:          movi #1, ebx   
215 [0xd7]:          loadval ecx   
216 [0xd8]:          sub ecx, ebx -> ebx   
217 [0xd9]:          popobj2    
218 [0xda]:          movr adx, ebx   
219 [0xdb]:          chklen adx   
220 [0xdc]:          iaload ebx, adx   
221 [0xdd]:          rstore ebx   
222 [0xde]:          movi #92, ebx   
224 [0xe0]:          loadval ecx   
225 [0xe1]:          tne ecx, ebx   
226 [0xe2]:          movr ebx, cmt   
227 [0xe3]:          movr cmt, ebx   
228 [0xe4]:          jne 233   
229 [0xe5]: line: 46 loadl ebx, fp+4   
230 [0xe6]:          movr egx, ebx   
231 [0xe7]:          dec ebx   
232 [0xe8]:          smovr_2 ebx, fp+4   
233 [0xe9]:          nop   
234 [0xea]:          nop   
235 [0xeb]: line: 49 loadl ebx, fp+3   
236 [0xec]:          rstore ebx   
237 [0xed]:          movi #0, ebx   
239 [0xef]:          loadval ecx   
240 [0xf0]:          gt ecx, ebx   
241 [0xf1]:          movr ebx, cmt   
242 [0xf2]:          skne ebx // pc = 263   
243 [0xf3]:          movl 0   
244 [0xf4]:          movn #1   
246 [0xf6]:          pushobj   
247 [0xf7]:          loadl ebx, fp+3   
248 [0xf8]:          rstore ebx   
249 [0xf9]:          movi #1, ebx   
251 [0xfb]:          loadval ecx   
252 [0xfc]:          sub ecx, ebx -> ebx   
253 [0xfd]:          popobj2    
254 [0xfe]:          movr adx, ebx   
255 [0xff]:          chklen adx   
256 [0x100]:          iaload ebx, adx   
257 [0x101]:          rstore ebx   
258 [0x102]:          movi #92, ebx   
260 [0x104]:          loadval ecx   
261 [0x105]:          tne ecx, ebx   
262 [0x106]:          movr ebx, cmt   
263 [0x107]:          movr cmt, ebx   
264 [0x108]:          jne 282   
265 [0x109]: line: 50 movi #92, ebx   
267 [0x10b]:          rstore ebx   
268 [0x10c]:          movl 0   
269 [0x10d]:          movn #1   
271 [0x10f]:          pushobj   
272 [0x110]:          loadl ebx, fp+3   
273 [0x111]:          movr egx, ebx   
274 [0x112]:          inc ebx   
275 [0x113]:          smovr_2 ebx, fp+3   
276 [0x114]:          movr ebx, egx   
277 [0x115]:          popobj2    
278 [0x116]:          movr adx, ebx   
279 [0x117]:          chklen adx   
280 [0x118]:          loadval ebx   
281 [0x119]:          rmov adx, ebx   
282 [0x11a]:          nop   
283 [0x11b]:          jmp @303   
284 [0x11c]: line: 53 movl 1   
285 [0x11d]:          pushobj   
286 [0x11e]:          loadl ebx, fp+4   
287 [0x11f]:          rstore ebx   
288 [0x120]:          call @3394 // <std#string.operator[>   
289 [0x121]:          movl 0   
290 [0x122]:          movn #1   
292 [0x124]:          pushobj   
293 [0x125]:          loadl ebx, fp+3   
294 [0x126]:          movr egx, ebx   
295 [0x127]:          inc ebx   
296 [0x128]:          smovr_2 ebx, fp+3   
297 [0x129]:          movr ebx, egx   
298 [0x12a]:          popobj2    
299 [0x12b]:          movr adx, ebx   
300 [0x12c]:          chklen adx   
301 [0x12d]:          loadval ebx   
302 [0x12e]:          rmov adx, ebx   
303 [0x12f]:          nop   
304 [0x130]:          loadl ebx, fp+4   
305 [0x131]:          movr egx, ebx   
306 [0x132]:          inc ebx   
307 [0x133]:          smovr_2 ebx, fp+4   
308 [0x134]:          jmp @11   
309 [0x135]: line: 56 new_class @69 // std#string   
310 [0x136]:          dup    
311 [0x137]:          movl 0   
312 [0x138]:          movn #1   
314 [0x13a]:          pushobj   
315 [0x13b]:          movi #0, ebx   
317 [0x13d]:          rstore ebx   
318 [0x13e]:          loadl ebx, fp+3   
319 [0x13f]:          rstore ebx   
320 [0x140]:          call @3376 // <std#string.string>   
321 [0x141]:          popobj2    
322 [0x142]:          returnobj   
323 [0x143]:          ret   


function: std.io#win_fs.get_attributes[2225] params(1) in file: lib\support\0.2.805/io//win_fs.sharp:64:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]: line: 65 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3397 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 66 movi #0, ebx   
9 [0x9]:          smovr_2 ebx, fp+3   
10 [0xa]: line: 72 pushl 2   : protected asm start
11 [0xb]:          int 0x25   
12 [0xc]:          smovr_2 ebx, fp+3   
13 [0xd]: line: 78 loadl ebx, fp+3   : protected asm end
14 [0xe]:          return_val ebx   
15 [0xf]:          ret   


function: std.io#win_fs.check_access[2226] params(2) in file: lib\support\0.2.805/io//win_fs.sharp:88:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]: line: 89 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3397 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 90 movi #0, ebx   
9 [0x9]:          smovr_2 ebx, fp+4   
10 [0xa]: line: 93 loadl ebx, fp+2   
11 [0xb]:          rstore ebx   
12 [0xc]:          ldc ebx // 1   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 22   
18 [0x12]: line: 94 movi #-1, ebx   
20 [0x14]:          return_val ebx   
21 [0x15]:          ret   
22 [0x16]:          nop   
23 [0x17]: line: 100 pushl 3   : protected asm start
24 [0x18]:           loadl ebx, fp+2   
25 [0x19]:           int 0x24   
26 [0x1a]:           smovr_2 ebx, fp+4   
27 [0x1b]: line: 107 loadl ebx, fp+4   : protected asm end
28 [0x1c]:           return_val ebx   
29 [0x1d]:           ret   


constructor: std.io#win_fs.win_fs[2227] params(0) in file: lib\support\0.2.805/io//win_fs.sharp:11:16: note:  
		protected class win_fs base file_system {
		               ^

0 [0x0]:         movi #92, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         mov8 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         movi #512, ebx   
13 [0xd]:         newarry ebx: 0   
14 [0xe]:         movl 0   
15 [0xf]:         movn #1   
17 [0x11]:         popobj   
18 [0x12]:         ret   


function: std.math#__srt_global.is_nan[2228] params(1) in file: lib\support\0.2.805/math//math.sharp:44:18: note:  
		public static def is_nan(v: var): var {
		                 ^

0 [0x0]: line: 45 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          loadl ebx, fp+0   
3 [0x3]:          loadval ecx   
4 [0x4]:          tne ecx, ebx   
5 [0x5]:          movr ebx, cmt   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.math#__srt_global.is_infinite[2229] params(1) in file: lib\support\0.2.805/math//math.sharp:56:18: note:  
		public static def is_infinite(v: var): var {
		                 ^

0 [0x0]: line: 57 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          ldc ebx // inf   
3 [0x3]:          loadval ecx   
4 [0x4]:          test ecx, ebx   
5 [0x5]:          movr ebx, cmt   
6 [0x6]:          skpe ebx // pc = 14   
7 [0x7]:          loadl ebx, fp+0   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #-2147483648, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          return_val ebx   
15 [0xf]:          ret   


function: std.math#__srt_global.sin[2230] params(1) in file: lib\support\0.2.805/math//math.sharp:60:4: note:  
		def sin(num: var) : var {
		   ^

0 [0x0]: line: 61 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #0, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.math#__srt_global.cos[2231] params(1) in file: lib\support\0.2.805/math//math.sharp:64:4: note:  
		def cos(num: var) : var {
		   ^

0 [0x0]: line: 65 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #1, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.math#__srt_global.tan[2232] params(1) in file: lib\support\0.2.805/math//math.sharp:68:4: note:  
		def tan(num: var) : var {
		   ^

0 [0x0]: line: 69 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #2, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.math#__srt_global.sinh[2233] params(1) in file: lib\support\0.2.805/math//math.sharp:72:4: note:  
		def sinh(num: var) : var {
		   ^

0 [0x0]: line: 73 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #3, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.math#__srt_global.cosh[2234] params(1) in file: lib\support\0.2.805/math//math.sharp:76:4: note:  
		def cosh(num: var) : var {
		   ^

0 [0x0]: line: 77 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #4, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.math#__srt_global.tanh[2235] params(1) in file: lib\support\0.2.805/math//math.sharp:80:4: note:  
		def tanh(num: var) : var {
		   ^

0 [0x0]: line: 81 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #5, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.math#__srt_global.asin[2236] params(1) in file: lib\support\0.2.805/math//math.sharp:84:4: note:  
		def asin(num: var) : var {
		   ^

0 [0x0]: line: 85 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #6, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.math#__srt_global.acos[2237] params(1) in file: lib\support\0.2.805/math//math.sharp:88:4: note:  
		def acos(num: var) : var {
		   ^

0 [0x0]: line: 89 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #7, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.math#__srt_global.atan[2238] params(1) in file: lib\support\0.2.805/math//math.sharp:92:4: note:  
		def atan(num: var) : var {
		   ^

0 [0x0]: line: 93 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #8, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: std.math#__srt_global.atan[2239] params(2) in file: lib\support\0.2.805/math//math.sharp:96:4: note:  
		def atan(num1: var, num2: var) : var {
		   ^

0 [0x0]: line: 97 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          loadl ebx, fp+1   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #9, ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @2253 // <std.math#__srt_global.math_proc>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std.math#__srt_global.exp[2240] params(1) in file: lib\support\0.2.805/math//math.sharp:100:4: note:  
		def exp(num: var) : var {
		   ^

0 [0x0]: line: 101 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movi #10, ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.math#__srt_global.log[2241] params(1) in file: lib\support\0.2.805/math//math.sharp:104:4: note:  
		def log(num: var) : var {
		   ^

0 [0x0]: line: 105 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movi #11, ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.math#__srt_global.log10[2242] params(1) in file: lib\support\0.2.805/math//math.sharp:108:4: note:  
		def log10(num: var) : var {
		   ^

0 [0x0]: line: 109 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movi #12, ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.math#__srt_global.pow[2243] params(2) in file: lib\support\0.2.805/math//math.sharp:112:4: note:  
		def pow(num: var, exp: var) : var {
		   ^

0 [0x0]: line: 113 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           movi #13, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2253 // <std.math#__srt_global.math_proc>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.math#__srt_global.sqrt[2244] params(1) in file: lib\support\0.2.805/math//math.sharp:116:4: note:  
		def sqrt(num: var) : var {
		   ^

0 [0x0]: line: 117 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movi #14, ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.math#__srt_global.ceil[2245] params(1) in file: lib\support\0.2.805/math//math.sharp:120:4: note:  
		def ceil(num: var) : var {
		   ^

0 [0x0]: line: 121 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movi #15, ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.math#__srt_global.floor[2246] params(1) in file: lib\support\0.2.805/math//math.sharp:124:4: note:  
		def floor(num: var) : var {
		   ^

0 [0x0]: line: 125 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movi #16, ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.math#__srt_global.abs[2247] params(1) in file: lib\support\0.2.805/math//math.sharp:128:4: note:  
		def abs(num: var) : var {
		   ^

0 [0x0]: line: 129 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @2248 // <std.math#__srt_global.fabs>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.math#__srt_global.fabs[2248] params(1) in file: lib\support\0.2.805/math//math.sharp:132:12: note:  
		private def fabs(num: var) : var {
		           ^

0 [0x0]: line: 133 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movi #17, ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           call @2252 // <std.math#__srt_global.math_proc>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.math#__srt_global.ldexp[2249] params(2) in file: lib\support\0.2.805/math//math.sharp:136:4: note:  
		def ldexp(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 137 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           movi #18, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2253 // <std.math#__srt_global.math_proc>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.math#__srt_global.fmod[2250] params(2) in file: lib\support\0.2.805/math//math.sharp:140:4: note:  
		def fmod(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 141 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           movi #19, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2253 // <std.math#__srt_global.math_proc>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.math#__srt_global.round[2251] params(1) in file: lib\support\0.2.805/math//math.sharp:144:4: note:  
		def round(num: var) : var {
		   ^

0 [0x0]: line: 145 loadl ebx, fp+0   
1 [0x1]:           mov64 ebx, ebx   
2 [0x2]:           mov64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 146 loadl ebx, fp+1   
5 [0x5]:           subl ebx, fp@0   
6 [0x6]: line: 148 loadl ebx, fp+0   
7 [0x7]:           rstore ebx   
8 [0x8]:           ldc ebx // 0.5   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 23   
14 [0xe]:           loadl ebx, fp+1   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #1, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           add ecx, ebx -> ebx   
20 [0x14]:           return_val ebx   
21 [0x15]:           ret   
22 [0x16]:           jmp @26   
23 [0x17]: line: 149 loadl ebx, fp+1   
24 [0x18]:           return_val ebx   
25 [0x19]:           ret   
26 [0x1a]:           nop   


function: std.math#__srt_global.math_proc[2252] params(2) in file: lib\support\0.2.805/math//math.sharp:152:10: note:  
		local def math_proc(num: var, proc: var) : var {
		         ^

0 [0x0]: line: 153 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl ecx, fp+1   
2 [0x2]:           int 0x18   
3 [0x3]:           return_val cmt   
4 [0x4]:           ret   
5 [0x5]: line: 161 movi #0, ebx   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.math#__srt_global.math_proc[2253] params(3) in file: lib\support\0.2.805/math//math.sharp:164:10: note:  
		local def math_proc(num:var, num2: var, proc: var) : var {
		         ^

0 [0x0]: line: 165 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl egx, fp+1   
2 [0x2]:           loadl ecx, fp+2   
3 [0x3]:           int 0x18   
4 [0x4]:           return_val cmt   
5 [0x5]:           ret   
6 [0x6]: line: 174 movi #0, ebx   : protected asm end
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


function: std#_nil_.to_string[2254] params(0) in file: lib\support\0.2.805/nil.sharp:14:15: note:  
		    public def to_string() := new string("nil");
		              ^

0 [0x0]: line: 14 new_class @69 // std#string   
1 [0x1]:          dup    
2 [0x2]:          newstr @1 // nil   
3 [0x3]:          call @3371 // <std#string.string>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


constructor: std#_nil_._nil_[2255] params(0) in file: lib\support\0.2.805/nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


function: std#_object_.to_string[2256] params(0) in file: lib\support\0.2.805/object.sharp:13:15: note:  
		    public def to_string() := new string();
		              ^

0 [0x0]: line: 13 new_class @69 // std#string   
1 [0x1]:          dup    
2 [0x2]:          call @3429 // <std#string.string>   
3 [0x3]:          popobj2    
4 [0x4]:          returnobj   
5 [0x5]:          ret   


function: std#_object_.wait[2257] params(0) in file: lib\support\0.2.805/object.sharp:15:8: note:  
		    def wait() {
		       ^

0 [0x0]: line: 16 pushl 0   : protected asm start
1 [0x1]:          int 0x3c   
2 [0x2]:          ret   : protected asm end


function: std#_object_.notify[2258] params(0) in file: lib\support\0.2.805/object.sharp:22:8: note:  
		    def notify() {
		       ^

0 [0x0]: line: 23 pushl 0   : protected asm start
1 [0x1]:          int 0x3d   
2 [0x2]:          ret   : protected asm end


function: std#_object_.notify[2259] params(1) in file: lib\support\0.2.805/object.sharp:29:8: note:  
		    def notify(mills: var) {
		       ^

0 [0x0]: line: 30 pushl 0   : protected asm start
1 [0x1]:          loadl ebx, fp+1   
2 [0x2]:          int 0x3e   
3 [0x3]:          ret   : protected asm end


function: std#_object_.hash[2260] params(0) in file: lib\support\0.2.805/object.sharp:37:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 39 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movi #0, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @2405 // <std#long.long>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std#_object_.guid[2261] params(0) in file: lib\support\0.2.805/object.sharp:42:8: note:  
		    def guid() : long {
		       ^

0 [0x0]: line: 44 new_class @48 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movg @1 // @std#__srt_global   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          movr egx, ebx   
10 [0xa]:          inc ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]:          rstore egx   
15 [0xf]:          call @2405 // <std#long.long>   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


constructor: std#_object_._object_[2262] params(0) in file: lib\support\0.2.805/object.sharp:11:13: note:  
		stable class _object_ : printable, unique {
		            ^

0 [0x0]:         ret   


function: platform#build.is_windows[2263] params(0) in file: lib\support\0.2.805/platform//build.sharp:9:15: note:  
		    static def is_windows() : var {
		              ^

0 [0x0]: line: 10 movg @42 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @25 // win   
5 [0x5]:          call @3388 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: platform#build.is_linux[2264] params(0) in file: lib\support\0.2.805/platform//build.sharp:13:15: note:  
		    static def is_linux() : var {
		              ^

0 [0x0]: line: 14 movg @42 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @26 // posix   
5 [0x5]:          call @3388 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: platform#build.build[2265] params(0) in file: lib\support\0.2.805/platform//build.sharp:3:6: note:  
		class build {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


function: platform#__srt_global.load_library[2266] params(1) in file: lib\support\0.2.805/platform//dl.sharp:5:4: note:  
		def load_library(name: string) {
		   ^

0 [0x0]: line: 6 movl 0   
1 [0x1]:         pushobj   
2 [0x2]:         call @2273 // <platform.kernel#platform.load_library>   
3 [0x3]:         ret   


function: platform#__srt_global.free_library[2267] params(1) in file: lib\support\0.2.805/platform//dl.sharp:9:4: note:  
		def free_library(name: string): var {
		   ^

0 [0x0]: line: 10 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @2274 // <platform.kernel#platform.free_library>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: platform#__srt_global.link[2268] params(2) in file: lib\support\0.2.805/platform//dl.sharp:13:4: note:  
		def link(name: string, library: string): var {
		   ^

0 [0x0]: line: 14 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @2275 // <platform.kernel#platform.link_func>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: platform.kernel#platform.tls_init[2269] params(0) in file: lib\support\0.2.805/platform//kernel//platform.sharp:13:15: note:  
		    static def tls_init() {}
		              ^

0 [0x0]: line: 13 ret   


function: platform.kernel#platform.static_init[2270] params(0) in file: lib\support\0.2.805/platform//kernel//platform.sharp:14:23: note:  
		    private static def static_init() {}
		                      ^

0 [0x0]: line: 14 new_class @29 // std.io.task#job_state   
1 [0x1]:          movg @29 // @std.io.task#job_state   
2 [0x2]:          movn #0   
4 [0x4]:          popobj   
5 [0x5]:          newstr @41 // created   
6 [0x6]:          movg @29 // @std.io.task#job_state   
7 [0x7]:          movn #0   
9 [0x9]:          movn #0   
11 [0xb]:          popobj   
12 [0xc]:          movi #-1, ebx   
14 [0xe]:          movg @29 // @std.io.task#job_state   
15 [0xf]:          movn #0   
17 [0x11]:          movn #1   
19 [0x13]:          movi #0, adx   
21 [0x15]:          rmov adx, ebx   
22 [0x16]:          new_class @29 // std.io.task#job_state   
23 [0x17]:          movg @29 // @std.io.task#job_state   
24 [0x18]:          movn #1   
26 [0x1a]:          popobj   
27 [0x1b]:          newstr @42 // active   
28 [0x1c]:          movg @29 // @std.io.task#job_state   
29 [0x1d]:          movn #1   
31 [0x1f]:          movn #0   
33 [0x21]:          popobj   
34 [0x22]:          movi #0, ebx   
36 [0x24]:          movg @29 // @std.io.task#job_state   
37 [0x25]:          movn #1   
39 [0x27]:          movn #1   
41 [0x29]:          movi #0, adx   
43 [0x2b]:          rmov adx, ebx   
44 [0x2c]:          new_class @29 // std.io.task#job_state   
45 [0x2d]:          movg @29 // @std.io.task#job_state   
46 [0x2e]:          movn #2   
48 [0x30]:          popobj   
49 [0x31]:          newstr @43 // completed   
50 [0x32]:          movg @29 // @std.io.task#job_state   
51 [0x33]:          movn #2   
53 [0x35]:          movn #0   
55 [0x37]:          popobj   
56 [0x38]:          movi #1, ebx   
58 [0x3a]:          movg @29 // @std.io.task#job_state   
59 [0x3b]:          movn #2   
61 [0x3d]:          movn #1   
63 [0x3f]:          movi #0, adx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          new_class @29 // std.io.task#job_state   
67 [0x43]:          movg @29 // @std.io.task#job_state   
68 [0x44]:          movn #3   
70 [0x46]:          popobj   
71 [0x47]:          newstr @44 // cancelled   
72 [0x48]:          movg @29 // @std.io.task#job_state   
73 [0x49]:          movn #3   
75 [0x4b]:          movn #0   
77 [0x4d]:          popobj   
78 [0x4e]:          movi #2, ebx   
80 [0x50]:          movg @29 // @std.io.task#job_state   
81 [0x51]:          movn #3   
83 [0x53]:          movn #1   
85 [0x55]:          movi #0, adx   
87 [0x57]:          rmov adx, ebx   
88 [0x58]:          new_class @33 // std.io#thread_priority   
89 [0x59]:          movg @33 // @std.io#thread_priority   
90 [0x5a]:          movn #0   
92 [0x5c]:          popobj   
93 [0x5d]:          newstr @45 // min_priority   
94 [0x5e]:          movg @33 // @std.io#thread_priority   
95 [0x5f]:          movn #0   
97 [0x61]:          movn #0   
99 [0x63]:          popobj   
100 [0x64]:          movi #1, ebx   
102 [0x66]:          movg @33 // @std.io#thread_priority   
103 [0x67]:          movn #0   
105 [0x69]:          movn #1   
107 [0x6b]:          movi #0, adx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          new_class @33 // std.io#thread_priority   
111 [0x6f]:          movg @33 // @std.io#thread_priority   
112 [0x70]:          movn #1   
114 [0x72]:          popobj   
115 [0x73]:          newstr @46 // norm_priority   
116 [0x74]:          movg @33 // @std.io#thread_priority   
117 [0x75]:          movn #1   
119 [0x77]:          movn #0   
121 [0x79]:          popobj   
122 [0x7a]:          movi #4, ebx   
124 [0x7c]:          movg @33 // @std.io#thread_priority   
125 [0x7d]:          movn #1   
127 [0x7f]:          movn #1   
129 [0x81]:          movi #0, adx   
131 [0x83]:          rmov adx, ebx   
132 [0x84]:          new_class @33 // std.io#thread_priority   
133 [0x85]:          movg @33 // @std.io#thread_priority   
134 [0x86]:          movn #2   
136 [0x88]:          popobj   
137 [0x89]:          newstr @47 // max_priority   
138 [0x8a]:          movg @33 // @std.io#thread_priority   
139 [0x8b]:          movn #2   
141 [0x8d]:          movn #0   
143 [0x8f]:          popobj   
144 [0x90]:          movi #6, ebx   
146 [0x92]:          movg @33 // @std.io#thread_priority   
147 [0x93]:          movn #2   
149 [0x95]:          movn #1   
151 [0x97]:          movi #0, adx   
153 [0x99]:          rmov adx, ebx   
154 [0x9a]:          new_class @34 // std.io#thread_result   
155 [0x9b]:          movg @34 // @std.io#thread_result   
156 [0x9c]:          movn #0   
158 [0x9e]:          popobj   
159 [0x9f]:          newstr @48 // result_ok   
160 [0xa0]:          movg @34 // @std.io#thread_result   
161 [0xa1]:          movn #0   
163 [0xa3]:          movn #0   
165 [0xa5]:          popobj   
166 [0xa6]:          movi #0, ebx   
168 [0xa8]:          movg @34 // @std.io#thread_result   
169 [0xa9]:          movn #0   
171 [0xab]:          movn #1   
173 [0xad]:          movi #0, adx   
175 [0xaf]:          rmov adx, ebx   
176 [0xb0]:          new_class @34 // std.io#thread_result   
177 [0xb1]:          movg @34 // @std.io#thread_result   
178 [0xb2]:          movn #1   
180 [0xb4]:          popobj   
181 [0xb5]:          newstr @49 // result_ill_thread_start   
182 [0xb6]:          movg @34 // @std.io#thread_result   
183 [0xb7]:          movn #1   
185 [0xb9]:          movn #0   
187 [0xbb]:          popobj   
188 [0xbc]:          movi #1, ebx   
190 [0xbe]:          movg @34 // @std.io#thread_result   
191 [0xbf]:          movn #1   
193 [0xc1]:          movn #1   
195 [0xc3]:          movi #0, adx   
197 [0xc5]:          rmov adx, ebx   
198 [0xc6]:          new_class @34 // std.io#thread_result   
199 [0xc7]:          movg @34 // @std.io#thread_result   
200 [0xc8]:          movn #2   
202 [0xca]:          popobj   
203 [0xcb]:          newstr @50 // result_thread_running   
204 [0xcc]:          movg @34 // @std.io#thread_result   
205 [0xcd]:          movn #2   
207 [0xcf]:          movn #0   
209 [0xd1]:          popobj   
210 [0xd2]:          movi #2, ebx   
212 [0xd4]:          movg @34 // @std.io#thread_result   
213 [0xd5]:          movn #2   
215 [0xd7]:          movn #1   
217 [0xd9]:          movi #0, adx   
219 [0xdb]:          rmov adx, ebx   
220 [0xdc]:          new_class @34 // std.io#thread_result   
221 [0xdd]:          movg @34 // @std.io#thread_result   
222 [0xde]:          movn #3   
224 [0xe0]:          popobj   
225 [0xe1]:          newstr @51 // result_thread_terminated   
226 [0xe2]:          movg @34 // @std.io#thread_result   
227 [0xe3]:          movn #3   
229 [0xe5]:          movn #0   
231 [0xe7]:          popobj   
232 [0xe8]:          movi #3, ebx   
234 [0xea]:          movg @34 // @std.io#thread_result   
235 [0xeb]:          movn #3   
237 [0xed]:          movn #1   
239 [0xef]:          movi #0, adx   
241 [0xf1]:          rmov adx, ebx   
242 [0xf2]:          new_class @34 // std.io#thread_result   
243 [0xf3]:          movg @34 // @std.io#thread_result   
244 [0xf4]:          movn #4   
246 [0xf6]:          popobj   
247 [0xf7]:          newstr @52 // result_invalid_stack_size   
248 [0xf8]:          movg @34 // @std.io#thread_result   
249 [0xf9]:          movn #4   
251 [0xfb]:          movn #0   
253 [0xfd]:          popobj   
254 [0xfe]:          movi #4, ebx   
256 [0x100]:          movg @34 // @std.io#thread_result   
257 [0x101]:          movn #4   
259 [0x103]:          movn #1   
261 [0x105]:          movi #0, adx   
263 [0x107]:          rmov adx, ebx   
264 [0x108]:          new_class @34 // std.io#thread_result   
265 [0x109]:          movg @34 // @std.io#thread_result   
266 [0x10a]:          movn #5   
268 [0x10c]:          popobj   
269 [0x10d]:          newstr @53 // result_thread_not_started   
270 [0x10e]:          movg @34 // @std.io#thread_result   
271 [0x10f]:          movn #5   
273 [0x111]:          movn #0   
275 [0x113]:          popobj   
276 [0x114]:          movi #5, ebx   
278 [0x116]:          movg @34 // @std.io#thread_result   
279 [0x117]:          movn #5   
281 [0x119]:          movn #1   
283 [0x11b]:          movi #0, adx   
285 [0x11d]:          rmov adx, ebx   
286 [0x11e]:          new_class @34 // std.io#thread_result   
287 [0x11f]:          movg @34 // @std.io#thread_result   
288 [0x120]:          movn #6   
290 [0x122]:          popobj   
291 [0x123]:          newstr @54 // result_ill_thread_join   
292 [0x124]:          movg @34 // @std.io#thread_result   
293 [0x125]:          movn #6   
295 [0x127]:          movn #0   
297 [0x129]:          popobj   
298 [0x12a]:          movi #6, ebx   
300 [0x12c]:          movg @34 // @std.io#thread_result   
301 [0x12d]:          movn #6   
303 [0x12f]:          movn #1   
305 [0x131]:          movi #0, adx   
307 [0x133]:          rmov adx, ebx   
308 [0x134]:          new_class @34 // std.io#thread_result   
309 [0x135]:          movg @34 // @std.io#thread_result   
310 [0x136]:          movn #7   
312 [0x138]:          popobj   
313 [0x139]:          newstr @55 // result_thread_join_failed   
314 [0x13a]:          movg @34 // @std.io#thread_result   
315 [0x13b]:          movn #7   
317 [0x13d]:          movn #0   
319 [0x13f]:          popobj   
320 [0x140]:          movi #7, ebx   
322 [0x142]:          movg @34 // @std.io#thread_result   
323 [0x143]:          movn #7   
325 [0x145]:          movn #1   
327 [0x147]:          movi #0, adx   
329 [0x149]:          rmov adx, ebx   
330 [0x14a]:          new_class @34 // std.io#thread_result   
331 [0x14b]:          movg @34 // @std.io#thread_result   
332 [0x14c]:          movn #8   
334 [0x14e]:          popobj   
335 [0x14f]:          newstr @56 // result_ill_thread_interrupt   
336 [0x150]:          movg @34 // @std.io#thread_result   
337 [0x151]:          movn #8   
339 [0x153]:          movn #0   
341 [0x155]:          popobj   
342 [0x156]:          movi #8, ebx   
344 [0x158]:          movg @34 // @std.io#thread_result   
345 [0x159]:          movn #8   
347 [0x15b]:          movn #1   
349 [0x15d]:          movi #0, adx   
351 [0x15f]:          rmov adx, ebx   
352 [0x160]:          new_class @34 // std.io#thread_result   
353 [0x161]:          movg @34 // @std.io#thread_result   
354 [0x162]:          movn #9   
356 [0x164]:          popobj   
357 [0x165]:          newstr @57 // result_thread_interrupt_failed   
358 [0x166]:          movg @34 // @std.io#thread_result   
359 [0x167]:          movn #9   
361 [0x169]:          movn #0   
363 [0x16b]:          popobj   
364 [0x16c]:          movi #9, ebx   
366 [0x16e]:          movg @34 // @std.io#thread_result   
367 [0x16f]:          movn #9   
369 [0x171]:          movn #1   
371 [0x173]:          movi #0, adx   
373 [0x175]:          rmov adx, ebx   
374 [0x176]:          new_class @34 // std.io#thread_result   
375 [0x177]:          movg @34 // @std.io#thread_result   
376 [0x178]:          movn #10   
378 [0x17a]:          popobj   
379 [0x17b]:          newstr @58 // result_ill_thread_destroy   
380 [0x17c]:          movg @34 // @std.io#thread_result   
381 [0x17d]:          movn #10   
383 [0x17f]:          movn #0   
385 [0x181]:          popobj   
386 [0x182]:          movi #10, ebx   
388 [0x184]:          movg @34 // @std.io#thread_result   
389 [0x185]:          movn #10   
391 [0x187]:          movn #1   
393 [0x189]:          movi #0, adx   
395 [0x18b]:          rmov adx, ebx   
396 [0x18c]:          new_class @34 // std.io#thread_result   
397 [0x18d]:          movg @34 // @std.io#thread_result   
398 [0x18e]:          movn #11   
400 [0x190]:          popobj   
401 [0x191]:          newstr @59 // result_thread_create_failed   
402 [0x192]:          movg @34 // @std.io#thread_result   
403 [0x193]:          movn #11   
405 [0x195]:          movn #0   
407 [0x197]:          popobj   
408 [0x198]:          movi #11, ebx   
410 [0x19a]:          movg @34 // @std.io#thread_result   
411 [0x19b]:          movn #11   
413 [0x19d]:          movn #1   
415 [0x19f]:          movi #0, adx   
417 [0x1a1]:          rmov adx, ebx   
418 [0x1a2]:          new_class @34 // std.io#thread_result   
419 [0x1a3]:          movg @34 // @std.io#thread_result   
420 [0x1a4]:          movn #12   
422 [0x1a6]:          popobj   
423 [0x1a7]:          newstr @60 // result_no_thread_id   
424 [0x1a8]:          movg @34 // @std.io#thread_result   
425 [0x1a9]:          movn #12   
427 [0x1ab]:          movn #0   
429 [0x1ad]:          popobj   
430 [0x1ae]:          movi #12, ebx   
432 [0x1b0]:          movg @34 // @std.io#thread_result   
433 [0x1b1]:          movn #12   
435 [0x1b3]:          movn #1   
437 [0x1b5]:          movi #0, adx   
439 [0x1b7]:          rmov adx, ebx   
440 [0x1b8]:          new_class @34 // std.io#thread_result   
441 [0x1b9]:          movg @34 // @std.io#thread_result   
442 [0x1ba]:          movn #13   
444 [0x1bc]:          popobj   
445 [0x1bd]:          newstr @61 // result_thread_destroy_failed   
446 [0x1be]:          movg @34 // @std.io#thread_result   
447 [0x1bf]:          movn #13   
449 [0x1c1]:          movn #0   
451 [0x1c3]:          popobj   
452 [0x1c4]:          movi #13, ebx   
454 [0x1c6]:          movg @34 // @std.io#thread_result   
455 [0x1c7]:          movn #13   
457 [0x1c9]:          movn #1   
459 [0x1cb]:          movi #0, adx   
461 [0x1cd]:          rmov adx, ebx   
462 [0x1ce]:          new_class @34 // std.io#thread_result   
463 [0x1cf]:          movg @34 // @std.io#thread_result   
464 [0x1d0]:          movn #14   
466 [0x1d2]:          popobj   
467 [0x1d3]:          newstr @62 // result_ill_priority_set   
468 [0x1d4]:          movg @34 // @std.io#thread_result   
469 [0x1d5]:          movn #14   
471 [0x1d7]:          movn #0   
473 [0x1d9]:          popobj   
474 [0x1da]:          movi #14, ebx   
476 [0x1dc]:          movg @34 // @std.io#thread_result   
477 [0x1dd]:          movn #14   
479 [0x1df]:          movn #1   
481 [0x1e1]:          movi #0, adx   
483 [0x1e3]:          rmov adx, ebx   
484 [0x1e4]:          new_class @34 // std.io#thread_result   
485 [0x1e5]:          movg @34 // @std.io#thread_result   
486 [0x1e6]:          movn #15   
488 [0x1e8]:          popobj   
489 [0x1e9]:          newstr @63 // result_ill_thread_suspend   
490 [0x1ea]:          movg @34 // @std.io#thread_result   
491 [0x1eb]:          movn #15   
493 [0x1ed]:          movn #0   
495 [0x1ef]:          popobj   
496 [0x1f0]:          movi #15, ebx   
498 [0x1f2]:          movg @34 // @std.io#thread_result   
499 [0x1f3]:          movn #15   
501 [0x1f5]:          movn #1   
503 [0x1f7]:          movi #0, adx   
505 [0x1f9]:          rmov adx, ebx   
506 [0x1fa]:          new_class @34 // std.io#thread_result   
507 [0x1fb]:          movg @34 // @std.io#thread_result   
508 [0x1fc]:          movn #16   
510 [0x1fe]:          popobj   
511 [0x1ff]:          newstr @64 // result_max_spin   
512 [0x200]:          movg @34 // @std.io#thread_result   
513 [0x201]:          movn #16   
515 [0x203]:          movn #0   
517 [0x205]:          popobj   
518 [0x206]:          movi #255, ebx   
520 [0x208]:          movg @34 // @std.io#thread_result   
521 [0x209]:          movn #16   
523 [0x20b]:          movn #1   
525 [0x20d]:          movi #0, adx   
527 [0x20f]:          rmov adx, ebx   
528 [0x210]:          new_class @34 // std.io#thread_result   
529 [0x211]:          movg @34 // @std.io#thread_result   
530 [0x212]:          movn #17   
532 [0x214]:          popobj   
533 [0x215]:          newstr @65 // enums   
534 [0x216]:          movg @34 // @std.io#thread_result   
535 [0x217]:          movn #17   
537 [0x219]:          movn #0   
539 [0x21b]:          popobj   
540 [0x21c]:          movi #256, ebx   
542 [0x21e]:          movg @34 // @std.io#thread_result   
543 [0x21f]:          movn #17   
545 [0x221]:          movn #1   
547 [0x223]:          movi #0, adx   
549 [0x225]:          rmov adx, ebx   
550 [0x226]:          new_class @63 // std.reflect#data_type   
551 [0x227]:          movg @63 // @std.reflect#data_type   
552 [0x228]:          movn #0   
554 [0x22a]:          popobj   
555 [0x22b]:          newstr @66 // int8   
556 [0x22c]:          movg @63 // @std.reflect#data_type   
557 [0x22d]:          movn #0   
559 [0x22f]:          movn #0   
561 [0x231]:          popobj   
562 [0x232]:          movi #0, ebx   
564 [0x234]:          movg @63 // @std.reflect#data_type   
565 [0x235]:          movn #0   
567 [0x237]:          movn #1   
569 [0x239]:          movi #0, adx   
571 [0x23b]:          rmov adx, ebx   
572 [0x23c]:          new_class @63 // std.reflect#data_type   
573 [0x23d]:          movg @63 // @std.reflect#data_type   
574 [0x23e]:          movn #1   
576 [0x240]:          popobj   
577 [0x241]:          newstr @67 // int16   
578 [0x242]:          movg @63 // @std.reflect#data_type   
579 [0x243]:          movn #1   
581 [0x245]:          movn #0   
583 [0x247]:          popobj   
584 [0x248]:          movi #1, ebx   
586 [0x24a]:          movg @63 // @std.reflect#data_type   
587 [0x24b]:          movn #1   
589 [0x24d]:          movn #1   
591 [0x24f]:          movi #0, adx   
593 [0x251]:          rmov adx, ebx   
594 [0x252]:          new_class @63 // std.reflect#data_type   
595 [0x253]:          movg @63 // @std.reflect#data_type   
596 [0x254]:          movn #2   
598 [0x256]:          popobj   
599 [0x257]:          newstr @68 // int32   
600 [0x258]:          movg @63 // @std.reflect#data_type   
601 [0x259]:          movn #2   
603 [0x25b]:          movn #0   
605 [0x25d]:          popobj   
606 [0x25e]:          movi #2, ebx   
608 [0x260]:          movg @63 // @std.reflect#data_type   
609 [0x261]:          movn #2   
611 [0x263]:          movn #1   
613 [0x265]:          movi #0, adx   
615 [0x267]:          rmov adx, ebx   
616 [0x268]:          new_class @63 // std.reflect#data_type   
617 [0x269]:          movg @63 // @std.reflect#data_type   
618 [0x26a]:          movn #3   
620 [0x26c]:          popobj   
621 [0x26d]:          newstr @69 // int64   
622 [0x26e]:          movg @63 // @std.reflect#data_type   
623 [0x26f]:          movn #3   
625 [0x271]:          movn #0   
627 [0x273]:          popobj   
628 [0x274]:          movi #3, ebx   
630 [0x276]:          movg @63 // @std.reflect#data_type   
631 [0x277]:          movn #3   
633 [0x279]:          movn #1   
635 [0x27b]:          movi #0, adx   
637 [0x27d]:          rmov adx, ebx   
638 [0x27e]:          new_class @63 // std.reflect#data_type   
639 [0x27f]:          movg @63 // @std.reflect#data_type   
640 [0x280]:          movn #4   
642 [0x282]:          popobj   
643 [0x283]:          newstr @70 // uint8   
644 [0x284]:          movg @63 // @std.reflect#data_type   
645 [0x285]:          movn #4   
647 [0x287]:          movn #0   
649 [0x289]:          popobj   
650 [0x28a]:          movi #4, ebx   
652 [0x28c]:          movg @63 // @std.reflect#data_type   
653 [0x28d]:          movn #4   
655 [0x28f]:          movn #1   
657 [0x291]:          movi #0, adx   
659 [0x293]:          rmov adx, ebx   
660 [0x294]:          new_class @63 // std.reflect#data_type   
661 [0x295]:          movg @63 // @std.reflect#data_type   
662 [0x296]:          movn #5   
664 [0x298]:          popobj   
665 [0x299]:          newstr @71 // uint16   
666 [0x29a]:          movg @63 // @std.reflect#data_type   
667 [0x29b]:          movn #5   
669 [0x29d]:          movn #0   
671 [0x29f]:          popobj   
672 [0x2a0]:          movi #5, ebx   
674 [0x2a2]:          movg @63 // @std.reflect#data_type   
675 [0x2a3]:          movn #5   
677 [0x2a5]:          movn #1   
679 [0x2a7]:          movi #0, adx   
681 [0x2a9]:          rmov adx, ebx   
682 [0x2aa]:          new_class @63 // std.reflect#data_type   
683 [0x2ab]:          movg @63 // @std.reflect#data_type   
684 [0x2ac]:          movn #6   
686 [0x2ae]:          popobj   
687 [0x2af]:          newstr @72 // uint32   
688 [0x2b0]:          movg @63 // @std.reflect#data_type   
689 [0x2b1]:          movn #6   
691 [0x2b3]:          movn #0   
693 [0x2b5]:          popobj   
694 [0x2b6]:          movi #6, ebx   
696 [0x2b8]:          movg @63 // @std.reflect#data_type   
697 [0x2b9]:          movn #6   
699 [0x2bb]:          movn #1   
701 [0x2bd]:          movi #0, adx   
703 [0x2bf]:          rmov adx, ebx   
704 [0x2c0]:          new_class @63 // std.reflect#data_type   
705 [0x2c1]:          movg @63 // @std.reflect#data_type   
706 [0x2c2]:          movn #7   
708 [0x2c4]:          popobj   
709 [0x2c5]:          newstr @73 // uint64   
710 [0x2c6]:          movg @63 // @std.reflect#data_type   
711 [0x2c7]:          movn #7   
713 [0x2c9]:          movn #0   
715 [0x2cb]:          popobj   
716 [0x2cc]:          movi #7, ebx   
718 [0x2ce]:          movg @63 // @std.reflect#data_type   
719 [0x2cf]:          movn #7   
721 [0x2d1]:          movn #1   
723 [0x2d3]:          movi #0, adx   
725 [0x2d5]:          rmov adx, ebx   
726 [0x2d6]:          new_class @63 // std.reflect#data_type   
727 [0x2d7]:          movg @63 // @std.reflect#data_type   
728 [0x2d8]:          movn #8   
730 [0x2da]:          popobj   
731 [0x2db]:          newstr @74 // fnptr   
732 [0x2dc]:          movg @63 // @std.reflect#data_type   
733 [0x2dd]:          movn #8   
735 [0x2df]:          movn #0   
737 [0x2e1]:          popobj   
738 [0x2e2]:          movi #8, ebx   
740 [0x2e4]:          movg @63 // @std.reflect#data_type   
741 [0x2e5]:          movn #8   
743 [0x2e7]:          movn #1   
745 [0x2e9]:          movi #0, adx   
747 [0x2eb]:          rmov adx, ebx   
748 [0x2ec]:          new_class @63 // std.reflect#data_type   
749 [0x2ed]:          movg @63 // @std.reflect#data_type   
750 [0x2ee]:          movn #9   
752 [0x2f0]:          popobj   
753 [0x2f1]:          newstr @75 // _var   
754 [0x2f2]:          movg @63 // @std.reflect#data_type   
755 [0x2f3]:          movn #9   
757 [0x2f5]:          movn #0   
759 [0x2f7]:          popobj   
760 [0x2f8]:          movi #9, ebx   
762 [0x2fa]:          movg @63 // @std.reflect#data_type   
763 [0x2fb]:          movn #9   
765 [0x2fd]:          movn #1   
767 [0x2ff]:          movi #0, adx   
769 [0x301]:          rmov adx, ebx   
770 [0x302]:          new_class @63 // std.reflect#data_type   
771 [0x303]:          movg @63 // @std.reflect#data_type   
772 [0x304]:          movn #10   
774 [0x306]:          popobj   
775 [0x307]:          newstr @76 // _object   
776 [0x308]:          movg @63 // @std.reflect#data_type   
777 [0x309]:          movn #10   
779 [0x30b]:          movn #0   
781 [0x30d]:          popobj   
782 [0x30e]:          movi #10, ebx   
784 [0x310]:          movg @63 // @std.reflect#data_type   
785 [0x311]:          movn #10   
787 [0x313]:          movn #1   
789 [0x315]:          movi #0, adx   
791 [0x317]:          rmov adx, ebx   
792 [0x318]:          new_class @63 // std.reflect#data_type   
793 [0x319]:          movg @63 // @std.reflect#data_type   
794 [0x31a]:          movn #11   
796 [0x31c]:          popobj   
797 [0x31d]:          newstr @77 // _class   
798 [0x31e]:          movg @63 // @std.reflect#data_type   
799 [0x31f]:          movn #11   
801 [0x321]:          movn #0   
803 [0x323]:          popobj   
804 [0x324]:          movi #11, ebx   
806 [0x326]:          movg @63 // @std.reflect#data_type   
807 [0x327]:          movn #11   
809 [0x329]:          movn #1   
811 [0x32b]:          movi #0, adx   
813 [0x32d]:          rmov adx, ebx   
814 [0x32e]:          new_class @63 // std.reflect#data_type   
815 [0x32f]:          movg @63 // @std.reflect#data_type   
816 [0x330]:          movn #12   
818 [0x332]:          popobj   
819 [0x333]:          newstr @78 // method   
820 [0x334]:          movg @63 // @std.reflect#data_type   
821 [0x335]:          movn #12   
823 [0x337]:          movn #0   
825 [0x339]:          popobj   
826 [0x33a]:          movi #12, ebx   
828 [0x33c]:          movg @63 // @std.reflect#data_type   
829 [0x33d]:          movn #12   
831 [0x33f]:          movn #1   
833 [0x341]:          movi #0, adx   
835 [0x343]:          rmov adx, ebx   
836 [0x344]:          new_class @63 // std.reflect#data_type   
837 [0x345]:          movg @63 // @std.reflect#data_type   
838 [0x346]:          movn #13   
840 [0x348]:          popobj   
841 [0x349]:          newstr @79 // _nil   
842 [0x34a]:          movg @63 // @std.reflect#data_type   
843 [0x34b]:          movn #13   
845 [0x34d]:          movn #0   
847 [0x34f]:          popobj   
848 [0x350]:          movi #13, ebx   
850 [0x352]:          movg @63 // @std.reflect#data_type   
851 [0x353]:          movn #13   
853 [0x355]:          movn #1   
855 [0x357]:          movi #0, adx   
857 [0x359]:          rmov adx, ebx   
858 [0x35a]:          new_class @63 // std.reflect#data_type   
859 [0x35b]:          movg @63 // @std.reflect#data_type   
860 [0x35c]:          movn #14   
862 [0x35e]:          popobj   
863 [0x35f]:          newstr @80 // any   
864 [0x360]:          movg @63 // @std.reflect#data_type   
865 [0x361]:          movn #14   
867 [0x363]:          movn #0   
869 [0x365]:          popobj   
870 [0x366]:          movi #14, ebx   
872 [0x368]:          movg @63 // @std.reflect#data_type   
873 [0x369]:          movn #14   
875 [0x36b]:          movn #1   
877 [0x36d]:          movi #0, adx   
879 [0x36f]:          rmov adx, ebx   
880 [0x370]:          new_class @63 // std.reflect#data_type   
881 [0x371]:          movg @63 // @std.reflect#data_type   
882 [0x372]:          movn #15   
884 [0x374]:          popobj   
885 [0x375]:          newstr @81 // untyped   
886 [0x376]:          movg @63 // @std.reflect#data_type   
887 [0x377]:          movn #15   
889 [0x379]:          movn #0   
891 [0x37b]:          popobj   
892 [0x37c]:          movi #15, ebx   
894 [0x37e]:          movg @63 // @std.reflect#data_type   
895 [0x37f]:          movn #15   
897 [0x381]:          movn #1   
899 [0x383]:          movi #0, adx   
901 [0x385]:          rmov adx, ebx   
902 [0x386]:          new_class @63 // std.reflect#data_type   
903 [0x387]:          movg @63 // @std.reflect#data_type   
904 [0x388]:          movn #16   
906 [0x38a]:          popobj   
907 [0x38b]:          newstr @82 // undefined   
908 [0x38c]:          movg @63 // @std.reflect#data_type   
909 [0x38d]:          movn #16   
911 [0x38f]:          movn #0   
913 [0x391]:          popobj   
914 [0x392]:          movi #16, ebx   
916 [0x394]:          movg @63 // @std.reflect#data_type   
917 [0x395]:          movn #16   
919 [0x397]:          movn #1   
921 [0x399]:          movi #0, adx   
923 [0x39b]:          rmov adx, ebx   
924 [0x39c]:          new_class @64 // std.reflect#property_type   
925 [0x39d]:          movg @64 // @std.reflect#property_type   
926 [0x39e]:          movn #0   
928 [0x3a0]:          popobj   
929 [0x3a1]:          newstr @83 // class_property   
930 [0x3a2]:          movg @64 // @std.reflect#property_type   
931 [0x3a3]:          movn #0   
933 [0x3a5]:          movn #0   
935 [0x3a7]:          popobj   
936 [0x3a8]:          movi #55469, ebx   
938 [0x3aa]:          movg @64 // @std.reflect#property_type   
939 [0x3ab]:          movn #0   
941 [0x3ad]:          movn #1   
943 [0x3af]:          movi #0, adx   
945 [0x3b1]:          rmov adx, ebx   
946 [0x3b2]:          new_class @64 // std.reflect#property_type   
947 [0x3b3]:          movg @64 // @std.reflect#property_type   
948 [0x3b4]:          movn #1   
950 [0x3b6]:          popobj   
951 [0x3b7]:          newstr @84 // field_property   
952 [0x3b8]:          movg @64 // @std.reflect#property_type   
953 [0x3b9]:          movn #1   
955 [0x3bb]:          movn #0   
957 [0x3bd]:          popobj   
958 [0x3be]:          movi #55470, ebx   
960 [0x3c0]:          movg @64 // @std.reflect#property_type   
961 [0x3c1]:          movn #1   
963 [0x3c3]:          movn #1   
965 [0x3c5]:          movi #0, adx   
967 [0x3c7]:          rmov adx, ebx   
968 [0x3c8]:          new_class @64 // std.reflect#property_type   
969 [0x3c9]:          movg @64 // @std.reflect#property_type   
970 [0x3ca]:          movn #2   
972 [0x3cc]:          popobj   
973 [0x3cd]:          newstr @85 // function_property   
974 [0x3ce]:          movg @64 // @std.reflect#property_type   
975 [0x3cf]:          movn #2   
977 [0x3d1]:          movn #0   
979 [0x3d3]:          popobj   
980 [0x3d4]:          movi #55471, ebx   
982 [0x3d6]:          movg @64 // @std.reflect#property_type   
983 [0x3d7]:          movn #2   
985 [0x3d9]:          movn #1   
987 [0x3db]:          movi #0, adx   
989 [0x3dd]:          rmov adx, ebx   
990 [0x3de]:          new_class @72 // std#time_request   
991 [0x3df]:          movg @72 // @std#time_request   
992 [0x3e0]:          movn #0   
994 [0x3e2]:          popobj   
995 [0x3e3]:          newstr @86 // tm_seconds   
996 [0x3e4]:          movg @72 // @std#time_request   
997 [0x3e5]:          movn #0   
999 [0x3e7]:          movn #0   
1001 [0x3e9]:          popobj   
1002 [0x3ea]:          movi #0, ebx   
1004 [0x3ec]:          movg @72 // @std#time_request   
1005 [0x3ed]:          movn #0   
1007 [0x3ef]:          movn #1   
1009 [0x3f1]:          movi #0, adx   
1011 [0x3f3]:          rmov adx, ebx   
1012 [0x3f4]:          new_class @72 // std#time_request   
1013 [0x3f5]:          movg @72 // @std#time_request   
1014 [0x3f6]:          movn #1   
1016 [0x3f8]:          popobj   
1017 [0x3f9]:          newstr @87 // tm_minutes   
1018 [0x3fa]:          movg @72 // @std#time_request   
1019 [0x3fb]:          movn #1   
1021 [0x3fd]:          movn #0   
1023 [0x3ff]:          popobj   
1024 [0x400]:          movi #1, ebx   
1026 [0x402]:          movg @72 // @std#time_request   
1027 [0x403]:          movn #1   
1029 [0x405]:          movn #1   
1031 [0x407]:          movi #0, adx   
1033 [0x409]:          rmov adx, ebx   
1034 [0x40a]:          new_class @72 // std#time_request   
1035 [0x40b]:          movg @72 // @std#time_request   
1036 [0x40c]:          movn #2   
1038 [0x40e]:          popobj   
1039 [0x40f]:          newstr @88 // tm_hour   
1040 [0x410]:          movg @72 // @std#time_request   
1041 [0x411]:          movn #2   
1043 [0x413]:          movn #0   
1045 [0x415]:          popobj   
1046 [0x416]:          movi #2, ebx   
1048 [0x418]:          movg @72 // @std#time_request   
1049 [0x419]:          movn #2   
1051 [0x41b]:          movn #1   
1053 [0x41d]:          movi #0, adx   
1055 [0x41f]:          rmov adx, ebx   
1056 [0x420]:          new_class @72 // std#time_request   
1057 [0x421]:          movg @72 // @std#time_request   
1058 [0x422]:          movn #3   
1060 [0x424]:          popobj   
1061 [0x425]:          newstr @89 // tm_mday   
1062 [0x426]:          movg @72 // @std#time_request   
1063 [0x427]:          movn #3   
1065 [0x429]:          movn #0   
1067 [0x42b]:          popobj   
1068 [0x42c]:          movi #3, ebx   
1070 [0x42e]:          movg @72 // @std#time_request   
1071 [0x42f]:          movn #3   
1073 [0x431]:          movn #1   
1075 [0x433]:          movi #0, adx   
1077 [0x435]:          rmov adx, ebx   
1078 [0x436]:          new_class @72 // std#time_request   
1079 [0x437]:          movg @72 // @std#time_request   
1080 [0x438]:          movn #4   
1082 [0x43a]:          popobj   
1083 [0x43b]:          newstr @90 // tm_mon   
1084 [0x43c]:          movg @72 // @std#time_request   
1085 [0x43d]:          movn #4   
1087 [0x43f]:          movn #0   
1089 [0x441]:          popobj   
1090 [0x442]:          movi #4, ebx   
1092 [0x444]:          movg @72 // @std#time_request   
1093 [0x445]:          movn #4   
1095 [0x447]:          movn #1   
1097 [0x449]:          movi #0, adx   
1099 [0x44b]:          rmov adx, ebx   
1100 [0x44c]:          new_class @72 // std#time_request   
1101 [0x44d]:          movg @72 // @std#time_request   
1102 [0x44e]:          movn #5   
1104 [0x450]:          popobj   
1105 [0x451]:          newstr @91 // tm_year   
1106 [0x452]:          movg @72 // @std#time_request   
1107 [0x453]:          movn #5   
1109 [0x455]:          movn #0   
1111 [0x457]:          popobj   
1112 [0x458]:          movi #5, ebx   
1114 [0x45a]:          movg @72 // @std#time_request   
1115 [0x45b]:          movn #5   
1117 [0x45d]:          movn #1   
1119 [0x45f]:          movi #0, adx   
1121 [0x461]:          rmov adx, ebx   
1122 [0x462]:          new_class @72 // std#time_request   
1123 [0x463]:          movg @72 // @std#time_request   
1124 [0x464]:          movn #6   
1126 [0x466]:          popobj   
1127 [0x467]:          newstr @92 // tm_wday   
1128 [0x468]:          movg @72 // @std#time_request   
1129 [0x469]:          movn #6   
1131 [0x46b]:          movn #0   
1133 [0x46d]:          popobj   
1134 [0x46e]:          movi #6, ebx   
1136 [0x470]:          movg @72 // @std#time_request   
1137 [0x471]:          movn #6   
1139 [0x473]:          movn #1   
1141 [0x475]:          movi #0, adx   
1143 [0x477]:          rmov adx, ebx   
1144 [0x478]:          new_class @72 // std#time_request   
1145 [0x479]:          movg @72 // @std#time_request   
1146 [0x47a]:          movn #7   
1148 [0x47c]:          popobj   
1149 [0x47d]:          newstr @93 // tm_yday   
1150 [0x47e]:          movg @72 // @std#time_request   
1151 [0x47f]:          movn #7   
1153 [0x481]:          movn #0   
1155 [0x483]:          popobj   
1156 [0x484]:          movi #7, ebx   
1158 [0x486]:          movg @72 // @std#time_request   
1159 [0x487]:          movn #7   
1161 [0x489]:          movn #1   
1163 [0x48b]:          movi #0, adx   
1165 [0x48d]:          rmov adx, ebx   
1166 [0x48e]:          new_class @72 // std#time_request   
1167 [0x48f]:          movg @72 // @std#time_request   
1168 [0x490]:          movn #8   
1170 [0x492]:          popobj   
1171 [0x493]:          newstr @94 // tm_isdst   
1172 [0x494]:          movg @72 // @std#time_request   
1173 [0x495]:          movn #8   
1175 [0x497]:          movn #0   
1177 [0x499]:          popobj   
1178 [0x49a]:          movi #8, ebx   
1180 [0x49c]:          movg @72 // @std#time_request   
1181 [0x49d]:          movn #8   
1183 [0x49f]:          movn #1   
1185 [0x4a1]:          movi #0, adx   
1187 [0x4a3]:          rmov adx, ebx   
1188 [0x4a4]:          new_class @73 // std#time_unit   
1189 [0x4a5]:          movg @73 // @std#time_unit   
1190 [0x4a6]:          movn #0   
1192 [0x4a8]:          popobj   
1193 [0x4a9]:          newstr @95 // seconds   
1194 [0x4aa]:          movg @73 // @std#time_unit   
1195 [0x4ab]:          movn #0   
1197 [0x4ad]:          movn #0   
1199 [0x4af]:          popobj   
1200 [0x4b0]:          movi #0, ebx   
1202 [0x4b2]:          movg @73 // @std#time_unit   
1203 [0x4b3]:          movn #0   
1205 [0x4b5]:          movn #1   
1207 [0x4b7]:          movi #0, adx   
1209 [0x4b9]:          rmov adx, ebx   
1210 [0x4ba]:          new_class @73 // std#time_unit   
1211 [0x4bb]:          movg @73 // @std#time_unit   
1212 [0x4bc]:          movn #1   
1214 [0x4be]:          popobj   
1215 [0x4bf]:          newstr @96 // milliseconds   
1216 [0x4c0]:          movg @73 // @std#time_unit   
1217 [0x4c1]:          movn #1   
1219 [0x4c3]:          movn #0   
1221 [0x4c5]:          popobj   
1222 [0x4c6]:          movi #1, ebx   
1224 [0x4c8]:          movg @73 // @std#time_unit   
1225 [0x4c9]:          movn #1   
1227 [0x4cb]:          movn #1   
1229 [0x4cd]:          movi #0, adx   
1231 [0x4cf]:          rmov adx, ebx   
1232 [0x4d0]:          new_class @73 // std#time_unit   
1233 [0x4d1]:          movg @73 // @std#time_unit   
1234 [0x4d2]:          movn #2   
1236 [0x4d4]:          popobj   
1237 [0x4d5]:          newstr @97 // microseconds   
1238 [0x4d6]:          movg @73 // @std#time_unit   
1239 [0x4d7]:          movn #2   
1241 [0x4d9]:          movn #0   
1243 [0x4db]:          popobj   
1244 [0x4dc]:          movi #2, ebx   
1246 [0x4de]:          movg @73 // @std#time_unit   
1247 [0x4df]:          movn #2   
1249 [0x4e1]:          movn #1   
1251 [0x4e3]:          movi #0, adx   
1253 [0x4e5]:          rmov adx, ebx   
1254 [0x4e6]:          new_class @73 // std#time_unit   
1255 [0x4e7]:          movg @73 // @std#time_unit   
1256 [0x4e8]:          movn #3   
1258 [0x4ea]:          popobj   
1259 [0x4eb]:          newstr @98 // nanoseconds   
1260 [0x4ec]:          movg @73 // @std#time_unit   
1261 [0x4ed]:          movn #3   
1263 [0x4ef]:          movn #0   
1265 [0x4f1]:          popobj   
1266 [0x4f2]:          movi #3, ebx   
1268 [0x4f4]:          movg @73 // @std#time_unit   
1269 [0x4f5]:          movn #3   
1271 [0x4f7]:          movn #1   
1273 [0x4f9]:          movi #0, adx   
1275 [0x4fb]:          rmov adx, ebx   
1276 [0x4fc]:          movg @44 // @platform.kernel#platform   
1277 [0x4fd]:          movn #1   
1279 [0x4ff]:          movi #0, adx   
1281 [0x501]:          movi #1884, ebx   
1283 [0x503]:          rmov adx, ebx   
1284 [0x504]:          call @3655 // <std.io#__srt_global.$03internal_static_init>   
1285 [0x505]:          call @3656 // <std.io#file.$03internal_static_init>   
1286 [0x506]:          call @3657 // <std.io.task#job.$03internal_static_init>   
1287 [0x507]:          call @3658 // <std.io.task#__srt_global.$03internal_static_init>   
1288 [0x508]:          call @3659 // <std.io#thread_group.$03internal_static_init>   
1289 [0x509]:          call @3660 // <std#_nil_.$03internal_static_init>   
1290 [0x50a]:          call @3661 // <std#__srt_global.$03internal_static_init>   
1291 [0x50b]:          call @3662 // <std#string.$03internal_static_init>   
1292 [0x50c]:          call @3663 // <std#string_builder.$03internal_static_init>   
1293 [0x50d]:          call @3664 // <std#time.$03internal_static_init>   
1294 [0x50e]:          call @3665 // <std.io#thread_result.$03internal_static_init>   
1295 [0x50f]:          call @3666 // <std#tmp.$03internal_static_init>   
1296 [0x510]:          ret   


function: platform.kernel#platform.exit[2271] params(1) in file: lib\support\0.2.805/platform//kernel//platform.sharp:16:15: note:  
		    static def exit(value: var) {
		              ^

0 [0x0]: line: 17 ipushl #0   : protected asm start
1 [0x1]:          int 0x1d   
2 [0x2]:          ret   : protected asm end


function: platform.kernel#platform.get_lib_path[2272] params(1) in file: lib\support\0.2.805/platform//kernel//platform.sharp:23:23: note:  
		    private static def get_lib_path(name: string) : _int8[] {
		                      ^

0 [0x0]: line: 24 call @2263 // <platform#build.is_windows>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 10   
4 [0x4]: line: 25 movl 0   
5 [0x5]:          pushobj   
6 [0x6]:          newstr @27 // .dll   
7 [0x7]:          call @3425 // <std#string.operator+=>   
8 [0x8]:          pop   
9 [0x9]:          jmp @15   
10 [0xa]: line: 27 movl 0   
11 [0xb]:          pushobj   
12 [0xc]:          newstr @28 // .so   
13 [0xd]:          call @3425 // <std#string.operator+=>   
14 [0xe]:          pop   
15 [0xf]:          nop   
16 [0x10]: line: 30 new_class @21 // std.io#file   
17 [0x11]:          dup    
18 [0x12]:          movl 0   
19 [0x13]:          pushobj   
20 [0x14]:          call @1996 // <std.io#file.file>   
21 [0x15]:          call @2003 // <std.io#file.get_absolute_path>   
22 [0x16]:          call @3397 // <std#string.get_data>   
23 [0x17]:          popobj2    
24 [0x18]:          returnobj   
25 [0x19]:          ret   


function: platform.kernel#platform.load_library[2273] params(1) in file: lib\support\0.2.805/platform//kernel//platform.sharp:33:15: note:  
		    static def load_library(name: string) {
		              ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @2272 // <platform.kernel#platform.get_lib_path>   
3 [0x3]:          popobj2    
4 [0x4]:          smovr_3 fp+1   
5 [0x5]: line: 35 pushl 1   : protected asm start
6 [0x6]:          int 0x39   
7 [0x7]:          ret   : protected asm end


function: platform.kernel#platform.free_library[2274] params(1) in file: lib\support\0.2.805/platform//kernel//platform.sharp:41:15: note:  
		    static def free_library(name: string): var {
		              ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @2272 // <platform.kernel#platform.get_lib_path>   
3 [0x3]:          popobj2    
4 [0x4]:          smovr_3 fp+1   
5 [0x5]: line: 43 movi #0, ebx   
7 [0x7]:          smovr_2 ebx, fp+2   
8 [0x8]: line: 44 pushl 1   : protected asm start
9 [0x9]:          int 0x3a   
10 [0xa]:          smovr_2 ebx, fp+2   
11 [0xb]: line: 50 loadl ebx, fp+2   : protected asm end
12 [0xc]:          return_val ebx   
13 [0xd]:          ret   


function: platform.kernel#platform.link_func[2275] params(2) in file: lib\support\0.2.805/platform//kernel//platform.sharp:53:15: note:  
		    static def link_func(name: string, library: string): var {
		              ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @2272 // <platform.kernel#platform.get_lib_path>   
3 [0x3]:          popobj2    
4 [0x4]:          smovr_3 fp+2   
5 [0x5]: line: 55 movl 0   
6 [0x6]:          pushobj   
7 [0x7]:          call @3397 // <std#string.get_data>   
8 [0x8]:          popobj2    
9 [0x9]:          smovr_3 fp+3   
10 [0xa]: line: 56 movi #0, ebx   
12 [0xc]:          smovr_2 ebx, fp+4   
13 [0xd]: line: 57 pushl 3   : protected asm start
14 [0xe]:          pushl 2   
15 [0xf]:          int 0x3b   
16 [0x10]:          smovr_2 ebx, fp+4   
17 [0x11]: line: 64 loadl ebx, fp+4   : protected asm end
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


function: platform.kernel#platform.srt_init[2276] params(1) in file: lib\support\0.2.805/platform//kernel//platform.sharp:67:23: note:  
		    private static def srt_init(args: object[]) : var {
		                      ^

0 [0x0]: line: 68 new_class @69 // std#string   
1 [0x1]:          dup    
2 [0x2]:          newstr @3 //    
3 [0x3]:          call @3371 // <std#string.string>   
4 [0x4]:          movl 0   
5 [0x5]:          pushobj   
6 [0x6]:          movi #0, ebx   
8 [0x8]:          popobj2    
9 [0x9]:          movr adx, ebx   
10 [0xa]:          chklen adx   
11 [0xb]:          movnd adx   
12 [0xc]:          vcast 0 -> []   
13 [0xd]:          pushobj   
14 [0xe]:          call @3383 // <std#string.operator+>   
15 [0xf]:          movg @42 // @platform#build   
16 [0x10]:          movn #1   
18 [0x12]:          popobj   
19 [0x13]: line: 69 new_class @69 // std#string   
20 [0x14]:          dup    
21 [0x15]:          newstr @3 //    
22 [0x16]:          call @3371 // <std#string.string>   
23 [0x17]:          movl 0   
24 [0x18]:          pushobj   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          popobj2    
28 [0x1c]:          movr adx, ebx   
29 [0x1d]:          chklen adx   
30 [0x1e]:          movnd adx   
31 [0x1f]:          vcast 0 -> []   
32 [0x20]:          pushobj   
33 [0x21]:          call @3383 // <std#string.operator+>   
34 [0x22]:          movg @42 // @platform#build   
35 [0x23]:          movn #3   
37 [0x25]:          popobj   
38 [0x26]: line: 70 new_class @69 // std#string   
39 [0x27]:          dup    
40 [0x28]:          newstr @3 //    
41 [0x29]:          call @3371 // <std#string.string>   
42 [0x2a]:          movl 0   
43 [0x2b]:          pushobj   
44 [0x2c]:          movi #2, ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          vcast 0 -> []   
51 [0x33]:          pushobj   
52 [0x34]:          call @3383 // <std#string.operator+>   
53 [0x35]:          movg @42 // @platform#build   
54 [0x36]:          movn #2   
56 [0x38]:          popobj   
57 [0x39]: line: 71 new_class @69 // std#string   
58 [0x3a]:          dup    
59 [0x3b]:          newstr @3 //    
60 [0x3c]:          call @3371 // <std#string.string>   
61 [0x3d]:          movl 0   
62 [0x3e]:          pushobj   
63 [0x3f]:          movi #3, ebx   
65 [0x41]:          popobj2    
66 [0x42]:          movr adx, ebx   
67 [0x43]:          chklen adx   
68 [0x44]:          movnd adx   
69 [0x45]:          vcast 0 -> []   
70 [0x46]:          pushobj   
71 [0x47]:          call @3383 // <std#string.operator+>   
72 [0x48]:          movg @42 // @platform#build   
73 [0x49]:          movn #0   
75 [0x4b]:          popobj   
76 [0x4c]: line: 73 call @2270 // <platform.kernel#platform.static_init>   
77 [0x4d]: line: 74 call @2269 // <platform.kernel#platform.tls_init>   
78 [0x4e]: line: 76 movl 0   
79 [0x4f]:          pushobj   
80 [0x50]:          movi #4, ebx   
82 [0x52]:          popobj2    
83 [0x53]:          movr adx, ebx   
84 [0x54]:          chklen adx   
85 [0x55]:          movnd adx   
86 [0x56]:          movi #31, cmt   
88 [0x58]:          cast cmt   
89 [0x59]:          smovr_3 fp+1   
90 [0x5a]: line: 77 movl 1   
91 [0x5b]:          pushobj   
92 [0x5c]:          call @2292 // <platform.kernel#vm.set_thread>   
93 [0x5d]: line: 79 movg @33 // @std.io#thread_priority   
94 [0x5e]:          movn #2   
96 [0x60]:          smovr_3 fp+2   
97 [0x61]: line: 80 movg @32 // @std.io#thread_group   
98 [0x62]:          movn #0   
100 [0x64]:          pushobj   
101 [0x65]:          movl 1   
102 [0x66]:          pushobj   
103 [0x67]:          call @2204 // <std.io#thread_group.add>   
104 [0x68]: line: 82 movg @32 // @std.io#thread_group   : protected asm start
105 [0x69]:          movn #0   
107 [0x6b]:          pushobj   
108 [0x6c]:          movl 1   
109 [0x6d]:          movn #7   
111 [0x6f]:          popobj   
112 [0x70]:          movl 2   
113 [0x71]:          pushobj   
114 [0x72]:          movl 1   
115 [0x73]:          movn #3   
117 [0x75]:          popobj   
118 [0x76]: line: 99 movl 0   : protected asm end
119 [0x77]: line: 100 sizeof ebx   
120 [0x78]:           rstore ebx   
121 [0x79]:           movi #5, ebx   
123 [0x7b]:           loadval ecx   
124 [0x7c]:           sub ecx, ebx -> ebx   
125 [0x7d]:           new_classarray ebx  // std#string[]   
126 [0x7e]:           popobj2    
127 [0x7f]:           smovr_3 fp+3   
128 [0x80]: line: 101 movi #0, ebx   
130 [0x82]:           smovr_2 ebx, fp+4   
131 [0x83]: line: 103 movi #5, ebx   
133 [0x85]:           smovr_2 ebx, fp+5   
134 [0x86]:           loadl ebx, fp+5   
135 [0x87]:           rstore ebx   
136 [0x88]:           movl 0   
137 [0x89]:           sizeof ebx   
138 [0x8a]:           loadval ecx   
139 [0x8b]:           lt ecx, ebx   
140 [0x8c]:           movr ebx, cmt   
141 [0x8d]:           movr cmt, ebx   
142 [0x8e]:           jne 172   
143 [0x8f]: line: 104 new_class @69 // std#string   
144 [0x90]:           dup    
145 [0x91]:           movl 0   
146 [0x92]:           pushobj   
147 [0x93]:           loadl ebx, fp+5   
148 [0x94]:           popobj2    
149 [0x95]:           movr adx, ebx   
150 [0x96]:           chklen adx   
151 [0x97]:           movnd adx   
152 [0x98]:           vcast 0 -> []   
153 [0x99]:           pushobj   
154 [0x9a]:           call @3371 // <std#string.string>   
155 [0x9b]:           movl 3   
156 [0x9c]:           pushobj   
157 [0x9d]:           loadl ebx, fp+4   
158 [0x9e]:           movr egx, ebx   
159 [0x9f]:           inc ebx   
160 [0xa0]:           smovr_2 ebx, fp+4   
161 [0xa1]:           movr ebx, egx   
162 [0xa2]:           popobj2    
163 [0xa3]:           movr adx, ebx   
164 [0xa4]:           chklen adx   
165 [0xa5]:           movnd adx   
166 [0xa6]:           popobj   
167 [0xa7]:           loadl ebx, fp+5   
168 [0xa8]:           movr egx, ebx   
169 [0xa9]:           inc ebx   
170 [0xaa]:           smovr_2 ebx, fp+5   
171 [0xab]:           jmp @134   
172 [0xac]: line: 107 movi #0, ebx   
174 [0xae]:           smovr_2 ebx, fp+6   
175 [0xaf]: line: 108 movg @44 // @platform.kernel#platform   
176 [0xb0]:           movn #0   
178 [0xb2]:           movi #0, adx   
180 [0xb4]:           chklen adx   
181 [0xb5]:           iaload ebx, adx   
182 [0xb6]:           rstore ebx   
183 [0xb7]:           movi #0, ebx   
185 [0xb9]:           loadval ecx   
186 [0xba]:           tne ecx, ebx   
187 [0xbb]:           movr ebx, cmt   
188 [0xbc]:           movr cmt, ebx   
189 [0xbd]:           jne 204   
190 [0xbe]: line: 109 movg @44 // @platform.kernel#platform   
191 [0xbf]:           movn #0   
193 [0xc1]:           movi #0, adx   
195 [0xc3]:           iaload ebx, adx   
196 [0xc4]:           rstore ebx   
197 [0xc5]:           movl 3   
198 [0xc6]:           pushobj   
199 [0xc7]:           smov ebx, sp+[-1]   
200 [0xc8]:           calld ebx   
201 [0xc9]:           loadval ebx   
202 [0xca]:           smovr_2 ebx, fp+6   
203 [0xcb]:           jmp @282   
204 [0xcc]:           movg @44 // @platform.kernel#platform   
205 [0xcd]:           movn #1   
207 [0xcf]:           movi #0, adx   
209 [0xd1]:           chklen adx   
210 [0xd2]:           iaload ebx, adx   
211 [0xd3]:           rstore ebx   
212 [0xd4]:           movi #0, ebx   
214 [0xd6]:           loadval ecx   
215 [0xd7]:           tne ecx, ebx   
216 [0xd8]:           movr ebx, cmt   
217 [0xd9]:           movr cmt, ebx   
218 [0xda]:           jne 231   
219 [0xdb]: line: 110 movg @44 // @platform.kernel#platform   
220 [0xdc]:           movn #1   
222 [0xde]:           movi #0, adx   
224 [0xe0]:           iaload ebx, adx   
225 [0xe1]:           rstore ebx   
226 [0xe2]:           movl 3   
227 [0xe3]:           pushobj   
228 [0xe4]:           smov ebx, sp+[-1]   
229 [0xe5]:           calld ebx   
230 [0xe6]:           jmp @282   
231 [0xe7]:           movg @44 // @platform.kernel#platform   
232 [0xe8]:           movn #2   
234 [0xea]:           movi #0, adx   
236 [0xec]:           chklen adx   
237 [0xed]:           iaload ebx, adx   
238 [0xee]:           rstore ebx   
239 [0xef]:           movi #0, ebx   
241 [0xf1]:           loadval ecx   
242 [0xf2]:           tne ecx, ebx   
243 [0xf3]:           movr ebx, cmt   
244 [0xf4]:           movr cmt, ebx   
245 [0xf5]:           jne 256   
246 [0xf6]: line: 111 movg @44 // @platform.kernel#platform   
247 [0xf7]:           movn #2   
249 [0xf9]:           movi #0, adx   
251 [0xfb]:           iaload ebx, adx   
252 [0xfc]:           rstore ebx   
253 [0xfd]:           loadval ebx   
254 [0xfe]:           calld ebx   
255 [0xff]:           jmp @282   
256 [0x100]:           movg @44 // @platform.kernel#platform   
257 [0x101]:           movn #3   
259 [0x103]:           movi #0, adx   
261 [0x105]:           chklen adx   
262 [0x106]:           iaload ebx, adx   
263 [0x107]:           rstore ebx   
264 [0x108]:           movi #0, ebx   
266 [0x10a]:           loadval ecx   
267 [0x10b]:           tne ecx, ebx   
268 [0x10c]:           movr ebx, cmt   
269 [0x10d]:           movr cmt, ebx   
270 [0x10e]:           jne 282   
271 [0x10f]: line: 112 movg @44 // @platform.kernel#platform   
272 [0x110]:           movn #3   
274 [0x112]:           movi #0, adx   
276 [0x114]:           iaload ebx, adx   
277 [0x115]:           rstore ebx   
278 [0x116]:           loadval ebx   
279 [0x117]:           calld ebx   
280 [0x118]:           loadval ebx   
281 [0x119]:           smovr_2 ebx, fp+6   
282 [0x11a]:           nop   
283 [0x11b]: line: 115 loadl ebx, fp+6   
284 [0x11c]:           return_val ebx   
285 [0x11d]:           ret   


constructor: platform.kernel#platform.platform[2277] params(0) in file: lib\support\0.2.805/platform//kernel//platform.sharp:6:6: note:  
		class platform
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: platform.kernel#stack_state.stack_state[2278] params(0) in file: lib\support\0.2.805/platform//kernel//stack_state.sharp:3:6: note:  
		class stack_state {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


function: platform.kernel#vm.get_frame_info[2279] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:6:15: note:  
		    static def get_frame_info() : stack_state {
		              ^

0 [0x0]: line: 7 int 0x35   : protected asm start
1 [0x1]:         popobj2    
2 [0x2]:         returnobj   
3 [0x3]:         ret   
4 [0x4]: line: 13 pushnull    : protected asm end
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: platform.kernel#vm.get_stack_trace[2280] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:16:15: note:  
		    static def get_stack_trace(info : stack_state) : string {
		              ^

0 [0x0]: line: 17 pushl 0   : protected asm start
1 [0x1]:          int 0x36   
2 [0x2]:          popobj2    
3 [0x3]:          returnobj   
4 [0x4]:          ret   
5 [0x5]: line: 24 pushnull    : protected asm end
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: platform.kernel#vm.thread_create[2281] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:27:15: note:  
		    static def thread_create(daemon: var) : var {
		              ^

0 [0x0]: line: 28 istorel 0, fp+1   
2 [0x2]: line: 29 movi #2213, adx   : protected asm start
4 [0x4]:          loadl ebx, fp+0   
5 [0x5]:          int 0x10   
6 [0x6]:          smovr_2 ebx, fp+1   
7 [0x7]: line: 36 loadl ebx, fp+1   : protected asm end
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: platform.kernel#vm.suspend[2282] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:39:15: note:  
		    static def suspend(t: thread) : thread_result {
		              ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @2189 // <std.io#thread.get_native_handle>   
3 [0x3]:          loadval ebx   
4 [0x4]:          smovr_2 ebx, fp+1   
5 [0x5]: line: 41 istorel 0, fp+2   
7 [0x7]: line: 43 loadl adx, fp+1   : protected asm start
8 [0x8]:          int 0x12   
9 [0x9]:          smovr_2 cmt, fp+2   
10 [0xa]: line: 49 loadl ebx, fp+2   : protected asm end
11 [0xb]:          rstore ebx   
12 [0xc]:          call @2214 // <std.io#thread_result.at>   
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   


function: platform.kernel#vm.unsuspend[2283] params(2) in file: lib\support\0.2.805/platform//kernel//vm.sharp:52:15: note:  
		    static def unsuspend(t: thread, wait: var) : thread_result {
		              ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @2189 // <std.io#thread.get_native_handle>   
3 [0x3]:          loadval ebx   
4 [0x4]:          smovr_2 ebx, fp+2   
5 [0x5]: line: 54 istorel 0, fp+3   
7 [0x7]: line: 56 loadl adx, fp+2   : protected asm start
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          int 0x13   
10 [0xa]:          smovr_2 cmt, fp+3   
11 [0xb]: line: 63 loadl ebx, fp+3   : protected asm end
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2214 // <std.io#thread_result.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: platform.kernel#vm.get_os_time[2284] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:66:15: note:  
		    static def get_os_time(tr : var) : var {
		              ^

0 [0x0]: line: 67 istorel 0, fp+1   
2 [0x2]: line: 68 loadl ebx, fp+0   : protected asm start
3 [0x3]:          int 0x2   
4 [0x4]:          smovr_2 bmr, fp+1   
5 [0x5]: line: 74 loadl ebx, fp+1   : protected asm end
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: platform.kernel#vm.thread_join[2285] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:77:15: note:  
		    static def thread_join(t: thread) : thread_result {
		              ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @2189 // <std.io#thread.get_native_handle>   
3 [0x3]:          loadval ebx   
4 [0x4]:          smovr_2 ebx, fp+1   
5 [0x5]: line: 79 istorel 0, fp+2   
7 [0x7]: line: 81 loadl adx, fp+1   : protected asm start
8 [0x8]:          int 0xd   
9 [0x9]:          smovr_2 cmt, fp+2   
10 [0xa]: line: 87 loadl ebx, fp+2   : protected asm end
11 [0xb]:          rstore ebx   
12 [0xc]:          call @2214 // <std.io#thread_result.at>   
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   


function: platform.kernel#vm.kill[2286] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:90:15: note:  
		    static def kill(t: thread) : thread_result {
		              ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @2189 // <std.io#thread.get_native_handle>   
3 [0x3]:          loadval ebx   
4 [0x4]:          smovr_2 ebx, fp+1   
5 [0x5]: line: 92 istorel 0, fp+2   
7 [0x7]: line: 94 loadl adx, fp+1   : protected asm start
8 [0x8]:          int 0xe   
9 [0x9]:          smovr_2 cmt, fp+2   
10 [0xa]: line: 100 movl 0   : protected asm end
11 [0xb]:           pushobj   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2288 // <platform.kernel#vm.exit_thread>   
16 [0x10]: line: 101 loadl ebx, fp+2   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @2214 // <std.io#thread_result.at>   
19 [0x13]:           popobj2    
20 [0x14]:           returnobj   
21 [0x15]:           ret   


function: platform.kernel#vm.current_thread[2287] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:104:15: note:  
		    static def current_thread() : thread {
		              ^

0 [0x0]: line: 105 int 0x15   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 112 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#vm.exit_thread[2288] params(2) in file: lib\support\0.2.805/platform//kernel//vm.sharp:115:15: note:  
		    static def exit_thread(t: thread, code: var) {
		              ^

0 [0x0]: line: 116 movi #1, ebx   : protected asm start
2 [0x2]:           movi #0, egx   
4 [0x4]:           movi #-1, ecx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #5   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movl 0   
13 [0xd]:           movn #8   
15 [0xf]:           rmov adx, egx   
16 [0x10]:           loadl egx, fp+1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           rmov adx, egx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           rmov adx, ecx   
25 [0x19]:           ret   : protected asm end


function: platform.kernel#vm.thread_yield[2289] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:140:15: note:  
		    static def thread_yield() {
		              ^

0 [0x0]: line: 141 int 0x1c   : protected asm start
1 [0x1]:           ret   : protected asm end


function: platform.kernel#vm.thread_start[2290] params(2) in file: lib\support\0.2.805/platform//kernel//vm.sharp:146:15: note:  
		    static def thread_start(t: thread, args: object[]) : thread_result {
		              ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           call @2189 // <std.io#thread.get_native_handle>   
3 [0x3]:           loadval ebx   
4 [0x4]:           smovr_2 ebx, fp+2   
5 [0x5]: line: 148 movl 0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2190 // <std.io#thread.get_stack_size>   
8 [0x8]:           loadval ebx   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 149 istorel 0, fp+4   
12 [0xc]: line: 151 loadl ebx, fp+3   : protected asm start
13 [0xd]:           loadl adx, fp+2   
14 [0xe]:           pushl 1   
15 [0xf]:           pushl 0   
16 [0x10]:           int 0xc   
17 [0x11]:           smovr_2 cmt, fp+4   
18 [0x12]: line: 160 loadl ebx, fp+4   : protected asm end
19 [0x13]:           rstore ebx   
20 [0x14]:           movi #0, ebx   
22 [0x16]:           loadval ecx   
23 [0x17]:           test ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 40   
27 [0x1b]: line: 161 movl 0   
28 [0x1c]:           pushobj   
29 [0x1d]:           call @2194 // <std.io#thread.is_started>   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           not ebx, ebx   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 40   
34 [0x22]: line: 162 call @2184 // <std.io#thread.yield>   
35 [0x23]: line: 163 movi #1, ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           call @2179 // <std.io#thread.sleep>   
39 [0x27]:           jmp @27   
40 [0x28]:           nop   
41 [0x29]: line: 167 loadl ebx, fp+4   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           call @2214 // <std.io#thread_result.at>   
44 [0x2c]:           popobj2    
45 [0x2d]:           returnobj   
46 [0x2e]:           ret   


function: platform.kernel#vm.set_thread_priority[2291] params(2) in file: lib\support\0.2.805/platform//kernel//vm.sharp:170:15: note:  
		    static def set_thread_priority(t: thread, priority: var) : thread_result {
		              ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           call @2189 // <std.io#thread.get_native_handle>   
3 [0x3]:           loadval ebx   
4 [0x4]:           smovr_2 ebx, fp+2   
5 [0x5]: line: 172 istorel 0, fp+3   
7 [0x7]: line: 174 loadl adx, fp+2   : protected asm start
8 [0x8]:           loadl egx, fp+1   
9 [0x9]:           int 0x11   
10 [0xa]:           smovr_2 cmt, fp+3   
11 [0xb]: line: 181 loadl ebx, fp+3   : protected asm end
12 [0xc]:           rstore ebx   
13 [0xd]:           call @2214 // <std.io#thread_result.at>   
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   


function: platform.kernel#vm.set_thread[2292] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:184:15: note:  
		    static def set_thread(t: thread) {
		              ^

0 [0x0]: line: 185 pushl 0   : protected asm start
1 [0x1]:           int 0x17   
2 [0x2]:           ret   : protected asm end


function: platform.kernel#vm.thread_args[2293] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:191:15: note:  
		    static def thread_args() : object[] {
		              ^

0 [0x0]: line: 192 int 0x16   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 199 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#vm.cores[2294] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:202:15: note:  
		    static def cores() : var {
		              ^

0 [0x0]: line: 203 istorel 0, fp+0   
2 [0x2]: line: 205 int 0x38   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 210 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#vm.random_int[2295] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:213:15: note:  
		    static def random_int() : var {
		              ^

0 [0x0]: line: 214 istorel 0, fp+0   
2 [0x2]: line: 216 int 0x19   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 221 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#vm.random_int[2296] params(2) in file: lib\support\0.2.805/platform//kernel//vm.sharp:224:15: note:  
		    static def random_int(min: var, max : var) : var {
		              ^

0 [0x0]: line: 225 istorel 0, fp+2   
2 [0x2]: line: 227 loadl ebx, fp+0   : protected asm start
3 [0x3]:           loadl egx, fp+1   
4 [0x4]:           int 0x3f   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 234 loadl ebx, fp+2   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: platform.kernel#vm.random_double[2297] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:237:15: note:  
		    static def random_double() : var {
		              ^

0 [0x0]: line: 238 istorel 0, fp+0   
2 [0x2]: line: 240 int 0x40   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 245 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#vm.random_double[2298] params(2) in file: lib\support\0.2.805/platform//kernel//vm.sharp:248:15: note:  
		    static def random_double(min: var, max : var) : var {
		              ^

0 [0x0]: line: 249 istorel 0, fp+2   
2 [0x2]: line: 251 loadl ebx, fp+0   : protected asm start
3 [0x3]:           loadl egx, fp+1   
4 [0x4]:           int 0x41   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 258 loadl ebx, fp+2   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: platform.kernel#vm.random_seed[2299] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:261:15: note:  
		    static def random_seed(seed : var) {
		              ^

0 [0x0]: line: 262 loadl adx, fp+0   : protected asm start
1 [0x1]:           int 0x42   
2 [0x2]:           ret   : protected asm end


constructor: platform.kernel#vm.vm[2300] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:5:6: note:  
		class vm {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#ulong.ulong[2301] params(1) in file: lib\support\0.2.805/primitives.sharp:269:10: note:  
		    ulong(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @10 // <std#integer<_uint64>.integer>   
10 [0xa]:         ret   


constructor: std#ulong.ulong[2302] params(1) in file: lib\support\0.2.805/primitives.sharp:270:10: note:  
		    ulong(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @10 // <std#integer<_uint64>.integer>   
10 [0xa]:         ret   


constructor: std#ulong.ulong[2303] params(1) in file: lib\support\0.2.805/primitives.sharp:271:10: note:  
		    ulong(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @10 // <std#integer<_uint64>.integer>   
10 [0xa]:         ret   


constructor: std#ulong.ulong[2304] params(1) in file: lib\support\0.2.805/primitives.sharp:272:10: note:  
		    ulong(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @10 // <std#integer<_uint64>.integer>   
10 [0xa]:         ret   


constructor: std#ulong.ulong[2305] params(1) in file: lib\support\0.2.805/primitives.sharp:273:10: note:  
		    ulong(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @10 // <std#integer<_uint64>.integer>   
10 [0xa]:         ret   


constructor: std#ulong.ulong[2306] params(1) in file: lib\support\0.2.805/primitives.sharp:274:10: note:  
		    ulong(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @10 // <std#integer<_uint64>.integer>   
10 [0xa]:         ret   


constructor: std#ulong.ulong[2307] params(1) in file: lib\support\0.2.805/primitives.sharp:275:10: note:  
		    ulong(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @10 // <std#integer<_uint64>.integer>   
10 [0xa]:         ret   


constructor: std#ulong.ulong[2308] params(1) in file: lib\support\0.2.805/primitives.sharp:276:10: note:  
		    ulong(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @10 // <std#integer<_uint64>.integer>   
10 [0xa]:         ret   


constructor: std#ulong.ulong[2309] params(1) in file: lib\support\0.2.805/primitives.sharp:277:10: note:  
		    ulong(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @10 // <std#integer<_uint64>.integer>   
10 [0xa]:         ret   


constructor: std#ulong.ulong[2310] params(1) in file: lib\support\0.2.805/primitives.sharp:278:10: note:  
		    ulong(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @10 // <std#integer<_uint64>.integer>   
10 [0xa]:         ret   


constructor: std#ulong.ulong[2311] params(1) in file: lib\support\0.2.805/primitives.sharp:279:10: note:  
		    ulong(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @10 // <std#integer<_uint64>.integer>   
4 [0x4]:         ret   


overload function: std#ulong.operator![2312] params(0) in file: lib\support\0.2.805/primitives.sharp:281:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 281 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


overload function: std#ulong.operator++[2313] params(0) in file: lib\support\0.2.805/primitives.sharp:282:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 282 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#ulong.operator++[2314] params(1) in file: lib\support\0.2.805/primitives.sharp:283:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 283 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           inc ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#ulong.operator--[2315] params(0) in file: lib\support\0.2.805/primitives.sharp:284:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 284 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#ulong.operator--[2316] params(1) in file: lib\support\0.2.805/primitives.sharp:285:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 285 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           dec ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#ulong.operator+=[2317] params(1) in file: lib\support\0.2.805/primitives.sharp:287:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 287 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator+=[2318] params(1) in file: lib\support\0.2.805/primitives.sharp:288:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 288 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator+=[2319] params(1) in file: lib\support\0.2.805/primitives.sharp:289:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 289 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator+=[2320] params(1) in file: lib\support\0.2.805/primitives.sharp:290:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 290 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator+=[2321] params(1) in file: lib\support\0.2.805/primitives.sharp:291:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 291 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator+=[2322] params(1) in file: lib\support\0.2.805/primitives.sharp:292:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 292 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator+=[2323] params(1) in file: lib\support\0.2.805/primitives.sharp:293:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 293 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator+=[2324] params(1) in file: lib\support\0.2.805/primitives.sharp:294:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 294 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator+=[2325] params(1) in file: lib\support\0.2.805/primitives.sharp:295:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 295 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator+=[2326] params(1) in file: lib\support\0.2.805/primitives.sharp:296:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 296 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator+=[2327] params(1) in file: lib\support\0.2.805/primitives.sharp:297:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 297 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           add ecx, ebx -> ebx   
10 [0xa]:           movu64 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#ulong.operator-=[2328] params(1) in file: lib\support\0.2.805/primitives.sharp:299:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 299 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator-=[2329] params(1) in file: lib\support\0.2.805/primitives.sharp:300:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 300 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator-=[2330] params(1) in file: lib\support\0.2.805/primitives.sharp:301:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 301 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator-=[2331] params(1) in file: lib\support\0.2.805/primitives.sharp:302:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 302 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator-=[2332] params(1) in file: lib\support\0.2.805/primitives.sharp:303:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 303 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator-=[2333] params(1) in file: lib\support\0.2.805/primitives.sharp:304:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 304 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator-=[2334] params(1) in file: lib\support\0.2.805/primitives.sharp:305:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 305 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator-=[2335] params(1) in file: lib\support\0.2.805/primitives.sharp:306:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 306 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator-=[2336] params(1) in file: lib\support\0.2.805/primitives.sharp:307:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 307 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator-=[2337] params(1) in file: lib\support\0.2.805/primitives.sharp:308:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 308 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator-=[2338] params(1) in file: lib\support\0.2.805/primitives.sharp:309:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 309 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           sub ecx, ebx -> ebx   
10 [0xa]:           movu64 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#ulong.operator*=[2339] params(1) in file: lib\support\0.2.805/primitives.sharp:311:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 311 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator*=[2340] params(1) in file: lib\support\0.2.805/primitives.sharp:312:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 312 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator*=[2341] params(1) in file: lib\support\0.2.805/primitives.sharp:313:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 313 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator*=[2342] params(1) in file: lib\support\0.2.805/primitives.sharp:314:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 314 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator*=[2343] params(1) in file: lib\support\0.2.805/primitives.sharp:315:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 315 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator*=[2344] params(1) in file: lib\support\0.2.805/primitives.sharp:316:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 316 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator*=[2345] params(1) in file: lib\support\0.2.805/primitives.sharp:317:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 317 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator*=[2346] params(1) in file: lib\support\0.2.805/primitives.sharp:318:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 318 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator*=[2347] params(1) in file: lib\support\0.2.805/primitives.sharp:319:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 319 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator*=[2348] params(1) in file: lib\support\0.2.805/primitives.sharp:320:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 320 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator*=[2349] params(1) in file: lib\support\0.2.805/primitives.sharp:321:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 321 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mul ecx, ebx -> ebx   
10 [0xa]:           movu64 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#ulong.operator/=[2350] params(1) in file: lib\support\0.2.805/primitives.sharp:323:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 323 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator/=[2351] params(1) in file: lib\support\0.2.805/primitives.sharp:324:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 324 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator/=[2352] params(1) in file: lib\support\0.2.805/primitives.sharp:325:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 325 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator/=[2353] params(1) in file: lib\support\0.2.805/primitives.sharp:326:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 326 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator/=[2354] params(1) in file: lib\support\0.2.805/primitives.sharp:327:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 327 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator/=[2355] params(1) in file: lib\support\0.2.805/primitives.sharp:328:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 328 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator/=[2356] params(1) in file: lib\support\0.2.805/primitives.sharp:329:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 329 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator/=[2357] params(1) in file: lib\support\0.2.805/primitives.sharp:330:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 330 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator/=[2358] params(1) in file: lib\support\0.2.805/primitives.sharp:331:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 331 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator/=[2359] params(1) in file: lib\support\0.2.805/primitives.sharp:332:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 332 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator/=[2360] params(1) in file: lib\support\0.2.805/primitives.sharp:333:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 333 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           div ecx, ebx -> ebx   
10 [0xa]:           movu64 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#ulong.operator%=[2361] params(1) in file: lib\support\0.2.805/primitives.sharp:335:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 335 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator%=[2362] params(1) in file: lib\support\0.2.805/primitives.sharp:336:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 336 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator%=[2363] params(1) in file: lib\support\0.2.805/primitives.sharp:337:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 337 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator%=[2364] params(1) in file: lib\support\0.2.805/primitives.sharp:338:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 338 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator%=[2365] params(1) in file: lib\support\0.2.805/primitives.sharp:339:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 339 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator%=[2366] params(1) in file: lib\support\0.2.805/primitives.sharp:340:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 340 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator%=[2367] params(1) in file: lib\support\0.2.805/primitives.sharp:341:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 341 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator%=[2368] params(1) in file: lib\support\0.2.805/primitives.sharp:342:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 342 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator%=[2369] params(1) in file: lib\support\0.2.805/primitives.sharp:343:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 343 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator%=[2370] params(1) in file: lib\support\0.2.805/primitives.sharp:344:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 344 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator%=[2371] params(1) in file: lib\support\0.2.805/primitives.sharp:345:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 345 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           movu64 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#ulong.operator&=[2372] params(1) in file: lib\support\0.2.805/primitives.sharp:347:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 347 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator&=[2373] params(1) in file: lib\support\0.2.805/primitives.sharp:348:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 348 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator&=[2374] params(1) in file: lib\support\0.2.805/primitives.sharp:349:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 349 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator&=[2375] params(1) in file: lib\support\0.2.805/primitives.sharp:350:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 350 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator&=[2376] params(1) in file: lib\support\0.2.805/primitives.sharp:351:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 351 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator&=[2377] params(1) in file: lib\support\0.2.805/primitives.sharp:352:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 352 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator&=[2378] params(1) in file: lib\support\0.2.805/primitives.sharp:353:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 353 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator&=[2379] params(1) in file: lib\support\0.2.805/primitives.sharp:354:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 354 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator&=[2380] params(1) in file: lib\support\0.2.805/primitives.sharp:355:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 355 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator&=[2381] params(1) in file: lib\support\0.2.805/primitives.sharp:356:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 356 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator&=[2382] params(1) in file: lib\support\0.2.805/primitives.sharp:357:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 357 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           and ecx, ebx   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator|=[2383] params(1) in file: lib\support\0.2.805/primitives.sharp:359:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 359 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator|=[2384] params(1) in file: lib\support\0.2.805/primitives.sharp:360:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 360 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator|=[2385] params(1) in file: lib\support\0.2.805/primitives.sharp:361:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 361 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator|=[2386] params(1) in file: lib\support\0.2.805/primitives.sharp:362:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 362 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator|=[2387] params(1) in file: lib\support\0.2.805/primitives.sharp:363:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 363 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator|=[2388] params(1) in file: lib\support\0.2.805/primitives.sharp:364:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 364 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator|=[2389] params(1) in file: lib\support\0.2.805/primitives.sharp:365:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 365 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator|=[2390] params(1) in file: lib\support\0.2.805/primitives.sharp:366:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 366 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator|=[2391] params(1) in file: lib\support\0.2.805/primitives.sharp:367:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 367 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator|=[2392] params(1) in file: lib\support\0.2.805/primitives.sharp:368:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 368 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ulong.operator|=[2393] params(1) in file: lib\support\0.2.805/primitives.sharp:369:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 369 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           movu64 cmt, cmt   
11 [0xb]:           rmov adx, cmt   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


constructor: std#ulong.ulong[2394] params(0) in file: lib\support\0.2.805/primitives.sharp:268:6: note:  
		class ulong base integer<_uint64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @217 // <std#integer<_uint64>.integer>   
2 [0x2]:         ret   


constructor: std#long.long[2395] params(1) in file: lib\support\0.2.805/primitives.sharp:372:9: note:  
		    long(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @218 // <std#integer<_int64>.integer>   
10 [0xa]:         ret   


constructor: std#long.long[2396] params(1) in file: lib\support\0.2.805/primitives.sharp:373:9: note:  
		    long(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @218 // <std#integer<_int64>.integer>   
10 [0xa]:         ret   


constructor: std#long.long[2397] params(1) in file: lib\support\0.2.805/primitives.sharp:374:9: note:  
		    long(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @218 // <std#integer<_int64>.integer>   
10 [0xa]:         ret   


constructor: std#long.long[2398] params(1) in file: lib\support\0.2.805/primitives.sharp:375:9: note:  
		    long(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @218 // <std#integer<_int64>.integer>   
10 [0xa]:         ret   


constructor: std#long.long[2399] params(1) in file: lib\support\0.2.805/primitives.sharp:376:9: note:  
		    long(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @218 // <std#integer<_int64>.integer>   
10 [0xa]:         ret   


constructor: std#long.long[2400] params(1) in file: lib\support\0.2.805/primitives.sharp:377:9: note:  
		    long(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @218 // <std#integer<_int64>.integer>   
10 [0xa]:         ret   


constructor: std#long.long[2401] params(1) in file: lib\support\0.2.805/primitives.sharp:378:9: note:  
		    long(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @218 // <std#integer<_int64>.integer>   
10 [0xa]:         ret   


constructor: std#long.long[2402] params(1) in file: lib\support\0.2.805/primitives.sharp:379:9: note:  
		    long(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @218 // <std#integer<_int64>.integer>   
10 [0xa]:         ret   


constructor: std#long.long[2403] params(1) in file: lib\support\0.2.805/primitives.sharp:380:9: note:  
		    long(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @218 // <std#integer<_int64>.integer>   
10 [0xa]:         ret   


constructor: std#long.long[2404] params(1) in file: lib\support\0.2.805/primitives.sharp:381:9: note:  
		    long(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @218 // <std#integer<_int64>.integer>   
10 [0xa]:         ret   


constructor: std#long.long[2405] params(1) in file: lib\support\0.2.805/primitives.sharp:382:9: note:  
		    long(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @218 // <std#integer<_int64>.integer>   
4 [0x4]:         ret   


overload function: std#long.operator![2406] params(0) in file: lib\support\0.2.805/primitives.sharp:384:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 384 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


overload function: std#long.operator++[2407] params(0) in file: lib\support\0.2.805/primitives.sharp:385:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 385 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#long.operator++[2408] params(1) in file: lib\support\0.2.805/primitives.sharp:386:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 386 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           inc ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#long.operator--[2409] params(0) in file: lib\support\0.2.805/primitives.sharp:387:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 387 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#long.operator--[2410] params(1) in file: lib\support\0.2.805/primitives.sharp:388:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 388 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           dec ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#long.operator+=[2411] params(1) in file: lib\support\0.2.805/primitives.sharp:390:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 390 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator+=[2412] params(1) in file: lib\support\0.2.805/primitives.sharp:391:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 391 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator+=[2413] params(1) in file: lib\support\0.2.805/primitives.sharp:392:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 392 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator+=[2414] params(1) in file: lib\support\0.2.805/primitives.sharp:393:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 393 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator+=[2415] params(1) in file: lib\support\0.2.805/primitives.sharp:394:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 394 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator+=[2416] params(1) in file: lib\support\0.2.805/primitives.sharp:395:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 395 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator+=[2417] params(1) in file: lib\support\0.2.805/primitives.sharp:396:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 396 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator+=[2418] params(1) in file: lib\support\0.2.805/primitives.sharp:397:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 397 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator+=[2419] params(1) in file: lib\support\0.2.805/primitives.sharp:398:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 398 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator+=[2420] params(1) in file: lib\support\0.2.805/primitives.sharp:399:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 399 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator+=[2421] params(1) in file: lib\support\0.2.805/primitives.sharp:400:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 400 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           add ecx, ebx -> ebx   
10 [0xa]:           mov64 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#long.operator-=[2422] params(1) in file: lib\support\0.2.805/primitives.sharp:402:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 402 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator-=[2423] params(1) in file: lib\support\0.2.805/primitives.sharp:403:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 403 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator-=[2424] params(1) in file: lib\support\0.2.805/primitives.sharp:404:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 404 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator-=[2425] params(1) in file: lib\support\0.2.805/primitives.sharp:405:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 405 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator-=[2426] params(1) in file: lib\support\0.2.805/primitives.sharp:406:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 406 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator-=[2427] params(1) in file: lib\support\0.2.805/primitives.sharp:407:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 407 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator-=[2428] params(1) in file: lib\support\0.2.805/primitives.sharp:408:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 408 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator-=[2429] params(1) in file: lib\support\0.2.805/primitives.sharp:409:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 409 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator-=[2430] params(1) in file: lib\support\0.2.805/primitives.sharp:410:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 410 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator-=[2431] params(1) in file: lib\support\0.2.805/primitives.sharp:411:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 411 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator-=[2432] params(1) in file: lib\support\0.2.805/primitives.sharp:412:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 412 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           sub ecx, ebx -> ebx   
10 [0xa]:           mov64 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#long.operator*=[2433] params(1) in file: lib\support\0.2.805/primitives.sharp:414:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 414 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator*=[2434] params(1) in file: lib\support\0.2.805/primitives.sharp:415:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 415 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator*=[2435] params(1) in file: lib\support\0.2.805/primitives.sharp:416:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 416 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator*=[2436] params(1) in file: lib\support\0.2.805/primitives.sharp:417:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 417 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator*=[2437] params(1) in file: lib\support\0.2.805/primitives.sharp:418:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 418 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator*=[2438] params(1) in file: lib\support\0.2.805/primitives.sharp:419:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 419 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator*=[2439] params(1) in file: lib\support\0.2.805/primitives.sharp:420:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 420 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator*=[2440] params(1) in file: lib\support\0.2.805/primitives.sharp:421:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 421 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator*=[2441] params(1) in file: lib\support\0.2.805/primitives.sharp:422:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 422 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator*=[2442] params(1) in file: lib\support\0.2.805/primitives.sharp:423:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 423 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator*=[2443] params(1) in file: lib\support\0.2.805/primitives.sharp:424:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 424 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mul ecx, ebx -> ebx   
10 [0xa]:           mov64 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#long.operator/=[2444] params(1) in file: lib\support\0.2.805/primitives.sharp:426:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 426 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator/=[2445] params(1) in file: lib\support\0.2.805/primitives.sharp:427:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 427 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator/=[2446] params(1) in file: lib\support\0.2.805/primitives.sharp:428:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 428 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator/=[2447] params(1) in file: lib\support\0.2.805/primitives.sharp:429:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 429 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator/=[2448] params(1) in file: lib\support\0.2.805/primitives.sharp:430:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 430 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator/=[2449] params(1) in file: lib\support\0.2.805/primitives.sharp:431:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 431 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator/=[2450] params(1) in file: lib\support\0.2.805/primitives.sharp:432:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 432 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator/=[2451] params(1) in file: lib\support\0.2.805/primitives.sharp:433:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 433 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator/=[2452] params(1) in file: lib\support\0.2.805/primitives.sharp:434:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 434 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator/=[2453] params(1) in file: lib\support\0.2.805/primitives.sharp:435:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 435 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator/=[2454] params(1) in file: lib\support\0.2.805/primitives.sharp:436:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 436 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           div ecx, ebx -> ebx   
10 [0xa]:           mov64 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#long.operator%=[2455] params(1) in file: lib\support\0.2.805/primitives.sharp:438:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 438 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator%=[2456] params(1) in file: lib\support\0.2.805/primitives.sharp:439:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 439 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator%=[2457] params(1) in file: lib\support\0.2.805/primitives.sharp:440:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 440 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator%=[2458] params(1) in file: lib\support\0.2.805/primitives.sharp:441:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 441 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator%=[2459] params(1) in file: lib\support\0.2.805/primitives.sharp:442:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 442 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator%=[2460] params(1) in file: lib\support\0.2.805/primitives.sharp:443:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 443 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator%=[2461] params(1) in file: lib\support\0.2.805/primitives.sharp:444:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 444 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator%=[2462] params(1) in file: lib\support\0.2.805/primitives.sharp:445:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 445 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator%=[2463] params(1) in file: lib\support\0.2.805/primitives.sharp:446:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 446 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator%=[2464] params(1) in file: lib\support\0.2.805/primitives.sharp:447:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 447 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov64 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator%=[2465] params(1) in file: lib\support\0.2.805/primitives.sharp:448:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 448 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           mov64 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#long.operator&=[2466] params(1) in file: lib\support\0.2.805/primitives.sharp:450:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 450 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator&=[2467] params(1) in file: lib\support\0.2.805/primitives.sharp:451:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 451 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator&=[2468] params(1) in file: lib\support\0.2.805/primitives.sharp:452:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 452 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator&=[2469] params(1) in file: lib\support\0.2.805/primitives.sharp:453:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 453 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator&=[2470] params(1) in file: lib\support\0.2.805/primitives.sharp:454:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 454 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator&=[2471] params(1) in file: lib\support\0.2.805/primitives.sharp:455:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 455 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator&=[2472] params(1) in file: lib\support\0.2.805/primitives.sharp:456:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 456 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator&=[2473] params(1) in file: lib\support\0.2.805/primitives.sharp:457:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 457 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator&=[2474] params(1) in file: lib\support\0.2.805/primitives.sharp:458:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 458 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator&=[2475] params(1) in file: lib\support\0.2.805/primitives.sharp:459:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 459 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator&=[2476] params(1) in file: lib\support\0.2.805/primitives.sharp:460:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 460 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           and ecx, ebx   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator|=[2477] params(1) in file: lib\support\0.2.805/primitives.sharp:462:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 462 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator|=[2478] params(1) in file: lib\support\0.2.805/primitives.sharp:463:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 463 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator|=[2479] params(1) in file: lib\support\0.2.805/primitives.sharp:464:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 464 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator|=[2480] params(1) in file: lib\support\0.2.805/primitives.sharp:465:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 465 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator|=[2481] params(1) in file: lib\support\0.2.805/primitives.sharp:466:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 466 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator|=[2482] params(1) in file: lib\support\0.2.805/primitives.sharp:467:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 467 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator|=[2483] params(1) in file: lib\support\0.2.805/primitives.sharp:468:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 468 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator|=[2484] params(1) in file: lib\support\0.2.805/primitives.sharp:469:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 469 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator|=[2485] params(1) in file: lib\support\0.2.805/primitives.sharp:470:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 470 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator|=[2486] params(1) in file: lib\support\0.2.805/primitives.sharp:471:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 471 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov64 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#long.operator|=[2487] params(1) in file: lib\support\0.2.805/primitives.sharp:472:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 472 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           mov64 cmt, cmt   
11 [0xb]:           rmov adx, cmt   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


constructor: std#long.long[2488] params(0) in file: lib\support\0.2.805/primitives.sharp:371:6: note:  
		class long base integer<_int64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @425 // <std#integer<_int64>.integer>   
2 [0x2]:         ret   


constructor: std#uint.uint[2489] params(1) in file: lib\support\0.2.805/primitives.sharp:476:9: note:  
		    uint(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @426 // <std#integer<_uint32>.integer>   
10 [0xa]:         ret   


constructor: std#uint.uint[2490] params(1) in file: lib\support\0.2.805/primitives.sharp:477:9: note:  
		    uint(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @426 // <std#integer<_uint32>.integer>   
10 [0xa]:         ret   


constructor: std#uint.uint[2491] params(1) in file: lib\support\0.2.805/primitives.sharp:478:9: note:  
		    uint(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @426 // <std#integer<_uint32>.integer>   
10 [0xa]:         ret   


constructor: std#uint.uint[2492] params(1) in file: lib\support\0.2.805/primitives.sharp:479:9: note:  
		    uint(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @426 // <std#integer<_uint32>.integer>   
10 [0xa]:         ret   


constructor: std#uint.uint[2493] params(1) in file: lib\support\0.2.805/primitives.sharp:480:9: note:  
		    uint(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @426 // <std#integer<_uint32>.integer>   
10 [0xa]:         ret   


constructor: std#uint.uint[2494] params(1) in file: lib\support\0.2.805/primitives.sharp:481:9: note:  
		    uint(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @426 // <std#integer<_uint32>.integer>   
10 [0xa]:         ret   


constructor: std#uint.uint[2495] params(1) in file: lib\support\0.2.805/primitives.sharp:482:9: note:  
		    uint(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @426 // <std#integer<_uint32>.integer>   
10 [0xa]:         ret   


constructor: std#uint.uint[2496] params(1) in file: lib\support\0.2.805/primitives.sharp:483:9: note:  
		    uint(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @426 // <std#integer<_uint32>.integer>   
10 [0xa]:         ret   


constructor: std#uint.uint[2497] params(1) in file: lib\support\0.2.805/primitives.sharp:484:9: note:  
		    uint(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @426 // <std#integer<_uint32>.integer>   
10 [0xa]:         ret   


constructor: std#uint.uint[2498] params(1) in file: lib\support\0.2.805/primitives.sharp:485:9: note:  
		    uint(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @426 // <std#integer<_uint32>.integer>   
10 [0xa]:         ret   


constructor: std#uint.uint[2499] params(1) in file: lib\support\0.2.805/primitives.sharp:486:9: note:  
		    uint(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @426 // <std#integer<_uint32>.integer>   
4 [0x4]:         ret   


overload function: std#uint.operator![2500] params(0) in file: lib\support\0.2.805/primitives.sharp:488:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 488 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


overload function: std#uint.operator++[2501] params(0) in file: lib\support\0.2.805/primitives.sharp:489:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 489 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#uint.operator++[2502] params(1) in file: lib\support\0.2.805/primitives.sharp:490:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 490 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           inc ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#uint.operator--[2503] params(0) in file: lib\support\0.2.805/primitives.sharp:491:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 491 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#uint.operator--[2504] params(1) in file: lib\support\0.2.805/primitives.sharp:492:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 492 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           dec ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#uint.operator+=[2505] params(1) in file: lib\support\0.2.805/primitives.sharp:494:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 494 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator+=[2506] params(1) in file: lib\support\0.2.805/primitives.sharp:495:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 495 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator+=[2507] params(1) in file: lib\support\0.2.805/primitives.sharp:496:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 496 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator+=[2508] params(1) in file: lib\support\0.2.805/primitives.sharp:497:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 497 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator+=[2509] params(1) in file: lib\support\0.2.805/primitives.sharp:498:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 498 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator+=[2510] params(1) in file: lib\support\0.2.805/primitives.sharp:499:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 499 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator+=[2511] params(1) in file: lib\support\0.2.805/primitives.sharp:500:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 500 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator+=[2512] params(1) in file: lib\support\0.2.805/primitives.sharp:501:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 501 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator+=[2513] params(1) in file: lib\support\0.2.805/primitives.sharp:502:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 502 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator+=[2514] params(1) in file: lib\support\0.2.805/primitives.sharp:503:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 503 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator+=[2515] params(1) in file: lib\support\0.2.805/primitives.sharp:504:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 504 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           add ecx, ebx -> ebx   
10 [0xa]:           movu32 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#uint.operator-=[2516] params(1) in file: lib\support\0.2.805/primitives.sharp:506:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 506 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator-=[2517] params(1) in file: lib\support\0.2.805/primitives.sharp:507:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 507 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator-=[2518] params(1) in file: lib\support\0.2.805/primitives.sharp:508:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 508 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator-=[2519] params(1) in file: lib\support\0.2.805/primitives.sharp:509:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 509 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator-=[2520] params(1) in file: lib\support\0.2.805/primitives.sharp:510:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 510 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator-=[2521] params(1) in file: lib\support\0.2.805/primitives.sharp:511:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 511 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator-=[2522] params(1) in file: lib\support\0.2.805/primitives.sharp:512:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 512 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator-=[2523] params(1) in file: lib\support\0.2.805/primitives.sharp:513:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 513 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator-=[2524] params(1) in file: lib\support\0.2.805/primitives.sharp:514:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 514 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator-=[2525] params(1) in file: lib\support\0.2.805/primitives.sharp:515:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 515 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator-=[2526] params(1) in file: lib\support\0.2.805/primitives.sharp:516:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 516 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           sub ecx, ebx -> ebx   
10 [0xa]:           movu32 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#uint.operator*=[2527] params(1) in file: lib\support\0.2.805/primitives.sharp:518:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 518 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator*=[2528] params(1) in file: lib\support\0.2.805/primitives.sharp:519:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 519 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator*=[2529] params(1) in file: lib\support\0.2.805/primitives.sharp:520:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 520 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator*=[2530] params(1) in file: lib\support\0.2.805/primitives.sharp:521:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 521 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator*=[2531] params(1) in file: lib\support\0.2.805/primitives.sharp:522:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 522 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator*=[2532] params(1) in file: lib\support\0.2.805/primitives.sharp:523:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 523 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator*=[2533] params(1) in file: lib\support\0.2.805/primitives.sharp:524:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 524 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator*=[2534] params(1) in file: lib\support\0.2.805/primitives.sharp:525:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 525 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator*=[2535] params(1) in file: lib\support\0.2.805/primitives.sharp:526:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 526 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator*=[2536] params(1) in file: lib\support\0.2.805/primitives.sharp:527:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 527 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator*=[2537] params(1) in file: lib\support\0.2.805/primitives.sharp:528:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 528 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mul ecx, ebx -> ebx   
10 [0xa]:           movu32 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#uint.operator/=[2538] params(1) in file: lib\support\0.2.805/primitives.sharp:530:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 530 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator/=[2539] params(1) in file: lib\support\0.2.805/primitives.sharp:531:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 531 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator/=[2540] params(1) in file: lib\support\0.2.805/primitives.sharp:532:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 532 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator/=[2541] params(1) in file: lib\support\0.2.805/primitives.sharp:533:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 533 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator/=[2542] params(1) in file: lib\support\0.2.805/primitives.sharp:534:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 534 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator/=[2543] params(1) in file: lib\support\0.2.805/primitives.sharp:535:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 535 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator/=[2544] params(1) in file: lib\support\0.2.805/primitives.sharp:536:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 536 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator/=[2545] params(1) in file: lib\support\0.2.805/primitives.sharp:537:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 537 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator/=[2546] params(1) in file: lib\support\0.2.805/primitives.sharp:538:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 538 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator/=[2547] params(1) in file: lib\support\0.2.805/primitives.sharp:539:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 539 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator/=[2548] params(1) in file: lib\support\0.2.805/primitives.sharp:540:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 540 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           div ecx, ebx -> ebx   
10 [0xa]:           movu32 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#uint.operator%=[2549] params(1) in file: lib\support\0.2.805/primitives.sharp:542:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 542 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator%=[2550] params(1) in file: lib\support\0.2.805/primitives.sharp:543:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 543 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator%=[2551] params(1) in file: lib\support\0.2.805/primitives.sharp:544:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 544 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator%=[2552] params(1) in file: lib\support\0.2.805/primitives.sharp:545:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 545 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator%=[2553] params(1) in file: lib\support\0.2.805/primitives.sharp:546:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 546 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator%=[2554] params(1) in file: lib\support\0.2.805/primitives.sharp:547:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 547 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator%=[2555] params(1) in file: lib\support\0.2.805/primitives.sharp:548:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 548 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator%=[2556] params(1) in file: lib\support\0.2.805/primitives.sharp:549:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 549 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator%=[2557] params(1) in file: lib\support\0.2.805/primitives.sharp:550:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 550 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator%=[2558] params(1) in file: lib\support\0.2.805/primitives.sharp:551:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 551 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator%=[2559] params(1) in file: lib\support\0.2.805/primitives.sharp:552:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 552 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           movu32 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#uint.operator&=[2560] params(1) in file: lib\support\0.2.805/primitives.sharp:554:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 554 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator&=[2561] params(1) in file: lib\support\0.2.805/primitives.sharp:555:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 555 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator&=[2562] params(1) in file: lib\support\0.2.805/primitives.sharp:556:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 556 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator&=[2563] params(1) in file: lib\support\0.2.805/primitives.sharp:557:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 557 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator&=[2564] params(1) in file: lib\support\0.2.805/primitives.sharp:558:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 558 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator&=[2565] params(1) in file: lib\support\0.2.805/primitives.sharp:559:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 559 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator&=[2566] params(1) in file: lib\support\0.2.805/primitives.sharp:560:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 560 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator&=[2567] params(1) in file: lib\support\0.2.805/primitives.sharp:561:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 561 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator&=[2568] params(1) in file: lib\support\0.2.805/primitives.sharp:562:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 562 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator&=[2569] params(1) in file: lib\support\0.2.805/primitives.sharp:563:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 563 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator&=[2570] params(1) in file: lib\support\0.2.805/primitives.sharp:564:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 564 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           and ecx, ebx   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator|=[2571] params(1) in file: lib\support\0.2.805/primitives.sharp:566:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 566 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator|=[2572] params(1) in file: lib\support\0.2.805/primitives.sharp:567:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 567 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator|=[2573] params(1) in file: lib\support\0.2.805/primitives.sharp:568:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 568 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator|=[2574] params(1) in file: lib\support\0.2.805/primitives.sharp:569:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 569 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator|=[2575] params(1) in file: lib\support\0.2.805/primitives.sharp:570:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 570 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator|=[2576] params(1) in file: lib\support\0.2.805/primitives.sharp:571:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 571 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator|=[2577] params(1) in file: lib\support\0.2.805/primitives.sharp:572:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 572 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator|=[2578] params(1) in file: lib\support\0.2.805/primitives.sharp:573:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 573 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator|=[2579] params(1) in file: lib\support\0.2.805/primitives.sharp:574:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 574 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator|=[2580] params(1) in file: lib\support\0.2.805/primitives.sharp:575:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 575 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uint.operator|=[2581] params(1) in file: lib\support\0.2.805/primitives.sharp:576:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 576 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           movu32 cmt, cmt   
11 [0xb]:           rmov adx, cmt   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


constructor: std#uint.uint[2582] params(0) in file: lib\support\0.2.805/primitives.sharp:475:6: note:  
		class uint base integer<_uint32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @633 // <std#integer<_uint32>.integer>   
2 [0x2]:         ret   


constructor: std#int.int[2583] params(1) in file: lib\support\0.2.805/primitives.sharp:579:8: note:  
		    int(i : long) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @634 // <std#integer<_int32>.integer>   
10 [0xa]:         ret   


constructor: std#int.int[2584] params(1) in file: lib\support\0.2.805/primitives.sharp:580:8: note:  
		    int(i : int) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @634 // <std#integer<_int32>.integer>   
10 [0xa]:         ret   


constructor: std#int.int[2585] params(1) in file: lib\support\0.2.805/primitives.sharp:581:8: note:  
		    int(i : short) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @634 // <std#integer<_int32>.integer>   
10 [0xa]:         ret   


constructor: std#int.int[2586] params(1) in file: lib\support\0.2.805/primitives.sharp:582:8: note:  
		    int(i : char) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @634 // <std#integer<_int32>.integer>   
10 [0xa]:         ret   


constructor: std#int.int[2587] params(1) in file: lib\support\0.2.805/primitives.sharp:583:8: note:  
		    int(i : byte) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @634 // <std#integer<_int32>.integer>   
10 [0xa]:         ret   


constructor: std#int.int[2588] params(1) in file: lib\support\0.2.805/primitives.sharp:584:8: note:  
		    int(i : bool) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @634 // <std#integer<_int32>.integer>   
10 [0xa]:         ret   


constructor: std#int.int[2589] params(1) in file: lib\support\0.2.805/primitives.sharp:585:8: note:  
		    int(i : ulong) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @634 // <std#integer<_int32>.integer>   
10 [0xa]:         ret   


constructor: std#int.int[2590] params(1) in file: lib\support\0.2.805/primitives.sharp:586:8: note:  
		    int(i : uint) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @634 // <std#integer<_int32>.integer>   
10 [0xa]:         ret   


constructor: std#int.int[2591] params(1) in file: lib\support\0.2.805/primitives.sharp:587:8: note:  
		    int(i : ushort) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @634 // <std#integer<_int32>.integer>   
10 [0xa]:         ret   


constructor: std#int.int[2592] params(1) in file: lib\support\0.2.805/primitives.sharp:588:8: note:  
		    int(i : uchar) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @634 // <std#integer<_int32>.integer>   
10 [0xa]:         ret   


constructor: std#int.int[2593] params(1) in file: lib\support\0.2.805/primitives.sharp:589:8: note:  
		    int(i : var) -> base(i) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @634 // <std#integer<_int32>.integer>   
4 [0x4]:         ret   


overload function: std#int.operator![2594] params(0) in file: lib\support\0.2.805/primitives.sharp:591:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 591 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


overload function: std#int.operator++[2595] params(0) in file: lib\support\0.2.805/primitives.sharp:592:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 592 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#int.operator++[2596] params(1) in file: lib\support\0.2.805/primitives.sharp:593:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 593 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           inc ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#int.operator--[2597] params(0) in file: lib\support\0.2.805/primitives.sharp:594:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 594 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#int.operator--[2598] params(1) in file: lib\support\0.2.805/primitives.sharp:595:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 595 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           dec ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#int.operator+=[2599] params(1) in file: lib\support\0.2.805/primitives.sharp:597:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 597 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator+=[2600] params(1) in file: lib\support\0.2.805/primitives.sharp:598:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 598 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator+=[2601] params(1) in file: lib\support\0.2.805/primitives.sharp:599:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 599 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator+=[2602] params(1) in file: lib\support\0.2.805/primitives.sharp:600:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 600 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator+=[2603] params(1) in file: lib\support\0.2.805/primitives.sharp:601:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 601 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator+=[2604] params(1) in file: lib\support\0.2.805/primitives.sharp:602:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 602 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator+=[2605] params(1) in file: lib\support\0.2.805/primitives.sharp:603:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 603 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator+=[2606] params(1) in file: lib\support\0.2.805/primitives.sharp:604:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 604 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator+=[2607] params(1) in file: lib\support\0.2.805/primitives.sharp:605:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 605 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator+=[2608] params(1) in file: lib\support\0.2.805/primitives.sharp:606:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 606 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator+=[2609] params(1) in file: lib\support\0.2.805/primitives.sharp:607:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 607 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           add ecx, ebx -> ebx   
10 [0xa]:           mov32 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#int.operator-=[2610] params(1) in file: lib\support\0.2.805/primitives.sharp:609:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 609 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator-=[2611] params(1) in file: lib\support\0.2.805/primitives.sharp:610:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 610 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator-=[2612] params(1) in file: lib\support\0.2.805/primitives.sharp:611:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 611 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator-=[2613] params(1) in file: lib\support\0.2.805/primitives.sharp:612:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 612 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator-=[2614] params(1) in file: lib\support\0.2.805/primitives.sharp:613:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 613 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator-=[2615] params(1) in file: lib\support\0.2.805/primitives.sharp:614:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 614 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator-=[2616] params(1) in file: lib\support\0.2.805/primitives.sharp:615:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 615 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator-=[2617] params(1) in file: lib\support\0.2.805/primitives.sharp:616:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 616 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator-=[2618] params(1) in file: lib\support\0.2.805/primitives.sharp:617:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 617 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator-=[2619] params(1) in file: lib\support\0.2.805/primitives.sharp:618:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 618 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator-=[2620] params(1) in file: lib\support\0.2.805/primitives.sharp:619:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 619 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           sub ecx, ebx -> ebx   
10 [0xa]:           mov32 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#int.operator*=[2621] params(1) in file: lib\support\0.2.805/primitives.sharp:621:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 621 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator*=[2622] params(1) in file: lib\support\0.2.805/primitives.sharp:622:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 622 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator*=[2623] params(1) in file: lib\support\0.2.805/primitives.sharp:623:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 623 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator*=[2624] params(1) in file: lib\support\0.2.805/primitives.sharp:624:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 624 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator*=[2625] params(1) in file: lib\support\0.2.805/primitives.sharp:625:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 625 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator*=[2626] params(1) in file: lib\support\0.2.805/primitives.sharp:626:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 626 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator*=[2627] params(1) in file: lib\support\0.2.805/primitives.sharp:627:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 627 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator*=[2628] params(1) in file: lib\support\0.2.805/primitives.sharp:628:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 628 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator*=[2629] params(1) in file: lib\support\0.2.805/primitives.sharp:629:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 629 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator*=[2630] params(1) in file: lib\support\0.2.805/primitives.sharp:630:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 630 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator*=[2631] params(1) in file: lib\support\0.2.805/primitives.sharp:631:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 631 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mul ecx, ebx -> ebx   
10 [0xa]:           mov32 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#int.operator/=[2632] params(1) in file: lib\support\0.2.805/primitives.sharp:633:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 633 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator/=[2633] params(1) in file: lib\support\0.2.805/primitives.sharp:634:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 634 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator/=[2634] params(1) in file: lib\support\0.2.805/primitives.sharp:635:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 635 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator/=[2635] params(1) in file: lib\support\0.2.805/primitives.sharp:636:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 636 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator/=[2636] params(1) in file: lib\support\0.2.805/primitives.sharp:637:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 637 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator/=[2637] params(1) in file: lib\support\0.2.805/primitives.sharp:638:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 638 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator/=[2638] params(1) in file: lib\support\0.2.805/primitives.sharp:639:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 639 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator/=[2639] params(1) in file: lib\support\0.2.805/primitives.sharp:640:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 640 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator/=[2640] params(1) in file: lib\support\0.2.805/primitives.sharp:641:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 641 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator/=[2641] params(1) in file: lib\support\0.2.805/primitives.sharp:642:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 642 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator/=[2642] params(1) in file: lib\support\0.2.805/primitives.sharp:643:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 643 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           div ecx, ebx -> ebx   
10 [0xa]:           mov32 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#int.operator%=[2643] params(1) in file: lib\support\0.2.805/primitives.sharp:645:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 645 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator%=[2644] params(1) in file: lib\support\0.2.805/primitives.sharp:646:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 646 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator%=[2645] params(1) in file: lib\support\0.2.805/primitives.sharp:647:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 647 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator%=[2646] params(1) in file: lib\support\0.2.805/primitives.sharp:648:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 648 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator%=[2647] params(1) in file: lib\support\0.2.805/primitives.sharp:649:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 649 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator%=[2648] params(1) in file: lib\support\0.2.805/primitives.sharp:650:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 650 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator%=[2649] params(1) in file: lib\support\0.2.805/primitives.sharp:651:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 651 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator%=[2650] params(1) in file: lib\support\0.2.805/primitives.sharp:652:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 652 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator%=[2651] params(1) in file: lib\support\0.2.805/primitives.sharp:653:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 653 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator%=[2652] params(1) in file: lib\support\0.2.805/primitives.sharp:654:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 654 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov32 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator%=[2653] params(1) in file: lib\support\0.2.805/primitives.sharp:655:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 655 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           mov32 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#int.operator&=[2654] params(1) in file: lib\support\0.2.805/primitives.sharp:657:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 657 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator&=[2655] params(1) in file: lib\support\0.2.805/primitives.sharp:658:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 658 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator&=[2656] params(1) in file: lib\support\0.2.805/primitives.sharp:659:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 659 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator&=[2657] params(1) in file: lib\support\0.2.805/primitives.sharp:660:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 660 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator&=[2658] params(1) in file: lib\support\0.2.805/primitives.sharp:661:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 661 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator&=[2659] params(1) in file: lib\support\0.2.805/primitives.sharp:662:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 662 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator&=[2660] params(1) in file: lib\support\0.2.805/primitives.sharp:663:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 663 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator&=[2661] params(1) in file: lib\support\0.2.805/primitives.sharp:664:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 664 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator&=[2662] params(1) in file: lib\support\0.2.805/primitives.sharp:665:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 665 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator&=[2663] params(1) in file: lib\support\0.2.805/primitives.sharp:666:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 666 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator&=[2664] params(1) in file: lib\support\0.2.805/primitives.sharp:667:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 667 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           and ecx, ebx   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator|=[2665] params(1) in file: lib\support\0.2.805/primitives.sharp:669:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 669 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator|=[2666] params(1) in file: lib\support\0.2.805/primitives.sharp:670:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 670 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator|=[2667] params(1) in file: lib\support\0.2.805/primitives.sharp:671:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 671 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator|=[2668] params(1) in file: lib\support\0.2.805/primitives.sharp:672:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 672 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator|=[2669] params(1) in file: lib\support\0.2.805/primitives.sharp:673:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 673 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator|=[2670] params(1) in file: lib\support\0.2.805/primitives.sharp:674:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 674 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator|=[2671] params(1) in file: lib\support\0.2.805/primitives.sharp:675:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 675 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator|=[2672] params(1) in file: lib\support\0.2.805/primitives.sharp:676:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 676 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator|=[2673] params(1) in file: lib\support\0.2.805/primitives.sharp:677:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 677 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator|=[2674] params(1) in file: lib\support\0.2.805/primitives.sharp:678:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 678 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov32 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#int.operator|=[2675] params(1) in file: lib\support\0.2.805/primitives.sharp:679:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 679 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           mov32 cmt, cmt   
11 [0xb]:           rmov adx, cmt   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


constructor: std#int.int[2676] params(0) in file: lib\support\0.2.805/primitives.sharp:578:6: note:  
		class int base integer<_int32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @841 // <std#integer<_int32>.integer>   
2 [0x2]:         ret   


constructor: std#ushort.ushort[2677] params(1) in file: lib\support\0.2.805/primitives.sharp:682:11: note:  
		    ushort(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @842 // <std#integer<_uint16>.integer>   
10 [0xa]:         ret   


constructor: std#ushort.ushort[2678] params(1) in file: lib\support\0.2.805/primitives.sharp:683:11: note:  
		    ushort(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @842 // <std#integer<_uint16>.integer>   
10 [0xa]:         ret   


constructor: std#ushort.ushort[2679] params(1) in file: lib\support\0.2.805/primitives.sharp:684:11: note:  
		    ushort(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @842 // <std#integer<_uint16>.integer>   
10 [0xa]:         ret   


constructor: std#ushort.ushort[2680] params(1) in file: lib\support\0.2.805/primitives.sharp:685:11: note:  
		    ushort(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @842 // <std#integer<_uint16>.integer>   
10 [0xa]:         ret   


constructor: std#ushort.ushort[2681] params(1) in file: lib\support\0.2.805/primitives.sharp:686:11: note:  
		    ushort(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @842 // <std#integer<_uint16>.integer>   
10 [0xa]:         ret   


constructor: std#ushort.ushort[2682] params(1) in file: lib\support\0.2.805/primitives.sharp:687:11: note:  
		    ushort(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @842 // <std#integer<_uint16>.integer>   
10 [0xa]:         ret   


constructor: std#ushort.ushort[2683] params(1) in file: lib\support\0.2.805/primitives.sharp:688:11: note:  
		    ushort(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @842 // <std#integer<_uint16>.integer>   
10 [0xa]:         ret   


constructor: std#ushort.ushort[2684] params(1) in file: lib\support\0.2.805/primitives.sharp:689:11: note:  
		    ushort(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @842 // <std#integer<_uint16>.integer>   
10 [0xa]:         ret   


constructor: std#ushort.ushort[2685] params(1) in file: lib\support\0.2.805/primitives.sharp:690:11: note:  
		    ushort(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @842 // <std#integer<_uint16>.integer>   
10 [0xa]:         ret   


constructor: std#ushort.ushort[2686] params(1) in file: lib\support\0.2.805/primitives.sharp:691:11: note:  
		    ushort(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @842 // <std#integer<_uint16>.integer>   
10 [0xa]:         ret   


constructor: std#ushort.ushort[2687] params(1) in file: lib\support\0.2.805/primitives.sharp:692:11: note:  
		    ushort(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @842 // <std#integer<_uint16>.integer>   
4 [0x4]:         ret   


overload function: std#ushort.operator![2688] params(0) in file: lib\support\0.2.805/primitives.sharp:694:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 694 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


overload function: std#ushort.operator++[2689] params(0) in file: lib\support\0.2.805/primitives.sharp:695:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 695 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#ushort.operator++[2690] params(1) in file: lib\support\0.2.805/primitives.sharp:696:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 696 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           inc ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#ushort.operator--[2691] params(0) in file: lib\support\0.2.805/primitives.sharp:697:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 697 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#ushort.operator--[2692] params(1) in file: lib\support\0.2.805/primitives.sharp:698:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 698 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           dec ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#ushort.operator+=[2693] params(1) in file: lib\support\0.2.805/primitives.sharp:700:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 700 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator+=[2694] params(1) in file: lib\support\0.2.805/primitives.sharp:701:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 701 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator+=[2695] params(1) in file: lib\support\0.2.805/primitives.sharp:702:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 702 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator+=[2696] params(1) in file: lib\support\0.2.805/primitives.sharp:703:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 703 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator+=[2697] params(1) in file: lib\support\0.2.805/primitives.sharp:704:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 704 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator+=[2698] params(1) in file: lib\support\0.2.805/primitives.sharp:705:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 705 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator+=[2699] params(1) in file: lib\support\0.2.805/primitives.sharp:706:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 706 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator+=[2700] params(1) in file: lib\support\0.2.805/primitives.sharp:707:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 707 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator+=[2701] params(1) in file: lib\support\0.2.805/primitives.sharp:708:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 708 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator+=[2702] params(1) in file: lib\support\0.2.805/primitives.sharp:709:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 709 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator+=[2703] params(1) in file: lib\support\0.2.805/primitives.sharp:710:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 710 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           add ecx, ebx -> ebx   
10 [0xa]:           movu16 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#ushort.operator-=[2704] params(1) in file: lib\support\0.2.805/primitives.sharp:712:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 712 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator-=[2705] params(1) in file: lib\support\0.2.805/primitives.sharp:713:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 713 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator-=[2706] params(1) in file: lib\support\0.2.805/primitives.sharp:714:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 714 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator-=[2707] params(1) in file: lib\support\0.2.805/primitives.sharp:715:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 715 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator-=[2708] params(1) in file: lib\support\0.2.805/primitives.sharp:716:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 716 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator-=[2709] params(1) in file: lib\support\0.2.805/primitives.sharp:717:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 717 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator-=[2710] params(1) in file: lib\support\0.2.805/primitives.sharp:718:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 718 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator-=[2711] params(1) in file: lib\support\0.2.805/primitives.sharp:719:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 719 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator-=[2712] params(1) in file: lib\support\0.2.805/primitives.sharp:720:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 720 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator-=[2713] params(1) in file: lib\support\0.2.805/primitives.sharp:721:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 721 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator-=[2714] params(1) in file: lib\support\0.2.805/primitives.sharp:722:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 722 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           sub ecx, ebx -> ebx   
10 [0xa]:           movu16 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#ushort.operator*=[2715] params(1) in file: lib\support\0.2.805/primitives.sharp:724:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 724 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator*=[2716] params(1) in file: lib\support\0.2.805/primitives.sharp:725:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 725 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator*=[2717] params(1) in file: lib\support\0.2.805/primitives.sharp:726:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 726 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator*=[2718] params(1) in file: lib\support\0.2.805/primitives.sharp:727:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 727 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator*=[2719] params(1) in file: lib\support\0.2.805/primitives.sharp:728:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 728 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator*=[2720] params(1) in file: lib\support\0.2.805/primitives.sharp:729:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 729 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator*=[2721] params(1) in file: lib\support\0.2.805/primitives.sharp:730:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 730 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator*=[2722] params(1) in file: lib\support\0.2.805/primitives.sharp:731:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 731 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator*=[2723] params(1) in file: lib\support\0.2.805/primitives.sharp:732:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 732 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator*=[2724] params(1) in file: lib\support\0.2.805/primitives.sharp:733:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 733 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator*=[2725] params(1) in file: lib\support\0.2.805/primitives.sharp:734:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 734 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mul ecx, ebx -> ebx   
10 [0xa]:           movu16 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#ushort.operator/=[2726] params(1) in file: lib\support\0.2.805/primitives.sharp:736:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 736 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator/=[2727] params(1) in file: lib\support\0.2.805/primitives.sharp:737:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 737 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator/=[2728] params(1) in file: lib\support\0.2.805/primitives.sharp:738:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 738 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator/=[2729] params(1) in file: lib\support\0.2.805/primitives.sharp:739:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 739 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator/=[2730] params(1) in file: lib\support\0.2.805/primitives.sharp:740:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 740 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator/=[2731] params(1) in file: lib\support\0.2.805/primitives.sharp:741:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 741 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator/=[2732] params(1) in file: lib\support\0.2.805/primitives.sharp:742:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 742 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator/=[2733] params(1) in file: lib\support\0.2.805/primitives.sharp:743:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 743 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator/=[2734] params(1) in file: lib\support\0.2.805/primitives.sharp:744:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 744 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator/=[2735] params(1) in file: lib\support\0.2.805/primitives.sharp:745:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 745 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator/=[2736] params(1) in file: lib\support\0.2.805/primitives.sharp:746:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 746 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           div ecx, ebx -> ebx   
10 [0xa]:           movu16 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#ushort.operator%=[2737] params(1) in file: lib\support\0.2.805/primitives.sharp:748:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 748 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator%=[2738] params(1) in file: lib\support\0.2.805/primitives.sharp:749:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 749 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator%=[2739] params(1) in file: lib\support\0.2.805/primitives.sharp:750:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 750 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator%=[2740] params(1) in file: lib\support\0.2.805/primitives.sharp:751:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 751 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator%=[2741] params(1) in file: lib\support\0.2.805/primitives.sharp:752:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 752 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator%=[2742] params(1) in file: lib\support\0.2.805/primitives.sharp:753:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 753 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator%=[2743] params(1) in file: lib\support\0.2.805/primitives.sharp:754:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 754 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator%=[2744] params(1) in file: lib\support\0.2.805/primitives.sharp:755:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 755 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator%=[2745] params(1) in file: lib\support\0.2.805/primitives.sharp:756:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 756 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator%=[2746] params(1) in file: lib\support\0.2.805/primitives.sharp:757:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 757 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator%=[2747] params(1) in file: lib\support\0.2.805/primitives.sharp:758:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 758 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           movu16 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#ushort.operator&=[2748] params(1) in file: lib\support\0.2.805/primitives.sharp:760:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 760 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator&=[2749] params(1) in file: lib\support\0.2.805/primitives.sharp:761:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 761 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator&=[2750] params(1) in file: lib\support\0.2.805/primitives.sharp:762:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 762 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator&=[2751] params(1) in file: lib\support\0.2.805/primitives.sharp:763:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 763 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator&=[2752] params(1) in file: lib\support\0.2.805/primitives.sharp:764:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 764 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator&=[2753] params(1) in file: lib\support\0.2.805/primitives.sharp:765:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 765 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator&=[2754] params(1) in file: lib\support\0.2.805/primitives.sharp:766:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 766 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator&=[2755] params(1) in file: lib\support\0.2.805/primitives.sharp:767:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 767 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator&=[2756] params(1) in file: lib\support\0.2.805/primitives.sharp:768:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 768 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator&=[2757] params(1) in file: lib\support\0.2.805/primitives.sharp:769:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 769 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator&=[2758] params(1) in file: lib\support\0.2.805/primitives.sharp:770:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 770 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           and ecx, ebx   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator|=[2759] params(1) in file: lib\support\0.2.805/primitives.sharp:772:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 772 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator|=[2760] params(1) in file: lib\support\0.2.805/primitives.sharp:773:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 773 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator|=[2761] params(1) in file: lib\support\0.2.805/primitives.sharp:774:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 774 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator|=[2762] params(1) in file: lib\support\0.2.805/primitives.sharp:775:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 775 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator|=[2763] params(1) in file: lib\support\0.2.805/primitives.sharp:776:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 776 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator|=[2764] params(1) in file: lib\support\0.2.805/primitives.sharp:777:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 777 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator|=[2765] params(1) in file: lib\support\0.2.805/primitives.sharp:778:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 778 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator|=[2766] params(1) in file: lib\support\0.2.805/primitives.sharp:779:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 779 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator|=[2767] params(1) in file: lib\support\0.2.805/primitives.sharp:780:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 780 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator|=[2768] params(1) in file: lib\support\0.2.805/primitives.sharp:781:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 781 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#ushort.operator|=[2769] params(1) in file: lib\support\0.2.805/primitives.sharp:782:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 782 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           movu16 cmt, cmt   
11 [0xb]:           rmov adx, cmt   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


constructor: std#ushort.ushort[2770] params(0) in file: lib\support\0.2.805/primitives.sharp:681:6: note:  
		class ushort base integer<_uint16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1049 // <std#integer<_uint16>.integer>   
2 [0x2]:         ret   


constructor: std#short.short[2771] params(1) in file: lib\support\0.2.805/primitives.sharp:785:10: note:  
		    short(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1050 // <std#integer<_int16>.integer>   
10 [0xa]:         ret   


constructor: std#short.short[2772] params(1) in file: lib\support\0.2.805/primitives.sharp:786:10: note:  
		    short(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1050 // <std#integer<_int16>.integer>   
10 [0xa]:         ret   


constructor: std#short.short[2773] params(1) in file: lib\support\0.2.805/primitives.sharp:787:10: note:  
		    short(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1050 // <std#integer<_int16>.integer>   
10 [0xa]:         ret   


constructor: std#short.short[2774] params(1) in file: lib\support\0.2.805/primitives.sharp:788:10: note:  
		    short(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1050 // <std#integer<_int16>.integer>   
10 [0xa]:         ret   


constructor: std#short.short[2775] params(1) in file: lib\support\0.2.805/primitives.sharp:789:10: note:  
		    short(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1050 // <std#integer<_int16>.integer>   
10 [0xa]:         ret   


constructor: std#short.short[2776] params(1) in file: lib\support\0.2.805/primitives.sharp:790:10: note:  
		    short(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1050 // <std#integer<_int16>.integer>   
10 [0xa]:         ret   


constructor: std#short.short[2777] params(1) in file: lib\support\0.2.805/primitives.sharp:791:10: note:  
		    short(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1050 // <std#integer<_int16>.integer>   
10 [0xa]:         ret   


constructor: std#short.short[2778] params(1) in file: lib\support\0.2.805/primitives.sharp:792:10: note:  
		    short(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1050 // <std#integer<_int16>.integer>   
10 [0xa]:         ret   


constructor: std#short.short[2779] params(1) in file: lib\support\0.2.805/primitives.sharp:793:10: note:  
		    short(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1050 // <std#integer<_int16>.integer>   
10 [0xa]:         ret   


constructor: std#short.short[2780] params(1) in file: lib\support\0.2.805/primitives.sharp:794:10: note:  
		    short(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1050 // <std#integer<_int16>.integer>   
10 [0xa]:         ret   


constructor: std#short.short[2781] params(1) in file: lib\support\0.2.805/primitives.sharp:795:10: note:  
		    short(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @1050 // <std#integer<_int16>.integer>   
4 [0x4]:         ret   


overload function: std#short.operator![2782] params(0) in file: lib\support\0.2.805/primitives.sharp:797:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 797 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


overload function: std#short.operator++[2783] params(0) in file: lib\support\0.2.805/primitives.sharp:798:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 798 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#short.operator++[2784] params(1) in file: lib\support\0.2.805/primitives.sharp:799:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 799 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           inc ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#short.operator--[2785] params(0) in file: lib\support\0.2.805/primitives.sharp:800:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 800 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#short.operator--[2786] params(1) in file: lib\support\0.2.805/primitives.sharp:801:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 801 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           dec ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#short.operator+=[2787] params(1) in file: lib\support\0.2.805/primitives.sharp:803:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 803 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator+=[2788] params(1) in file: lib\support\0.2.805/primitives.sharp:804:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 804 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator+=[2789] params(1) in file: lib\support\0.2.805/primitives.sharp:805:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 805 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator+=[2790] params(1) in file: lib\support\0.2.805/primitives.sharp:806:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 806 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator+=[2791] params(1) in file: lib\support\0.2.805/primitives.sharp:807:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 807 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator+=[2792] params(1) in file: lib\support\0.2.805/primitives.sharp:808:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 808 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator+=[2793] params(1) in file: lib\support\0.2.805/primitives.sharp:809:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 809 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator+=[2794] params(1) in file: lib\support\0.2.805/primitives.sharp:810:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 810 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator+=[2795] params(1) in file: lib\support\0.2.805/primitives.sharp:811:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 811 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator+=[2796] params(1) in file: lib\support\0.2.805/primitives.sharp:812:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 812 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator+=[2797] params(1) in file: lib\support\0.2.805/primitives.sharp:813:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 813 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           add ecx, ebx -> ebx   
10 [0xa]:           mov16 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#short.operator-=[2798] params(1) in file: lib\support\0.2.805/primitives.sharp:815:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 815 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator-=[2799] params(1) in file: lib\support\0.2.805/primitives.sharp:816:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 816 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator-=[2800] params(1) in file: lib\support\0.2.805/primitives.sharp:817:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 817 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator-=[2801] params(1) in file: lib\support\0.2.805/primitives.sharp:818:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 818 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator-=[2802] params(1) in file: lib\support\0.2.805/primitives.sharp:819:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 819 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator-=[2803] params(1) in file: lib\support\0.2.805/primitives.sharp:820:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 820 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator-=[2804] params(1) in file: lib\support\0.2.805/primitives.sharp:821:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 821 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator-=[2805] params(1) in file: lib\support\0.2.805/primitives.sharp:822:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 822 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator-=[2806] params(1) in file: lib\support\0.2.805/primitives.sharp:823:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 823 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator-=[2807] params(1) in file: lib\support\0.2.805/primitives.sharp:824:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 824 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator-=[2808] params(1) in file: lib\support\0.2.805/primitives.sharp:825:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 825 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           sub ecx, ebx -> ebx   
10 [0xa]:           mov16 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#short.operator*=[2809] params(1) in file: lib\support\0.2.805/primitives.sharp:827:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 827 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator*=[2810] params(1) in file: lib\support\0.2.805/primitives.sharp:828:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 828 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator*=[2811] params(1) in file: lib\support\0.2.805/primitives.sharp:829:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 829 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator*=[2812] params(1) in file: lib\support\0.2.805/primitives.sharp:830:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 830 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator*=[2813] params(1) in file: lib\support\0.2.805/primitives.sharp:831:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 831 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator*=[2814] params(1) in file: lib\support\0.2.805/primitives.sharp:832:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 832 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator*=[2815] params(1) in file: lib\support\0.2.805/primitives.sharp:833:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 833 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator*=[2816] params(1) in file: lib\support\0.2.805/primitives.sharp:834:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 834 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator*=[2817] params(1) in file: lib\support\0.2.805/primitives.sharp:835:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 835 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator*=[2818] params(1) in file: lib\support\0.2.805/primitives.sharp:836:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 836 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator*=[2819] params(1) in file: lib\support\0.2.805/primitives.sharp:837:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 837 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mul ecx, ebx -> ebx   
10 [0xa]:           mov16 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#short.operator/=[2820] params(1) in file: lib\support\0.2.805/primitives.sharp:839:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 839 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator/=[2821] params(1) in file: lib\support\0.2.805/primitives.sharp:840:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 840 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator/=[2822] params(1) in file: lib\support\0.2.805/primitives.sharp:841:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 841 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator/=[2823] params(1) in file: lib\support\0.2.805/primitives.sharp:842:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 842 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator/=[2824] params(1) in file: lib\support\0.2.805/primitives.sharp:843:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 843 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator/=[2825] params(1) in file: lib\support\0.2.805/primitives.sharp:844:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 844 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator/=[2826] params(1) in file: lib\support\0.2.805/primitives.sharp:845:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 845 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator/=[2827] params(1) in file: lib\support\0.2.805/primitives.sharp:846:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 846 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator/=[2828] params(1) in file: lib\support\0.2.805/primitives.sharp:847:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 847 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator/=[2829] params(1) in file: lib\support\0.2.805/primitives.sharp:848:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 848 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator/=[2830] params(1) in file: lib\support\0.2.805/primitives.sharp:849:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 849 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           div ecx, ebx -> ebx   
10 [0xa]:           mov16 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#short.operator%=[2831] params(1) in file: lib\support\0.2.805/primitives.sharp:851:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 851 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator%=[2832] params(1) in file: lib\support\0.2.805/primitives.sharp:852:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 852 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator%=[2833] params(1) in file: lib\support\0.2.805/primitives.sharp:853:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 853 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator%=[2834] params(1) in file: lib\support\0.2.805/primitives.sharp:854:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 854 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator%=[2835] params(1) in file: lib\support\0.2.805/primitives.sharp:855:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 855 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator%=[2836] params(1) in file: lib\support\0.2.805/primitives.sharp:856:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 856 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator%=[2837] params(1) in file: lib\support\0.2.805/primitives.sharp:857:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 857 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator%=[2838] params(1) in file: lib\support\0.2.805/primitives.sharp:858:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 858 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator%=[2839] params(1) in file: lib\support\0.2.805/primitives.sharp:859:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 859 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator%=[2840] params(1) in file: lib\support\0.2.805/primitives.sharp:860:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 860 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           mov16 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator%=[2841] params(1) in file: lib\support\0.2.805/primitives.sharp:861:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 861 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           mov16 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#short.operator&=[2842] params(1) in file: lib\support\0.2.805/primitives.sharp:863:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 863 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator&=[2843] params(1) in file: lib\support\0.2.805/primitives.sharp:864:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 864 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator&=[2844] params(1) in file: lib\support\0.2.805/primitives.sharp:865:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 865 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator&=[2845] params(1) in file: lib\support\0.2.805/primitives.sharp:866:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 866 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator&=[2846] params(1) in file: lib\support\0.2.805/primitives.sharp:867:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 867 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator&=[2847] params(1) in file: lib\support\0.2.805/primitives.sharp:868:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 868 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator&=[2848] params(1) in file: lib\support\0.2.805/primitives.sharp:869:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 869 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator&=[2849] params(1) in file: lib\support\0.2.805/primitives.sharp:870:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 870 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator&=[2850] params(1) in file: lib\support\0.2.805/primitives.sharp:871:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 871 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator&=[2851] params(1) in file: lib\support\0.2.805/primitives.sharp:872:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 872 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator&=[2852] params(1) in file: lib\support\0.2.805/primitives.sharp:873:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 873 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           and ecx, ebx   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator|=[2853] params(1) in file: lib\support\0.2.805/primitives.sharp:875:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 875 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator|=[2854] params(1) in file: lib\support\0.2.805/primitives.sharp:876:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 876 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator|=[2855] params(1) in file: lib\support\0.2.805/primitives.sharp:877:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 877 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator|=[2856] params(1) in file: lib\support\0.2.805/primitives.sharp:878:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 878 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator|=[2857] params(1) in file: lib\support\0.2.805/primitives.sharp:879:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 879 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator|=[2858] params(1) in file: lib\support\0.2.805/primitives.sharp:880:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 880 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator|=[2859] params(1) in file: lib\support\0.2.805/primitives.sharp:881:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 881 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator|=[2860] params(1) in file: lib\support\0.2.805/primitives.sharp:882:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 882 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator|=[2861] params(1) in file: lib\support\0.2.805/primitives.sharp:883:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 883 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator|=[2862] params(1) in file: lib\support\0.2.805/primitives.sharp:884:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 884 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           mov16 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#short.operator|=[2863] params(1) in file: lib\support\0.2.805/primitives.sharp:885:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 885 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           mov16 cmt, cmt   
11 [0xb]:           rmov adx, cmt   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


constructor: std#short.short[2864] params(0) in file: lib\support\0.2.805/primitives.sharp:784:6: note:  
		class short base integer<_int16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1257 // <std#integer<_int16>.integer>   
2 [0x2]:         ret   


constructor: std#uchar.uchar[2865] params(1) in file: lib\support\0.2.805/primitives.sharp:888:10: note:  
		    uchar(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1258 // <std#integer<_uint8>.integer>   
10 [0xa]:         ret   


constructor: std#uchar.uchar[2866] params(1) in file: lib\support\0.2.805/primitives.sharp:889:10: note:  
		    uchar(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1258 // <std#integer<_uint8>.integer>   
10 [0xa]:         ret   


constructor: std#uchar.uchar[2867] params(1) in file: lib\support\0.2.805/primitives.sharp:890:10: note:  
		    uchar(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1258 // <std#integer<_uint8>.integer>   
10 [0xa]:         ret   


constructor: std#uchar.uchar[2868] params(1) in file: lib\support\0.2.805/primitives.sharp:891:10: note:  
		    uchar(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1258 // <std#integer<_uint8>.integer>   
10 [0xa]:         ret   


constructor: std#uchar.uchar[2869] params(1) in file: lib\support\0.2.805/primitives.sharp:892:10: note:  
		    uchar(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1258 // <std#integer<_uint8>.integer>   
10 [0xa]:         ret   


constructor: std#uchar.uchar[2870] params(1) in file: lib\support\0.2.805/primitives.sharp:893:10: note:  
		    uchar(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1258 // <std#integer<_uint8>.integer>   
10 [0xa]:         ret   


constructor: std#uchar.uchar[2871] params(1) in file: lib\support\0.2.805/primitives.sharp:894:10: note:  
		    uchar(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1258 // <std#integer<_uint8>.integer>   
10 [0xa]:         ret   


constructor: std#uchar.uchar[2872] params(1) in file: lib\support\0.2.805/primitives.sharp:895:10: note:  
		    uchar(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1258 // <std#integer<_uint8>.integer>   
10 [0xa]:         ret   


constructor: std#uchar.uchar[2873] params(1) in file: lib\support\0.2.805/primitives.sharp:896:10: note:  
		    uchar(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1258 // <std#integer<_uint8>.integer>   
10 [0xa]:         ret   


constructor: std#uchar.uchar[2874] params(1) in file: lib\support\0.2.805/primitives.sharp:897:10: note:  
		    uchar(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1258 // <std#integer<_uint8>.integer>   
10 [0xa]:         ret   


constructor: std#uchar.uchar[2875] params(1) in file: lib\support\0.2.805/primitives.sharp:898:10: note:  
		    uchar(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @1258 // <std#integer<_uint8>.integer>   
4 [0x4]:         ret   


overload function: std#uchar.operator![2876] params(0) in file: lib\support\0.2.805/primitives.sharp:900:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 900 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


overload function: std#uchar.operator++[2877] params(0) in file: lib\support\0.2.805/primitives.sharp:901:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 901 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#uchar.operator++[2878] params(1) in file: lib\support\0.2.805/primitives.sharp:902:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 902 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           inc ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#uchar.operator--[2879] params(0) in file: lib\support\0.2.805/primitives.sharp:903:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 903 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


overload function: std#uchar.operator--[2880] params(1) in file: lib\support\0.2.805/primitives.sharp:904:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 904 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movr egx, ebx   
8 [0x8]:           dec ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           movi #0, adx   
12 [0xc]:           rmov adx, ebx   
13 [0xd]:           movr ebx, egx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


overload function: std#uchar.operator+=[2881] params(1) in file: lib\support\0.2.805/primitives.sharp:906:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 906 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator+=[2882] params(1) in file: lib\support\0.2.805/primitives.sharp:907:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 907 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator+=[2883] params(1) in file: lib\support\0.2.805/primitives.sharp:908:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 908 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator+=[2884] params(1) in file: lib\support\0.2.805/primitives.sharp:909:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 909 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator+=[2885] params(1) in file: lib\support\0.2.805/primitives.sharp:910:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 910 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator+=[2886] params(1) in file: lib\support\0.2.805/primitives.sharp:911:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 911 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator+=[2887] params(1) in file: lib\support\0.2.805/primitives.sharp:912:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 912 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator+=[2888] params(1) in file: lib\support\0.2.805/primitives.sharp:913:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 913 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator+=[2889] params(1) in file: lib\support\0.2.805/primitives.sharp:914:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 914 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator+=[2890] params(1) in file: lib\support\0.2.805/primitives.sharp:915:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 915 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator+=[2891] params(1) in file: lib\support\0.2.805/primitives.sharp:916:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 916 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           add ecx, ebx -> ebx   
10 [0xa]:           movu8 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#uchar.operator-=[2892] params(1) in file: lib\support\0.2.805/primitives.sharp:918:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 918 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator-=[2893] params(1) in file: lib\support\0.2.805/primitives.sharp:919:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 919 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator-=[2894] params(1) in file: lib\support\0.2.805/primitives.sharp:920:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 920 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator-=[2895] params(1) in file: lib\support\0.2.805/primitives.sharp:921:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 921 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator-=[2896] params(1) in file: lib\support\0.2.805/primitives.sharp:922:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 922 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator-=[2897] params(1) in file: lib\support\0.2.805/primitives.sharp:923:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 923 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator-=[2898] params(1) in file: lib\support\0.2.805/primitives.sharp:924:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 924 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator-=[2899] params(1) in file: lib\support\0.2.805/primitives.sharp:925:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 925 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator-=[2900] params(1) in file: lib\support\0.2.805/primitives.sharp:926:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 926 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator-=[2901] params(1) in file: lib\support\0.2.805/primitives.sharp:927:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 927 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           sub ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator-=[2902] params(1) in file: lib\support\0.2.805/primitives.sharp:928:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 928 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           sub ecx, ebx -> ebx   
10 [0xa]:           movu8 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#uchar.operator*=[2903] params(1) in file: lib\support\0.2.805/primitives.sharp:930:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 930 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator*=[2904] params(1) in file: lib\support\0.2.805/primitives.sharp:931:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 931 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator*=[2905] params(1) in file: lib\support\0.2.805/primitives.sharp:932:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 932 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator*=[2906] params(1) in file: lib\support\0.2.805/primitives.sharp:933:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 933 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator*=[2907] params(1) in file: lib\support\0.2.805/primitives.sharp:934:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 934 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator*=[2908] params(1) in file: lib\support\0.2.805/primitives.sharp:935:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 935 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator*=[2909] params(1) in file: lib\support\0.2.805/primitives.sharp:936:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 936 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator*=[2910] params(1) in file: lib\support\0.2.805/primitives.sharp:937:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 937 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator*=[2911] params(1) in file: lib\support\0.2.805/primitives.sharp:938:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 938 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator*=[2912] params(1) in file: lib\support\0.2.805/primitives.sharp:939:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 939 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mul ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator*=[2913] params(1) in file: lib\support\0.2.805/primitives.sharp:940:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 940 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mul ecx, ebx -> ebx   
10 [0xa]:           movu8 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#uchar.operator/=[2914] params(1) in file: lib\support\0.2.805/primitives.sharp:942:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 942 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator/=[2915] params(1) in file: lib\support\0.2.805/primitives.sharp:943:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 943 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator/=[2916] params(1) in file: lib\support\0.2.805/primitives.sharp:944:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 944 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator/=[2917] params(1) in file: lib\support\0.2.805/primitives.sharp:945:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 945 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator/=[2918] params(1) in file: lib\support\0.2.805/primitives.sharp:946:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 946 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator/=[2919] params(1) in file: lib\support\0.2.805/primitives.sharp:947:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 947 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator/=[2920] params(1) in file: lib\support\0.2.805/primitives.sharp:948:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 948 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator/=[2921] params(1) in file: lib\support\0.2.805/primitives.sharp:949:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 949 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator/=[2922] params(1) in file: lib\support\0.2.805/primitives.sharp:950:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 950 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator/=[2923] params(1) in file: lib\support\0.2.805/primitives.sharp:951:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 951 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           div ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator/=[2924] params(1) in file: lib\support\0.2.805/primitives.sharp:952:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 952 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           div ecx, ebx -> ebx   
10 [0xa]:           movu8 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#uchar.operator%=[2925] params(1) in file: lib\support\0.2.805/primitives.sharp:954:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 954 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator%=[2926] params(1) in file: lib\support\0.2.805/primitives.sharp:955:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 955 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator%=[2927] params(1) in file: lib\support\0.2.805/primitives.sharp:956:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 956 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator%=[2928] params(1) in file: lib\support\0.2.805/primitives.sharp:957:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 957 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator%=[2929] params(1) in file: lib\support\0.2.805/primitives.sharp:958:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 958 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator%=[2930] params(1) in file: lib\support\0.2.805/primitives.sharp:959:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 959 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator%=[2931] params(1) in file: lib\support\0.2.805/primitives.sharp:960:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 960 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator%=[2932] params(1) in file: lib\support\0.2.805/primitives.sharp:961:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 961 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator%=[2933] params(1) in file: lib\support\0.2.805/primitives.sharp:962:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 962 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator%=[2934] params(1) in file: lib\support\0.2.805/primitives.sharp:963:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 963 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           mod ecx, ebx -> ebx   
16 [0x10]:           movu8 ebx, ebx   
17 [0x11]:           rmov adx, ebx   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator%=[2935] params(1) in file: lib\support\0.2.805/primitives.sharp:964:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 964 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           movu8 ebx, ebx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


overload function: std#uchar.operator&=[2936] params(1) in file: lib\support\0.2.805/primitives.sharp:966:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 966 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator&=[2937] params(1) in file: lib\support\0.2.805/primitives.sharp:967:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 967 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator&=[2938] params(1) in file: lib\support\0.2.805/primitives.sharp:968:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 968 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator&=[2939] params(1) in file: lib\support\0.2.805/primitives.sharp:969:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 969 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator&=[2940] params(1) in file: lib\support\0.2.805/primitives.sharp:970:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 970 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator&=[2941] params(1) in file: lib\support\0.2.805/primitives.sharp:971:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 971 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator&=[2942] params(1) in file: lib\support\0.2.805/primitives.sharp:972:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 972 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator&=[2943] params(1) in file: lib\support\0.2.805/primitives.sharp:973:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 973 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator&=[2944] params(1) in file: lib\support\0.2.805/primitives.sharp:974:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 974 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator&=[2945] params(1) in file: lib\support\0.2.805/primitives.sharp:975:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 975 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           and ecx, ebx   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator&=[2946] params(1) in file: lib\support\0.2.805/primitives.sharp:976:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 976 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           and ecx, ebx   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator|=[2947] params(1) in file: lib\support\0.2.805/primitives.sharp:978:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 978 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu8 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator|=[2948] params(1) in file: lib\support\0.2.805/primitives.sharp:979:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 979 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu8 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator|=[2949] params(1) in file: lib\support\0.2.805/primitives.sharp:980:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 980 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu8 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator|=[2950] params(1) in file: lib\support\0.2.805/primitives.sharp:981:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 981 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu8 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator|=[2951] params(1) in file: lib\support\0.2.805/primitives.sharp:982:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 982 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu8 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator|=[2952] params(1) in file: lib\support\0.2.805/primitives.sharp:983:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 983 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu8 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator|=[2953] params(1) in file: lib\support\0.2.805/primitives.sharp:984:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 984 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu8 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator|=[2954] params(1) in file: lib\support\0.2.805/primitives.sharp:985:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 985 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu8 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator|=[2955] params(1) in file: lib\support\0.2.805/primitives.sharp:986:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 986 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu8 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator|=[2956] params(1) in file: lib\support\0.2.805/primitives.sharp:987:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 987 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ecx, adx   
14 [0xe]:           loadval ebx   
15 [0xf]:           or ecx, ebx   
16 [0x10]:           movu8 cmt, cmt   
17 [0x11]:           rmov adx, cmt   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


overload function: std#uchar.operator|=[2957] params(1) in file: lib\support\0.2.805/primitives.sharp:988:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 988 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ecx, adx   
8 [0x8]:           loadval ebx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           movu8 cmt, cmt   
11 [0xb]:           rmov adx, cmt   
12 [0xc]:           returnobj   
13 [0xd]:           ret   


constructor: std#uchar.uchar[2958] params(0) in file: lib\support\0.2.805/primitives.sharp:887:6: note:  
		class uchar base integer<_uint8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1465 // <std#integer<_uint8>.integer>   
2 [0x2]:         ret   


constructor: std#char.char[2959] params(1) in file: lib\support\0.2.805/primitives.sharp:991:9: note:  
		    char(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#char.char[2960] params(1) in file: lib\support\0.2.805/primitives.sharp:992:9: note:  
		    char(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#char.char[2961] params(1) in file: lib\support\0.2.805/primitives.sharp:993:9: note:  
		    char(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#char.char[2962] params(1) in file: lib\support\0.2.805/primitives.sharp:994:9: note:  
		    char(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#char.char[2963] params(1) in file: lib\support\0.2.805/primitives.sharp:995:9: note:  
		    char(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#char.char[2964] params(1) in file: lib\support\0.2.805/primitives.sharp:996:9: note:  
		    char(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#char.char[2965] params(1) in file: lib\support\0.2.805/primitives.sharp:997:9: note:  
		    char(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#char.char[2966] params(1) in file: lib\support\0.2.805/primitives.sharp:998:9: note:  
		    char(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#char.char[2967] params(1) in file: lib\support\0.2.805/primitives.sharp:999:9: note:  
		    char(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#char.char[2968] params(1) in file: lib\support\0.2.805/primitives.sharp:1000:9: note:  
		    char(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#char.char[2969] params(1) in file: lib\support\0.2.805/primitives.sharp:1001:9: note:  
		    char(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @1466 // <std#integer<_int8>.integer>   
4 [0x4]:         ret   


overload function: std#char.operator![2970] params(0) in file: lib\support\0.2.805/primitives.sharp:1003:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1003 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            not ebx, ebx   
8 [0x8]:            return_val ebx   
9 [0x9]:            ret   


overload function: std#char.operator++[2971] params(0) in file: lib\support\0.2.805/primitives.sharp:1004:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1004 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            inc ebx   
8 [0x8]:            mov8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#char.operator++[2972] params(1) in file: lib\support\0.2.805/primitives.sharp:1005:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1005 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            movr egx, ebx   
8 [0x8]:            inc ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            movi #0, adx   
12 [0xc]:            rmov adx, ebx   
13 [0xd]:            movr ebx, egx   
14 [0xe]:            return_val ebx   
15 [0xf]:            ret   


overload function: std#char.operator--[2973] params(0) in file: lib\support\0.2.805/primitives.sharp:1006:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1006 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            dec ebx   
8 [0x8]:            mov8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#char.operator--[2974] params(1) in file: lib\support\0.2.805/primitives.sharp:1007:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1007 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            movr egx, ebx   
8 [0x8]:            dec ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            movi #0, adx   
12 [0xc]:            rmov adx, ebx   
13 [0xd]:            movr ebx, egx   
14 [0xe]:            return_val ebx   
15 [0xf]:            ret   


overload function: std#char.operator+=[2975] params(1) in file: lib\support\0.2.805/primitives.sharp:1009:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1009 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator+=[2976] params(1) in file: lib\support\0.2.805/primitives.sharp:1010:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1010 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator+=[2977] params(1) in file: lib\support\0.2.805/primitives.sharp:1011:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1011 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator+=[2978] params(1) in file: lib\support\0.2.805/primitives.sharp:1012:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1012 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator+=[2979] params(1) in file: lib\support\0.2.805/primitives.sharp:1013:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1013 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator+=[2980] params(1) in file: lib\support\0.2.805/primitives.sharp:1014:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1014 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator+=[2981] params(1) in file: lib\support\0.2.805/primitives.sharp:1015:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1015 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator+=[2982] params(1) in file: lib\support\0.2.805/primitives.sharp:1016:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1016 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator+=[2983] params(1) in file: lib\support\0.2.805/primitives.sharp:1017:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1017 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator+=[2984] params(1) in file: lib\support\0.2.805/primitives.sharp:1018:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1018 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator+=[2985] params(1) in file: lib\support\0.2.805/primitives.sharp:1019:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1019 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            add ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


overload function: std#char.operator-=[2986] params(1) in file: lib\support\0.2.805/primitives.sharp:1021:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1021 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator-=[2987] params(1) in file: lib\support\0.2.805/primitives.sharp:1022:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1022 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator-=[2988] params(1) in file: lib\support\0.2.805/primitives.sharp:1023:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1023 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator-=[2989] params(1) in file: lib\support\0.2.805/primitives.sharp:1024:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1024 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator-=[2990] params(1) in file: lib\support\0.2.805/primitives.sharp:1025:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1025 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator-=[2991] params(1) in file: lib\support\0.2.805/primitives.sharp:1026:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1026 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator-=[2992] params(1) in file: lib\support\0.2.805/primitives.sharp:1027:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1027 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator-=[2993] params(1) in file: lib\support\0.2.805/primitives.sharp:1028:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1028 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator-=[2994] params(1) in file: lib\support\0.2.805/primitives.sharp:1029:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1029 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator-=[2995] params(1) in file: lib\support\0.2.805/primitives.sharp:1030:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1030 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator-=[2996] params(1) in file: lib\support\0.2.805/primitives.sharp:1031:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1031 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            sub ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


overload function: std#char.operator*=[2997] params(1) in file: lib\support\0.2.805/primitives.sharp:1033:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1033 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator*=[2998] params(1) in file: lib\support\0.2.805/primitives.sharp:1034:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1034 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator*=[2999] params(1) in file: lib\support\0.2.805/primitives.sharp:1035:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1035 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator*=[3000] params(1) in file: lib\support\0.2.805/primitives.sharp:1036:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1036 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator*=[3001] params(1) in file: lib\support\0.2.805/primitives.sharp:1037:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1037 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator*=[3002] params(1) in file: lib\support\0.2.805/primitives.sharp:1038:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1038 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator*=[3003] params(1) in file: lib\support\0.2.805/primitives.sharp:1039:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1039 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator*=[3004] params(1) in file: lib\support\0.2.805/primitives.sharp:1040:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1040 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator*=[3005] params(1) in file: lib\support\0.2.805/primitives.sharp:1041:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1041 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator*=[3006] params(1) in file: lib\support\0.2.805/primitives.sharp:1042:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1042 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator*=[3007] params(1) in file: lib\support\0.2.805/primitives.sharp:1043:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1043 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mul ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


overload function: std#char.operator/=[3008] params(1) in file: lib\support\0.2.805/primitives.sharp:1045:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1045 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator/=[3009] params(1) in file: lib\support\0.2.805/primitives.sharp:1046:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1046 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator/=[3010] params(1) in file: lib\support\0.2.805/primitives.sharp:1047:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1047 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator/=[3011] params(1) in file: lib\support\0.2.805/primitives.sharp:1048:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1048 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator/=[3012] params(1) in file: lib\support\0.2.805/primitives.sharp:1049:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1049 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator/=[3013] params(1) in file: lib\support\0.2.805/primitives.sharp:1050:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1050 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator/=[3014] params(1) in file: lib\support\0.2.805/primitives.sharp:1051:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1051 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator/=[3015] params(1) in file: lib\support\0.2.805/primitives.sharp:1052:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1052 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator/=[3016] params(1) in file: lib\support\0.2.805/primitives.sharp:1053:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1053 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator/=[3017] params(1) in file: lib\support\0.2.805/primitives.sharp:1054:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1054 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator/=[3018] params(1) in file: lib\support\0.2.805/primitives.sharp:1055:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1055 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            div ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


overload function: std#char.operator%=[3019] params(1) in file: lib\support\0.2.805/primitives.sharp:1057:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1057 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator%=[3020] params(1) in file: lib\support\0.2.805/primitives.sharp:1058:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1058 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator%=[3021] params(1) in file: lib\support\0.2.805/primitives.sharp:1059:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1059 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator%=[3022] params(1) in file: lib\support\0.2.805/primitives.sharp:1060:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1060 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator%=[3023] params(1) in file: lib\support\0.2.805/primitives.sharp:1061:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1061 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator%=[3024] params(1) in file: lib\support\0.2.805/primitives.sharp:1062:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1062 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator%=[3025] params(1) in file: lib\support\0.2.805/primitives.sharp:1063:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1063 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator%=[3026] params(1) in file: lib\support\0.2.805/primitives.sharp:1064:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1064 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator%=[3027] params(1) in file: lib\support\0.2.805/primitives.sharp:1065:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1065 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator%=[3028] params(1) in file: lib\support\0.2.805/primitives.sharp:1066:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1066 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator%=[3029] params(1) in file: lib\support\0.2.805/primitives.sharp:1067:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1067 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mod ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


overload function: std#char.operator&=[3030] params(1) in file: lib\support\0.2.805/primitives.sharp:1069:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1069 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator&=[3031] params(1) in file: lib\support\0.2.805/primitives.sharp:1070:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1070 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator&=[3032] params(1) in file: lib\support\0.2.805/primitives.sharp:1071:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1071 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator&=[3033] params(1) in file: lib\support\0.2.805/primitives.sharp:1072:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1072 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator&=[3034] params(1) in file: lib\support\0.2.805/primitives.sharp:1073:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1073 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator&=[3035] params(1) in file: lib\support\0.2.805/primitives.sharp:1074:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1074 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator&=[3036] params(1) in file: lib\support\0.2.805/primitives.sharp:1075:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1075 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator&=[3037] params(1) in file: lib\support\0.2.805/primitives.sharp:1076:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1076 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator&=[3038] params(1) in file: lib\support\0.2.805/primitives.sharp:1077:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1077 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator&=[3039] params(1) in file: lib\support\0.2.805/primitives.sharp:1078:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1078 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator&=[3040] params(1) in file: lib\support\0.2.805/primitives.sharp:1079:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1079 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            and ecx, ebx   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator|=[3041] params(1) in file: lib\support\0.2.805/primitives.sharp:1081:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1081 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator|=[3042] params(1) in file: lib\support\0.2.805/primitives.sharp:1082:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1082 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator|=[3043] params(1) in file: lib\support\0.2.805/primitives.sharp:1083:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1083 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator|=[3044] params(1) in file: lib\support\0.2.805/primitives.sharp:1084:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1084 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator|=[3045] params(1) in file: lib\support\0.2.805/primitives.sharp:1085:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1085 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator|=[3046] params(1) in file: lib\support\0.2.805/primitives.sharp:1086:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1086 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator|=[3047] params(1) in file: lib\support\0.2.805/primitives.sharp:1087:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1087 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator|=[3048] params(1) in file: lib\support\0.2.805/primitives.sharp:1088:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1088 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator|=[3049] params(1) in file: lib\support\0.2.805/primitives.sharp:1089:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1089 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator|=[3050] params(1) in file: lib\support\0.2.805/primitives.sharp:1090:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1090 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#char.operator|=[3051] params(1) in file: lib\support\0.2.805/primitives.sharp:1091:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1091 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            or ecx, ebx   
10 [0xa]:            mov8 cmt, cmt   
11 [0xb]:            rmov adx, cmt   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


function: std#char.is_digit[3052] params(1) in file: lib\support\0.2.805/primitives.sharp:1093:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1094 loadl ebx, fp+0   
1 [0x1]:            rstore ebx   
2 [0x2]:            movi #48, ebx   
4 [0x4]:            loadval ecx   
5 [0x5]:            gte ecx, ebx   
6 [0x6]:            movr ebx, cmt   
7 [0x7]:            skne ebx // pc = 15   
8 [0x8]:            loadl ebx, fp+0   
9 [0x9]:            rstore ebx   
10 [0xa]:            movi #57, ebx   
12 [0xc]:            loadval ecx   
13 [0xd]:            lte ecx, ebx   
14 [0xe]:            movr ebx, cmt   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


function: std#char.is_newline[3053] params(1) in file: lib\support\0.2.805/primitives.sharp:1097:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1098 call @2263 // <platform#build.is_windows>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 22   
4 [0x4]:            loadl ebx, fp+0   
5 [0x5]:            rstore ebx   
6 [0x6]:            movi #10, ebx   
8 [0x8]:            loadval ecx   
9 [0x9]:            test ecx, ebx   
10 [0xa]:            movr ebx, cmt   
11 [0xb]:            skpe ebx // pc = 19   
12 [0xc]:            loadl ebx, fp+0   
13 [0xd]:            rstore ebx   
14 [0xe]:            movi #13, ebx   
16 [0x10]:            loadval ecx   
17 [0x11]:            test ecx, ebx   
18 [0x12]:            movr ebx, cmt   
19 [0x13]:            return_val ebx   
20 [0x14]:            ret   
21 [0x15]:            jmp @31   
22 [0x16]: line: 1099 loadl ebx, fp+0   
23 [0x17]:            rstore ebx   
24 [0x18]:            movi #10, ebx   
26 [0x1a]:            loadval ecx   
27 [0x1b]:            test ecx, ebx   
28 [0x1c]:            movr ebx, cmt   
29 [0x1d]:            return_val ebx   
30 [0x1e]:            ret   
31 [0x1f]:            nop   


function: std#char.is_alpha[3054] params(1) in file: lib\support\0.2.805/primitives.sharp:1102:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1103 loadl ebx, fp+0   
1 [0x1]:            rstore ebx   
2 [0x2]:            movi #65, ebx   
4 [0x4]:            loadval ecx   
5 [0x5]:            gte ecx, ebx   
6 [0x6]:            movr ebx, cmt   
7 [0x7]:            skne ebx // pc = 15   
8 [0x8]:            loadl ebx, fp+0   
9 [0x9]:            rstore ebx   
10 [0xa]:            movi #90, ebx   
12 [0xc]:            loadval ecx   
13 [0xd]:            lte ecx, ebx   
14 [0xe]:            movr ebx, cmt   
15 [0xf]:            skpe ebx // pc = 31   
16 [0x10]:            loadl ebx, fp+0   
17 [0x11]:            rstore ebx   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            gte ecx, ebx   
22 [0x16]:            movr ebx, cmt   
23 [0x17]:            skne ebx // pc = 31   
24 [0x18]:            loadl ebx, fp+0   
25 [0x19]:            rstore ebx   
26 [0x1a]:            movi #122, ebx   
28 [0x1c]:            loadval ecx   
29 [0x1d]:            lte ecx, ebx   
30 [0x1e]:            movr ebx, cmt   
31 [0x1f]:            return_val ebx   
32 [0x20]:            ret   


function: std#char.is_alpha_num[3055] params(1) in file: lib\support\0.2.805/primitives.sharp:1107:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1108 loadl ebx, fp+0   
1 [0x1]:            rstore ebx   
2 [0x2]:            call @3054 // <std#char.is_alpha>   
3 [0x3]:            loadval ebx   
4 [0x4]:            skpe ebx // pc = 9   
5 [0x5]:            loadl ebx, fp+0   
6 [0x6]:            rstore ebx   
7 [0x7]:            call @3052 // <std#char.is_digit>   
8 [0x8]:            loadval ebx   
9 [0x9]:            return_val ebx   
10 [0xa]:            ret   


function: std#char.to_lower[3056] params(1) in file: lib\support\0.2.805/primitives.sharp:1111:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1112 movi #65, ebx   
2 [0x2]:            rstore ebx   
3 [0x3]:            loadl ebx, fp+0   
4 [0x4]:            loadval ecx   
5 [0x5]:            lte ecx, ebx   
6 [0x6]:            movr ebx, cmt   
7 [0x7]:            skne ebx // pc = 15   
8 [0x8]:            loadl ebx, fp+0   
9 [0x9]:            rstore ebx   
10 [0xa]:            movi #90, ebx   
12 [0xc]:            loadval ecx   
13 [0xd]:            lte ecx, ebx   
14 [0xe]:            movr ebx, cmt   
15 [0xf]:            movr cmt, ebx   
16 [0x10]:            jne 31   
17 [0x11]: line: 1113 movi #97, ebx   
19 [0x13]:            rstore ebx   
20 [0x14]:            loadl ebx, fp+0   
21 [0x15]:            rstore ebx   
22 [0x16]:            movi #65, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            sub ecx, ebx -> ebx   
26 [0x1a]:            loadval ecx   
27 [0x1b]:            add ecx, ebx -> ebx   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            jmp @34   
31 [0x1f]: line: 1115 loadl ebx, fp+0   
32 [0x20]:            return_val ebx   
33 [0x21]:            ret   
34 [0x22]:            nop   


function: std#char.to_upper[3057] params(1) in file: lib\support\0.2.805/primitives.sharp:1118:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1119 movi #97, ebx   
2 [0x2]:            rstore ebx   
3 [0x3]:            loadl ebx, fp+0   
4 [0x4]:            loadval ecx   
5 [0x5]:            lte ecx, ebx   
6 [0x6]:            movr ebx, cmt   
7 [0x7]:            skne ebx // pc = 15   
8 [0x8]:            loadl ebx, fp+0   
9 [0x9]:            rstore ebx   
10 [0xa]:            movi #122, ebx   
12 [0xc]:            loadval ecx   
13 [0xd]:            lte ecx, ebx   
14 [0xe]:            movr ebx, cmt   
15 [0xf]:            movr cmt, ebx   
16 [0x10]:            jne 31   
17 [0x11]: line: 1120 movi #65, ebx   
19 [0x13]:            rstore ebx   
20 [0x14]:            loadl ebx, fp+0   
21 [0x15]:            rstore ebx   
22 [0x16]:            movi #97, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            sub ecx, ebx -> ebx   
26 [0x1a]:            loadval ecx   
27 [0x1b]:            add ecx, ebx -> ebx   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            jmp @34   
31 [0x1f]: line: 1122 loadl ebx, fp+0   
32 [0x20]:            return_val ebx   
33 [0x21]:            ret   
34 [0x22]:            nop   


constructor: std#char.char[3058] params(0) in file: lib\support\0.2.805/primitives.sharp:990:6: note:  
		class char base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1673 // <std#integer<_int8>.integer>   
2 [0x2]:         ret   


constructor: std#byte.byte[3059] params(1) in file: lib\support\0.2.805/primitives.sharp:1126:9: note:  
		    byte(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @2875 // <std#uchar.uchar>   
10 [0xa]:         ret   


constructor: std#byte.byte[3060] params(1) in file: lib\support\0.2.805/primitives.sharp:1127:9: note:  
		    byte(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @2875 // <std#uchar.uchar>   
10 [0xa]:         ret   


constructor: std#byte.byte[3061] params(1) in file: lib\support\0.2.805/primitives.sharp:1128:9: note:  
		    byte(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @2875 // <std#uchar.uchar>   
10 [0xa]:         ret   


constructor: std#byte.byte[3062] params(1) in file: lib\support\0.2.805/primitives.sharp:1129:9: note:  
		    byte(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @2875 // <std#uchar.uchar>   
10 [0xa]:         ret   


constructor: std#byte.byte[3063] params(1) in file: lib\support\0.2.805/primitives.sharp:1130:9: note:  
		    byte(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @2875 // <std#uchar.uchar>   
10 [0xa]:         ret   


constructor: std#byte.byte[3064] params(1) in file: lib\support\0.2.805/primitives.sharp:1131:9: note:  
		    byte(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @2875 // <std#uchar.uchar>   
10 [0xa]:         ret   


constructor: std#byte.byte[3065] params(1) in file: lib\support\0.2.805/primitives.sharp:1132:9: note:  
		    byte(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @2875 // <std#uchar.uchar>   
10 [0xa]:         ret   


constructor: std#byte.byte[3066] params(1) in file: lib\support\0.2.805/primitives.sharp:1133:9: note:  
		    byte(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @2875 // <std#uchar.uchar>   
10 [0xa]:         ret   


constructor: std#byte.byte[3067] params(1) in file: lib\support\0.2.805/primitives.sharp:1134:9: note:  
		    byte(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @2875 // <std#uchar.uchar>   
10 [0xa]:         ret   


constructor: std#byte.byte[3068] params(1) in file: lib\support\0.2.805/primitives.sharp:1135:9: note:  
		    byte(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @2875 // <std#uchar.uchar>   
10 [0xa]:         ret   


constructor: std#byte.byte[3069] params(1) in file: lib\support\0.2.805/primitives.sharp:1136:9: note:  
		    byte(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @2875 // <std#uchar.uchar>   
4 [0x4]:         ret   


overload function: std#byte.operator![3070] params(0) in file: lib\support\0.2.805/primitives.sharp:1138:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1138 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            not ebx, ebx   
8 [0x8]:            return_val ebx   
9 [0x9]:            ret   


overload function: std#byte.operator++[3071] params(0) in file: lib\support\0.2.805/primitives.sharp:1139:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1139 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            inc ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#byte.operator++[3072] params(1) in file: lib\support\0.2.805/primitives.sharp:1140:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1140 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            movr egx, ebx   
8 [0x8]:            inc ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            movi #0, adx   
12 [0xc]:            rmov adx, ebx   
13 [0xd]:            movr ebx, egx   
14 [0xe]:            return_val ebx   
15 [0xf]:            ret   


overload function: std#byte.operator--[3073] params(0) in file: lib\support\0.2.805/primitives.sharp:1141:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1141 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            dec ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#byte.operator--[3074] params(1) in file: lib\support\0.2.805/primitives.sharp:1142:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1142 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            movr egx, ebx   
8 [0x8]:            dec ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            movi #0, adx   
12 [0xc]:            rmov adx, ebx   
13 [0xd]:            movr ebx, egx   
14 [0xe]:            return_val ebx   
15 [0xf]:            ret   


overload function: std#byte.operator+=[3075] params(1) in file: lib\support\0.2.805/primitives.sharp:1144:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1144 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator+=[3076] params(1) in file: lib\support\0.2.805/primitives.sharp:1145:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1145 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator+=[3077] params(1) in file: lib\support\0.2.805/primitives.sharp:1146:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1146 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator+=[3078] params(1) in file: lib\support\0.2.805/primitives.sharp:1147:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1147 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator+=[3079] params(1) in file: lib\support\0.2.805/primitives.sharp:1148:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1148 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator+=[3080] params(1) in file: lib\support\0.2.805/primitives.sharp:1149:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1149 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator+=[3081] params(1) in file: lib\support\0.2.805/primitives.sharp:1150:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1150 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator+=[3082] params(1) in file: lib\support\0.2.805/primitives.sharp:1151:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1151 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator+=[3083] params(1) in file: lib\support\0.2.805/primitives.sharp:1152:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1152 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator+=[3084] params(1) in file: lib\support\0.2.805/primitives.sharp:1153:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1153 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator+=[3085] params(1) in file: lib\support\0.2.805/primitives.sharp:1154:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1154 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            add ecx, ebx -> ebx   
10 [0xa]:            movu8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


overload function: std#byte.operator-=[3086] params(1) in file: lib\support\0.2.805/primitives.sharp:1156:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1156 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator-=[3087] params(1) in file: lib\support\0.2.805/primitives.sharp:1157:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1157 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator-=[3088] params(1) in file: lib\support\0.2.805/primitives.sharp:1158:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1158 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator-=[3089] params(1) in file: lib\support\0.2.805/primitives.sharp:1159:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1159 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator-=[3090] params(1) in file: lib\support\0.2.805/primitives.sharp:1160:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1160 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator-=[3091] params(1) in file: lib\support\0.2.805/primitives.sharp:1161:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1161 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator-=[3092] params(1) in file: lib\support\0.2.805/primitives.sharp:1162:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1162 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator-=[3093] params(1) in file: lib\support\0.2.805/primitives.sharp:1163:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1163 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator-=[3094] params(1) in file: lib\support\0.2.805/primitives.sharp:1164:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1164 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator-=[3095] params(1) in file: lib\support\0.2.805/primitives.sharp:1165:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1165 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator-=[3096] params(1) in file: lib\support\0.2.805/primitives.sharp:1166:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1166 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            sub ecx, ebx -> ebx   
10 [0xa]:            movu8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


overload function: std#byte.operator*=[3097] params(1) in file: lib\support\0.2.805/primitives.sharp:1168:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1168 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator*=[3098] params(1) in file: lib\support\0.2.805/primitives.sharp:1169:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1169 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator*=[3099] params(1) in file: lib\support\0.2.805/primitives.sharp:1170:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1170 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator*=[3100] params(1) in file: lib\support\0.2.805/primitives.sharp:1171:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1171 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator*=[3101] params(1) in file: lib\support\0.2.805/primitives.sharp:1172:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1172 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator*=[3102] params(1) in file: lib\support\0.2.805/primitives.sharp:1173:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1173 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator*=[3103] params(1) in file: lib\support\0.2.805/primitives.sharp:1174:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1174 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator*=[3104] params(1) in file: lib\support\0.2.805/primitives.sharp:1175:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1175 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator*=[3105] params(1) in file: lib\support\0.2.805/primitives.sharp:1176:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1176 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator*=[3106] params(1) in file: lib\support\0.2.805/primitives.sharp:1177:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1177 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator*=[3107] params(1) in file: lib\support\0.2.805/primitives.sharp:1178:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1178 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mul ecx, ebx -> ebx   
10 [0xa]:            movu8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


overload function: std#byte.operator/=[3108] params(1) in file: lib\support\0.2.805/primitives.sharp:1180:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1180 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator/=[3109] params(1) in file: lib\support\0.2.805/primitives.sharp:1181:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1181 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator/=[3110] params(1) in file: lib\support\0.2.805/primitives.sharp:1182:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1182 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator/=[3111] params(1) in file: lib\support\0.2.805/primitives.sharp:1183:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1183 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator/=[3112] params(1) in file: lib\support\0.2.805/primitives.sharp:1184:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1184 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator/=[3113] params(1) in file: lib\support\0.2.805/primitives.sharp:1185:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1185 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator/=[3114] params(1) in file: lib\support\0.2.805/primitives.sharp:1186:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1186 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator/=[3115] params(1) in file: lib\support\0.2.805/primitives.sharp:1187:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1187 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator/=[3116] params(1) in file: lib\support\0.2.805/primitives.sharp:1188:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1188 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator/=[3117] params(1) in file: lib\support\0.2.805/primitives.sharp:1189:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1189 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator/=[3118] params(1) in file: lib\support\0.2.805/primitives.sharp:1190:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1190 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            div ecx, ebx -> ebx   
10 [0xa]:            movu8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


overload function: std#byte.operator%=[3119] params(1) in file: lib\support\0.2.805/primitives.sharp:1192:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1192 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator%=[3120] params(1) in file: lib\support\0.2.805/primitives.sharp:1193:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1193 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator%=[3121] params(1) in file: lib\support\0.2.805/primitives.sharp:1194:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1194 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator%=[3122] params(1) in file: lib\support\0.2.805/primitives.sharp:1195:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1195 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator%=[3123] params(1) in file: lib\support\0.2.805/primitives.sharp:1196:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1196 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator%=[3124] params(1) in file: lib\support\0.2.805/primitives.sharp:1197:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1197 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator%=[3125] params(1) in file: lib\support\0.2.805/primitives.sharp:1198:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1198 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator%=[3126] params(1) in file: lib\support\0.2.805/primitives.sharp:1199:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1199 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator%=[3127] params(1) in file: lib\support\0.2.805/primitives.sharp:1200:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1200 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator%=[3128] params(1) in file: lib\support\0.2.805/primitives.sharp:1201:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1201 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            movu8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator%=[3129] params(1) in file: lib\support\0.2.805/primitives.sharp:1202:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1202 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mod ecx, ebx -> ebx   
10 [0xa]:            movu8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


overload function: std#byte.operator&=[3130] params(1) in file: lib\support\0.2.805/primitives.sharp:1204:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1204 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator&=[3131] params(1) in file: lib\support\0.2.805/primitives.sharp:1205:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1205 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator&=[3132] params(1) in file: lib\support\0.2.805/primitives.sharp:1206:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1206 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator&=[3133] params(1) in file: lib\support\0.2.805/primitives.sharp:1207:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1207 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator&=[3134] params(1) in file: lib\support\0.2.805/primitives.sharp:1208:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1208 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator&=[3135] params(1) in file: lib\support\0.2.805/primitives.sharp:1209:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1209 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator&=[3136] params(1) in file: lib\support\0.2.805/primitives.sharp:1210:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1210 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator&=[3137] params(1) in file: lib\support\0.2.805/primitives.sharp:1211:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1211 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator&=[3138] params(1) in file: lib\support\0.2.805/primitives.sharp:1212:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1212 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator&=[3139] params(1) in file: lib\support\0.2.805/primitives.sharp:1213:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1213 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator&=[3140] params(1) in file: lib\support\0.2.805/primitives.sharp:1214:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1214 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            and ecx, ebx   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator|=[3141] params(1) in file: lib\support\0.2.805/primitives.sharp:1216:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1216 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            movu8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator|=[3142] params(1) in file: lib\support\0.2.805/primitives.sharp:1217:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1217 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            movu8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator|=[3143] params(1) in file: lib\support\0.2.805/primitives.sharp:1218:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1218 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            movu8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator|=[3144] params(1) in file: lib\support\0.2.805/primitives.sharp:1219:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1219 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            movu8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator|=[3145] params(1) in file: lib\support\0.2.805/primitives.sharp:1220:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1220 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            movu8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator|=[3146] params(1) in file: lib\support\0.2.805/primitives.sharp:1221:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1221 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            movu8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator|=[3147] params(1) in file: lib\support\0.2.805/primitives.sharp:1222:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1222 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            movu8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator|=[3148] params(1) in file: lib\support\0.2.805/primitives.sharp:1223:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1223 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            movu8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator|=[3149] params(1) in file: lib\support\0.2.805/primitives.sharp:1224:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1224 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            movu8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator|=[3150] params(1) in file: lib\support\0.2.805/primitives.sharp:1225:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1225 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            movu8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            returnobj   
19 [0x13]:            ret   


overload function: std#byte.operator|=[3151] params(1) in file: lib\support\0.2.805/primitives.sharp:1226:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1226 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            or ecx, ebx   
10 [0xa]:            movu8 cmt, cmt   
11 [0xb]:            rmov adx, cmt   
12 [0xc]:            returnobj   
13 [0xd]:            ret   


function: std#byte.is_digit[3152] params(1) in file: lib\support\0.2.805/primitives.sharp:1228:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1229 loadl ebx, fp+0   
1 [0x1]:            rstore ebx   
2 [0x2]:            movi #48, ebx   
4 [0x4]:            loadval ecx   
5 [0x5]:            gte ecx, ebx   
6 [0x6]:            movr ebx, cmt   
7 [0x7]:            skne ebx // pc = 15   
8 [0x8]:            loadl ebx, fp+0   
9 [0x9]:            rstore ebx   
10 [0xa]:            movi #57, ebx   
12 [0xc]:            loadval ecx   
13 [0xd]:            lte ecx, ebx   
14 [0xe]:            movr ebx, cmt   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


function: std#byte.is_newline[3153] params(1) in file: lib\support\0.2.805/primitives.sharp:1232:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1233 call @2263 // <platform#build.is_windows>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 22   
4 [0x4]:            loadl ebx, fp+0   
5 [0x5]:            rstore ebx   
6 [0x6]:            movi #10, ebx   
8 [0x8]:            loadval ecx   
9 [0x9]:            test ecx, ebx   
10 [0xa]:            movr ebx, cmt   
11 [0xb]:            skpe ebx // pc = 19   
12 [0xc]:            loadl ebx, fp+0   
13 [0xd]:            rstore ebx   
14 [0xe]:            movi #13, ebx   
16 [0x10]:            loadval ecx   
17 [0x11]:            test ecx, ebx   
18 [0x12]:            movr ebx, cmt   
19 [0x13]:            return_val ebx   
20 [0x14]:            ret   
21 [0x15]:            jmp @31   
22 [0x16]: line: 1234 loadl ebx, fp+0   
23 [0x17]:            rstore ebx   
24 [0x18]:            movi #10, ebx   
26 [0x1a]:            loadval ecx   
27 [0x1b]:            test ecx, ebx   
28 [0x1c]:            movr ebx, cmt   
29 [0x1d]:            return_val ebx   
30 [0x1e]:            ret   
31 [0x1f]:            nop   


function: std#byte.is_alpha[3154] params(1) in file: lib\support\0.2.805/primitives.sharp:1237:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1238 loadl ebx, fp+0   
1 [0x1]:            rstore ebx   
2 [0x2]:            movi #65, ebx   
4 [0x4]:            loadval ecx   
5 [0x5]:            gte ecx, ebx   
6 [0x6]:            movr ebx, cmt   
7 [0x7]:            skne ebx // pc = 15   
8 [0x8]:            loadl ebx, fp+0   
9 [0x9]:            rstore ebx   
10 [0xa]:            movi #90, ebx   
12 [0xc]:            loadval ecx   
13 [0xd]:            lte ecx, ebx   
14 [0xe]:            movr ebx, cmt   
15 [0xf]:            skpe ebx // pc = 31   
16 [0x10]:            loadl ebx, fp+0   
17 [0x11]:            rstore ebx   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            gte ecx, ebx   
22 [0x16]:            movr ebx, cmt   
23 [0x17]:            skne ebx // pc = 31   
24 [0x18]:            loadl ebx, fp+0   
25 [0x19]:            rstore ebx   
26 [0x1a]:            movi #122, ebx   
28 [0x1c]:            loadval ecx   
29 [0x1d]:            lte ecx, ebx   
30 [0x1e]:            movr ebx, cmt   
31 [0x1f]:            return_val ebx   
32 [0x20]:            ret   


function: std#byte.is_alpha_num[3155] params(1) in file: lib\support\0.2.805/primitives.sharp:1242:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1243 loadl ebx, fp+0   
1 [0x1]:            rstore ebx   
2 [0x2]:            call @3154 // <std#byte.is_alpha>   
3 [0x3]:            loadval ebx   
4 [0x4]:            skpe ebx // pc = 9   
5 [0x5]:            loadl ebx, fp+0   
6 [0x6]:            rstore ebx   
7 [0x7]:            call @3152 // <std#byte.is_digit>   
8 [0x8]:            loadval ebx   
9 [0x9]:            return_val ebx   
10 [0xa]:            ret   


function: std#byte.to_lower[3156] params(1) in file: lib\support\0.2.805/primitives.sharp:1246:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1247 movi #65, ebx   
2 [0x2]:            rstore ebx   
3 [0x3]:            loadl ebx, fp+0   
4 [0x4]:            loadval ecx   
5 [0x5]:            lte ecx, ebx   
6 [0x6]:            movr ebx, cmt   
7 [0x7]:            skne ebx // pc = 15   
8 [0x8]:            loadl ebx, fp+0   
9 [0x9]:            rstore ebx   
10 [0xa]:            movi #90, ebx   
12 [0xc]:            loadval ecx   
13 [0xd]:            lte ecx, ebx   
14 [0xe]:            movr ebx, cmt   
15 [0xf]:            movr cmt, ebx   
16 [0x10]:            jne 31   
17 [0x11]: line: 1248 movi #97, ebx   
19 [0x13]:            rstore ebx   
20 [0x14]:            loadl ebx, fp+0   
21 [0x15]:            rstore ebx   
22 [0x16]:            movi #65, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            sub ecx, ebx -> ebx   
26 [0x1a]:            loadval ecx   
27 [0x1b]:            add ecx, ebx -> ebx   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            jmp @34   
31 [0x1f]: line: 1250 loadl ebx, fp+0   
32 [0x20]:            return_val ebx   
33 [0x21]:            ret   
34 [0x22]:            nop   


function: std#byte.to_upper[3157] params(1) in file: lib\support\0.2.805/primitives.sharp:1253:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1254 movi #97, ebx   
2 [0x2]:            rstore ebx   
3 [0x3]:            loadl ebx, fp+0   
4 [0x4]:            loadval ecx   
5 [0x5]:            lte ecx, ebx   
6 [0x6]:            movr ebx, cmt   
7 [0x7]:            skne ebx // pc = 15   
8 [0x8]:            loadl ebx, fp+0   
9 [0x9]:            rstore ebx   
10 [0xa]:            movi #122, ebx   
12 [0xc]:            loadval ecx   
13 [0xd]:            lte ecx, ebx   
14 [0xe]:            movr ebx, cmt   
15 [0xf]:            movr cmt, ebx   
16 [0x10]:            jne 31   
17 [0x11]: line: 1255 movi #65, ebx   
19 [0x13]:            rstore ebx   
20 [0x14]:            loadl ebx, fp+0   
21 [0x15]:            rstore ebx   
22 [0x16]:            movi #97, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            sub ecx, ebx -> ebx   
26 [0x1a]:            loadval ecx   
27 [0x1b]:            add ecx, ebx -> ebx   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            jmp @34   
31 [0x1f]: line: 1257 loadl ebx, fp+0   
32 [0x20]:            return_val ebx   
33 [0x21]:            ret   
34 [0x22]:            nop   


constructor: std#byte.byte[3158] params(0) in file: lib\support\0.2.805/primitives.sharp:1125:6: note:  
		class byte base uchar {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2958 // <std#uchar.uchar>   
2 [0x2]:         ret   


constructor: std#bool.bool[3159] params(1) in file: lib\support\0.2.805/primitives.sharp:1261:9: note:  
		    bool(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#bool.bool[3160] params(1) in file: lib\support\0.2.805/primitives.sharp:1262:9: note:  
		    bool(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#bool.bool[3161] params(1) in file: lib\support\0.2.805/primitives.sharp:1263:9: note:  
		    bool(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#bool.bool[3162] params(1) in file: lib\support\0.2.805/primitives.sharp:1264:9: note:  
		    bool(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#bool.bool[3163] params(1) in file: lib\support\0.2.805/primitives.sharp:1265:9: note:  
		    bool(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#bool.bool[3164] params(1) in file: lib\support\0.2.805/primitives.sharp:1266:9: note:  
		    bool(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#bool.bool[3165] params(1) in file: lib\support\0.2.805/primitives.sharp:1267:9: note:  
		    bool(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#bool.bool[3166] params(1) in file: lib\support\0.2.805/primitives.sharp:1268:9: note:  
		    bool(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#bool.bool[3167] params(1) in file: lib\support\0.2.805/primitives.sharp:1269:9: note:  
		    bool(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#bool.bool[3168] params(1) in file: lib\support\0.2.805/primitives.sharp:1270:9: note:  
		    bool(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1466 // <std#integer<_int8>.integer>   
10 [0xa]:         ret   


constructor: std#bool.bool[3169] params(1) in file: lib\support\0.2.805/primitives.sharp:1271:9: note:  
		    bool(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @1466 // <std#integer<_int8>.integer>   
4 [0x4]:         ret   


overload function: std#bool.operator![3170] params(0) in file: lib\support\0.2.805/primitives.sharp:1273:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1273 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            not ebx, ebx   
8 [0x8]:            return_val ebx   
9 [0x9]:            ret   


overload function: std#bool.operator++[3171] params(0) in file: lib\support\0.2.805/primitives.sharp:1274:8: note:  
		    def operator++() := (value = !value);
		       ^

0 [0x0]: line: 1274 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            not ebx, ebx   
8 [0x8]:            rstore ebx   
9 [0x9]:            movl 0   
10 [0xa]:            movn #0   
12 [0xc]:            loadval ebx   
13 [0xd]:            mov8 ebx, ebx   
14 [0xe]:            movi #0, adx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#bool.operator++[3172] params(1) in file: lib\support\0.2.805/primitives.sharp:1275:8: note:  
		    def operator++(num : var) := (!value);
		       ^

0 [0x0]: line: 1275 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            not ebx, ebx   
8 [0x8]:            return_val ebx   
9 [0x9]:            ret   


overload function: std#bool.operator--[3173] params(0) in file: lib\support\0.2.805/primitives.sharp:1276:8: note:  
		    def operator--() := (value = !value);
		       ^

0 [0x0]: line: 1276 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            not ebx, ebx   
8 [0x8]:            rstore ebx   
9 [0x9]:            movl 0   
10 [0xa]:            movn #0   
12 [0xc]:            loadval ebx   
13 [0xd]:            mov8 ebx, ebx   
14 [0xe]:            movi #0, adx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#bool.operator--[3174] params(1) in file: lib\support\0.2.805/primitives.sharp:1277:8: note:  
		    def operator--(num : var) := (value = !value);
		       ^

0 [0x0]: line: 1277 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            not ebx, ebx   
8 [0x8]:            rstore ebx   
9 [0x9]:            movl 0   
10 [0xa]:            movn #0   
12 [0xc]:            loadval ebx   
13 [0xd]:            mov8 ebx, ebx   
14 [0xe]:            movi #0, adx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#bool.operator+=[3175] params(1) in file: lib\support\0.2.805/primitives.sharp:1279:8: note:  
		    def operator+=(num : ulong)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1279 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            add ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator+=[3176] params(1) in file: lib\support\0.2.805/primitives.sharp:1280:8: note:  
		    def operator+=(num : long)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1280 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            add ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator+=[3177] params(1) in file: lib\support\0.2.805/primitives.sharp:1281:8: note:  
		    def operator+=(num : uint)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1281 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            add ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator+=[3178] params(1) in file: lib\support\0.2.805/primitives.sharp:1282:8: note:  
		    def operator+=(num : int)    := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1282 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            add ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator+=[3179] params(1) in file: lib\support\0.2.805/primitives.sharp:1283:8: note:  
		    def operator+=(num : ushort) := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1283 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            add ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator+=[3180] params(1) in file: lib\support\0.2.805/primitives.sharp:1284:8: note:  
		    def operator+=(num : short)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1284 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            add ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator+=[3181] params(1) in file: lib\support\0.2.805/primitives.sharp:1285:8: note:  
		    def operator+=(num : uchar)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1285 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            add ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator+=[3182] params(1) in file: lib\support\0.2.805/primitives.sharp:1286:8: note:  
		    def operator+=(num : char)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1286 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            add ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator+=[3183] params(1) in file: lib\support\0.2.805/primitives.sharp:1287:8: note:  
		    def operator+=(num : byte)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1287 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            add ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator+=[3184] params(1) in file: lib\support\0.2.805/primitives.sharp:1288:8: note:  
		    def operator+=(num : bool)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1288 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            add ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator+=[3185] params(1) in file: lib\support\0.2.805/primitives.sharp:1289:8: note:  
		    def operator+=(num : var)    := check_value(value+=num);
		       ^

0 [0x0]: line: 1289 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            loadl ebx, fp+1   
3 [0x3]:            rstore ebx   
4 [0x4]:            movl 0   
5 [0x5]:            movn #0   
7 [0x7]:            movi #0, adx   
9 [0x9]:            iaload ecx, adx   
10 [0xa]:            loadval ebx   
11 [0xb]:            add ecx, ebx -> ebx   
12 [0xc]:            mov8 ebx, ebx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            rstore ebx   
15 [0xf]:            call @3252 // <std#bool.check_value>   
16 [0x10]:            loadval ebx   
17 [0x11]:            return_val ebx   
18 [0x12]:            ret   


overload function: std#bool.operator-=[3186] params(1) in file: lib\support\0.2.805/primitives.sharp:1291:8: note:  
		    def operator-=(num : ulong)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1291 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            sub ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator-=[3187] params(1) in file: lib\support\0.2.805/primitives.sharp:1292:8: note:  
		    def operator-=(num : long)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1292 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            sub ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator-=[3188] params(1) in file: lib\support\0.2.805/primitives.sharp:1293:8: note:  
		    def operator-=(num : uint)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1293 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            sub ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator-=[3189] params(1) in file: lib\support\0.2.805/primitives.sharp:1294:8: note:  
		    def operator-=(num : int)    := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1294 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            sub ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator-=[3190] params(1) in file: lib\support\0.2.805/primitives.sharp:1295:8: note:  
		    def operator-=(num : ushort) := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1295 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            sub ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator-=[3191] params(1) in file: lib\support\0.2.805/primitives.sharp:1296:8: note:  
		    def operator-=(num : short)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1296 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            sub ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator-=[3192] params(1) in file: lib\support\0.2.805/primitives.sharp:1297:8: note:  
		    def operator-=(num : uchar)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1297 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            sub ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator-=[3193] params(1) in file: lib\support\0.2.805/primitives.sharp:1298:8: note:  
		    def operator-=(num : char)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1298 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            sub ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator-=[3194] params(1) in file: lib\support\0.2.805/primitives.sharp:1299:8: note:  
		    def operator-=(num : byte)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1299 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            sub ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator-=[3195] params(1) in file: lib\support\0.2.805/primitives.sharp:1300:8: note:  
		    def operator-=(num : bool)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1300 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            sub ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator-=[3196] params(1) in file: lib\support\0.2.805/primitives.sharp:1301:8: note:  
		    def operator-=(num : var)    := check_value(value-=num);
		       ^

0 [0x0]: line: 1301 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            loadl ebx, fp+1   
3 [0x3]:            rstore ebx   
4 [0x4]:            movl 0   
5 [0x5]:            movn #0   
7 [0x7]:            movi #0, adx   
9 [0x9]:            iaload ecx, adx   
10 [0xa]:            loadval ebx   
11 [0xb]:            sub ecx, ebx -> ebx   
12 [0xc]:            mov8 ebx, ebx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            rstore ebx   
15 [0xf]:            call @3252 // <std#bool.check_value>   
16 [0x10]:            loadval ebx   
17 [0x11]:            return_val ebx   
18 [0x12]:            ret   


overload function: std#bool.operator*=[3197] params(1) in file: lib\support\0.2.805/primitives.sharp:1303:8: note:  
		    def operator*=(num : ulong)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1303 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mul ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator*=[3198] params(1) in file: lib\support\0.2.805/primitives.sharp:1304:8: note:  
		    def operator*=(num : long)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1304 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mul ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator*=[3199] params(1) in file: lib\support\0.2.805/primitives.sharp:1305:8: note:  
		    def operator*=(num : uint)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1305 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mul ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator*=[3200] params(1) in file: lib\support\0.2.805/primitives.sharp:1306:8: note:  
		    def operator*=(num : int)    := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1306 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mul ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator*=[3201] params(1) in file: lib\support\0.2.805/primitives.sharp:1307:8: note:  
		    def operator*=(num : ushort) := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1307 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mul ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator*=[3202] params(1) in file: lib\support\0.2.805/primitives.sharp:1308:8: note:  
		    def operator*=(num : short)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1308 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mul ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator*=[3203] params(1) in file: lib\support\0.2.805/primitives.sharp:1309:8: note:  
		    def operator*=(num : uchar)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1309 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mul ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator*=[3204] params(1) in file: lib\support\0.2.805/primitives.sharp:1310:8: note:  
		    def operator*=(num : char)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1310 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mul ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator*=[3205] params(1) in file: lib\support\0.2.805/primitives.sharp:1311:8: note:  
		    def operator*=(num : byte)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1311 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mul ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator*=[3206] params(1) in file: lib\support\0.2.805/primitives.sharp:1312:8: note:  
		    def operator*=(num : bool)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1312 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mul ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator*=[3207] params(1) in file: lib\support\0.2.805/primitives.sharp:1313:8: note:  
		    def operator*=(num : var)    := check_value(value*=num);
		       ^

0 [0x0]: line: 1313 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            loadl ebx, fp+1   
3 [0x3]:            rstore ebx   
4 [0x4]:            movl 0   
5 [0x5]:            movn #0   
7 [0x7]:            movi #0, adx   
9 [0x9]:            iaload ecx, adx   
10 [0xa]:            loadval ebx   
11 [0xb]:            mul ecx, ebx -> ebx   
12 [0xc]:            mov8 ebx, ebx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            rstore ebx   
15 [0xf]:            call @3252 // <std#bool.check_value>   
16 [0x10]:            loadval ebx   
17 [0x11]:            return_val ebx   
18 [0x12]:            ret   


overload function: std#bool.operator/=[3208] params(1) in file: lib\support\0.2.805/primitives.sharp:1315:8: note:  
		    def operator/=(num : ulong)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1315 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            div ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator/=[3209] params(1) in file: lib\support\0.2.805/primitives.sharp:1316:8: note:  
		    def operator/=(num : long)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1316 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            div ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator/=[3210] params(1) in file: lib\support\0.2.805/primitives.sharp:1317:8: note:  
		    def operator/=(num : uint)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1317 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            div ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator/=[3211] params(1) in file: lib\support\0.2.805/primitives.sharp:1318:8: note:  
		    def operator/=(num : int)    := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1318 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            div ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator/=[3212] params(1) in file: lib\support\0.2.805/primitives.sharp:1319:8: note:  
		    def operator/=(num : ushort) := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1319 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            div ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator/=[3213] params(1) in file: lib\support\0.2.805/primitives.sharp:1320:8: note:  
		    def operator/=(num : short)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1320 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            div ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator/=[3214] params(1) in file: lib\support\0.2.805/primitives.sharp:1321:8: note:  
		    def operator/=(num : uchar)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1321 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            div ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator/=[3215] params(1) in file: lib\support\0.2.805/primitives.sharp:1322:8: note:  
		    def operator/=(num : char)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1322 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            div ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator/=[3216] params(1) in file: lib\support\0.2.805/primitives.sharp:1323:8: note:  
		    def operator/=(num : byte)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1323 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            div ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator/=[3217] params(1) in file: lib\support\0.2.805/primitives.sharp:1324:8: note:  
		    def operator/=(num : bool)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1324 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            div ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator/=[3218] params(1) in file: lib\support\0.2.805/primitives.sharp:1325:8: note:  
		    def operator/=(num : var)    := check_value(value/=num);
		       ^

0 [0x0]: line: 1325 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            loadl ebx, fp+1   
3 [0x3]:            rstore ebx   
4 [0x4]:            movl 0   
5 [0x5]:            movn #0   
7 [0x7]:            movi #0, adx   
9 [0x9]:            iaload ecx, adx   
10 [0xa]:            loadval ebx   
11 [0xb]:            div ecx, ebx -> ebx   
12 [0xc]:            mov8 ebx, ebx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            rstore ebx   
15 [0xf]:            call @3252 // <std#bool.check_value>   
16 [0x10]:            loadval ebx   
17 [0x11]:            return_val ebx   
18 [0x12]:            ret   


overload function: std#bool.operator%=[3219] params(1) in file: lib\support\0.2.805/primitives.sharp:1327:8: note:  
		    def operator%=(num : ulong)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1327 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mod ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator%=[3220] params(1) in file: lib\support\0.2.805/primitives.sharp:1328:8: note:  
		    def operator%=(num : long)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1328 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mod ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator%=[3221] params(1) in file: lib\support\0.2.805/primitives.sharp:1329:8: note:  
		    def operator%=(num : uint)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1329 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mod ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator%=[3222] params(1) in file: lib\support\0.2.805/primitives.sharp:1330:8: note:  
		    def operator%=(num : int)    := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1330 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mod ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator%=[3223] params(1) in file: lib\support\0.2.805/primitives.sharp:1331:8: note:  
		    def operator%=(num : ushort) := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1331 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mod ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator%=[3224] params(1) in file: lib\support\0.2.805/primitives.sharp:1332:8: note:  
		    def operator%=(num : short)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1332 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mod ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator%=[3225] params(1) in file: lib\support\0.2.805/primitives.sharp:1333:8: note:  
		    def operator%=(num : uchar)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1333 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mod ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator%=[3226] params(1) in file: lib\support\0.2.805/primitives.sharp:1334:8: note:  
		    def operator%=(num : char)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1334 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mod ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator%=[3227] params(1) in file: lib\support\0.2.805/primitives.sharp:1335:8: note:  
		    def operator%=(num : byte)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1335 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mod ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator%=[3228] params(1) in file: lib\support\0.2.805/primitives.sharp:1336:8: note:  
		    def operator%=(num : bool)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1336 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            mod ecx, ebx -> ebx   
18 [0x12]:            mov8 ebx, ebx   
19 [0x13]:            rmov adx, ebx   
20 [0x14]:            rstore ebx   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator%=[3229] params(1) in file: lib\support\0.2.805/primitives.sharp:1337:8: note:  
		    def operator%=(num : var)    := check_value(value%=num);
		       ^

0 [0x0]: line: 1337 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            loadl ebx, fp+1   
3 [0x3]:            rstore ebx   
4 [0x4]:            movl 0   
5 [0x5]:            movn #0   
7 [0x7]:            movi #0, adx   
9 [0x9]:            iaload ecx, adx   
10 [0xa]:            loadval ebx   
11 [0xb]:            mod ecx, ebx -> ebx   
12 [0xc]:            mov8 ebx, ebx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            rstore ebx   
15 [0xf]:            call @3252 // <std#bool.check_value>   
16 [0x10]:            loadval ebx   
17 [0x11]:            return_val ebx   
18 [0x12]:            ret   


overload function: std#bool.operator&=[3230] params(1) in file: lib\support\0.2.805/primitives.sharp:1339:8: note:  
		    def operator&=(num : ulong)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1339 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            and ecx, ebx   
18 [0x12]:            rmov adx, cmt   
19 [0x13]:            rstore cmt   
20 [0x14]:            call @3252 // <std#bool.check_value>   
21 [0x15]:            loadval ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   


overload function: std#bool.operator&=[3231] params(1) in file: lib\support\0.2.805/primitives.sharp:1340:8: note:  
		    def operator&=(num : long)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1340 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            and ecx, ebx   
18 [0x12]:            rmov adx, cmt   
19 [0x13]:            rstore cmt   
20 [0x14]:            call @3252 // <std#bool.check_value>   
21 [0x15]:            loadval ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   


overload function: std#bool.operator&=[3232] params(1) in file: lib\support\0.2.805/primitives.sharp:1341:8: note:  
		    def operator&=(num : uint)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1341 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            and ecx, ebx   
18 [0x12]:            rmov adx, cmt   
19 [0x13]:            rstore cmt   
20 [0x14]:            call @3252 // <std#bool.check_value>   
21 [0x15]:            loadval ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   


overload function: std#bool.operator&=[3233] params(1) in file: lib\support\0.2.805/primitives.sharp:1342:8: note:  
		    def operator&=(num : int)    := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1342 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            and ecx, ebx   
18 [0x12]:            rmov adx, cmt   
19 [0x13]:            rstore cmt   
20 [0x14]:            call @3252 // <std#bool.check_value>   
21 [0x15]:            loadval ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   


overload function: std#bool.operator&=[3234] params(1) in file: lib\support\0.2.805/primitives.sharp:1343:8: note:  
		    def operator&=(num : ushort) := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1343 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            and ecx, ebx   
18 [0x12]:            rmov adx, cmt   
19 [0x13]:            rstore cmt   
20 [0x14]:            call @3252 // <std#bool.check_value>   
21 [0x15]:            loadval ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   


overload function: std#bool.operator&=[3235] params(1) in file: lib\support\0.2.805/primitives.sharp:1344:8: note:  
		    def operator&=(num : short)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1344 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            and ecx, ebx   
18 [0x12]:            rmov adx, cmt   
19 [0x13]:            rstore cmt   
20 [0x14]:            call @3252 // <std#bool.check_value>   
21 [0x15]:            loadval ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   


overload function: std#bool.operator&=[3236] params(1) in file: lib\support\0.2.805/primitives.sharp:1345:8: note:  
		    def operator&=(num : uchar)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1345 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            and ecx, ebx   
18 [0x12]:            rmov adx, cmt   
19 [0x13]:            rstore cmt   
20 [0x14]:            call @3252 // <std#bool.check_value>   
21 [0x15]:            loadval ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   


overload function: std#bool.operator&=[3237] params(1) in file: lib\support\0.2.805/primitives.sharp:1346:8: note:  
		    def operator&=(num : char)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1346 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            and ecx, ebx   
18 [0x12]:            rmov adx, cmt   
19 [0x13]:            rstore cmt   
20 [0x14]:            call @3252 // <std#bool.check_value>   
21 [0x15]:            loadval ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   


overload function: std#bool.operator&=[3238] params(1) in file: lib\support\0.2.805/primitives.sharp:1347:8: note:  
		    def operator&=(num : byte)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1347 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            and ecx, ebx   
18 [0x12]:            rmov adx, cmt   
19 [0x13]:            rstore cmt   
20 [0x14]:            call @3252 // <std#bool.check_value>   
21 [0x15]:            loadval ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   


overload function: std#bool.operator&=[3239] params(1) in file: lib\support\0.2.805/primitives.sharp:1348:8: note:  
		    def operator&=(num : bool)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1348 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            and ecx, ebx   
18 [0x12]:            rmov adx, cmt   
19 [0x13]:            rstore cmt   
20 [0x14]:            call @3252 // <std#bool.check_value>   
21 [0x15]:            loadval ebx   
22 [0x16]:            return_val ebx   
23 [0x17]:            ret   


overload function: std#bool.operator&=[3240] params(1) in file: lib\support\0.2.805/primitives.sharp:1349:8: note:  
		    def operator&=(num : var)    := check_value(value&=num);
		       ^

0 [0x0]: line: 1349 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            loadl ebx, fp+1   
3 [0x3]:            rstore ebx   
4 [0x4]:            movl 0   
5 [0x5]:            movn #0   
7 [0x7]:            movi #0, adx   
9 [0x9]:            iaload ecx, adx   
10 [0xa]:            loadval ebx   
11 [0xb]:            and ecx, ebx   
12 [0xc]:            rmov adx, cmt   
13 [0xd]:            rstore cmt   
14 [0xe]:            call @3252 // <std#bool.check_value>   
15 [0xf]:            loadval ebx   
16 [0x10]:            return_val ebx   
17 [0x11]:            ret   


overload function: std#bool.operator|=[3241] params(1) in file: lib\support\0.2.805/primitives.sharp:1351:8: note:  
		    def operator|=(num : ulong)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1351 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            or ecx, ebx   
18 [0x12]:            mov8 cmt, cmt   
19 [0x13]:            rmov adx, cmt   
20 [0x14]:            rstore cmt   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator|=[3242] params(1) in file: lib\support\0.2.805/primitives.sharp:1352:8: note:  
		    def operator|=(num : long)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1352 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            or ecx, ebx   
18 [0x12]:            mov8 cmt, cmt   
19 [0x13]:            rmov adx, cmt   
20 [0x14]:            rstore cmt   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator|=[3243] params(1) in file: lib\support\0.2.805/primitives.sharp:1353:8: note:  
		    def operator|=(num : uint)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1353 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            or ecx, ebx   
18 [0x12]:            mov8 cmt, cmt   
19 [0x13]:            rmov adx, cmt   
20 [0x14]:            rstore cmt   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator|=[3244] params(1) in file: lib\support\0.2.805/primitives.sharp:1354:8: note:  
		    def operator|=(num : int)    := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1354 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            or ecx, ebx   
18 [0x12]:            mov8 cmt, cmt   
19 [0x13]:            rmov adx, cmt   
20 [0x14]:            rstore cmt   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator|=[3245] params(1) in file: lib\support\0.2.805/primitives.sharp:1355:8: note:  
		    def operator|=(num : ushort) := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1355 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            or ecx, ebx   
18 [0x12]:            mov8 cmt, cmt   
19 [0x13]:            rmov adx, cmt   
20 [0x14]:            rstore cmt   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator|=[3246] params(1) in file: lib\support\0.2.805/primitives.sharp:1356:8: note:  
		    def operator|=(num : short)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1356 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            or ecx, ebx   
18 [0x12]:            mov8 cmt, cmt   
19 [0x13]:            rmov adx, cmt   
20 [0x14]:            rstore cmt   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator|=[3247] params(1) in file: lib\support\0.2.805/primitives.sharp:1357:8: note:  
		    def operator|=(num : uchar)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1357 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            or ecx, ebx   
18 [0x12]:            mov8 cmt, cmt   
19 [0x13]:            rmov adx, cmt   
20 [0x14]:            rstore cmt   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator|=[3248] params(1) in file: lib\support\0.2.805/primitives.sharp:1358:8: note:  
		    def operator|=(num : char)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1358 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            or ecx, ebx   
18 [0x12]:            mov8 cmt, cmt   
19 [0x13]:            rmov adx, cmt   
20 [0x14]:            rstore cmt   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator|=[3249] params(1) in file: lib\support\0.2.805/primitives.sharp:1359:8: note:  
		    def operator|=(num : byte)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1359 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            or ecx, ebx   
18 [0x12]:            mov8 cmt, cmt   
19 [0x13]:            rmov adx, cmt   
20 [0x14]:            rstore cmt   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator|=[3250] params(1) in file: lib\support\0.2.805/primitives.sharp:1360:8: note:  
		    def operator|=(num : bool)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1360 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            movl 1   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            chklen adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            rstore ebx   
10 [0xa]:            movl 0   
11 [0xb]:            movn #0   
13 [0xd]:            movi #0, adx   
15 [0xf]:            iaload ecx, adx   
16 [0x10]:            loadval ebx   
17 [0x11]:            or ecx, ebx   
18 [0x12]:            mov8 cmt, cmt   
19 [0x13]:            rmov adx, cmt   
20 [0x14]:            rstore cmt   
21 [0x15]:            call @3252 // <std#bool.check_value>   
22 [0x16]:            loadval ebx   
23 [0x17]:            return_val ebx   
24 [0x18]:            ret   


overload function: std#bool.operator|=[3251] params(1) in file: lib\support\0.2.805/primitives.sharp:1361:8: note:  
		    def operator|=(num : var)    := check_value(value|=num);
		       ^

0 [0x0]: line: 1361 movl 0   
1 [0x1]:            pushobj   
2 [0x2]:            loadl ebx, fp+1   
3 [0x3]:            rstore ebx   
4 [0x4]:            movl 0   
5 [0x5]:            movn #0   
7 [0x7]:            movi #0, adx   
9 [0x9]:            iaload ecx, adx   
10 [0xa]:            loadval ebx   
11 [0xb]:            or ecx, ebx   
12 [0xc]:            mov8 cmt, cmt   
13 [0xd]:            rmov adx, cmt   
14 [0xe]:            rstore cmt   
15 [0xf]:            call @3252 // <std#bool.check_value>   
16 [0x10]:            loadval ebx   
17 [0x11]:            return_val ebx   
18 [0x12]:            ret   


function: std#bool.check_value[3252] params(1) in file: lib\support\0.2.805/primitives.sharp:1363:8: note:  
		    def check_value(new_val: var) : var {
		       ^

0 [0x0]: line: 1364 loadl ebx, fp+1   
1 [0x1]:            skne ebx // pc = 5   
2 [0x2]:            movi #1, ebx   
4 [0x4]:            skip @2 // pc = 6   
5 [0x5]:            movi #0, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


constructor: std#bool.bool[3253] params(0) in file: lib\support\0.2.805/primitives.sharp:1260:6: note:  
		class bool base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1673 // <std#integer<_int8>.integer>   
2 [0x2]:         ret   


constructor: std#double.double[3254] params(1) in file: lib\support\0.2.805/primitives.sharp:1369:11: note:  
		    double(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1674 // <std#integer<var>.integer>   
10 [0xa]:         ret   


constructor: std#double.double[3255] params(1) in file: lib\support\0.2.805/primitives.sharp:1370:11: note:  
		    double(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1674 // <std#integer<var>.integer>   
10 [0xa]:         ret   


constructor: std#double.double[3256] params(1) in file: lib\support\0.2.805/primitives.sharp:1371:11: note:  
		    double(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1674 // <std#integer<var>.integer>   
10 [0xa]:         ret   


constructor: std#double.double[3257] params(1) in file: lib\support\0.2.805/primitives.sharp:1372:11: note:  
		    double(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1674 // <std#integer<var>.integer>   
10 [0xa]:         ret   


constructor: std#double.double[3258] params(1) in file: lib\support\0.2.805/primitives.sharp:1373:11: note:  
		    double(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1674 // <std#integer<var>.integer>   
10 [0xa]:         ret   


constructor: std#double.double[3259] params(1) in file: lib\support\0.2.805/primitives.sharp:1374:11: note:  
		    double(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1674 // <std#integer<var>.integer>   
10 [0xa]:         ret   


constructor: std#double.double[3260] params(1) in file: lib\support\0.2.805/primitives.sharp:1375:11: note:  
		    double(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1674 // <std#integer<var>.integer>   
10 [0xa]:         ret   


constructor: std#double.double[3261] params(1) in file: lib\support\0.2.805/primitives.sharp:1376:11: note:  
		    double(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1674 // <std#integer<var>.integer>   
10 [0xa]:         ret   


constructor: std#double.double[3262] params(1) in file: lib\support\0.2.805/primitives.sharp:1377:11: note:  
		    double(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1674 // <std#integer<var>.integer>   
10 [0xa]:         ret   


constructor: std#double.double[3263] params(1) in file: lib\support\0.2.805/primitives.sharp:1378:11: note:  
		    double(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         chklen adx   
7 [0x7]:         iaload ebx, adx   
8 [0x8]:         rstore ebx   
9 [0x9]:         call @1674 // <std#integer<var>.integer>   
10 [0xa]:         ret   


constructor: std#double.double[3264] params(1) in file: lib\support\0.2.805/primitives.sharp:1379:11: note:  
		    double(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         rstore ebx   
3 [0x3]:         call @1674 // <std#integer<var>.integer>   
4 [0x4]:         ret   


overload function: std#double.operator![3265] params(0) in file: lib\support\0.2.805/primitives.sharp:1381:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1381 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            not ebx, ebx   
8 [0x8]:            return_val ebx   
9 [0x9]:            ret   


overload function: std#double.operator++[3266] params(0) in file: lib\support\0.2.805/primitives.sharp:1382:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1382 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            inc ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#double.operator++[3267] params(1) in file: lib\support\0.2.805/primitives.sharp:1383:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1383 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            movr egx, ebx   
8 [0x8]:            inc ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#double.operator--[3268] params(0) in file: lib\support\0.2.805/primitives.sharp:1384:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1384 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            dec ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#double.operator--[3269] params(1) in file: lib\support\0.2.805/primitives.sharp:1385:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1385 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            movr egx, ebx   
8 [0x8]:            dec ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#double.operator+=[3270] params(1) in file: lib\support\0.2.805/primitives.sharp:1387:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1387 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3271] params(1) in file: lib\support\0.2.805/primitives.sharp:1388:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1388 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3272] params(1) in file: lib\support\0.2.805/primitives.sharp:1389:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1389 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3273] params(1) in file: lib\support\0.2.805/primitives.sharp:1390:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1390 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3274] params(1) in file: lib\support\0.2.805/primitives.sharp:1391:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1391 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3275] params(1) in file: lib\support\0.2.805/primitives.sharp:1392:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1392 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3276] params(1) in file: lib\support\0.2.805/primitives.sharp:1393:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1393 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3277] params(1) in file: lib\support\0.2.805/primitives.sharp:1394:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1394 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3278] params(1) in file: lib\support\0.2.805/primitives.sharp:1395:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1395 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3279] params(1) in file: lib\support\0.2.805/primitives.sharp:1396:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1396 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3280] params(1) in file: lib\support\0.2.805/primitives.sharp:1397:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1397 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator+=[3281] params(1) in file: lib\support\0.2.805/primitives.sharp:1398:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1398 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            add ecx, ebx -> ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#double.operator-=[3282] params(1) in file: lib\support\0.2.805/primitives.sharp:1400:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1400 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3283] params(1) in file: lib\support\0.2.805/primitives.sharp:1401:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1401 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3284] params(1) in file: lib\support\0.2.805/primitives.sharp:1402:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1402 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3285] params(1) in file: lib\support\0.2.805/primitives.sharp:1403:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1403 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3286] params(1) in file: lib\support\0.2.805/primitives.sharp:1404:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1404 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3287] params(1) in file: lib\support\0.2.805/primitives.sharp:1405:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1405 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3288] params(1) in file: lib\support\0.2.805/primitives.sharp:1406:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1406 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3289] params(1) in file: lib\support\0.2.805/primitives.sharp:1407:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1407 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3290] params(1) in file: lib\support\0.2.805/primitives.sharp:1408:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1408 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3291] params(1) in file: lib\support\0.2.805/primitives.sharp:1409:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1409 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3292] params(1) in file: lib\support\0.2.805/primitives.sharp:1410:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1410 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator-=[3293] params(1) in file: lib\support\0.2.805/primitives.sharp:1411:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1411 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            sub ecx, ebx -> ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#double.operator*=[3294] params(1) in file: lib\support\0.2.805/primitives.sharp:1413:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1413 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3295] params(1) in file: lib\support\0.2.805/primitives.sharp:1414:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1414 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3296] params(1) in file: lib\support\0.2.805/primitives.sharp:1415:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1415 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3297] params(1) in file: lib\support\0.2.805/primitives.sharp:1416:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1416 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3298] params(1) in file: lib\support\0.2.805/primitives.sharp:1417:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1417 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3299] params(1) in file: lib\support\0.2.805/primitives.sharp:1418:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1418 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3300] params(1) in file: lib\support\0.2.805/primitives.sharp:1419:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1419 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3301] params(1) in file: lib\support\0.2.805/primitives.sharp:1420:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1420 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3302] params(1) in file: lib\support\0.2.805/primitives.sharp:1421:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1421 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3303] params(1) in file: lib\support\0.2.805/primitives.sharp:1422:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1422 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3304] params(1) in file: lib\support\0.2.805/primitives.sharp:1423:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1423 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator*=[3305] params(1) in file: lib\support\0.2.805/primitives.sharp:1424:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1424 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mul ecx, ebx -> ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#double.operator/=[3306] params(1) in file: lib\support\0.2.805/primitives.sharp:1426:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1426 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3307] params(1) in file: lib\support\0.2.805/primitives.sharp:1427:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1427 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3308] params(1) in file: lib\support\0.2.805/primitives.sharp:1428:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1428 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3309] params(1) in file: lib\support\0.2.805/primitives.sharp:1429:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1429 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3310] params(1) in file: lib\support\0.2.805/primitives.sharp:1430:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1430 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3311] params(1) in file: lib\support\0.2.805/primitives.sharp:1431:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1431 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3312] params(1) in file: lib\support\0.2.805/primitives.sharp:1432:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1432 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3313] params(1) in file: lib\support\0.2.805/primitives.sharp:1433:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1433 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3314] params(1) in file: lib\support\0.2.805/primitives.sharp:1434:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1434 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3315] params(1) in file: lib\support\0.2.805/primitives.sharp:1435:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1435 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3316] params(1) in file: lib\support\0.2.805/primitives.sharp:1436:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1436 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator/=[3317] params(1) in file: lib\support\0.2.805/primitives.sharp:1437:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1437 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            div ecx, ebx -> ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#double.operator%=[3318] params(1) in file: lib\support\0.2.805/primitives.sharp:1439:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1439 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3319] params(1) in file: lib\support\0.2.805/primitives.sharp:1440:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1440 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3320] params(1) in file: lib\support\0.2.805/primitives.sharp:1441:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1441 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3321] params(1) in file: lib\support\0.2.805/primitives.sharp:1442:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1442 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3322] params(1) in file: lib\support\0.2.805/primitives.sharp:1443:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1443 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3323] params(1) in file: lib\support\0.2.805/primitives.sharp:1444:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1444 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3324] params(1) in file: lib\support\0.2.805/primitives.sharp:1445:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1445 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3325] params(1) in file: lib\support\0.2.805/primitives.sharp:1446:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1446 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3326] params(1) in file: lib\support\0.2.805/primitives.sharp:1447:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1447 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3327] params(1) in file: lib\support\0.2.805/primitives.sharp:1448:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1448 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3328] params(1) in file: lib\support\0.2.805/primitives.sharp:1449:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1449 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator%=[3329] params(1) in file: lib\support\0.2.805/primitives.sharp:1450:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1450 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mod ecx, ebx -> ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#double.operator&=[3330] params(1) in file: lib\support\0.2.805/primitives.sharp:1452:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1452 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3331] params(1) in file: lib\support\0.2.805/primitives.sharp:1453:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1453 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3332] params(1) in file: lib\support\0.2.805/primitives.sharp:1454:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1454 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3333] params(1) in file: lib\support\0.2.805/primitives.sharp:1455:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1455 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3334] params(1) in file: lib\support\0.2.805/primitives.sharp:1456:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1456 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3335] params(1) in file: lib\support\0.2.805/primitives.sharp:1457:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1457 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3336] params(1) in file: lib\support\0.2.805/primitives.sharp:1458:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1458 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3337] params(1) in file: lib\support\0.2.805/primitives.sharp:1459:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1459 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3338] params(1) in file: lib\support\0.2.805/primitives.sharp:1460:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1460 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3339] params(1) in file: lib\support\0.2.805/primitives.sharp:1461:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1461 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3340] params(1) in file: lib\support\0.2.805/primitives.sharp:1462:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1462 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator&=[3341] params(1) in file: lib\support\0.2.805/primitives.sharp:1463:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1463 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            and ecx, ebx   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#double.operator|=[3342] params(1) in file: lib\support\0.2.805/primitives.sharp:1465:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1465 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3343] params(1) in file: lib\support\0.2.805/primitives.sharp:1466:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1466 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3344] params(1) in file: lib\support\0.2.805/primitives.sharp:1467:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1467 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3345] params(1) in file: lib\support\0.2.805/primitives.sharp:1468:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1468 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3346] params(1) in file: lib\support\0.2.805/primitives.sharp:1469:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1469 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3347] params(1) in file: lib\support\0.2.805/primitives.sharp:1470:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1470 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3348] params(1) in file: lib\support\0.2.805/primitives.sharp:1471:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1471 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3349] params(1) in file: lib\support\0.2.805/primitives.sharp:1472:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1472 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3350] params(1) in file: lib\support\0.2.805/primitives.sharp:1473:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1473 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3351] params(1) in file: lib\support\0.2.805/primitives.sharp:1474:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1474 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3352] params(1) in file: lib\support\0.2.805/primitives.sharp:1475:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1475 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            chklen adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#double.operator|=[3353] params(1) in file: lib\support\0.2.805/primitives.sharp:1476:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1476 loadl ebx, fp+1   
1 [0x1]:            rstore ebx   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            or ecx, ebx   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


constructor: std#double.double[3354] params(0) in file: lib\support\0.2.805/primitives.sharp:1368:6: note:  
		class double base integer<var> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1881 // <std#integer<var>.integer>   
2 [0x2]:         ret   


std#printable.to_string[3355] params(0) in file: lib\support\0.2.805/printable.sharp:11:8: note:  
		    def to_string() : string;
		       ^



constructor: std#printable.printable[3356] params(0) in file: lib\support\0.2.805/printable.sharp:10:10: note:  
		interface printable {
		         ^

0 [0x0]:         ret   


function: std#__srt_global.rand[3357] params(0) in file: lib\support\0.2.805/random.sharp:6:4: note:  
		def rand() : var {
		   ^

0 [0x0]: line: 7 movi #0, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movi #1, ebx   
5 [0x5]:         rstore ebx   
6 [0x6]:         call @2298 // <platform.kernel#vm.random_double>   
7 [0x7]:         loadval ebx   
8 [0x8]:         return_val ebx   
9 [0x9]:         ret   


function: std#__srt_global.rand_int[3358] params(2) in file: lib\support\0.2.805/random.sharp:10:4: note:  
		def rand_int(min: var, max: var) : var {
		   ^

0 [0x0]: line: 11 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          loadl ebx, fp+1   
3 [0x3]:          rstore ebx   
4 [0x4]:          call @2296 // <platform.kernel#vm.random_int>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#__srt_global.rand_double[3359] params(2) in file: lib\support\0.2.805/random.sharp:14:4: note:  
		def rand_double(min: var, max: var) : var {
		   ^

0 [0x0]: line: 15 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          loadl ebx, fp+1   
3 [0x3]:          rstore ebx   
4 [0x4]:          call @2298 // <platform.kernel#vm.random_double>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#__srt_global.rand_int[3360] params(0) in file: lib\support\0.2.805/random.sharp:18:4: note:  
		def rand_int() : var {
		   ^

0 [0x0]: line: 19 call @2295 // <platform.kernel#vm.random_int>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#__srt_global.rand_double[3361] params(0) in file: lib\support\0.2.805/random.sharp:22:4: note:  
		def rand_double() : var {
		   ^

0 [0x0]: line: 23 call @2297 // <platform.kernel#vm.random_double>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#__srt_global.set_seed[3362] params(1) in file: lib\support\0.2.805/random.sharp:26:4: note:  
		def set_seed(seed: var) {
		   ^

0 [0x0]: line: 27 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movg @1 // @std#__srt_global   
3 [0x3]:          movn #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          movi #0, adx   
8 [0x8]:          rmov adx, ebx   
9 [0x9]: line: 28 movg @1 // @std#__srt_global   
10 [0xa]:          movn #1   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @2299 // <platform.kernel#vm.random_seed>   
18 [0x12]:          ret   


constructor: std#tmp.tmp[3363] params(0) in file: lib\support\0.2.805/random.sharp:31:6: note:  
		class tmp {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.reflect#_class_._class_[3364] params(0) in file: lib\support\0.2.805/reflect//class.sharp:4:6: note:  
		class _class_ base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3365 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#data_entity.data_entity[3365] params(0) in file: lib\support\0.2.805/reflect//data_entity.sharp:4:6: note:  
		class data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.reflect#data_property.data_property[3366] params(0) in file: lib\support\0.2.805/reflect//data_property.sharp:11:6: note:  
		class data_property base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3365 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#field.field[3367] params(0) in file: lib\support\0.2.805/reflect//field.sharp:4:6: note:  
		class field {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.reflect#function.function[3368] params(0) in file: lib\support\0.2.805/reflect//function.sharp:4:6: note:  
		class function base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3365 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#reflect.reflect[3369] params(1) in file: lib\support\0.2.805/reflect//reflection.sharp:16:12: note:  
		    reflect(ref_obj : object) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 17 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @3647 // <std.reflect#reflect.set_reflect_obj>   
7 [0x7]:          ret   


constructor: std.reflect#reflect.reflect[3370] params(0) in file: lib\support\0.2.805/reflect//reflection.sharp:3:6: note:  
		class reflect {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#string.string[3371] params(1) in file: lib\support\0.2.805/string.sharp:10:11: note:  
		    string(str : _int8[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 11 movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 15   
9 [0x9]: line: 12 movl 0   
10 [0xa]:          pushobj   
11 [0xb]:          movl 1   
12 [0xc]:          pushobj   
13 [0xd]:          call @3381 // <std#string.append>   
14 [0xe]:          pop   
15 [0xf]:          nop   
16 [0x10]:          ret   


constructor: std#string.string[3372] params(1) in file: lib\support\0.2.805/string.sharp:16:11: note:  
		    string(ch: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 17 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          loadl ebx, fp+1   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @3378 // <std#string.append>   
7 [0x7]:          pop   
8 [0x8]:          ret   


constructor: std#string.string[3373] params(1) in file: lib\support\0.2.805/string.sharp:20:11: note:  
		    string(str : char[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 21 movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 54   
9 [0x9]: line: 22 movl 1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          newarry ebx: 8   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]: line: 23 movi #0, ebx   
18 [0x12]:          smovr_2 ebx, fp+2   
19 [0x13]: line: 24 istorel -1, fp+4   
21 [0x15]:          movl 1   
22 [0x16]:          pushobj   
23 [0x17]:          movl 5   
24 [0x18]:          popobj   
25 [0x19]:          iaddl 1, fp@4   
27 [0x1b]:          movl 5   
28 [0x1c]:          sizeof ecx   
29 [0x1d]:          loadl ebx, fp+4   
30 [0x1e]:          lt ebx, ecx   
31 [0x1f]:          jne 54   
32 [0x20]:          movnd ebx   
33 [0x21]:          pushobj   
34 [0x22]:          movl 3   
35 [0x23]:          popobj   
36 [0x24]: line: 25 movl 3   
37 [0x25]:          pushobj   
38 [0x26]:          call @1672 // <std#integer<_int8>.get_value>   
39 [0x27]:          movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          pushobj   
43 [0x2b]:          loadl ebx, fp+2   
44 [0x2c]:          movr egx, ebx   
45 [0x2d]:          inc ebx   
46 [0x2e]:          smovr_2 ebx, fp+2   
47 [0x2f]:          movr ebx, egx   
48 [0x30]:          popobj2    
49 [0x31]:          movr adx, ebx   
50 [0x32]:          chklen adx   
51 [0x33]:          loadval ebx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]:          jmp @25   
54 [0x36]:          nop   
55 [0x37]:          ret   


constructor: std#string.string[3374] params(1) in file: lib\support\0.2.805/string.sharp:30:11: note:  
		    string(str: string) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 31 movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 17   
9 [0x9]: line: 32 movl 0   
10 [0xa]:          pushobj   
11 [0xb]:          movl 1   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @3381 // <std#string.append>   
16 [0x10]:          pop   
17 [0x11]:          nop   
18 [0x12]:          ret   


constructor: std#string.string[3375] params(2) in file: lib\support\0.2.805/string.sharp:36:11: note:  
		    string(str : _int8[], offset: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 37 movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 21   
9 [0x9]: line: 38 movl 1   
10 [0xa]:          pushobj   
11 [0xb]:          loadl ebx, fp+2   
12 [0xc]:          rstore ebx   
13 [0xd]:          movl 1   
14 [0xe]:          sizeof ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          call @2080 // <std.io#__srt_global.copy>   
17 [0x11]:          movl 0   
18 [0x12]:          movn #0   
20 [0x14]:          popobj   
21 [0x15]:          nop   
22 [0x16]:          ret   


constructor: std#string.string[3376] params(3) in file: lib\support\0.2.805/string.sharp:42:11: note:  
		    string(str : _int8[], start: var, end: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 43 movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          skne ebx // pc = 19   
8 [0x8]:          loadl ebx, fp+3   
9 [0x9]:          rstore ebx   
10 [0xa]:          loadl ebx, fp+2   
11 [0xb]:          loadval ecx   
12 [0xc]:          sub ecx, ebx -> ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          gt ecx, ebx   
18 [0x12]:          movr ebx, cmt   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 45   
21 [0x15]: line: 44 loadl ebx, fp+3   
22 [0x16]:          rstore ebx   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          loadval ecx   
25 [0x19]:          sub ecx, ebx -> ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 45 movl 1   
32 [0x20]:          pushobj   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          movi #0, ebx   
39 [0x27]:          rstore ebx   
40 [0x28]:          loadl ebx, fp+2   
41 [0x29]:          rstore ebx   
42 [0x2a]:          loadl ebx, fp+3   
43 [0x2b]:          rstore ebx   
44 [0x2c]:          call @2070 // <std.io#__srt_global.memcopy>   
45 [0x2d]:          nop   
46 [0x2e]:          ret   


function: std#string.replace[3377] params(2) in file: lib\support\0.2.805/string.sharp:49:8: note:  
		    def replace(pos : var, ch: _int8) : string {
		       ^

0 [0x0]: line: 50 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          gte ecx, ebx   
8 [0x8]:          movr ebx, cmt   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 17   
11 [0xb]: line: 51 movl 0   
12 [0xc]:          pushobj   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3427 // <std#string.bounds_error>   
16 [0x10]:          throw    
17 [0x11]:          nop   
18 [0x12]: line: 54 loadl ebx, fp+2   
19 [0x13]:          rstore ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          loadl ebx, fp+1   
25 [0x19]:          popobj2    
26 [0x1a]:          movr adx, ebx   
27 [0x1b]:          chklen adx   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]: line: 55 movl 0   
31 [0x1f]:          returnobj   
32 [0x20]:          ret   


function: std#string.append[3378] params(1) in file: lib\support\0.2.805/string.sharp:58:8: note:  
		    def append(ch: var) : string
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 61 movi #1, ebx   
10 [0xa]:          newarry ebx: 8   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @31   
16 [0x10]: line: 63 movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          add ecx, ebx -> ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2060 // <std.io#__srt_global.realloc>   
31 [0x1f]:          nop   
32 [0x20]: line: 65 loadl ebx, fp+1   
33 [0x21]:          rstore ebx   
34 [0x22]:          movl 0   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          movl 0   
39 [0x27]:          movn #0   
41 [0x29]:          sizeof ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          movi #1, ebx   
45 [0x2d]:          loadval ecx   
46 [0x2e]:          sub ecx, ebx -> ebx   
47 [0x2f]:          popobj2    
48 [0x30]:          movr adx, ebx   
49 [0x31]:          chklen adx   
50 [0x32]:          loadval ebx   
51 [0x33]:          rmov adx, ebx   
52 [0x34]: line: 66 movl 0   
53 [0x35]:          returnobj   
54 [0x36]:          ret   


function: std#string.empty[3379] params(0) in file: lib\support\0.2.805/string.sharp:69:8: note:  
		    def empty() := sizeof(data)==0;
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          sizeof ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          movi #0, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#string.append[3380] params(1) in file: lib\support\0.2.805/string.sharp:71:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @1672 // <std#integer<_int8>.get_value>   
5 [0x5]:          call @3378 // <std#string.append>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std#string.append[3381] params(1) in file: lib\support\0.2.805/string.sharp:73:8: note:  
		    def append(immstr: _int8[]) : string
		       ^

0 [0x0]: line: 75 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          pushnull    
3 [0x3]:          itest ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 9   
6 [0x6]:          movl 0   
7 [0x7]:          returnobj   
8 [0x8]:          ret   
9 [0x9]:          nop   
10 [0xa]: line: 77 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          sizeof ebx   
14 [0xe]:          smovr_2 ebx, fp+2   
15 [0xf]: line: 79 movl 0   
16 [0x10]:          movn #0   
18 [0x12]:          pushobj   
19 [0x13]:          pushnull    
20 [0x14]:          itest ebx   
21 [0x15]:          movr cmt, ebx   
22 [0x16]:          jne 31   
23 [0x17]: line: 80 movl 1   
24 [0x18]:          sizeof ebx   
25 [0x19]:          newarry ebx: 0   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          popobj   
30 [0x1e]:          jmp @46   
31 [0x1f]: line: 82 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #0   
38 [0x26]:          sizeof ebx   
39 [0x27]:          rstore ebx   
40 [0x28]:          movl 1   
41 [0x29]:          sizeof ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          call @2060 // <std.io#__srt_global.realloc>   
46 [0x2e]:          nop   
47 [0x2f]: line: 84 movl 1   
48 [0x30]:          pushobj   
49 [0x31]:          movl 0   
50 [0x32]:          movn #0   
52 [0x34]:          pushobj   
53 [0x35]:          loadl ebx, fp+2   
54 [0x36]:          rstore ebx   
55 [0x37]:          movi #0, ebx   
57 [0x39]:          rstore ebx   
58 [0x3a]:          movl 1   
59 [0x3b]:          sizeof ebx   
60 [0x3c]:          rstore ebx   
61 [0x3d]:          call @2070 // <std.io#__srt_global.memcopy>   
62 [0x3e]: line: 85 movl 0   
63 [0x3f]:          returnobj   
64 [0x40]:          ret   


function: std#string.append[3382] params(2) in file: lib\support\0.2.805/string.sharp:88:8: note:  
		    def append(immstr: _int8[], len: var) : string
		       ^

0 [0x0]: line: 90 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          pushnull    
3 [0x3]:          itest ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 9   
6 [0x6]:          movl 0   
7 [0x7]:          returnobj   
8 [0x8]:          ret   
9 [0x9]:          nop   
10 [0xa]: line: 91 loadl ebx, fp+2   
11 [0xb]:          rstore ebx   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          lt ecx, ebx   
16 [0x10]:          movr ebx, cmt   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 24   
19 [0x13]: line: 92 new_class @19 // std#error   
20 [0x14]:          dup    
21 [0x15]:          newstr @29 // length cannot be less than zero   
22 [0x16]:          call @1986 // <std#error.error>   
23 [0x17]:          throw    
24 [0x18]:          nop   
25 [0x19]: line: 94 loadl ebx, fp+2   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 1   
28 [0x1c]:          sizeof ebx   
29 [0x1d]:          loadval ecx   
30 [0x1e]:          gt ecx, ebx   
31 [0x1f]:          movr ebx, cmt   
32 [0x20]:          movr cmt, ebx   
33 [0x21]:          jne 51   
34 [0x22]: line: 95 new_class @19 // std#error   
35 [0x23]:          dup    
36 [0x24]:          new_class @69 // std#string   
37 [0x25]:          dup    
38 [0x26]:          newstr @30 // length of:    
39 [0x27]:          call @3371 // <std#string.string>   
40 [0x28]:          loadl ebx, fp+2   
41 [0x29]:          rstore ebx   
42 [0x2a]:          call @3403 // <std#string.operator+>   
43 [0x2b]:          newstr @31 //  is greater than the string:    
44 [0x2c]:          call @3383 // <std#string.operator+>   
45 [0x2d]:          movl 1   
46 [0x2e]:          sizeof ebx   
47 [0x2f]:          rstore ebx   
48 [0x30]:          call @3403 // <std#string.operator+>   
49 [0x31]:          call @1987 // <std#error.error>   
50 [0x32]:          throw    
51 [0x33]:          nop   
52 [0x34]: line: 97 movl 0   
53 [0x35]:          movn #0   
55 [0x37]:          sizeof ebx   
56 [0x38]:          smovr_2 ebx, fp+3   
57 [0x39]: line: 99 movl 0   
58 [0x3a]:          movn #0   
60 [0x3c]:          pushobj   
61 [0x3d]:          pushnull    
62 [0x3e]:          itest ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 72   
65 [0x41]: line: 100 loadl ebx, fp+2   
66 [0x42]:           newarry ebx: 8   
67 [0x43]:           movl 0   
68 [0x44]:           movn #0   
70 [0x46]:           popobj   
71 [0x47]:           jmp @86   
72 [0x48]: line: 102 movl 0   
73 [0x49]:           movn #0   
75 [0x4b]:           pushobj   
76 [0x4c]:           movl 0   
77 [0x4d]:           movn #0   
79 [0x4f]:           sizeof ebx   
80 [0x50]:           rstore ebx   
81 [0x51]:           loadl ebx, fp+2   
82 [0x52]:           loadval ecx   
83 [0x53]:           add ecx, ebx -> ebx   
84 [0x54]:           rstore ebx   
85 [0x55]:           call @2060 // <std.io#__srt_global.realloc>   
86 [0x56]:           nop   
87 [0x57]: line: 104 movl 1   
88 [0x58]:           pushobj   
89 [0x59]:           movl 0   
90 [0x5a]:           movn #0   
92 [0x5c]:           pushobj   
93 [0x5d]:           loadl ebx, fp+3   
94 [0x5e]:           rstore ebx   
95 [0x5f]:           movi #0, ebx   
97 [0x61]:           rstore ebx   
98 [0x62]:           loadl ebx, fp+2   
99 [0x63]:           rstore ebx   
100 [0x64]:           call @2070 // <std.io#__srt_global.memcopy>   
101 [0x65]: line: 105 movl 0   
102 [0x66]:           returnobj   
103 [0x67]:           ret   


overload function: std#string.operator+[3383] params(1) in file: lib\support\0.2.805/string.sharp:108:8: note:  
		    def operator+(immstr : _int8[]) : string {
		       ^

0 [0x0]: line: 109 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 110 movl 1   
10 [0xa]:           pushobj   
11 [0xb]:           pushnull    
12 [0xc]:           itest ebx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 25   
16 [0x10]: line: 111 movl 2   
17 [0x11]:           pushobj   
18 [0x12]:           movl 1   
19 [0x13]:           pushobj   
20 [0x14]:           call @3381 // <std#string.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @28   
25 [0x19]: line: 113 movl 2   
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   
28 [0x1c]:           nop   


function: std#string.to_lower[3384] params(0) in file: lib\support\0.2.805/string.sharp:116:8: note:  
		    def to_lower() : string {
		       ^

0 [0x0]: line: 117 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           call @3429 // <std#string.string>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 118 movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           pushnull    
10 [0xa]:           itest ebx   
11 [0xb]:           not ebx, ebx   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 96   
14 [0xe]: line: 119 movl 0   
15 [0xf]:           movn #0   
17 [0x11]:           pushobj   
18 [0x12]:           movi #0, ebx   
20 [0x14]:           rstore ebx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           sizeof ebx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           call @2080 // <std.io#__srt_global.copy>   
27 [0x1b]:           movl 1   
28 [0x1c]:           movn #0   
30 [0x1e]:           popobj   
31 [0x1f]: line: 121 movi #0, ebx   
33 [0x21]:           smovr_2 ebx, fp+2   
34 [0x22]: line: 122 istorel -1, fp+4   
36 [0x24]:           movl 0   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           movl 5   
41 [0x29]:           popobj   
42 [0x2a]:           iaddl 1, fp@4   
44 [0x2c]:           movl 5   
45 [0x2d]:           sizeof ecx   
46 [0x2e]:           loadl ebx, fp+4   
47 [0x2f]:           lt ebx, ecx   
48 [0x30]:           jne 96   
49 [0x31]:           iaload ecx, ebx   
50 [0x32]:           smovr_2 ecx, fp+3   
51 [0x33]: line: 123 movi #65, ebx   
53 [0x35]:           rstore ebx   
54 [0x36]:           loadl ebx, fp+3   
55 [0x37]:           loadval ecx   
56 [0x38]:           lte ecx, ebx   
57 [0x39]:           movr ebx, cmt   
58 [0x3a]:           skne ebx // pc = 66   
59 [0x3b]:           loadl ebx, fp+3   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movi #90, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           lte ecx, ebx   
65 [0x41]:           movr ebx, cmt   
66 [0x42]:           movr cmt, ebx   
67 [0x43]:           jne 90   
68 [0x44]: line: 124 movi #97, ebx   
70 [0x46]:           rstore ebx   
71 [0x47]:           loadl ebx, fp+3   
72 [0x48]:           rstore ebx   
73 [0x49]:           movi #65, ebx   
75 [0x4b]:           loadval ecx   
76 [0x4c]:           sub ecx, ebx -> ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           add ecx, ebx -> ebx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movl 1   
81 [0x51]:           movn #0   
83 [0x53]:           pushobj   
84 [0x54]:           loadl ebx, fp+2   
85 [0x55]:           popobj2    
86 [0x56]:           movr adx, ebx   
87 [0x57]:           chklen adx   
88 [0x58]:           loadval ebx   
89 [0x59]:           rmov adx, ebx   
90 [0x5a]:           nop   
91 [0x5b]: line: 125 loadl ebx, fp+2   
92 [0x5c]:           movr egx, ebx   
93 [0x5d]:           inc ebx   
94 [0x5e]:           smovr_2 ebx, fp+2   
95 [0x5f]:           jmp @42   
96 [0x60]:           nop   
97 [0x61]: line: 129 movl 1   
98 [0x62]:           returnobj   
99 [0x63]:           ret   


overload function: std#string.operator+[3385] params(1) in file: lib\support\0.2.805/string.sharp:132:8: note:  
		    def operator+(obj : printable) : string {
		       ^

0 [0x0]: line: 133 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 134 movl 1   
10 [0xa]:           pushobj   
11 [0xb]:           pushnull    
12 [0xc]:           itest ebx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 49   
16 [0x10]: line: 135 movl 1   
17 [0x11]:           pushobj   
18 [0x12]:           invoke_delegate 3355 { static=0, args=0 }   
20 [0x14]:           popobj2    
21 [0x15]:           smovr_3 fp+3   
22 [0x16]: line: 136 movl 3   
23 [0x17]:           pushobj   
24 [0x18]:           pushnull    
25 [0x19]:           itest ebx   
26 [0x1a]:           not ebx, ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 40   
29 [0x1d]: line: 137 movl 2   
30 [0x1e]:           pushobj   
31 [0x1f]:           movl 3   
32 [0x20]:           movn #0   
34 [0x22]:           pushobj   
35 [0x23]:           call @3381 // <std#string.append>   
36 [0x24]:           popobj2    
37 [0x25]:           returnobj   
38 [0x26]:           ret   
39 [0x27]:           jmp @47   
40 [0x28]: line: 139 movl 2   
41 [0x29]:           pushobj   
42 [0x2a]:           newstr @32 // null   
43 [0x2b]:           call @3381 // <std#string.append>   
44 [0x2c]:           popobj2    
45 [0x2d]:           returnobj   
46 [0x2e]:           ret   
47 [0x2f]:           nop   
48 [0x30]:           jmp @56   
49 [0x31]: line: 142 movl 2   
50 [0x32]:           pushobj   
51 [0x33]:           newstr @32 // null   
52 [0x34]:           call @3381 // <std#string.append>   
53 [0x35]:           popobj2    
54 [0x36]:           returnobj   
55 [0x37]:           ret   
56 [0x38]:           nop   


overload function: std#string.operator+[3386] params(1) in file: lib\support\0.2.805/string.sharp:145:7: note:  
		   def operator+(str : string) : string {
		      ^

0 [0x0]: line: 146 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 147 movl 1   
10 [0xa]:           pushobj   
11 [0xb]:           pushnull    
12 [0xc]:           itest ebx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 27   
16 [0x10]: line: 148 movl 2   
17 [0x11]:           pushobj   
18 [0x12]:           movl 1   
19 [0x13]:           movn #0   
21 [0x15]:           pushobj   
22 [0x16]:           call @3381 // <std#string.append>   
23 [0x17]:           popobj2    
24 [0x18]:           returnobj   
25 [0x19]:           ret   
26 [0x1a]:           jmp @34   
27 [0x1b]: line: 150 movl 2   
28 [0x1c]:           pushobj   
29 [0x1d]:           newstr @32 // null   
30 [0x1e]:           call @3381 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           nop   


function: std#string.to_string[3387] params(0) in file: lib\support\0.2.805/string.sharp:153:8: note:  
		    def to_string() := new string(data);
		       ^

0 [0x0]: line: 153 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           returnobj   
9 [0x9]:           ret   


overload function: std#string.operator==[3388] params(1) in file: lib\support\0.2.805/string.sharp:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           sizeof ebx   
7 [0x7]:           loadval ecx   
8 [0x8]:           tne ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           jne 16   
12 [0xc]: line: 157 movi #0, ebx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   
16 [0x10]:           nop   
17 [0x11]: line: 159 movi #0, ebx   
19 [0x13]:           smovr_2 ebx, fp+2   
20 [0x14]: line: 160 istorel -1, fp+4   
22 [0x16]:           movl 1   
23 [0x17]:           pushobj   
24 [0x18]:           movl 5   
25 [0x19]:           popobj   
26 [0x1a]:           iaddl 1, fp@4   
28 [0x1c]:           movl 5   
29 [0x1d]:           sizeof ecx   
30 [0x1e]:           loadl ebx, fp+4   
31 [0x1f]:           lt ebx, ecx   
32 [0x20]:           jne 61   
33 [0x21]:           iaload ecx, ebx   
34 [0x22]:           smovr_2 ecx, fp+3   
35 [0x23]: line: 161 loadl ebx, fp+3   
36 [0x24]:           rstore ebx   
37 [0x25]:           movl 0   
38 [0x26]:           movn #0   
40 [0x28]:           pushobj   
41 [0x29]:           loadl ebx, fp+2   
42 [0x2a]:           movr egx, ebx   
43 [0x2b]:           inc ebx   
44 [0x2c]:           smovr_2 ebx, fp+2   
45 [0x2d]:           movr ebx, egx   
46 [0x2e]:           popobj2    
47 [0x2f]:           movr adx, ebx   
48 [0x30]:           chklen adx   
49 [0x31]:           iaload ebx, adx   
50 [0x32]:           loadval ecx   
51 [0x33]:           tne ecx, ebx   
52 [0x34]:           movr ebx, cmt   
53 [0x35]:           movr cmt, ebx   
54 [0x36]:           jne 59   
55 [0x37]: line: 162 movi #0, ebx   
57 [0x39]:           return_val ebx   
58 [0x3a]:           ret   
59 [0x3b]:           nop   
60 [0x3c]:           jmp @26   
61 [0x3d]: line: 165 movi #1, ebx   
63 [0x3f]:           return_val ebx   
64 [0x40]:           ret   


overload function: std#string.operator==[3389] params(1) in file: lib\support\0.2.805/string.sharp:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 18   
14 [0xe]: line: 170 movi #0, ebx   
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   
18 [0x12]:           nop   
19 [0x13]: line: 172 movi #0, ebx   
21 [0x15]:           smovr_2 ebx, fp+2   
22 [0x16]: line: 173 istorel -1, fp+4   
24 [0x18]:           movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           movl 5   
29 [0x1d]:           popobj   
30 [0x1e]:           iaddl 1, fp@4   
32 [0x20]:           movl 5   
33 [0x21]:           sizeof ecx   
34 [0x22]:           loadl ebx, fp+4   
35 [0x23]:           lt ebx, ecx   
36 [0x24]:           jne 65   
37 [0x25]:           iaload ecx, ebx   
38 [0x26]:           smovr_2 ecx, fp+3   
39 [0x27]: line: 174 loadl ebx, fp+3   
40 [0x28]:           rstore ebx   
41 [0x29]:           movl 0   
42 [0x2a]:           movn #0   
44 [0x2c]:           pushobj   
45 [0x2d]:           loadl ebx, fp+2   
46 [0x2e]:           movr egx, ebx   
47 [0x2f]:           inc ebx   
48 [0x30]:           smovr_2 ebx, fp+2   
49 [0x31]:           movr ebx, egx   
50 [0x32]:           popobj2    
51 [0x33]:           movr adx, ebx   
52 [0x34]:           chklen adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           loadval ecx   
55 [0x37]:           tne ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 63   
59 [0x3b]: line: 175 movi #0, ebx   
61 [0x3d]:           return_val ebx   
62 [0x3e]:           ret   
63 [0x3f]:           nop   
64 [0x40]:           jmp @30   
65 [0x41]: line: 178 movi #1, ebx   
67 [0x43]:           return_val ebx   
68 [0x44]:           ret   


overload function: std#string.operator!=[3390] params(1) in file: lib\support\0.2.805/string.sharp:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           call @3388 // <std#string.operator==>   
5 [0x5]:           loadval ebx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#string.operator!=[3391] params(1) in file: lib\support\0.2.805/string.sharp:183:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           call @3389 // <std#string.operator==>   
5 [0x5]:           loadval ebx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#string.operator=[3392] params(1) in file: lib\support\0.2.805/string.sharp:185:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 187 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           pushnull    
3 [0x3]:           itest ebx   
4 [0x4]:           movr cmt, ebx   
5 [0x5]:           jne 11   
6 [0x6]:           movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           del   
10 [0xa]:           jmp @24   
11 [0xb]: line: 189 movl 1   
12 [0xc]:           pushobj   
13 [0xd]:           movi #0, ebx   
15 [0xf]:           rstore ebx   
16 [0x10]:           movl 1   
17 [0x11]:           sizeof ebx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @2080 // <std.io#__srt_global.copy>   
20 [0x14]:           movl 0   
21 [0x15]:           movn #0   
23 [0x17]:           popobj   
24 [0x18]:           nop   
25 [0x19]:           ret   


function: std#string.at[3393] params(1) in file: lib\support\0.2.805/string.sharp:192:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 193 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           sizeof ebx   
6 [0x6]:           loadval ecx   
7 [0x7]:           gte ecx, ebx   
8 [0x8]:           movr ebx, cmt   
9 [0x9]:           movr cmt, ebx   
10 [0xa]:           jne 17   
11 [0xb]: line: 194 movl 0   
12 [0xc]:           pushobj   
13 [0xd]:           loadl ebx, fp+1   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @3427 // <std#string.bounds_error>   
16 [0x10]:           throw    
17 [0x11]:           nop   
18 [0x12]: line: 195 movl 0   
19 [0x13]:           movn #0   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+1   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           return_val ebx   
28 [0x1c]:           ret   


overload function: std#string.operator[[3394] params(1) in file: lib\support\0.2.805/string.sharp:198:8: note:  
		    def operator[](pos: var) := at(pos);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3393 // <std#string.at>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#string.fmt[3395] params(1) in file: lib\support\0.2.805/string.sharp:200:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 201 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movg @69 // @std#string   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           mov8 ebx, ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]:           ret   


function: std#string.set_precision[3396] params(1) in file: lib\support\0.2.805/string.sharp:204:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 205 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movi #0, ebx   
4 [0x4]:           loadval ecx   
5 [0x5]:           lt ecx, ebx   
6 [0x6]:           movr ebx, cmt   
7 [0x7]:           skpe ebx // pc = 15   
8 [0x8]:           loadl ebx, fp+0   
9 [0x9]:           rstore ebx   
10 [0xa]:           movi #16, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 28   
17 [0x11]: line: 206 new_class @5 // std#illegal_argument_exception   
18 [0x12]:           dup    
19 [0x13]:           new_class @69 // std#string   
20 [0x14]:           dup    
21 [0x15]:           newstr @33 // invalid precision:    
22 [0x16]:           call @3371 // <std#string.string>   
23 [0x17]:           loadl ebx, fp+0   
24 [0x18]:           rstore ebx   
25 [0x19]:           call @3403 // <std#string.operator+>   
26 [0x1a]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 207 loadl ebx, fp+0   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movg @69 // @std#string   
32 [0x20]:           movn #1   
34 [0x22]:           loadval ebx   
35 [0x23]:           movi #0, adx   
37 [0x25]:           rmov adx, ebx   
38 [0x26]:           ret   


function: std#string.get_data[3397] params(0) in file: lib\support\0.2.805/string.sharp:210:8: note:  
		    def get_data() := data;
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.get_elements[3398] params(0) in file: lib\support\0.2.805/string.sharp:212:8: note:  
		    def get_elements() := data;
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.to_array[3399] params(0) in file: lib\support\0.2.805/string.sharp:214:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 12   
8 [0x8]:           pushnull    
9 [0x9]:           popobj2    
10 [0xa]:           returnobj   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 217 movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           movl 0   
21 [0x15]:           movn #0   
23 [0x17]:           sizeof ebx   
24 [0x18]:           rstore ebx   
25 [0x19]:           call @2080 // <std.io#__srt_global.copy>   
26 [0x1a]:           popobj2    
27 [0x1b]:           returnobj   
28 [0x1c]:           ret   


function: std#string.starts_with[3400] params(1) in file: lib\support\0.2.805/string.sharp:221:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 222 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           pushnull    
3 [0x3]:           itest ebx   
4 [0x4]:           skpe ebx // pc = 17   
5 [0x5]:           movl 1   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           rstore ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #0   
13 [0xd]:           sizeof ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           gt ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 23   
19 [0x13]: line: 223 movi #0, ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 226 movi #0, ebx   
26 [0x1a]:           smovr_2 ebx, fp+2   
27 [0x1b]:           loadl ebx, fp+2   
28 [0x1c]:           rstore ebx   
29 [0x1d]:           movl 1   
30 [0x1e]:           movn #0   
32 [0x20]:           sizeof ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           lt ecx, ebx   
35 [0x23]:           movr ebx, cmt   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 72   
38 [0x26]: line: 228 movl 0   
39 [0x27]:           movn #0   
41 [0x29]:           pushobj   
42 [0x2a]:           loadl ebx, fp+2   
43 [0x2b]:           popobj2    
44 [0x2c]:           movr adx, ebx   
45 [0x2d]:           chklen adx   
46 [0x2e]:           iaload ebx, adx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movl 1   
49 [0x31]:           movn #0   
51 [0x33]:           pushobj   
52 [0x34]:           loadl ebx, fp+2   
53 [0x35]:           popobj2    
54 [0x36]:           movr adx, ebx   
55 [0x37]:           chklen adx   
56 [0x38]:           iaload ebx, adx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           tne ecx, ebx   
59 [0x3b]:           movr ebx, cmt   
60 [0x3c]:           movr cmt, ebx   
61 [0x3d]:           jne 66   
62 [0x3e]: line: 229 movi #0, ebx   
64 [0x40]:           return_val ebx   
65 [0x41]:           ret   
66 [0x42]:           nop   
67 [0x43]:           loadl ebx, fp+2   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           smovr_2 ebx, fp+2   
71 [0x47]:           jmp @27   
72 [0x48]: line: 231 movi #1, ebx   
74 [0x4a]:           return_val ebx   
75 [0x4b]:           ret   


function: std#string.find[3401] params(1) in file: lib\support\0.2.805/string.sharp:235:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 236 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 18   
14 [0xe]: line: 237 movi #0, ebx   
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   
18 [0x12]:           nop   
19 [0x13]: line: 240 movi #0, ebx   
21 [0x15]:           smovr_2 ebx, fp+2   
22 [0x16]: line: 241 movi #0, ebx   
24 [0x18]:           smovr_2 ebx, fp+3   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           sizeof ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           lt ecx, ebx   
33 [0x21]:           movr ebx, cmt   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 114   
36 [0x24]: line: 242 loadl ebx, fp+3   
37 [0x25]:           rstore ebx   
38 [0x26]:           movl 1   
39 [0x27]:           movn #0   
41 [0x29]:           sizeof ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           add ecx, ebx -> ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           sizeof ebx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 104   
54 [0x36]: line: 243 movi #0, ebx   
56 [0x38]:           smovr_2 ebx, fp+4   
57 [0x39]:           loadl ebx, fp+4   
58 [0x3a]:           rstore ebx   
59 [0x3b]:           movl 1   
60 [0x3c]:           movn #0   
62 [0x3e]:           sizeof ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           lt ecx, ebx   
65 [0x41]:           movr ebx, cmt   
66 [0x42]:           movr cmt, ebx   
67 [0x43]:           jne 99   
68 [0x44]: line: 244 movl 1   
69 [0x45]:           movn #0   
71 [0x47]:           pushobj   
72 [0x48]:           loadl ebx, fp+4   
73 [0x49]:           popobj2    
74 [0x4a]:           movr adx, ebx   
75 [0x4b]:           chklen adx   
76 [0x4c]:           iaload ebx, adx   
77 [0x4d]:           rstore ebx   
78 [0x4e]:           movl 0   
79 [0x4f]:           movn #0   
81 [0x51]:           pushobj   
82 [0x52]:           loadl ebx, fp+4   
83 [0x53]:           popobj2    
84 [0x54]:           movr adx, ebx   
85 [0x55]:           chklen adx   
86 [0x56]:           iaload ebx, adx   
87 [0x57]:           loadval ecx   
88 [0x58]:           tne ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 93   
92 [0x5c]: line: 245 jmp @99   
93 [0x5d]:           nop   
94 [0x5e]:           loadl ebx, fp+4   
95 [0x5f]:           movr egx, ebx   
96 [0x60]:           inc ebx   
97 [0x61]:           smovr_2 ebx, fp+4   
98 [0x62]:           jmp @57   
99 [0x63]: line: 248 movi #1, ebx   
101 [0x65]:           return_val ebx   
102 [0x66]:           ret   
103 [0x67]:           jmp @108   
104 [0x68]: line: 249 movi #0, ebx   
106 [0x6a]:           return_val ebx   
107 [0x6b]:           ret   
108 [0x6c]:           nop   
109 [0x6d]:           loadl ebx, fp+3   
110 [0x6e]:           movr egx, ebx   
111 [0x6f]:           inc ebx   
112 [0x70]:           smovr_2 ebx, fp+3   
113 [0x71]:           jmp @25   
114 [0x72]: line: 252 movi #0, ebx   
116 [0x74]:           return_val ebx   
117 [0x75]:           ret   


function: std#string.ends_with[3402] params(1) in file: lib\support\0.2.805/string.sharp:255:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 256 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 18   
14 [0xe]: line: 257 movi #0, ebx   
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   
18 [0x12]:           nop   
19 [0x13]: line: 259 movi #0, ebx   
21 [0x15]:           smovr_2 ebx, fp+2   
22 [0x16]: line: 260 movl 0   
23 [0x17]:           movn #0   
25 [0x19]:           sizeof ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movl 1   
28 [0x1c]:           movn #0   
30 [0x1e]:           sizeof ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           sub ecx, ebx -> ebx   
33 [0x21]:           smovr_2 ebx, fp+3   
34 [0x22]:           loadl ebx, fp+3   
35 [0x23]:           rstore ebx   
36 [0x24]:           movl 0   
37 [0x25]:           movn #0   
39 [0x27]:           sizeof ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 83   
45 [0x2d]: line: 261 movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           pushobj   
49 [0x31]:           loadl ebx, fp+3   
50 [0x32]:           popobj2    
51 [0x33]:           movr adx, ebx   
52 [0x34]:           chklen adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           rstore ebx   
55 [0x37]:           movl 1   
56 [0x38]:           movn #0   
58 [0x3a]:           pushobj   
59 [0x3b]:           loadl ebx, fp+2   
60 [0x3c]:           movr egx, ebx   
61 [0x3d]:           inc ebx   
62 [0x3e]:           smovr_2 ebx, fp+2   
63 [0x3f]:           movr ebx, egx   
64 [0x40]:           popobj2    
65 [0x41]:           movr adx, ebx   
66 [0x42]:           chklen adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           loadval ecx   
69 [0x45]:           tne ecx, ebx   
70 [0x46]:           movr ebx, cmt   
71 [0x47]:           movr cmt, ebx   
72 [0x48]:           jne 77   
73 [0x49]: line: 262 movi #0, ebx   
75 [0x4b]:           return_val ebx   
76 [0x4c]:           ret   
77 [0x4d]:           nop   
78 [0x4e]:           loadl ebx, fp+3   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+3   
82 [0x52]:           jmp @34   
83 [0x53]: line: 265 movi #1, ebx   
85 [0x55]:           return_val ebx   
86 [0x56]:           ret   


overload function: std#string.operator+[3403] params(1) in file: lib\support\0.2.805/string.sharp:268:8: note:  
		    def operator+(num : var) : string {
		       ^

0 [0x0]: line: 269 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 270 movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           loadl ebx, fp+1   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @3413 // <std#string.parse>   
14 [0xe]:           popobj2    
15 [0xf]:           movn #0   
17 [0x11]:           pushobj   
18 [0x12]:           call @3381 // <std#string.append>   
19 [0x13]:           pop   
20 [0x14]: line: 271 movl 2   
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+[3404] params(1) in file: lib\support\0.2.805/string.sharp:274:8: note:  
		    def operator+(num : _int8) : string {
		       ^

0 [0x0]: line: 275 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 276 movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           loadl ebx, fp+1   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @3378 // <std#string.append>   
14 [0xe]:           pop   
15 [0xf]: line: 277 movl 2   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#string.operator+[3405] params(1) in file: lib\support\0.2.805/string.sharp:280:8: note:  
		    def operator+(num : _int16) : string {
		       ^

0 [0x0]: line: 281 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 282 movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           loadl ebx, fp+1   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @3413 // <std#string.parse>   
14 [0xe]:           popobj2    
15 [0xf]:           movn #0   
17 [0x11]:           pushobj   
18 [0x12]:           call @3381 // <std#string.append>   
19 [0x13]:           pop   
20 [0x14]: line: 283 movl 2   
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+[3406] params(1) in file: lib\support\0.2.805/string.sharp:286:8: note:  
		    def operator+(num : _int32) : string {
		       ^

0 [0x0]: line: 287 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 288 movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           loadl ebx, fp+1   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @3413 // <std#string.parse>   
14 [0xe]:           popobj2    
15 [0xf]:           movn #0   
17 [0x11]:           pushobj   
18 [0x12]:           call @3381 // <std#string.append>   
19 [0x13]:           pop   
20 [0x14]: line: 289 movl 2   
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+[3407] params(1) in file: lib\support\0.2.805/string.sharp:292:8: note:  
		    def operator+(num : _int64) : string {
		       ^

0 [0x0]: line: 293 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 294 movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           loadl ebx, fp+1   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @3413 // <std#string.parse>   
14 [0xe]:           popobj2    
15 [0xf]:           movn #0   
17 [0x11]:           pushobj   
18 [0x12]:           call @3381 // <std#string.append>   
19 [0x13]:           pop   
20 [0x14]: line: 295 movl 2   
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+[3408] params(1) in file: lib\support\0.2.805/string.sharp:298:8: note:  
		    def operator+(num : _uint8) : string {
		       ^

0 [0x0]: line: 299 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 300 movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           loadl ebx, fp+1   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @3413 // <std#string.parse>   
14 [0xe]:           popobj2    
15 [0xf]:           movn #0   
17 [0x11]:           pushobj   
18 [0x12]:           call @3381 // <std#string.append>   
19 [0x13]:           pop   
20 [0x14]: line: 301 movl 2   
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+[3409] params(1) in file: lib\support\0.2.805/string.sharp:304:8: note:  
		    def operator+(num : _uint16) : string {
		       ^

0 [0x0]: line: 305 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 306 movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           loadl ebx, fp+1   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @3413 // <std#string.parse>   
14 [0xe]:           popobj2    
15 [0xf]:           movn #0   
17 [0x11]:           pushobj   
18 [0x12]:           call @3381 // <std#string.append>   
19 [0x13]:           pop   
20 [0x14]: line: 307 movl 2   
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+[3410] params(1) in file: lib\support\0.2.805/string.sharp:310:8: note:  
		    def operator+(num : _uint32) : string {
		       ^

0 [0x0]: line: 311 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 312 movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           loadl ebx, fp+1   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @3413 // <std#string.parse>   
14 [0xe]:           popobj2    
15 [0xf]:           movn #0   
17 [0x11]:           pushobj   
18 [0x12]:           call @3381 // <std#string.append>   
19 [0x13]:           pop   
20 [0x14]: line: 313 movl 2   
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+[3411] params(1) in file: lib\support\0.2.805/string.sharp:316:8: note:  
		    def operator+(num : _uint64) : string {
		       ^

0 [0x0]: line: 317 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3371 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 318 movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           loadl ebx, fp+1   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @3413 // <std#string.parse>   
14 [0xe]:           popobj2    
15 [0xf]:           movn #0   
17 [0x11]:           pushobj   
18 [0x12]:           call @3381 // <std#string.append>   
19 [0x13]:           pop   
20 [0x14]: line: 319 movl 2   
21 [0x15]:           returnobj   
22 [0x16]:           ret   


function: std#string.size[3412] params(0) in file: lib\support\0.2.805/string.sharp:322:8: note:  
		    def size() := sizeof(data);
		       ^

0 [0x0]: line: 322 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.parse[3413] params(1) in file: lib\support\0.2.805/string.sharp:324:15: note:  
		    static def parse( number : var ) := new string(snprintf(currentFormat, number, precision));
		              ^

0 [0x0]: line: 324 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movg @69 // @std#string   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           loadl ebx, fp+0   
11 [0xb]:           rstore ebx   
12 [0xc]:           movg @69 // @std#string   
13 [0xd]:           movn #1   
15 [0xf]:           movi #0, adx   
17 [0x11]:           chklen adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @1885 // <std#__srt_global.snprintf>   
21 [0x15]:           call @3371 // <std#string.string>   
22 [0x16]:           popobj2    
23 [0x17]:           returnobj   
24 [0x18]:           ret   


overload function: std#string.operator+=[3414] params(1) in file: lib\support\0.2.805/string.sharp:326:8: note:  
		    def operator+=( num: var ) := append(parse(num).data);
		       ^

0 [0x0]: line: 326 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3413 // <std#string.parse>   
5 [0x5]:           popobj2    
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3381 // <std#string.append>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#string.operator+=[3415] params(1) in file: lib\support\0.2.805/string.sharp:327:8: note:  
		    def operator+=( num: _int8 ) := append(num);
		       ^

0 [0x0]: line: 327 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3378 // <std#string.append>   
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


overload function: std#string.operator+=[3416] params(1) in file: lib\support\0.2.805/string.sharp:328:8: note:  
		    def operator+=( num: _uint8 ) := append(num);
		       ^

0 [0x0]: line: 328 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3378 // <std#string.append>   
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


overload function: std#string.operator+=[3417] params(1) in file: lib\support\0.2.805/string.sharp:329:8: note:  
		    def operator+=( num: _int16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 329 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3413 // <std#string.parse>   
5 [0x5]:           popobj2    
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3381 // <std#string.append>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#string.operator+=[3418] params(1) in file: lib\support\0.2.805/string.sharp:330:8: note:  
		    def operator+=( num: _uint16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 330 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3413 // <std#string.parse>   
5 [0x5]:           popobj2    
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3381 // <std#string.append>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#string.operator+=[3419] params(1) in file: lib\support\0.2.805/string.sharp:331:8: note:  
		    def operator+=( num: _int32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 331 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3413 // <std#string.parse>   
5 [0x5]:           popobj2    
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3381 // <std#string.append>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#string.operator+=[3420] params(1) in file: lib\support\0.2.805/string.sharp:332:8: note:  
		    def operator+=( num: _uint32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 332 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3413 // <std#string.parse>   
5 [0x5]:           popobj2    
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3381 // <std#string.append>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#string.operator+=[3421] params(1) in file: lib\support\0.2.805/string.sharp:333:8: note:  
		    def operator+=( num: _int64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 333 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3413 // <std#string.parse>   
5 [0x5]:           popobj2    
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3381 // <std#string.append>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#string.operator+=[3422] params(1) in file: lib\support\0.2.805/string.sharp:334:8: note:  
		    def operator+=( num: _uint64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 334 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3413 // <std#string.parse>   
5 [0x5]:           popobj2    
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3381 // <std#string.append>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#string.operator+=[3423] params(1) in file: lib\support\0.2.805/string.sharp:336:8: note:  
		    def operator+=( obj: printable ) : string
		       ^

0 [0x0]: line: 338 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           invoke_delegate 3355 { static=0, args=0 }   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+2   
6 [0x6]: line: 339 movl 2   
7 [0x7]:           pushobj   
8 [0x8]:           pushnull    
9 [0x9]:           itest ebx   
10 [0xa]:           not ebx, ebx   
11 [0xb]:           skne ebx // pc = 19   
12 [0xc]:           movl 2   
13 [0xd]:           movn #0   
15 [0xf]:           pushobj   
16 [0x10]:           pushnull    
17 [0x11]:           itest ebx   
18 [0x12]:           not ebx, ebx   
19 [0x13]:           movr cmt, ebx   
20 [0x14]:           jne 32   
21 [0x15]: line: 340 movl 0   
22 [0x16]:           pushobj   
23 [0x17]:           movl 2   
24 [0x18]:           movn #0   
26 [0x1a]:           pushobj   
27 [0x1b]:           call @3381 // <std#string.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           jmp @39   
32 [0x20]: line: 342 movl 0   
33 [0x21]:           pushobj   
34 [0x22]:           newstr @32 // null   
35 [0x23]:           call @3381 // <std#string.append>   
36 [0x24]:           popobj2    
37 [0x25]:           returnobj   
38 [0x26]:           ret   
39 [0x27]:           nop   


overload function: std#string.operator+=[3424] params(1) in file: lib\support\0.2.805/string.sharp:345:8: note:  
		    def operator+=( str: string ) := append(str.data);
		       ^

0 [0x0]: line: 345 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3381 // <std#string.append>   
7 [0x7]:           popobj2    
8 [0x8]:           returnobj   
9 [0x9]:           ret   


overload function: std#string.operator+=[3425] params(1) in file: lib\support\0.2.805/string.sharp:347:8: note:  
		    def operator+=( str: _int8[] ) := append(str);
		       ^

0 [0x0]: line: 347 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           call @3381 // <std#string.append>   
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: std#string.substring[3426] params(2) in file: lib\support\0.2.805/string.sharp:349:8: note:  
		    def substring(start_pos: var, end_pos: var) : string {
		       ^

0 [0x0]: line: 350 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           sizeof ebx   
6 [0x6]:           loadval ecx   
7 [0x7]:           gte ecx, ebx   
8 [0x8]:           movr ebx, cmt   
9 [0x9]:           skpe ebx // pc = 17   
10 [0xa]:           loadl ebx, fp+1   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           lt ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 25   
19 [0x13]: line: 351 movl 0   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+1   
22 [0x16]:           rstore ebx   
23 [0x17]:           call @3427 // <std#string.bounds_error>   
24 [0x18]:           throw    
25 [0x19]:           nop   
26 [0x1a]: line: 352 loadl ebx, fp+2   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           loadl ebx, fp+1   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           movr ebx, cmt   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 50   
34 [0x22]: line: 353 new_class @5 // std#illegal_argument_exception   
35 [0x23]:           dup    
36 [0x24]:           new_class @69 // std#string   
37 [0x25]:           dup    
38 [0x26]:           newstr @34 // end_pos:    
39 [0x27]:           call @3371 // <std#string.string>   
40 [0x28]:           loadl ebx, fp+2   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @3403 // <std#string.operator+>   
43 [0x2b]:           newstr @35 //  cannot be less than the start_pos:    
44 [0x2c]:           call @3383 // <std#string.operator+>   
45 [0x2d]:           loadl ebx, fp+1   
46 [0x2e]:           rstore ebx   
47 [0x2f]:           call @3403 // <std#string.operator+>   
48 [0x30]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
49 [0x31]:           throw    
50 [0x32]:           nop   
51 [0x33]: line: 357 new_class @69 // std#string   
52 [0x34]:           dup    
53 [0x35]:           call @3429 // <std#string.string>   
54 [0x36]:           popobj2    
55 [0x37]:           smovr_3 fp+3   
56 [0x38]: line: 358 movl 0   
57 [0x39]:           movn #0   
59 [0x3b]:           pushobj   
60 [0x3c]:           loadl ebx, fp+1   
61 [0x3d]:           rstore ebx   
62 [0x3e]:           loadl ebx, fp+2   
63 [0x3f]:           rstore ebx   
64 [0x40]:           call @2080 // <std.io#__srt_global.copy>   
65 [0x41]:           movl 3   
66 [0x42]:           movn #0   
68 [0x44]:           popobj   
69 [0x45]: line: 359 movl 3   
70 [0x46]:           returnobj   
71 [0x47]:           ret   


function: std#string.bounds_error[3427] params(1) in file: lib\support\0.2.805/string.sharp:362:16: note:  
		    private def bounds_error(pos : var) : bounds_except {
		               ^

0 [0x0]: line: 363 new_class @7 // std#out_of_bounds_exception   
1 [0x1]:           dup    
2 [0x2]:           new_class @69 // std#string   
3 [0x3]:           dup    
4 [0x4]:           newstr @36 // Index out of bounds exception at:    
5 [0x5]:           call @3371 // <std#string.string>   
6 [0x6]:           loadl ebx, fp+1   
7 [0x7]:           rstore ebx   
8 [0x8]:           call @3403 // <std#string.operator+>   
9 [0x9]:           newstr @37 //  with size of:    
10 [0xa]:           call @3383 // <std#string.operator+>   
11 [0xb]:           movl 0   
12 [0xc]:           movn #0   
14 [0xe]:           sizeof ebx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3403 // <std#string.operator+>   
17 [0x11]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   


function: std#string.hash[3428] params(0) in file: lib\support\0.2.805/string.sharp:366:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 367 movi #0, ebx   
2 [0x2]: line: 368 smovr_2 ebx, fp+1   
3 [0x3]: line: 369 movi #1, ebx   
5 [0x5]: line: 370 smovr_2 ebx, fp+2   
6 [0x6]: line: 371 istorel -1, fp+4   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           movl 5   
13 [0xd]:           popobj   
14 [0xe]:           iaddl 1, fp@4   
16 [0x10]:           movl 5   
17 [0x11]:           sizeof ecx   
18 [0x12]:           loadl ebx, fp+4   
19 [0x13]:           lt ebx, ecx   
20 [0x14]:           jne 61   
21 [0x15]:           iaload ecx, ebx   
22 [0x16]:           smovr_2 ecx, fp+3   
23 [0x17]: line: 372 loadl ebx, fp+1   
24 [0x18]:           rstore ebx   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #97, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           sub ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           movi #1, ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           add ecx, ebx -> ebx   
36 [0x24]:           rstore ebx   
37 [0x25]:           loadl ebx, fp+2   
38 [0x26]:           loadval ecx   
39 [0x27]:           mul ecx, ebx -> ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movi #1000000009, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           mod ecx, ebx -> ebx   
47 [0x2f]:           smovr_2 ebx, fp+1   
48 [0x30]: line: 373 loadl ebx, fp+2   
49 [0x31]:           rstore ebx   
50 [0x32]:           movi #31, ebx   
52 [0x34]:           loadval ecx   
53 [0x35]:           mul ecx, ebx -> ebx   
54 [0x36]:           rstore ebx   
55 [0x37]:           movi #1000000009, ebx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           mod ecx, ebx -> ebx   
59 [0x3b]:           smovr_2 ebx, fp+2   
60 [0x3c]:           jmp @14   
61 [0x3d]: line: 375 new_class @48 // std#long   
62 [0x3e]:           dup    
63 [0x3f]:           loadl ebx, fp+1   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @2405 // <std#long.long>   
66 [0x42]:           popobj2    
67 [0x43]:           returnobj   
68 [0x44]:           ret   


constructor: std#string.string[3429] params(0) in file: lib\support\0.2.805/string.sharp:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


function: std#string_builder.set_resize_capacity[3430] params(1) in file: lib\support\0.2.805/string_builder.sharp:20:8: note:  
		    def set_resize_capacity(new_capacity: var) {
		       ^

0 [0x0]: line: 21 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          movi #0, adx   
8 [0x8]:          rmov adx, ebx   
9 [0x9]:          ret   


constructor: std#string_builder.string_builder[3431] params(1) in file: lib\support\0.2.805/string_builder.sharp:24:19: note:  
		    string_builder(str : _int8[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #1   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         movi #0, ebx   
12 [0xc]:         rstore ebx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #2   
16 [0x10]:         loadval ebx   
17 [0x11]:         movi #0, adx   
19 [0x13]:         rmov adx, ebx   
20 [0x14]:         movi #0, ebx   
22 [0x16]:         rstore ebx   
23 [0x17]:         movl 0   
24 [0x18]:         movn #3   
26 [0x1a]:         loadval ebx   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]: line: 15 movi #255, ebx   
32 [0x20]:          newarry ebx: 0   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          popobj   
37 [0x25]: line: 16 movi #255, ebx   
39 [0x27]:          rstore ebx   
40 [0x28]:          movl 0   
41 [0x29]:          movn #2   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]: line: 17 movi #-1, ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #3   
53 [0x35]:          loadval ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]:          pushl 0   
58 [0x3a]:          call @2262 // <std#_object_._object_>   
59 [0x3b]: line: 25 movl 1   
60 [0x3c]:          pushobj   
61 [0x3d]:          pushnull    
62 [0x3e]:          itest ebx   
63 [0x3f]:          not ebx, ebx   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 72   
66 [0x42]: line: 26 movl 0   
67 [0x43]:          pushobj   
68 [0x44]:          movl 1   
69 [0x45]:          pushobj   
70 [0x46]:          call @3443 // <std#string_builder.append>   
71 [0x47]:          pop   
72 [0x48]:          nop   
73 [0x49]:          ret   


constructor: std#string_builder.string_builder[3432] params(1) in file: lib\support\0.2.805/string_builder.sharp:30:19: note:  
		    string_builder(ch: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #1   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         movi #0, ebx   
12 [0xc]:         rstore ebx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #2   
16 [0x10]:         loadval ebx   
17 [0x11]:         movi #0, adx   
19 [0x13]:         rmov adx, ebx   
20 [0x14]:         movi #0, ebx   
22 [0x16]:         rstore ebx   
23 [0x17]:         movl 0   
24 [0x18]:         movn #3   
26 [0x1a]:         loadval ebx   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]: line: 15 movi #255, ebx   
32 [0x20]:          newarry ebx: 0   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          popobj   
37 [0x25]: line: 16 movi #255, ebx   
39 [0x27]:          rstore ebx   
40 [0x28]:          movl 0   
41 [0x29]:          movn #2   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]: line: 17 movi #-1, ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #3   
53 [0x35]:          loadval ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]:          pushl 0   
58 [0x3a]:          call @2262 // <std#_object_._object_>   
59 [0x3b]: line: 31 movl 0   
60 [0x3c]:          pushobj   
61 [0x3d]:          loadl ebx, fp+1   
62 [0x3e]:          rstore ebx   
63 [0x3f]:          call @3440 // <std#string_builder.append>   
64 [0x40]:          pop   
65 [0x41]:          ret   


constructor: std#string_builder.string_builder[3433] params(1) in file: lib\support\0.2.805/string_builder.sharp:34:19: note:  
		    string_builder(str : char[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #1   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         movi #0, ebx   
12 [0xc]:         rstore ebx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #2   
16 [0x10]:         loadval ebx   
17 [0x11]:         movi #0, adx   
19 [0x13]:         rmov adx, ebx   
20 [0x14]:         movi #0, ebx   
22 [0x16]:         rstore ebx   
23 [0x17]:         movl 0   
24 [0x18]:         movn #3   
26 [0x1a]:         loadval ebx   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]: line: 15 movi #255, ebx   
32 [0x20]:          newarry ebx: 0   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          popobj   
37 [0x25]: line: 16 movi #255, ebx   
39 [0x27]:          rstore ebx   
40 [0x28]:          movl 0   
41 [0x29]:          movn #2   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]: line: 17 movi #-1, ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #3   
53 [0x35]:          loadval ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]:          pushl 0   
58 [0x3a]:          call @2262 // <std#_object_._object_>   
59 [0x3b]: line: 35 movl 1   
60 [0x3c]:          pushobj   
61 [0x3d]:          pushnull    
62 [0x3e]:          itest ebx   
63 [0x3f]:          not ebx, ebx   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 131   
66 [0x42]: line: 36 movl 0   
67 [0x43]:          pushobj   
68 [0x44]:          movl 1   
69 [0x45]:          sizeof ebx   
70 [0x46]:          rstore ebx   
71 [0x47]:          call @3437 // <std#string_builder.space_available>   
72 [0x48]:          loadval ebx   
73 [0x49]:          not ebx, ebx   
74 [0x4a]:          movr cmt, ebx   
75 [0x4b]:          jne 82   
76 [0x4c]: line: 37 movl 0   
77 [0x4d]:          pushobj   
78 [0x4e]:          movl 1   
79 [0x4f]:          sizeof ebx   
80 [0x50]:          rstore ebx   
81 [0x51]:          call @3438 // <std#string_builder.expand>   
82 [0x52]:          nop   
83 [0x53]: line: 40 movl 1   
84 [0x54]:          sizeof ebx   
85 [0x55]:          newarry ebx: 8   
86 [0x56]:          movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          popobj   
90 [0x5a]: line: 41 istorel -1, fp+3   
92 [0x5c]:          movl 1   
93 [0x5d]:          pushobj   
94 [0x5e]:          movl 4   
95 [0x5f]:          popobj   
96 [0x60]:          iaddl 1, fp@3   
98 [0x62]:          movl 4   
99 [0x63]:          sizeof ecx   
100 [0x64]:          loadl ebx, fp+3   
101 [0x65]:          lt ebx, ecx   
102 [0x66]:          jne 131   
103 [0x67]:          movnd ebx   
104 [0x68]:          pushobj   
105 [0x69]:          movl 2   
106 [0x6a]:          popobj   
107 [0x6b]: line: 42 movl 2   
108 [0x6c]:          pushobj   
109 [0x6d]:          call @1672 // <std#integer<_int8>.get_value>   
110 [0x6e]:          movl 0   
111 [0x6f]:          movn #0   
113 [0x71]:          pushobj   
114 [0x72]:          movl 0   
115 [0x73]:          movn #3   
117 [0x75]:          movi #0, adx   
119 [0x77]:          chklen adx   
120 [0x78]:          iaload ebx, adx   
121 [0x79]:          inc ebx   
122 [0x7a]:          movi #0, adx   
124 [0x7c]:          rmov adx, ebx   
125 [0x7d]:          popobj2    
126 [0x7e]:          movr adx, ebx   
127 [0x7f]:          chklen adx   
128 [0x80]:          loadval ebx   
129 [0x81]:          rmov adx, ebx   
130 [0x82]:          jmp @96   
131 [0x83]:          nop   
132 [0x84]:          ret   


constructor: std#string_builder.string_builder[3434] params(1) in file: lib\support\0.2.805/string_builder.sharp:47:19: note:  
		    string_builder(str: string) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #1   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         movi #0, ebx   
12 [0xc]:         rstore ebx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #2   
16 [0x10]:         loadval ebx   
17 [0x11]:         movi #0, adx   
19 [0x13]:         rmov adx, ebx   
20 [0x14]:         movi #0, ebx   
22 [0x16]:         rstore ebx   
23 [0x17]:         movl 0   
24 [0x18]:         movn #3   
26 [0x1a]:         loadval ebx   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]: line: 15 movi #255, ebx   
32 [0x20]:          newarry ebx: 0   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          popobj   
37 [0x25]: line: 16 movi #255, ebx   
39 [0x27]:          rstore ebx   
40 [0x28]:          movl 0   
41 [0x29]:          movn #2   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]: line: 17 movi #-1, ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #3   
53 [0x35]:          loadval ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]:          pushl 0   
58 [0x3a]:          call @2262 // <std#_object_._object_>   
59 [0x3b]: line: 48 movl 1   
60 [0x3c]:          pushobj   
61 [0x3d]:          pushnull    
62 [0x3e]:          itest ebx   
63 [0x3f]:          not ebx, ebx   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 73   
66 [0x42]: line: 49 movl 0   
67 [0x43]:          pushobj   
68 [0x44]:          movl 1   
69 [0x45]:          pushobj   
70 [0x46]:          call @3397 // <std#string.get_data>   
71 [0x47]:          call @3443 // <std#string_builder.append>   
72 [0x48]:          pop   
73 [0x49]:          nop   
74 [0x4a]:          ret   


constructor: std#string_builder.string_builder[3435] params(1) in file: lib\support\0.2.805/string_builder.sharp:53:19: note:  
		    string_builder(str: string_builder) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #1   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         movi #0, ebx   
12 [0xc]:         rstore ebx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #2   
16 [0x10]:         loadval ebx   
17 [0x11]:         movi #0, adx   
19 [0x13]:         rmov adx, ebx   
20 [0x14]:         movi #0, ebx   
22 [0x16]:         rstore ebx   
23 [0x17]:         movl 0   
24 [0x18]:         movn #3   
26 [0x1a]:         loadval ebx   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]: line: 15 movi #255, ebx   
32 [0x20]:          newarry ebx: 0   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          popobj   
37 [0x25]: line: 16 movi #255, ebx   
39 [0x27]:          rstore ebx   
40 [0x28]:          movl 0   
41 [0x29]:          movn #2   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]: line: 17 movi #-1, ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #3   
53 [0x35]:          loadval ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]:          pushl 0   
58 [0x3a]:          call @2262 // <std#_object_._object_>   
59 [0x3b]: line: 54 movl 1   
60 [0x3c]:          pushobj   
61 [0x3d]:          pushnull    
62 [0x3e]:          itest ebx   
63 [0x3f]:          not ebx, ebx   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 74   
66 [0x42]: line: 55 movl 0   
67 [0x43]:          pushobj   
68 [0x44]:          movl 1   
69 [0x45]:          movn #0   
71 [0x47]:          pushobj   
72 [0x48]:          call @3443 // <std#string_builder.append>   
73 [0x49]:          pop   
74 [0x4a]:          nop   
75 [0x4b]:          ret   


constructor: std#string_builder.string_builder[3436] params(2) in file: lib\support\0.2.805/string_builder.sharp:59:19: note:  
		    string_builder(str : _int8[], offset: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #1   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         movi #0, ebx   
12 [0xc]:         rstore ebx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #2   
16 [0x10]:         loadval ebx   
17 [0x11]:         movi #0, adx   
19 [0x13]:         rmov adx, ebx   
20 [0x14]:         movi #0, ebx   
22 [0x16]:         rstore ebx   
23 [0x17]:         movl 0   
24 [0x18]:         movn #3   
26 [0x1a]:         loadval ebx   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]: line: 15 movi #255, ebx   
32 [0x20]:          newarry ebx: 0   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          popobj   
37 [0x25]: line: 16 movi #255, ebx   
39 [0x27]:          rstore ebx   
40 [0x28]:          movl 0   
41 [0x29]:          movn #2   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]: line: 17 movi #-1, ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #3   
53 [0x35]:          loadval ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]:          pushl 0   
58 [0x3a]:          call @2262 // <std#_object_._object_>   
59 [0x3b]: line: 60 movl 1   
60 [0x3c]:          pushobj   
61 [0x3d]:          pushnull    
62 [0x3e]:          itest ebx   
63 [0x3f]:          not ebx, ebx   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 132   
66 [0x42]: line: 61 movl 0   
67 [0x43]:          pushobj   
68 [0x44]:          movl 1   
69 [0x45]:          sizeof ebx   
70 [0x46]:          rstore ebx   
71 [0x47]:          loadl ebx, fp+2   
72 [0x48]:          loadval ecx   
73 [0x49]:          sub ecx, ebx -> ebx   
74 [0x4a]:          rstore ebx   
75 [0x4b]:          call @3437 // <std#string_builder.space_available>   
76 [0x4c]:          loadval ebx   
77 [0x4d]:          not ebx, ebx   
78 [0x4e]:          movr cmt, ebx   
79 [0x4f]:          jne 86   
80 [0x50]: line: 62 movl 0   
81 [0x51]:          pushobj   
82 [0x52]:          movl 1   
83 [0x53]:          sizeof ebx   
84 [0x54]:          rstore ebx   
85 [0x55]:          call @3438 // <std#string_builder.expand>   
86 [0x56]:          nop   
87 [0x57]: line: 65 movl 1   
88 [0x58]:          pushobj   
89 [0x59]:          movl 0   
90 [0x5a]:          movn #0   
92 [0x5c]:          pushobj   
93 [0x5d]:          movl 0   
94 [0x5e]:          movn #3   
96 [0x60]:          movi #0, adx   
98 [0x62]:          chklen adx   
99 [0x63]:          iaload ebx, adx   
100 [0x64]:          inc ebx   
101 [0x65]:          movi #0, adx   
103 [0x67]:          rmov adx, ebx   
104 [0x68]:          rstore ebx   
105 [0x69]:          loadl ebx, fp+2   
106 [0x6a]:          rstore ebx   
107 [0x6b]:          movl 1   
108 [0x6c]:          sizeof ebx   
109 [0x6d]:          rstore ebx   
110 [0x6e]:          call @2070 // <std.io#__srt_global.memcopy>   
111 [0x6f]: line: 66 movl 1   
112 [0x70]:          sizeof ebx   
113 [0x71]:          rstore ebx   
114 [0x72]:          loadl ebx, fp+2   
115 [0x73]:          loadval ecx   
116 [0x74]:          sub ecx, ebx -> ebx   
117 [0x75]:          rstore ebx   
118 [0x76]:          movi #1, ebx   
120 [0x78]:          loadval ecx   
121 [0x79]:          sub ecx, ebx -> ebx   
122 [0x7a]:          rstore ebx   
123 [0x7b]:          movl 0   
124 [0x7c]:          movn #3   
126 [0x7e]:          movi #0, adx   
128 [0x80]:          iaload ecx, adx   
129 [0x81]:          loadval ebx   
130 [0x82]:          add ecx, ebx -> ebx   
131 [0x83]:          rmov adx, ebx   
132 [0x84]:          nop   
133 [0x85]:          ret   


function: std#string_builder.space_available[3437] params(1) in file: lib\support\0.2.805/string_builder.sharp:70:8: note:  
		    def space_available(space_required : var) : var {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          add ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movl 0   
18 [0x12]:          movn #0   
20 [0x14]:          sizeof ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          lt ecx, ebx   
23 [0x17]:          movr ebx, cmt   
24 [0x18]:          return_val ebx   
25 [0x19]:          ret   


function: std#string_builder.expand[3438] params(1) in file: lib\support\0.2.805/string_builder.sharp:74:8: note:  
		    def expand(space_required : var) {
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          add ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          movi #0, adx   
22 [0x16]:          chklen adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          loadval ecx   
25 [0x19]:          add ecx, ebx -> ebx   
26 [0x1a]:          smovr_2 ebx, fp+2   
27 [0x1b]: line: 76 movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+2   
32 [0x20]:          rstore ebx   
33 [0x21]:          call @2060 // <std.io#__srt_global.realloc>   
34 [0x22]:          ret   


function: std#string_builder.replace[3439] params(2) in file: lib\support\0.2.805/string_builder.sharp:79:8: note:  
		    def replace(pos : var, ch: _int8) : string_builder {
		       ^

0 [0x0]: line: 80 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          gte ecx, ebx   
8 [0x8]:          movr ebx, cmt   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 17   
11 [0xb]: line: 81 movl 0   
12 [0xc]:          pushobj   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3472 // <std#string_builder.bounds_error>   
16 [0x10]:          throw    
17 [0x11]:          nop   
18 [0x12]: line: 84 loadl ebx, fp+2   
19 [0x13]:          rstore ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          loadl ebx, fp+1   
25 [0x19]:          popobj2    
26 [0x1a]:          movr adx, ebx   
27 [0x1b]:          chklen adx   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]: line: 85 movl 0   
31 [0x1f]:          returnobj   
32 [0x20]:          ret   


function: std#string_builder.append[3440] params(1) in file: lib\support\0.2.805/string_builder.sharp:88:8: note:  
		    def append(ch: var) : string_builder
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 91 movi #255, ebx   
10 [0xa]:          newarry ebx: 8   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @44   
16 [0x10]:          movl 0   
17 [0x11]:          movn #3   
19 [0x13]:          movi #0, adx   
21 [0x15]:          chklen adx   
22 [0x16]:          iaload ebx, adx   
23 [0x17]:          rstore ebx   
24 [0x18]:          movi #1, ebx   
26 [0x1a]:          loadval ecx   
27 [0x1b]:          add ecx, ebx -> ebx   
28 [0x1c]:          rstore ebx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          sizeof ebx   
33 [0x21]:          loadval ecx   
34 [0x22]:          gte ecx, ebx   
35 [0x23]:          movr ebx, cmt   
36 [0x24]:          movr cmt, ebx   
37 [0x25]:          jne 44   
38 [0x26]: line: 93 movl 0   
39 [0x27]:          pushobj   
40 [0x28]:          movi #0, ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          call @3438 // <std#string_builder.expand>   
44 [0x2c]:          nop   
45 [0x2d]: line: 95 loadl ebx, fp+1   
46 [0x2e]:          rstore ebx   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #0   
50 [0x32]:          pushobj   
51 [0x33]:          movl 0   
52 [0x34]:          movn #0   
54 [0x36]:          sizeof ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          movi #1, ebx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          sub ecx, ebx -> ebx   
60 [0x3c]:          popobj2    
61 [0x3d]:          movr adx, ebx   
62 [0x3e]:          chklen adx   
63 [0x3f]:          loadval ebx   
64 [0x40]:          rmov adx, ebx   
65 [0x41]: line: 96 movl 0   
66 [0x42]:          returnobj   
67 [0x43]:          ret   


function: std#string_builder.get_elements[3441] params(0) in file: lib\support\0.2.805/string_builder.sharp:99:8: note:  
		    def get_elements() := to_string().get_elements();
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @3447 // <std#string_builder.to_string>   
3 [0x3]:          call @3398 // <std#string.get_elements>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#string_builder.append[3442] params(1) in file: lib\support\0.2.805/string_builder.sharp:101:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           call @1672 // <std#integer<_int8>.get_value>   
5 [0x5]:           call @3440 // <std#string_builder.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


function: std#string_builder.append[3443] params(1) in file: lib\support\0.2.805/string_builder.sharp:103:8: note:  
		    def append(immstr: _int8[]) : string_builder
		       ^

0 [0x0]: line: 105 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           pushnull    
3 [0x3]:           itest ebx   
4 [0x4]:           movr cmt, ebx   
5 [0x5]:           jne 9   
6 [0x6]:           movl 0   
7 [0x7]:           returnobj   
8 [0x8]:           ret   
9 [0x9]:           nop   
10 [0xa]: line: 107 movl 0   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           pushnull    
15 [0xf]:           itest ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 31   
18 [0x12]: line: 108 movl 1   
19 [0x13]:           sizeof ebx   
20 [0x14]:           rstore ebx   
21 [0x15]:           movi #255, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           add ecx, ebx -> ebx   
25 [0x19]:           newarry ebx: 8   
26 [0x1a]:           movl 0   
27 [0x1b]:           movn #0   
29 [0x1d]:           popobj   
30 [0x1e]:           jmp @47   
31 [0x1f]:           movl 0   
32 [0x20]:           pushobj   
33 [0x21]:           movl 1   
34 [0x22]:           sizeof ebx   
35 [0x23]:           rstore ebx   
36 [0x24]:           call @3437 // <std#string_builder.space_available>   
37 [0x25]:           loadval ebx   
38 [0x26]:           not ebx, ebx   
39 [0x27]:           movr cmt, ebx   
40 [0x28]:           jne 47   
41 [0x29]: line: 110 movl 0   
42 [0x2a]:           pushobj   
43 [0x2b]:           movl 1   
44 [0x2c]:           sizeof ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           call @3438 // <std#string_builder.expand>   
47 [0x2f]:           nop   
48 [0x30]: line: 112 movl 1   
49 [0x31]:           pushobj   
50 [0x32]:           movl 0   
51 [0x33]:           movn #0   
53 [0x35]:           pushobj   
54 [0x36]:           movl 0   
55 [0x37]:           movn #3   
57 [0x39]:           movi #0, adx   
59 [0x3b]:           chklen adx   
60 [0x3c]:           iaload ebx, adx   
61 [0x3d]:           inc ebx   
62 [0x3e]:           movi #0, adx   
64 [0x40]:           rmov adx, ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movi #0, ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movl 1   
70 [0x46]:           sizeof ebx   
71 [0x47]:           rstore ebx   
72 [0x48]:           call @2070 // <std.io#__srt_global.memcopy>   
73 [0x49]: line: 113 movl 1   
74 [0x4a]:           sizeof ebx   
75 [0x4b]:           rstore ebx   
76 [0x4c]:           movi #1, ebx   
78 [0x4e]:           loadval ecx   
79 [0x4f]:           sub ecx, ebx -> ebx   
80 [0x50]:           rstore ebx   
81 [0x51]:           movl 0   
82 [0x52]:           movn #3   
84 [0x54]:           movi #0, adx   
86 [0x56]:           iaload ecx, adx   
87 [0x57]:           loadval ebx   
88 [0x58]:           add ecx, ebx -> ebx   
89 [0x59]:           rmov adx, ebx   
90 [0x5a]: line: 114 movl 0   
91 [0x5b]:           returnobj   
92 [0x5c]:           ret   


function: std#string_builder.append[3444] params(2) in file: lib\support\0.2.805/string_builder.sharp:117:8: note:  
		    def append(immstr: _int8[], len: var) : string_builder
		       ^

0 [0x0]: line: 119 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           pushnull    
3 [0x3]:           itest ebx   
4 [0x4]:           movr cmt, ebx   
5 [0x5]:           jne 9   
6 [0x6]:           movl 0   
7 [0x7]:           returnobj   
8 [0x8]:           ret   
9 [0x9]:           nop   
10 [0xa]: line: 120 loadl ebx, fp+2   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           lt ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 24   
19 [0x13]: line: 121 new_class @19 // std#error   
20 [0x14]:           dup    
21 [0x15]:           newstr @29 // length cannot be less than zero   
22 [0x16]:           call @1986 // <std#error.error>   
23 [0x17]:           throw    
24 [0x18]:           nop   
25 [0x19]: line: 123 loadl ebx, fp+2   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movl 1   
28 [0x1c]:           sizeof ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           gt ecx, ebx   
31 [0x1f]:           movr ebx, cmt   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 51   
34 [0x22]: line: 124 new_class @19 // std#error   
35 [0x23]:           dup    
36 [0x24]:           new_class @69 // std#string   
37 [0x25]:           dup    
38 [0x26]:           newstr @30 // length of:    
39 [0x27]:           call @3371 // <std#string.string>   
40 [0x28]:           loadl ebx, fp+2   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @3403 // <std#string.operator+>   
43 [0x2b]:           newstr @31 //  is greater than the string:    
44 [0x2c]:           call @3383 // <std#string.operator+>   
45 [0x2d]:           movl 1   
46 [0x2e]:           sizeof ebx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           call @3403 // <std#string.operator+>   
49 [0x31]:           call @1987 // <std#error.error>   
50 [0x32]:           throw    
51 [0x33]:           nop   
52 [0x34]: line: 126 movl 0   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           pushnull    
57 [0x39]:           itest ebx   
58 [0x3a]:           movr cmt, ebx   
59 [0x3b]:           jne 72   
60 [0x3c]: line: 127 loadl ebx, fp+2   
61 [0x3d]:           rstore ebx   
62 [0x3e]:           movi #255, ebx   
64 [0x40]:           loadval ecx   
65 [0x41]:           add ecx, ebx -> ebx   
66 [0x42]:           newarry ebx: 8   
67 [0x43]:           movl 0   
68 [0x44]:           movn #0   
70 [0x46]:           popobj   
71 [0x47]:           jmp @88   
72 [0x48]:           movl 0   
73 [0x49]:           pushobj   
74 [0x4a]:           movl 1   
75 [0x4b]:           sizeof ebx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           call @3437 // <std#string_builder.space_available>   
78 [0x4e]:           loadval ebx   
79 [0x4f]:           not ebx, ebx   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 88   
82 [0x52]: line: 129 movl 0   
83 [0x53]:           pushobj   
84 [0x54]:           movl 1   
85 [0x55]:           sizeof ebx   
86 [0x56]:           rstore ebx   
87 [0x57]:           call @3438 // <std#string_builder.expand>   
88 [0x58]:           nop   
89 [0x59]: line: 131 movl 1   
90 [0x5a]:           pushobj   
91 [0x5b]:           movl 0   
92 [0x5c]:           movn #0   
94 [0x5e]:           pushobj   
95 [0x5f]:           movl 0   
96 [0x60]:           movn #3   
98 [0x62]:           movi #0, adx   
100 [0x64]:           chklen adx   
101 [0x65]:           iaload ebx, adx   
102 [0x66]:           inc ebx   
103 [0x67]:           movi #0, adx   
105 [0x69]:           rmov adx, ebx   
106 [0x6a]:           rstore ebx   
107 [0x6b]:           movi #0, ebx   
109 [0x6d]:           rstore ebx   
110 [0x6e]:           loadl ebx, fp+2   
111 [0x6f]:           rstore ebx   
112 [0x70]:           call @2070 // <std.io#__srt_global.memcopy>   
113 [0x71]: line: 132 movl 1   
114 [0x72]:           sizeof ebx   
115 [0x73]:           rstore ebx   
116 [0x74]:           loadl ebx, fp+2   
117 [0x75]:           loadval ecx   
118 [0x76]:           sub ecx, ebx -> ebx   
119 [0x77]:           rstore ebx   
120 [0x78]:           movi #1, ebx   
122 [0x7a]:           loadval ecx   
123 [0x7b]:           sub ecx, ebx -> ebx   
124 [0x7c]:           rstore ebx   
125 [0x7d]:           movl 0   
126 [0x7e]:           movn #3   
128 [0x80]:           movi #0, adx   
130 [0x82]:           iaload ecx, adx   
131 [0x83]:           loadval ebx   
132 [0x84]:           add ecx, ebx -> ebx   
133 [0x85]:           rmov adx, ebx   
134 [0x86]: line: 133 movl 0   
135 [0x87]:           returnobj   
136 [0x88]:           ret   


overload function: std#string_builder.operator+[3445] params(1) in file: lib\support\0.2.805/string_builder.sharp:136:8: note:  
		    def operator+(immstr : _int8[]) : string_builder {
		       ^

0 [0x0]: line: 137 new_class @70 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3431 // <std#string_builder.string_builder>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 138 movl 1   
10 [0xa]:           pushobj   
11 [0xb]:           pushnull    
12 [0xc]:           itest ebx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 25   
16 [0x10]: line: 139 movl 2   
17 [0x11]:           pushobj   
18 [0x12]:           movl 1   
19 [0x13]:           pushobj   
20 [0x14]:           call @3443 // <std#string_builder.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @32   
25 [0x19]: line: 141 movl 2   
26 [0x1a]:           pushobj   
27 [0x1b]:           newstr @32 // null   
28 [0x1c]:           call @3443 // <std#string_builder.append>   
29 [0x1d]:           popobj2    
30 [0x1e]:           returnobj   
31 [0x1f]:           ret   
32 [0x20]:           nop   


overload function: std#string_builder.operator+[3446] params(1) in file: lib\support\0.2.805/string_builder.sharp:145:8: note:  
		    def operator+(obj : printable) : string_builder {
		       ^

0 [0x0]: line: 146 new_class @70 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3431 // <std#string_builder.string_builder>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 147 movl 1   
10 [0xa]:           pushobj   
11 [0xb]:           pushnull    
12 [0xc]:           itest ebx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 28   
16 [0x10]: line: 148 movl 2   
17 [0x11]:           pushobj   
18 [0x12]:           movl 1   
19 [0x13]:           pushobj   
20 [0x14]:           invoke_delegate 3355 { static=0, args=0 }   
22 [0x16]:           call @3397 // <std#string.get_data>   
23 [0x17]:           call @3443 // <std#string_builder.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           jmp @35   
28 [0x1c]: line: 150 movl 2   
29 [0x1d]:           pushobj   
30 [0x1e]:           newstr @32 // null   
31 [0x1f]:           call @3443 // <std#string_builder.append>   
32 [0x20]:           popobj2    
33 [0x21]:           returnobj   
34 [0x22]:           ret   
35 [0x23]:           nop   


function: std#string_builder.to_string[3447] params(0) in file: lib\support\0.2.805/string_builder.sharp:153:8: note:  
		    def to_string() := new string(data, 0, cursor + 1);
		       ^

0 [0x0]: line: 153 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           movi #0, ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movl 0   
10 [0xa]:           movn #3   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #1, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           add ecx, ebx -> ebx   
21 [0x15]:           rstore ebx   
22 [0x16]:           call @3376 // <std#string.string>   
23 [0x17]:           popobj2    
24 [0x18]:           returnobj   
25 [0x19]:           ret   


overload function: std#string_builder.operator==[3448] params(1) in file: lib\support\0.2.805/string_builder.sharp:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #1, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           add ecx, ebx -> ebx   
12 [0xc]:           rstore ebx   
13 [0xd]:           movl 1   
14 [0xe]:           sizeof ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           tne ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 24   
20 [0x14]: line: 157 movi #0, ebx   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 159 movi #0, ebx   
27 [0x1b]:           smovr_2 ebx, fp+2   
28 [0x1c]: line: 160 istorel -1, fp+4   
30 [0x1e]:           movl 1   
31 [0x1f]:           pushobj   
32 [0x20]:           movl 5   
33 [0x21]:           popobj   
34 [0x22]:           iaddl 1, fp@4   
36 [0x24]:           movl 5   
37 [0x25]:           sizeof ecx   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           lt ebx, ecx   
40 [0x28]:           jne 69   
41 [0x29]:           iaload ecx, ebx   
42 [0x2a]:           smovr_2 ecx, fp+3   
43 [0x2b]: line: 161 loadl ebx, fp+3   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           pushobj   
49 [0x31]:           loadl ebx, fp+2   
50 [0x32]:           movr egx, ebx   
51 [0x33]:           inc ebx   
52 [0x34]:           smovr_2 ebx, fp+2   
53 [0x35]:           movr ebx, egx   
54 [0x36]:           popobj2    
55 [0x37]:           movr adx, ebx   
56 [0x38]:           chklen adx   
57 [0x39]:           iaload ebx, adx   
58 [0x3a]:           loadval ecx   
59 [0x3b]:           tne ecx, ebx   
60 [0x3c]:           movr ebx, cmt   
61 [0x3d]:           movr cmt, ebx   
62 [0x3e]:           jne 67   
63 [0x3f]: line: 162 movi #0, ebx   
65 [0x41]:           return_val ebx   
66 [0x42]:           ret   
67 [0x43]:           nop   
68 [0x44]:           jmp @34   
69 [0x45]: line: 165 movi #1, ebx   
71 [0x47]:           return_val ebx   
72 [0x48]:           ret   


overload function: std#string_builder.operator==[3449] params(1) in file: lib\support\0.2.805/string_builder.sharp:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #1, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           add ecx, ebx -> ebx   
12 [0xc]:           rstore ebx   
13 [0xd]:           movl 1   
14 [0xe]:           pushobj   
15 [0xf]:           call @3397 // <std#string.get_data>   
16 [0x10]:           popobj2    
17 [0x11]:           sizeof ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           tne ecx, ebx   
20 [0x14]:           movr ebx, cmt   
21 [0x15]:           movr cmt, ebx   
22 [0x16]:           jne 27   
23 [0x17]: line: 170 movi #0, ebx   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   
27 [0x1b]:           nop   
28 [0x1c]: line: 172 movi #0, ebx   
30 [0x1e]:           smovr_2 ebx, fp+2   
31 [0x1f]: line: 173 istorel -1, fp+4   
33 [0x21]:           movl 1   
34 [0x22]:           pushobj   
35 [0x23]:           call @3397 // <std#string.get_data>   
36 [0x24]:           movl 5   
37 [0x25]:           popobj   
38 [0x26]:           iaddl 1, fp@4   
40 [0x28]:           movl 5   
41 [0x29]:           sizeof ecx   
42 [0x2a]:           loadl ebx, fp+4   
43 [0x2b]:           lt ebx, ecx   
44 [0x2c]:           jne 73   
45 [0x2d]:           iaload ecx, ebx   
46 [0x2e]:           smovr_2 ecx, fp+3   
47 [0x2f]: line: 174 loadl ebx, fp+3   
48 [0x30]:           rstore ebx   
49 [0x31]:           movl 0   
50 [0x32]:           movn #0   
52 [0x34]:           pushobj   
53 [0x35]:           loadl ebx, fp+2   
54 [0x36]:           movr egx, ebx   
55 [0x37]:           inc ebx   
56 [0x38]:           smovr_2 ebx, fp+2   
57 [0x39]:           movr ebx, egx   
58 [0x3a]:           popobj2    
59 [0x3b]:           movr adx, ebx   
60 [0x3c]:           chklen adx   
61 [0x3d]:           iaload ebx, adx   
62 [0x3e]:           loadval ecx   
63 [0x3f]:           tne ecx, ebx   
64 [0x40]:           movr ebx, cmt   
65 [0x41]:           movr cmt, ebx   
66 [0x42]:           jne 71   
67 [0x43]: line: 175 movi #0, ebx   
69 [0x45]:           return_val ebx   
70 [0x46]:           ret   
71 [0x47]:           nop   
72 [0x48]:           jmp @38   
73 [0x49]: line: 178 movi #1, ebx   
75 [0x4b]:           return_val ebx   
76 [0x4c]:           ret   


overload function: std#string_builder.operator!=[3450] params(1) in file: lib\support\0.2.805/string_builder.sharp:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           call @3448 // <std#string_builder.operator==>   
5 [0x5]:           loadval ebx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#string_builder.operator!=[3451] params(1) in file: lib\support\0.2.805/string_builder.sharp:184:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           call @3449 // <std#string_builder.operator==>   
5 [0x5]:           loadval ebx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#string_builder.operator=[3452] params(1) in file: lib\support\0.2.805/string_builder.sharp:186:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 188 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           pushnull    
3 [0x3]:           itest ebx   
4 [0x4]:           movr cmt, ebx   
5 [0x5]:           jne 24   
6 [0x6]: line: 189 movi #255, ebx   
8 [0x8]:           newarry ebx: 0   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           popobj   
13 [0xd]: line: 190 movi #-1, ebx   
15 [0xf]:           rstore ebx   
16 [0x10]:           movl 0   
17 [0x11]:           movn #3   
19 [0x13]:           loadval ebx   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           jmp @62   
24 [0x18]: line: 193 movl 1   
25 [0x19]:           sizeof ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #255, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           newarry ebx: 0   
32 [0x20]:           movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           popobj   
36 [0x24]: line: 194 movl 1   
37 [0x25]:           sizeof ebx   
38 [0x26]:           rstore ebx   
39 [0x27]:           movl 0   
40 [0x28]:           movn #3   
42 [0x2a]:           loadval ebx   
43 [0x2b]:           movi #0, adx   
45 [0x2d]:           rmov adx, ebx   
46 [0x2e]: line: 195 movl 1   
47 [0x2f]:           pushobj   
48 [0x30]:           movl 0   
49 [0x31]:           movn #0   
51 [0x33]:           pushobj   
52 [0x34]:           movi #0, ebx   
54 [0x36]:           rstore ebx   
55 [0x37]:           movi #0, ebx   
57 [0x39]:           rstore ebx   
58 [0x3a]:           movl 1   
59 [0x3b]:           sizeof ebx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           call @2070 // <std.io#__srt_global.memcopy>   
62 [0x3e]:           nop   
63 [0x3f]:           ret   


function: std#string_builder.at[3453] params(1) in file: lib\support\0.2.805/string_builder.sharp:199:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 200 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #3   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 20   
14 [0xe]: line: 201 movl 0   
15 [0xf]:           pushobj   
16 [0x10]:           loadl ebx, fp+1   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @3472 // <std#string_builder.bounds_error>   
19 [0x13]:           throw    
20 [0x14]:           nop   
21 [0x15]: line: 202 movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+1   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           return_val ebx   
31 [0x1f]:           ret   


overload function: std#string_builder.operator[[3454] params(1) in file: lib\support\0.2.805/string_builder.sharp:205:8: note:  
		    def operator[](pos: var) : var {
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           call @3453 // <std#string_builder.at>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#string_builder.fmt[3455] params(1) in file: lib\support\0.2.805/string_builder.sharp:209:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 210 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movg @70 // @std#string_builder   
3 [0x3]:           movn #0   
5 [0x5]:           loadval ebx   
6 [0x6]:           mov8 ebx, ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]: line: 211 loadl ebx, fp+0   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #102, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           tne ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           skne ebx // pc = 25   
18 [0x12]:           loadl ebx, fp+0   
19 [0x13]:           rstore ebx   
20 [0x14]:           movi #70, ebx   
22 [0x16]:           loadval ecx   
23 [0x17]:           tne ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 37   
27 [0x1b]:           movi #0, ebx   
29 [0x1d]:           rstore ebx   
30 [0x1e]:           movg @70 // @std#string_builder   
31 [0x1f]:           movn #1   
33 [0x21]:           loadval ebx   
34 [0x22]:           movi #0, adx   
36 [0x24]:           rmov adx, ebx   
37 [0x25]:           nop   
38 [0x26]:           ret   


function: std#string_builder.set_precision[3456] params(1) in file: lib\support\0.2.805/string_builder.sharp:214:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 215 loadl ebx, fp+0   
1 [0x1]:           rstore ebx   
2 [0x2]:           movi #0, ebx   
4 [0x4]:           loadval ecx   
5 [0x5]:           lt ecx, ebx   
6 [0x6]:           movr ebx, cmt   
7 [0x7]:           skpe ebx // pc = 15   
8 [0x8]:           loadl ebx, fp+0   
9 [0x9]:           rstore ebx   
10 [0xa]:           movi #16, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 28   
17 [0x11]: line: 216 new_class @5 // std#illegal_argument_exception   
18 [0x12]:           dup    
19 [0x13]:           new_class @69 // std#string   
20 [0x14]:           dup    
21 [0x15]:           newstr @33 // invalid precision:    
22 [0x16]:           call @3371 // <std#string.string>   
23 [0x17]:           loadl ebx, fp+0   
24 [0x18]:           rstore ebx   
25 [0x19]:           call @3403 // <std#string.operator+>   
26 [0x1a]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 217 loadl ebx, fp+0   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movg @70 // @std#string_builder   
32 [0x20]:           movn #1   
34 [0x22]:           loadval ebx   
35 [0x23]:           movi #0, adx   
37 [0x25]:           rmov adx, ebx   
38 [0x26]:           ret   


function: std#string_builder.to_array[3457] params(0) in file: lib\support\0.2.805/string_builder.sharp:220:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 222 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           skpe ebx // pc = 20   
7 [0x7]:           movl 0   
8 [0x8]:           movn #3   
10 [0xa]:           movi #0, adx   
12 [0xc]:           chklen adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #-1, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           test ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 26   
22 [0x16]:           pushnull    
23 [0x17]:           popobj2    
24 [0x18]:           returnobj   
25 [0x19]:           ret   
26 [0x1a]:           nop   
27 [0x1b]: line: 223 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           pushobj   
31 [0x1f]:           movi #0, ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #3   
37 [0x25]:           movi #0, adx   
39 [0x27]:           chklen adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           movi #1, ebx   
44 [0x2c]:           loadval ecx   
45 [0x2d]:           add ecx, ebx -> ebx   
46 [0x2e]:           rstore ebx   
47 [0x2f]:           call @2080 // <std.io#__srt_global.copy>   
48 [0x30]:           popobj2    
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#string_builder.starts_with[3458] params(1) in file: lib\support\0.2.805/string_builder.sharp:227:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 228 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           pushnull    
3 [0x3]:           itest ebx   
4 [0x4]:           skpe ebx // pc = 25   
5 [0x5]:           movl 1   
6 [0x6]:           pushobj   
7 [0x7]:           call @3412 // <std#string.size>   
8 [0x8]:           loadval ebx   
9 [0x9]:           rstore ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #3   
13 [0xd]:           movi #0, adx   
15 [0xf]:           chklen adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           movi #1, ebx   
20 [0x14]:           loadval ecx   
21 [0x15]:           add ecx, ebx -> ebx   
22 [0x16]:           loadval ecx   
23 [0x17]:           gt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 31   
27 [0x1b]: line: 229 movi #0, ebx   
29 [0x1d]:           return_val ebx   
30 [0x1e]:           ret   
31 [0x1f]:           nop   
32 [0x20]: line: 232 movi #0, ebx   
34 [0x22]:           smovr_2 ebx, fp+2   
35 [0x23]:           loadl ebx, fp+2   
36 [0x24]:           rstore ebx   
37 [0x25]:           movl 1   
38 [0x26]:           pushobj   
39 [0x27]:           call @3412 // <std#string.size>   
40 [0x28]:           loadval ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           lt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 80   
46 [0x2e]: line: 234 movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+2   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           rstore ebx   
56 [0x38]:           movl 1   
57 [0x39]:           movn #0   
59 [0x3b]:           pushobj   
60 [0x3c]:           loadl ebx, fp+2   
61 [0x3d]:           popobj2    
62 [0x3e]:           movr adx, ebx   
63 [0x3f]:           chklen adx   
64 [0x40]:           iaload ebx, adx   
65 [0x41]:           loadval ecx   
66 [0x42]:           tne ecx, ebx   
67 [0x43]:           movr ebx, cmt   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 74   
70 [0x46]: line: 235 movi #0, ebx   
72 [0x48]:           return_val ebx   
73 [0x49]:           ret   
74 [0x4a]:           nop   
75 [0x4b]:           loadl ebx, fp+2   
76 [0x4c]:           movr egx, ebx   
77 [0x4d]:           inc ebx   
78 [0x4e]:           smovr_2 ebx, fp+2   
79 [0x4f]:           jmp @35   
80 [0x50]: line: 237 movi #1, ebx   
82 [0x52]:           return_val ebx   
83 [0x53]:           ret   


function: std#string_builder.find[3459] params(1) in file: lib\support\0.2.805/string_builder.sharp:240:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 241 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           call @3412 // <std#string.size>   
3 [0x3]:           loadval ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           rstore ebx   
13 [0xd]:           movi #1, ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           add ecx, ebx -> ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           gt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 242 movi #0, ebx   
24 [0x18]:           return_val ebx   
25 [0x19]:           ret   
26 [0x1a]:           nop   
27 [0x1b]: line: 245 movi #0, ebx   
29 [0x1d]:           smovr_2 ebx, fp+2   
30 [0x1e]: line: 246 movi #0, ebx   
32 [0x20]:           smovr_2 ebx, fp+3   
33 [0x21]:           loadl ebx, fp+3   
34 [0x22]:           rstore ebx   
35 [0x23]:           movl 0   
36 [0x24]:           movn #3   
38 [0x26]:           movi #0, adx   
40 [0x28]:           chklen adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movi #1, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           add ecx, ebx -> ebx   
47 [0x2f]:           loadval ecx   
48 [0x30]:           lt ecx, ebx   
49 [0x31]:           movr ebx, cmt   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 135   
52 [0x34]: line: 247 loadl ebx, fp+3   
53 [0x35]:           rstore ebx   
54 [0x36]:           movl 1   
55 [0x37]:           pushobj   
56 [0x38]:           call @3412 // <std#string.size>   
57 [0x39]:           loadval ebx   
58 [0x3a]:           loadval ecx   
59 [0x3b]:           add ecx, ebx -> ebx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movl 0   
62 [0x3e]:           movn #3   
64 [0x40]:           movi #0, adx   
66 [0x42]:           chklen adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movi #1, ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           add ecx, ebx -> ebx   
73 [0x49]:           loadval ecx   
74 [0x4a]:           lt ecx, ebx   
75 [0x4b]:           movr ebx, cmt   
76 [0x4c]:           movr cmt, ebx   
77 [0x4d]:           jne 125   
78 [0x4e]: line: 248 movi #0, ebx   
80 [0x50]:           smovr_2 ebx, fp+4   
81 [0x51]:           loadl ebx, fp+4   
82 [0x52]:           rstore ebx   
83 [0x53]:           movl 1   
84 [0x54]:           pushobj   
85 [0x55]:           call @3412 // <std#string.size>   
86 [0x56]:           loadval ebx   
87 [0x57]:           loadval ecx   
88 [0x58]:           lt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 120   
92 [0x5c]: line: 249 movl 1   
93 [0x5d]:           pushobj   
94 [0x5e]:           loadl ebx, fp+4   
95 [0x5f]:           rstore ebx   
96 [0x60]:           call @3394 // <std#string.operator[>   
97 [0x61]:           loadval ebx   
98 [0x62]:           rstore ebx   
99 [0x63]:           movl 0   
100 [0x64]:           movn #0   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+4   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           iaload ebx, adx   
108 [0x6c]:           loadval ecx   
109 [0x6d]:           tne ecx, ebx   
110 [0x6e]:           movr ebx, cmt   
111 [0x6f]:           movr cmt, ebx   
112 [0x70]:           jne 114   
113 [0x71]: line: 250 jmp @120   
114 [0x72]:           nop   
115 [0x73]:           loadl ebx, fp+4   
116 [0x74]:           movr egx, ebx   
117 [0x75]:           inc ebx   
118 [0x76]:           smovr_2 ebx, fp+4   
119 [0x77]:           jmp @81   
120 [0x78]: line: 253 movi #1, ebx   
122 [0x7a]:           return_val ebx   
123 [0x7b]:           ret   
124 [0x7c]:           jmp @129   
125 [0x7d]: line: 254 movi #0, ebx   
127 [0x7f]:           return_val ebx   
128 [0x80]:           ret   
129 [0x81]:           nop   
130 [0x82]:           loadl ebx, fp+3   
131 [0x83]:           movr egx, ebx   
132 [0x84]:           inc ebx   
133 [0x85]:           smovr_2 ebx, fp+3   
134 [0x86]:           jmp @33   
135 [0x87]: line: 257 movi #0, ebx   
137 [0x89]:           return_val ebx   
138 [0x8a]:           ret   


function: std#string_builder.find[3460] params(1) in file: lib\support\0.2.805/string_builder.sharp:260:8: note:  
		    def find(str: string_builder) : var {
		       ^

0 [0x0]: line: 261 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           rstore ebx   
13 [0xd]:           movi #1, ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           add ecx, ebx -> ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           gt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 262 movi #0, ebx   
24 [0x18]:           return_val ebx   
25 [0x19]:           ret   
26 [0x1a]:           nop   
27 [0x1b]: line: 265 movi #0, ebx   
29 [0x1d]:           smovr_2 ebx, fp+2   
30 [0x1e]: line: 266 movi #0, ebx   
32 [0x20]:           smovr_2 ebx, fp+3   
33 [0x21]:           loadl ebx, fp+3   
34 [0x22]:           rstore ebx   
35 [0x23]:           movl 0   
36 [0x24]:           movn #3   
38 [0x26]:           movi #0, adx   
40 [0x28]:           chklen adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movi #1, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           add ecx, ebx -> ebx   
47 [0x2f]:           loadval ecx   
48 [0x30]:           lt ecx, ebx   
49 [0x31]:           movr ebx, cmt   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 135   
52 [0x34]: line: 267 loadl ebx, fp+3   
53 [0x35]:           rstore ebx   
54 [0x36]:           movl 1   
55 [0x37]:           movn #0   
57 [0x39]:           sizeof ebx   
58 [0x3a]:           loadval ecx   
59 [0x3b]:           add ecx, ebx -> ebx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movl 0   
62 [0x3e]:           movn #3   
64 [0x40]:           movi #0, adx   
66 [0x42]:           chklen adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movi #1, ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           add ecx, ebx -> ebx   
73 [0x49]:           loadval ecx   
74 [0x4a]:           lt ecx, ebx   
75 [0x4b]:           movr ebx, cmt   
76 [0x4c]:           movr cmt, ebx   
77 [0x4d]:           jne 125   
78 [0x4e]: line: 268 movi #0, ebx   
80 [0x50]:           smovr_2 ebx, fp+4   
81 [0x51]:           loadl ebx, fp+4   
82 [0x52]:           rstore ebx   
83 [0x53]:           movl 1   
84 [0x54]:           movn #0   
86 [0x56]:           sizeof ebx   
87 [0x57]:           loadval ecx   
88 [0x58]:           lt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 120   
92 [0x5c]: line: 269 movl 1   
93 [0x5d]:           pushobj   
94 [0x5e]:           loadl ebx, fp+4   
95 [0x5f]:           rstore ebx   
96 [0x60]:           call @3454 // <std#string_builder.operator[>   
97 [0x61]:           loadval ebx   
98 [0x62]:           rstore ebx   
99 [0x63]:           movl 0   
100 [0x64]:           movn #0   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+4   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           iaload ebx, adx   
108 [0x6c]:           loadval ecx   
109 [0x6d]:           tne ecx, ebx   
110 [0x6e]:           movr ebx, cmt   
111 [0x6f]:           movr cmt, ebx   
112 [0x70]:           jne 114   
113 [0x71]: line: 270 jmp @120   
114 [0x72]:           nop   
115 [0x73]:           loadl ebx, fp+4   
116 [0x74]:           movr egx, ebx   
117 [0x75]:           inc ebx   
118 [0x76]:           smovr_2 ebx, fp+4   
119 [0x77]:           jmp @81   
120 [0x78]: line: 273 movi #1, ebx   
122 [0x7a]:           return_val ebx   
123 [0x7b]:           ret   
124 [0x7c]:           jmp @129   
125 [0x7d]: line: 274 movi #0, ebx   
127 [0x7f]:           return_val ebx   
128 [0x80]:           ret   
129 [0x81]:           nop   
130 [0x82]:           loadl ebx, fp+3   
131 [0x83]:           movr egx, ebx   
132 [0x84]:           inc ebx   
133 [0x85]:           smovr_2 ebx, fp+3   
134 [0x86]:           jmp @33   
135 [0x87]: line: 277 movi #0, ebx   
137 [0x89]:           return_val ebx   
138 [0x8a]:           ret   


function: std#string_builder.ends_with[3461] params(1) in file: lib\support\0.2.805/string_builder.sharp:280:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 281 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           rstore ebx   
13 [0xd]:           movi #1, ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           add ecx, ebx -> ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           gte ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 282 movi #0, ebx   
24 [0x18]:           return_val ebx   
25 [0x19]:           ret   
26 [0x1a]:           nop   
27 [0x1b]: line: 284 movl 0   
28 [0x1c]:           movn #3   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           chklen adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movi #1, ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           add ecx, ebx -> ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movl 1   
41 [0x29]:           movn #0   
43 [0x2b]:           sizeof ebx   
44 [0x2c]:           loadval ecx   
45 [0x2d]:           sub ecx, ebx -> ebx   
46 [0x2e]:           smovr_2 ebx, fp+2   
47 [0x2f]:           loadl ebx, fp+2   
48 [0x30]:           rstore ebx   
49 [0x31]:           movl 0   
50 [0x32]:           movn #3   
52 [0x34]:           movi #0, adx   
54 [0x36]:           chklen adx   
55 [0x37]:           iaload ebx, adx   
56 [0x38]:           rstore ebx   
57 [0x39]:           movi #1, ebx   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           add ecx, ebx -> ebx   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           lt ecx, ebx   
63 [0x3f]:           movr ebx, cmt   
64 [0x40]:           movr cmt, ebx   
65 [0x41]:           jne 100   
66 [0x42]: line: 285 movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           pushobj   
70 [0x46]:           loadl ebx, fp+2   
71 [0x47]:           popobj2    
72 [0x48]:           movr adx, ebx   
73 [0x49]:           chklen adx   
74 [0x4a]:           iaload ebx, adx   
75 [0x4b]:           rstore ebx   
76 [0x4c]:           movl 1   
77 [0x4d]:           movn #0   
79 [0x4f]:           pushobj   
80 [0x50]:           loadl ebx, fp+2   
81 [0x51]:           popobj2    
82 [0x52]:           movr adx, ebx   
83 [0x53]:           chklen adx   
84 [0x54]:           iaload ebx, adx   
85 [0x55]:           loadval ecx   
86 [0x56]:           tne ecx, ebx   
87 [0x57]:           movr ebx, cmt   
88 [0x58]:           movr cmt, ebx   
89 [0x59]:           jne 94   
90 [0x5a]: line: 286 movi #0, ebx   
92 [0x5c]:           return_val ebx   
93 [0x5d]:           ret   
94 [0x5e]:           nop   
95 [0x5f]:           loadl ebx, fp+2   
96 [0x60]:           movr egx, ebx   
97 [0x61]:           inc ebx   
98 [0x62]:           smovr_2 ebx, fp+2   
99 [0x63]:           jmp @47   
100 [0x64]: line: 289 movi #1, ebx   
102 [0x66]:           return_val ebx   
103 [0x67]:           ret   


overload function: std#string_builder.operator+[3462] params(1) in file: lib\support\0.2.805/string_builder.sharp:292:8: note:  
		    def operator+(num : var) : string_builder {
		       ^

0 [0x0]: line: 293 new_class @70 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3431 // <std#string_builder.string_builder>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 294 movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           movl 0   
12 [0xc]:           pushobj   
13 [0xd]:           loadl ebx, fp+1   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @3464 // <std#string_builder.parse>   
16 [0x10]:           call @3468 // <std#string_builder.get_data>   
17 [0x11]:           call @3443 // <std#string_builder.append>   
18 [0x12]:           pop   
19 [0x13]: line: 295 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


function: std#string_builder.size[3463] params(0) in file: lib\support\0.2.805/string_builder.sharp:298:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 299 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #1, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           add ecx, ebx -> ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


function: std#string_builder.parse[3464] params(1) in file: lib\support\0.2.805/string_builder.sharp:302:8: note:  
		    def parse( number : var ) : string_builder
		       ^

0 [0x0]: line: 304 new_class @70 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           movg @70 // @std#string_builder   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           loadl ebx, fp+1   
11 [0xb]:           rstore ebx   
12 [0xc]:           movg @70 // @std#string_builder   
13 [0xd]:           movn #1   
15 [0xf]:           movi #0, adx   
17 [0x11]:           chklen adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @1885 // <std#__srt_global.snprintf>   
21 [0x15]:           call @3431 // <std#string_builder.string_builder>   
22 [0x16]:           popobj2    
23 [0x17]:           returnobj   
24 [0x18]:           ret   


overload function: std#string_builder.operator+=[3465] params(1) in file: lib\support\0.2.805/string_builder.sharp:307:8: note:  
		    def operator+=( num: var ) : string_builder
		       ^

0 [0x0]: line: 309 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 0   
3 [0x3]:           pushobj   
4 [0x4]:           loadl ebx, fp+1   
5 [0x5]:           rstore ebx   
6 [0x6]:           call @3464 // <std#string_builder.parse>   
7 [0x7]:           call @3468 // <std#string_builder.get_data>   
8 [0x8]:           call @3443 // <std#string_builder.append>   
9 [0x9]:           popobj2    
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#string_builder.operator+=[3466] params(1) in file: lib\support\0.2.805/string_builder.sharp:312:15: note:  
		    public def operator+=( obj: printable ) : string_builder
		              ^

0 [0x0]: line: 314 movl 1   
1 [0x1]:           pushobj   
2 [0x2]:           invoke_delegate 3355 { static=0, args=0 }   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+2   
6 [0x6]: line: 315 movl 2   
7 [0x7]:           pushobj   
8 [0x8]:           pushnull    
9 [0x9]:           itest ebx   
10 [0xa]:           not ebx, ebx   
11 [0xb]:           skne ebx // pc = 18   
12 [0xc]:           movl 2   
13 [0xd]:           pushobj   
14 [0xe]:           call @3397 // <std#string.get_data>   
15 [0xf]:           pushnull    
16 [0x10]:           itest ebx   
17 [0x11]:           not ebx, ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 30   
20 [0x14]: line: 316 movl 0   
21 [0x15]:           pushobj   
22 [0x16]:           movl 2   
23 [0x17]:           pushobj   
24 [0x18]:           call @3397 // <std#string.get_data>   
25 [0x19]:           call @3443 // <std#string_builder.append>   
26 [0x1a]:           popobj2    
27 [0x1b]:           returnobj   
28 [0x1c]:           ret   
29 [0x1d]:           jmp @37   
30 [0x1e]: line: 318 movl 0   
31 [0x1f]:           pushobj   
32 [0x20]:           newstr @32 // null   
33 [0x21]:           call @3443 // <std#string_builder.append>   
34 [0x22]:           popobj2    
35 [0x23]:           returnobj   
36 [0x24]:           ret   
37 [0x25]:           nop   


overload function: std#string_builder.operator+=[3467] params(1) in file: lib\support\0.2.805/string_builder.sharp:321:8: note:  
		    def operator+=( str: string ) : string_builder
		       ^

0 [0x0]: line: 323 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           call @3397 // <std#string.get_data>   
5 [0x5]:           call @3443 // <std#string_builder.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


function: std#string_builder.get_data[3468] params(0) in file: lib\support\0.2.805/string_builder.sharp:326:8: note:  
		    def get_data() : _int8[]{
		       ^

0 [0x0]: line: 327 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std#string_builder.operator+=[3469] params(1) in file: lib\support\0.2.805/string_builder.sharp:330:8: note:  
		    def operator+=( str: string_builder ) : string_builder
		       ^

0 [0x0]: line: 332 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @3443 // <std#string_builder.append>   
7 [0x7]:           popobj2    
8 [0x8]:           returnobj   
9 [0x9]:           ret   


overload function: std#string_builder.operator+=[3470] params(1) in file: lib\support\0.2.805/string_builder.sharp:335:8: note:  
		    def operator+=( str: _int8[] ) : string_builder
		       ^

0 [0x0]: line: 337 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           call @3443 // <std#string_builder.append>   
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: std#string_builder.substring[3471] params(2) in file: lib\support\0.2.805/string_builder.sharp:340:15: note:  
		    public def substring(startPos: var, endPos: var) : string_builder {
		              ^

0 [0x0]: line: 341 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #3   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           movi #1, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           add ecx, ebx -> ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           gte ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           skpe ebx // pc = 25   
18 [0x12]:           loadl ebx, fp+1   
19 [0x13]:           rstore ebx   
20 [0x14]:           movi #0, ebx   
22 [0x16]:           loadval ecx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 33   
27 [0x1b]: line: 342 movl 0   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+1   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           call @3472 // <std#string_builder.bounds_error>   
32 [0x20]:           throw    
33 [0x21]:           nop   
34 [0x22]: line: 343 loadl ebx, fp+2   
35 [0x23]:           rstore ebx   
36 [0x24]:           loadl ebx, fp+1   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 58   
42 [0x2a]: line: 344 new_class @5 // std#illegal_argument_exception   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @69 // std#string   
45 [0x2d]:           dup    
46 [0x2e]:           newstr @38 // endPos:    
47 [0x2f]:           call @3371 // <std#string.string>   
48 [0x30]:           loadl ebx, fp+2   
49 [0x31]:           rstore ebx   
50 [0x32]:           call @3403 // <std#string.operator+>   
51 [0x33]:           newstr @39 //  cannot be less than the startPos:    
52 [0x34]:           call @3383 // <std#string.operator+>   
53 [0x35]:           loadl ebx, fp+1   
54 [0x36]:           rstore ebx   
55 [0x37]:           call @3403 // <std#string.operator+>   
56 [0x38]:           call @1945 // <std#illegal_argument_exception.illegal_argument_exception>   
57 [0x39]:           throw    
58 [0x3a]:           nop   
59 [0x3b]: line: 348 new_class @70 // std#string_builder   
60 [0x3c]:           dup    
61 [0x3d]:           call @3474 // <std#string_builder.string_builder>   
62 [0x3e]:           popobj2    
63 [0x3f]:           smovr_3 fp+3   
64 [0x40]: line: 349 movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           pushobj   
68 [0x44]:           loadl ebx, fp+1   
69 [0x45]:           rstore ebx   
70 [0x46]:           loadl ebx, fp+2   
71 [0x47]:           rstore ebx   
72 [0x48]:           call @2080 // <std.io#__srt_global.copy>   
73 [0x49]:           movl 3   
74 [0x4a]:           movn #0   
76 [0x4c]:           popobj   
77 [0x4d]: line: 350 movl 3   
78 [0x4e]:           returnobj   
79 [0x4f]:           ret   


function: std#string_builder.bounds_error[3472] params(1) in file: lib\support\0.2.805/string_builder.sharp:353:16: note:  
		    private def bounds_error(pos : var) : bounds_except {
		               ^

0 [0x0]: line: 354 new_class @7 // std#out_of_bounds_exception   
1 [0x1]:           dup    
2 [0x2]:           new_class @69 // std#string   
3 [0x3]:           dup    
4 [0x4]:           newstr @36 // Index out of bounds exception at:    
5 [0x5]:           call @3371 // <std#string.string>   
6 [0x6]:           loadl ebx, fp+1   
7 [0x7]:           rstore ebx   
8 [0x8]:           call @3403 // <std#string.operator+>   
9 [0x9]:           newstr @37 //  with size of:    
10 [0xa]:           call @3383 // <std#string.operator+>   
11 [0xb]:           movl 0   
12 [0xc]:           movn #3   
14 [0xe]:           movi #0, adx   
16 [0x10]:           chklen adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #1, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           add ecx, ebx -> ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @3403 // <std#string.operator+>   
25 [0x19]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
26 [0x1a]:           popobj2    
27 [0x1b]:           returnobj   
28 [0x1c]:           ret   


function: std#string_builder.hash[3473] params(0) in file: lib\support\0.2.805/string_builder.sharp:357:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 358 movi #0, ebx   
2 [0x2]: line: 359 smovr_2 ebx, fp+1   
3 [0x3]: line: 360 movi #1, ebx   
5 [0x5]: line: 361 smovr_2 ebx, fp+2   
6 [0x6]: line: 362 istorel -1, fp+4   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           movl 5   
13 [0xd]:           popobj   
14 [0xe]:           iaddl 1, fp@4   
16 [0x10]:           movl 5   
17 [0x11]:           sizeof ecx   
18 [0x12]:           loadl ebx, fp+4   
19 [0x13]:           lt ebx, ecx   
20 [0x14]:           jne 61   
21 [0x15]:           iaload ecx, ebx   
22 [0x16]:           smovr_2 ecx, fp+3   
23 [0x17]: line: 363 loadl ebx, fp+1   
24 [0x18]:           rstore ebx   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #97, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           sub ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           movi #1, ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           add ecx, ebx -> ebx   
36 [0x24]:           rstore ebx   
37 [0x25]:           loadl ebx, fp+2   
38 [0x26]:           loadval ecx   
39 [0x27]:           mul ecx, ebx -> ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movi #1000000009, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           mod ecx, ebx -> ebx   
47 [0x2f]:           smovr_2 ebx, fp+1   
48 [0x30]: line: 364 loadl ebx, fp+2   
49 [0x31]:           rstore ebx   
50 [0x32]:           movi #31, ebx   
52 [0x34]:           loadval ecx   
53 [0x35]:           mul ecx, ebx -> ebx   
54 [0x36]:           rstore ebx   
55 [0x37]:           movi #1000000009, ebx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           mod ecx, ebx -> ebx   
59 [0x3b]:           smovr_2 ebx, fp+2   
60 [0x3c]:           jmp @14   
61 [0x3d]: line: 366 new_class @48 // std#long   
62 [0x3e]:           dup    
63 [0x3f]:           loadl ebx, fp+1   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @2405 // <std#long.long>   
66 [0x42]:           popobj2    
67 [0x43]:           returnobj   
68 [0x44]:           ret   


constructor: std#string_builder.string_builder[3474] params(0) in file: lib\support\0.2.805/string_builder.sharp:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movl 0   
4 [0x4]:         movn #1   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         movi #0, ebx   
12 [0xc]:         rstore ebx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #2   
16 [0x10]:         loadval ebx   
17 [0x11]:         movi #0, adx   
19 [0x13]:         rmov adx, ebx   
20 [0x14]:         movi #0, ebx   
22 [0x16]:         rstore ebx   
23 [0x17]:         movl 0   
24 [0x18]:         movn #3   
26 [0x1a]:         loadval ebx   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]: line: 15 movi #255, ebx   
32 [0x20]:          newarry ebx: 0   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          popobj   
37 [0x25]: line: 16 movi #255, ebx   
39 [0x27]:          rstore ebx   
40 [0x28]:          movl 0   
41 [0x29]:          movn #2   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]: line: 17 movi #-1, ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #3   
53 [0x35]:          loadval ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]:          ret   


function: std#time.nano_time[3475] params(0) in file: lib\support\0.2.805/time.sharp:9:15: note:  
		    static def nano_time() : var {
		              ^

0 [0x0]: line: 10 istorel 0, fp+0   
2 [0x2]: line: 12 int 0xb   : protected asm start
3 [0x3]:          smovr_2 bmr, fp+0   
4 [0x4]: line: 17 loadl ebx, fp+0   : protected asm end
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#time.get_os_time[3476] params(1) in file: lib\support\0.2.805/time.sharp:20:15: note:  
		    static def get_os_time(tr: time_request)
		              ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          call @1934 // <std#_enum_.get_ordinal>   
3 [0x3]:          call @2284 // <platform.kernel#vm.get_os_time>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#time.nano_to_micro[3477] params(1) in file: lib\support\0.2.805/time.sharp:23:15: note:  
		    static def nano_to_micro(nano: var) : var {
		              ^

0 [0x0]: line: 24 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #1000, ebx   
4 [0x4]:          loadval ecx   
5 [0x5]:          div ecx, ebx -> ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#time.nano_to_mills[3478] params(1) in file: lib\support\0.2.805/time.sharp:27:15: note:  
		    static def nano_to_mills(nano: var) : var {
		              ^

0 [0x0]: line: 28 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          call @3477 // <std#time.nano_to_micro>   
3 [0x3]:          loadval ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          movi #1000, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          div ecx, ebx -> ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std#time.nano_to_secs[3479] params(1) in file: lib\support\0.2.805/time.sharp:31:22: note:  
		    public static def nano_to_secs(nano: var) : var {
		                     ^

0 [0x0]: line: 32 loadl ebx, fp+0   
1 [0x1]:          rstore ebx   
2 [0x2]:          call @3478 // <std#time.nano_to_mills>   
3 [0x3]:          loadval ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          movi #1000, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          div ecx, ebx -> ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std#time.mills_time[3480] params(0) in file: lib\support\0.2.805/time.sharp:35:15: note:  
		    static def mills_time() : var {
		              ^

0 [0x0]: line: 36 call @3475 // <std#time.nano_time>   
1 [0x1]:          call @3478 // <std#time.nano_to_mills>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: std#time.sleep[3481] params(1) in file: lib\support\0.2.805/time.sharp:39:15: note:  
		    static def sleep(time: var) {
		              ^

0 [0x0]: line: 40 movg @73 // @std#time_unit   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          loadl ebx, fp+0   
5 [0x5]:          rstore ebx   
6 [0x6]:          call @3482 // <std#time.sleep>   
7 [0x7]:          ret   


function: std#time.sleep[3482] params(2) in file: lib\support\0.2.805/time.sharp:43:15: note:  
		    static def sleep(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 44 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movi #0, ebx   
4 [0x4]:          loadval ecx   
5 [0x5]:          lt ecx, ebx   
6 [0x6]:          movr ebx, cmt   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 20   
9 [0x9]: line: 45 new_class @19 // std#error   
10 [0xa]:          dup    
11 [0xb]:          new_class @69 // std#string   
12 [0xc]:          dup    
13 [0xd]:          newstr @40 // cannot sleep for negative time:    
14 [0xe]:          call @3371 // <std#string.string>   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @3403 // <std#string.operator+>   
18 [0x12]:          call @1987 // <std#error.error>   
19 [0x13]:          throw    
20 [0x14]:          nop   
21 [0x15]: line: 47 movl 0   
22 [0x16]:          pushobj   
23 [0x17]:          movg @73 // @std#time_unit   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          call @1931 // <std#_enum_.operator==>   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 42   
31 [0x1f]: line: 48 loadl ebx, fp+1   
32 [0x20]:          rstore ebx   
33 [0x21]:          movi #1000000, ebx   
35 [0x23]:          loadval ecx   
36 [0x24]:          mul ecx, ebx -> ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          call @3484 // <std#time.adjust_time>   
39 [0x27]:          loadval ebx   
40 [0x28]:          smovr_2 ebx, fp+1   
41 [0x29]:          jmp @78   
42 [0x2a]:          movl 0   
43 [0x2b]:          pushobj   
44 [0x2c]:          movg @73 // @std#time_unit   
45 [0x2d]:          movn #1   
47 [0x2f]:          pushobj   
48 [0x30]:          call @1931 // <std#_enum_.operator==>   
49 [0x31]:          loadval ebx   
50 [0x32]:          movr cmt, ebx   
51 [0x33]:          jne 63   
52 [0x34]: line: 50 loadl ebx, fp+1   
53 [0x35]:          rstore ebx   
54 [0x36]:          movi #1000, ebx   
56 [0x38]:          loadval ecx   
57 [0x39]:          mul ecx, ebx -> ebx   
58 [0x3a]:          rstore ebx   
59 [0x3b]:          call @3484 // <std#time.adjust_time>   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          smovr_2 ebx, fp+1   
62 [0x3e]:          jmp @78   
63 [0x3f]:          movl 0   
64 [0x40]:          pushobj   
65 [0x41]:          movg @73 // @std#time_unit   
66 [0x42]:          movn #2   
68 [0x44]:          pushobj   
69 [0x45]:          call @1931 // <std#_enum_.operator==>   
70 [0x46]:          loadval ebx   
71 [0x47]:          movr cmt, ebx   
72 [0x48]:          jne 78   
73 [0x49]: line: 52 loadl ebx, fp+1   
74 [0x4a]:          rstore ebx   
75 [0x4b]:          call @3484 // <std#time.adjust_time>   
76 [0x4c]:          loadval ebx   
77 [0x4d]:          smovr_2 ebx, fp+1   
78 [0x4e]:          nop   
79 [0x4f]: line: 55 loadl ebx, fp+1   : protected asm start
80 [0x50]:          sleep ebx   
81 [0x51]:          ret   : protected asm end


function: std#time.wait[3483] params(2) in file: lib\support\0.2.805/time.sharp:61:15: note:  
		    static def wait(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 62 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movg @71 // @std#time   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          tne ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 77   
14 [0xe]: line: 63 loadl ebx, fp+1   
15 [0xf]:          rstore ebx   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          loadval ecx   
19 [0x13]:          lt ecx, ebx   
20 [0x14]:          movr ebx, cmt   
21 [0x15]:          movr cmt, ebx   
22 [0x16]:          jne 34   
23 [0x17]: line: 64 new_class @19 // std#error   
24 [0x18]:          dup    
25 [0x19]:          new_class @69 // std#string   
26 [0x1a]:          dup    
27 [0x1b]:          newstr @40 // cannot sleep for negative time:    
28 [0x1c]:          call @3371 // <std#string.string>   
29 [0x1d]:          loadl ebx, fp+1   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          call @3403 // <std#string.operator+>   
32 [0x20]:          call @1987 // <std#error.error>   
33 [0x21]:          throw    
34 [0x22]:          nop   
35 [0x23]: line: 66 movl 0   
36 [0x24]:          pushobj   
37 [0x25]:          movg @73 // @std#time_unit   
38 [0x26]:          movn #0   
40 [0x28]:          pushobj   
41 [0x29]:          call @1931 // <std#_enum_.operator==>   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          movr cmt, ebx   
44 [0x2c]:          jne 49   
45 [0x2d]: line: 67 movi #1000, ebx   
47 [0x2f]:          mull ebx, fp@1   
48 [0x30]:          jmp @76   
49 [0x31]:          movl 0   
50 [0x32]:          pushobj   
51 [0x33]:          movg @73 // @std#time_unit   
52 [0x34]:          movn #2   
54 [0x36]:          pushobj   
55 [0x37]:          call @1931 // <std#_enum_.operator==>   
56 [0x38]:          loadval ebx   
57 [0x39]:          movr cmt, ebx   
58 [0x3a]:          jne 63   
59 [0x3b]: line: 69 movi #1000, ebx   
61 [0x3d]:          divl ebx, fp@1   
62 [0x3e]:          jmp @76   
63 [0x3f]:          movl 0   
64 [0x40]:          pushobj   
65 [0x41]:          movg @73 // @std#time_unit   
66 [0x42]:          movn #3   
68 [0x44]:          pushobj   
69 [0x45]:          call @1931 // <std#_enum_.operator==>   
70 [0x46]:          loadval ebx   
71 [0x47]:          movr cmt, ebx   
72 [0x48]:          jne 76   
73 [0x49]: line: 71 movi #1000000, ebx   
75 [0x4b]:          divl ebx, fp@1   
76 [0x4c]:          nop   
77 [0x4d]:          nop   
78 [0x4e]: line: 75 loadl adx, fp+1   : protected asm start
79 [0x4f]:          int 0x14   
80 [0x50]:          ret   : protected asm end


function: std#time.adjust_time[3484] params(1) in file: lib\support\0.2.805/time.sharp:87:23: note:  
		    private static def adjust_time(usec: var) : var {
		                      ^

0 [0x0]: line: 89 call @2263 // <platform#build.is_windows>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 12   
4 [0x4]: line: 90 loadl ebx, fp+0   
5 [0x5]:          rstore ebx   
6 [0x6]:          movi #1000, ebx   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   
12 [0xc]:          nop   
13 [0xd]: line: 93 loadl ebx, fp+0   
14 [0xe]:          return_val ebx   
15 [0xf]:          ret   


function: std#time.measure[3485] params(2) in file: lib\support\0.2.805/time.sharp:96:15: note:  
		    static def measure(tm_unit: time_unit, block: ()()) : var {
		              ^

0 [0x0]: line: 97 call @3475 // <std#time.nano_time>   
1 [0x1]:          loadval ebx   
2 [0x2]:          smovr_2 ebx, fp+2   
3 [0x3]:          istorel 0, fp+3   
5 [0x5]: line: 98 loadl ebx, fp+1   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadval ebx   
8 [0x8]:          calld ebx   
9 [0x9]: line: 99 call @3475 // <std#time.nano_time>   
10 [0xa]:          loadval ebx   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 101 movl 0   
13 [0xd]:           pushobj   
14 [0xe]:           movg @73 // @std#time_unit   
15 [0xf]:           movn #0   
17 [0x11]:           pushobj   
18 [0x12]:           call @1931 // <std#_enum_.operator==>   
19 [0x13]:           loadval ebx   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 33   
22 [0x16]: line: 103 loadl ebx, fp+2   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @3479 // <std#time.nano_to_secs>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           smovr_2 ebx, fp+2   
27 [0x1b]: line: 104 loadl ebx, fp+3   
28 [0x1c]:           rstore ebx   
29 [0x1d]:           call @3479 // <std#time.nano_to_secs>   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           smovr_2 ebx, fp+3   
32 [0x20]:           jmp @74   
33 [0x21]:           movl 0   
34 [0x22]:           pushobj   
35 [0x23]:           movg @73 // @std#time_unit   
36 [0x24]:           movn #1   
38 [0x26]:           pushobj   
39 [0x27]:           call @1931 // <std#_enum_.operator==>   
40 [0x28]:           loadval ebx   
41 [0x29]:           movr cmt, ebx   
42 [0x2a]:           jne 54   
43 [0x2b]: line: 107 loadl ebx, fp+2   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           call @3478 // <std#time.nano_to_mills>   
46 [0x2e]:           loadval ebx   
47 [0x2f]:           smovr_2 ebx, fp+2   
48 [0x30]: line: 108 loadl ebx, fp+3   
49 [0x31]:           rstore ebx   
50 [0x32]:           call @3478 // <std#time.nano_to_mills>   
51 [0x33]:           loadval ebx   
52 [0x34]:           smovr_2 ebx, fp+3   
53 [0x35]:           jmp @74   
54 [0x36]:           movl 0   
55 [0x37]:           pushobj   
56 [0x38]:           movg @73 // @std#time_unit   
57 [0x39]:           movn #2   
59 [0x3b]:           pushobj   
60 [0x3c]:           call @1931 // <std#_enum_.operator==>   
61 [0x3d]:           loadval ebx   
62 [0x3e]:           movr cmt, ebx   
63 [0x3f]:           jne 74   
64 [0x40]: line: 111 loadl ebx, fp+2   
65 [0x41]:           rstore ebx   
66 [0x42]:           call @3477 // <std#time.nano_to_micro>   
67 [0x43]:           loadval ebx   
68 [0x44]:           smovr_2 ebx, fp+2   
69 [0x45]: line: 112 loadl ebx, fp+3   
70 [0x46]:           rstore ebx   
71 [0x47]:           call @3477 // <std#time.nano_to_micro>   
72 [0x48]:           loadval ebx   
73 [0x49]:           smovr_2 ebx, fp+3   
74 [0x4a]:           nop   
75 [0x4b]: line: 116 loadl ebx, fp+3   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           loadl ebx, fp+2   
78 [0x4e]:           loadval ecx   
79 [0x4f]:           sub ecx, ebx -> ebx   
80 [0x50]:           return_val ebx   
81 [0x51]:           ret   


constructor: std#time.time[3486] params(0) in file: lib\support\0.2.805/time.sharp:6:6: note:  
		class time {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


std#unique.hash[3487] params(0) in file: lib\support\0.2.805/unique.sharp:11:8: note:  
		    def hash() : long;
		       ^



std#unique.guid[3488] params(0) in file: lib\support\0.2.805/unique.sharp:12:8: note:  
		    def guid() : long;
		       ^



constructor: std#unique.unique[3489] params(0) in file: lib\support\0.2.805/unique.sharp:10:10: note:  
		interface unique {
		         ^

0 [0x0]:         ret   


std#loopable<std#string>.get_elements[3490] params(0) in file: lib\support\0.2.805/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<std#string>.loopable[3491] params(0) in file: lib\support\0.2.805/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#list<std#string>.list[3492] params(0) in file: lib\support\0.2.805/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 14 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std#string[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std#string>.list[3493] params(1) in file: lib\support\0.2.805/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 18 loadl ebx, fp+1   
3 [0x3]:          new_classarray ebx  // std#string[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<std#string>.list[3494] params(1) in file: lib\support\0.2.805/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 22 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @3505 // <std#list<std#string>.add_all>   
7 [0x7]:          ret   


function: std#list<std#string>.empty[3495] params(0) in file: lib\support\0.2.805/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #0, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#list<std#string>.set_compact[3496] params(1) in file: lib\support\0.2.805/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #2   
5 [0x5]:          loadval ebx   
6 [0x6]:          movi #0, adx   
8 [0x8]:          rmov adx, ebx   
9 [0x9]:          ret   


function: std#list<std#string>.get_elements[3497] params(0) in file: lib\support\0.2.805/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #0, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 20   
15 [0xf]:          pushnull    
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   
19 [0x13]:          jmp @39   
20 [0x14]: line: 33 movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movi #0, ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          chklen adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          rstore ebx   
35 [0x23]:          call @2078 // <std.io#__srt_global.copy>   
36 [0x24]:          popobj2    
37 [0x25]:          returnobj   
38 [0x26]:          ret   
39 [0x27]:          nop   


overload function: std#list<std#string>.operator[[3498] params(1) in file: lib\support\0.2.805/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 38 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3518 // <std#list<std#string>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 39 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          movnd adx   
41 [0x29]:          returnobj   
42 [0x2a]:          ret   


function: std#list<std#string>.at[3499] params(1) in file: lib\support\0.2.805/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 44 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3518 // <std#list<std#string>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 45 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          movnd adx   
41 [0x29]:          returnobj   
42 [0x2a]:          ret   


function: std#list<std#string>.last[3500] params(0) in file: lib\support\0.2.805/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          sub ecx, ebx -> ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3499 // <std#list<std#string>.at>   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#list<std#string>.put[3501] params(2) in file: lib\support\0.2.805/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 54 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3518 // <std#list<std#string>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 56 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          movnd adx   
41 [0x29]:          smovr_3 fp+3   
42 [0x2a]: line: 57 movl 2   
43 [0x2b]:          pushobj   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          pushobj   
48 [0x30]:          loadl ebx, fp+1   
49 [0x31]:          popobj2    
50 [0x32]:          movr adx, ebx   
51 [0x33]:          chklen adx   
52 [0x34]:          movnd adx   
53 [0x35]:          popobj   
54 [0x36]: line: 58 movl 3   
55 [0x37]:          returnobj   
56 [0x38]:          ret   


function: std#list<std#string>.expand[3502] params(0) in file: lib\support\0.2.805/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 25   
9 [0x9]: line: 63 movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          pushobj   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          sizeof ebx   
17 [0x11]:          rstore ebx   
18 [0x12]:          movi #128, ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          add ecx, ebx -> ebx   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @2058 // <std.io#__srt_global.realloc>   
24 [0x18]:          jmp @52   
25 [0x19]: line: 65 movl 0   
26 [0x1a]:          movn #1   
28 [0x1c]:          pushobj   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          sizeof ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          sizeof ebx   
38 [0x26]:          rstore ebx   
39 [0x27]:          movi #4, ebx   
41 [0x29]:          loadval ecx   
42 [0x2a]:          shr ecx, ebx -> ebx   
43 [0x2b]:          loadval ecx   
44 [0x2c]:          add ecx, ebx -> ebx   
45 [0x2d]:          rstore ebx   
46 [0x2e]:          movi #128, ebx   
48 [0x30]:          loadval ecx   
49 [0x31]:          add ecx, ebx -> ebx   
50 [0x32]:          rstore ebx   
51 [0x33]:          call @2058 // <std.io#__srt_global.realloc>   
52 [0x34]:          nop   
53 [0x35]:          ret   


function: std#list<std#string>.clear[3503] params(0) in file: lib\support\0.2.805/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std#string[]   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 70 movi #0, ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          loadval ebx   
14 [0xe]:          movi #0, adx   
16 [0x10]:          rmov adx, ebx   
17 [0x11]:          ret   


function: std#list<std#string>.add_all[3504] params(1) in file: lib\support\0.2.805/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          movi #0, ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          chklen adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2078 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #69, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 75 movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          chklen adx   
31 [0x1f]:          iaload ebx, adx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          loadval ebx   
37 [0x25]:          movi #0, adx   
39 [0x27]:          rmov adx, ebx   
40 [0x28]:          ret   


function: std#list<std#string>.add_all[3505] params(1) in file: lib\support\0.2.805/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          pushnull    
3 [0x3]:          itest ebx   
4 [0x4]:          not ebx, ebx   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 36   
7 [0x7]: line: 80 movl 1   
8 [0x8]:          pushobj   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2078 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #69, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 81 movl 1   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          loadval ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          jmp @53   
36 [0x24]: line: 83 movi #0, ebx   
38 [0x26]:          rstore ebx   
39 [0x27]:          movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          rmov adx, ebx   
46 [0x2e]: line: 84 movi #10, ebx   
48 [0x30]:          new_classarray ebx  // std#string[]   
49 [0x31]:          movl 0   
50 [0x32]:          movn #1   
52 [0x34]:          popobj   
53 [0x35]:          nop   
54 [0x36]:          ret   


function: std#list<std#string>.add[3506] params(1) in file: lib\support\0.2.805/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          sizeof ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          gte ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 20   
17 [0x11]: line: 90 movl 0   
18 [0x12]:          pushobj   
19 [0x13]:          call @3502 // <std#list<std#string>.expand>   
20 [0x14]:          nop   
21 [0x15]: line: 91 movl 1   
22 [0x16]:          pushobj   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          chklen adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          inc ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]:          ret   


function: std#list<std#string>.indexof[3507] params(1) in file: lib\support\0.2.805/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movi #0, ebx   
2 [0x2]:          smovr_2 ebx, fp+2   
3 [0x3]:          loadl ebx, fp+2   
4 [0x4]:          rstore ebx   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          chklen adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          loadval ecx   
13 [0xd]:          lt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 42   
17 [0x11]: line: 96 movl 1   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          pushobj   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          popobj2    
25 [0x19]:          movr adx, ebx   
26 [0x1a]:          chklen adx   
27 [0x1b]:          movnd adx   
28 [0x1c]:          pushobj   
29 [0x1d]:          call @3389 // <std#string.operator==>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 36   
33 [0x21]: line: 97 loadl ebx, fp+2   
34 [0x22]:          return_val ebx   
35 [0x23]:          ret   
36 [0x24]:          nop   
37 [0x25]:          loadl ebx, fp+2   
38 [0x26]:          movr egx, ebx   
39 [0x27]:          inc ebx   
40 [0x28]:          smovr_2 ebx, fp+2   
41 [0x29]:          jmp @3   
42 [0x2a]: line: 101 movi #-1, ebx   
44 [0x2c]:           return_val ebx   
45 [0x2d]:           ret   


function: std#list<std#string>.pop_back[3508] params(0) in file: lib\support\0.2.805/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #0, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           gt ecx, ebx   
12 [0xc]:           movr ebx, cmt   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 41   
15 [0xf]: line: 106 movl 1   
16 [0x10]:           del   
17 [0x11]: line: 107 movl 1   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           movi #0, adx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           movr egx, ebx   
31 [0x1f]:           dec ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           movr ebx, egx   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           popobj   
41 [0x29]:           nop   
42 [0x2a]:           ret   


function: std#list<std#string>.size[3509] params(0) in file: lib\support\0.2.805/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std#list<std#string>.insert[3510] params(2) in file: lib\support\0.2.805/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 20   
13 [0xd]:           loadl ebx, fp+1   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 31   
22 [0x16]: line: 115 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           movl 0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+1   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           call @3518 // <std#list<std#string>.out_of_bounds_msg>   
29 [0x1d]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 117 movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           movi #0, adx   
37 [0x25]:           chklen adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #0, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           test ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 53   
47 [0x2f]: line: 118 movl 0   
48 [0x30]:           pushobj   
49 [0x31]:           movl 2   
50 [0x32]:           pushobj   
51 [0x33]:           call @3506 // <std#list<std#string>.add>   
52 [0x34]:           jmp @149   
53 [0x35]: line: 120 movl 0   
54 [0x36]:           movn #0   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           chklen adx   
59 [0x3b]:           iaload ebx, adx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movl 0   
62 [0x3e]:           movn #1   
64 [0x40]:           sizeof ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           gte ecx, ebx   
67 [0x43]:           movr ebx, cmt   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 73   
70 [0x46]: line: 121 movl 0   
71 [0x47]:           pushobj   
72 [0x48]:           call @3502 // <std#list<std#string>.expand>   
73 [0x49]:           nop   
74 [0x4a]: line: 122 movl 0   
75 [0x4b]:           movn #0   
77 [0x4d]:           movi #0, adx   
79 [0x4f]:           chklen adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           movr egx, ebx   
82 [0x52]:           inc ebx   
83 [0x53]:           movi #0, adx   
85 [0x55]:           rmov adx, ebx   
86 [0x56]: line: 123 movl 0   
87 [0x57]:           movn #0   
89 [0x59]:           movi #0, adx   
91 [0x5b]:           chklen adx   
92 [0x5c]:           iaload ebx, adx   
93 [0x5d]:           rstore ebx   
94 [0x5e]:           movi #1, ebx   
96 [0x60]:           loadval ecx   
97 [0x61]:           sub ecx, ebx -> ebx   
98 [0x62]:           smovr_2 ebx, fp+3   
99 [0x63]:           loadl ebx, fp+3   
100 [0x64]:           rstore ebx   
101 [0x65]:           loadl ebx, fp+1   
102 [0x66]:           loadval ecx   
103 [0x67]:           gt ecx, ebx   
104 [0x68]:           movr ebx, cmt   
105 [0x69]:           movr cmt, ebx   
106 [0x6a]:           jne 137   
107 [0x6b]: line: 124 movl 0   
108 [0x6c]:           movn #1   
110 [0x6e]:           pushobj   
111 [0x6f]:           loadl ebx, fp+3   
112 [0x70]:           rstore ebx   
113 [0x71]:           movi #1, ebx   
115 [0x73]:           loadval ecx   
116 [0x74]:           sub ecx, ebx -> ebx   
117 [0x75]:           popobj2    
118 [0x76]:           movr adx, ebx   
119 [0x77]:           chklen adx   
120 [0x78]:           movnd adx   
121 [0x79]:           pushobj   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+3   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           loadl ebx, fp+3   
133 [0x85]:           movr egx, ebx   
134 [0x86]:           dec ebx   
135 [0x87]:           smovr_2 ebx, fp+3   
136 [0x88]:           jmp @99   
137 [0x89]: line: 125 movl 2   
138 [0x8a]:           pushobj   
139 [0x8b]:           movl 0   
140 [0x8c]:           movn #1   
142 [0x8e]:           pushobj   
143 [0x8f]:           loadl ebx, fp+1   
144 [0x90]:           popobj2    
145 [0x91]:           movr adx, ebx   
146 [0x92]:           chklen adx   
147 [0x93]:           movnd adx   
148 [0x94]:           popobj   
149 [0x95]:           nop   
150 [0x96]:           ret   


function: std#list<std#string>.find[3511] params(2) in file: lib\support\0.2.805/list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 53   
17 [0x11]: line: 131 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 1   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 47   
36 [0x24]: line: 132 movl 0   
37 [0x25]:           movn #1   
39 [0x27]:           pushobj   
40 [0x28]:           loadl ebx, fp+3   
41 [0x29]:           popobj2    
42 [0x2a]:           movr adx, ebx   
43 [0x2b]:           chklen adx   
44 [0x2c]:           movnd adx   
45 [0x2d]:           returnobj   
46 [0x2e]:           ret   
47 [0x2f]:           nop   
48 [0x30]:           loadl ebx, fp+3   
49 [0x31]:           movr egx, ebx   
50 [0x32]:           inc ebx   
51 [0x33]:           smovr_2 ebx, fp+3   
52 [0x34]:           jmp @3   
53 [0x35]: line: 136 movl 4   
54 [0x36]:           del   
55 [0x37]: line: 137 movl 4   
56 [0x38]:           returnobj   
57 [0x39]:           ret   


function: std#list<std#string>.remove[3512] params(1) in file: lib\support\0.2.805/list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+2   
3 [0x3]:           loadl ebx, fp+2   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 45   
17 [0x11]: line: 142 movl 1   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           call @3389 // <std#string.operator==>   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 39   
33 [0x21]: line: 143 movl 0   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+2   
36 [0x24]:           rstore ebx   
37 [0x25]:           call @3515 // <std#list<std#string>.remove_at>   
38 [0x26]: line: 144 ret   
39 [0x27]:           nop   
40 [0x28]:           loadl ebx, fp+2   
41 [0x29]:           movr egx, ebx   
42 [0x2a]:           inc ebx   
43 [0x2b]:           smovr_2 ebx, fp+2   
44 [0x2c]:           jmp @3   
45 [0x2d]:           ret   


function: std#list<std#string>.remove[3513] params(2) in file: lib\support\0.2.805/list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 48   
17 [0x11]: line: 151 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           movnd adx   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 42   
36 [0x24]: line: 152 movl 0   
37 [0x25]:           pushobj   
38 [0x26]:           loadl ebx, fp+3   
39 [0x27]:           rstore ebx   
40 [0x28]:           call @3515 // <std#list<std#string>.remove_at>   
41 [0x29]: line: 153 ret   
42 [0x2a]:           nop   
43 [0x2b]:           loadl ebx, fp+3   
44 [0x2c]:           movr egx, ebx   
45 [0x2d]:           inc ebx   
46 [0x2e]:           smovr_2 ebx, fp+3   
47 [0x2f]:           jmp @3   
48 [0x30]:           ret   


function: std#list<std#string>.replace[3514] params(2) in file: lib\support\0.2.805/list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 55   
17 [0x11]: line: 160 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           movnd adx   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 49   
36 [0x24]: line: 161 movl 1   
37 [0x25]:           pushobj   
38 [0x26]:           movl 0   
39 [0x27]:           movn #1   
41 [0x29]:           pushobj   
42 [0x2a]:           loadl ebx, fp+3   
43 [0x2b]:           popobj2    
44 [0x2c]:           movr adx, ebx   
45 [0x2d]:           chklen adx   
46 [0x2e]:           movnd adx   
47 [0x2f]:           popobj   
48 [0x30]: line: 162 ret   
49 [0x31]:           nop   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           movr egx, ebx   
52 [0x34]:           inc ebx   
53 [0x35]:           smovr_2 ebx, fp+3   
54 [0x36]:           jmp @3   
55 [0x37]:           ret   


function: std#list<std#string>.remove_at[3515] params(1) in file: lib\support\0.2.805/list.sharp:167:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 168 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 20   
13 [0xd]:           loadl ebx, fp+1   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 31   
22 [0x16]: line: 169 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           movl 0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+1   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           call @3518 // <std#list<std#string>.out_of_bounds_msg>   
29 [0x1d]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 171 movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           movi #0, adx   
37 [0x25]:           chklen adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           rstore ebx   
40 [0x28]:           loadl ebx, fp+1   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           rstore ebx   
44 [0x2c]:           movi #1, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           sub ecx, ebx -> ebx   
48 [0x30]:           smovr_2 ebx, fp+2   
49 [0x31]: line: 172 loadl ebx, fp+2   
50 [0x32]:           rstore ebx   
51 [0x33]:           movi #0, ebx   
53 [0x35]:           loadval ecx   
54 [0x36]:           gt ecx, ebx   
55 [0x37]:           movr ebx, cmt   
56 [0x38]:           movr cmt, ebx   
57 [0x39]:           jne 84   
58 [0x3a]: line: 173 movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           movl 0   
63 [0x3f]:           movn #1   
65 [0x41]:           pushobj   
66 [0x42]:           loadl ebx, fp+1   
67 [0x43]:           rstore ebx   
68 [0x44]:           loadl ebx, fp+1   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #1, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movl 0   
76 [0x4c]:           movn #0   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           chklen adx   
81 [0x51]:           iaload ebx, adx   
82 [0x52]:           rstore ebx   
83 [0x53]:           call @2068 // <std.io#__srt_global.memcopy>   
84 [0x54]:           nop   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           pushobj   
87 [0x57]:           call @3508 // <std#list<std#string>.pop_back>   
88 [0x58]:           ret   


function: std#list<std#string>.indexof[3516] params(2) in file: lib\support\0.2.805/list.sharp:178:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 179 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 45   
17 [0x11]: line: 180 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 1   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 39   
36 [0x24]: line: 181 loadl ebx, fp+3   
37 [0x25]:           return_val ebx   
38 [0x26]:           ret   
39 [0x27]:           nop   
40 [0x28]:           loadl ebx, fp+3   
41 [0x29]:           movr egx, ebx   
42 [0x2a]:           inc ebx   
43 [0x2b]:           smovr_2 ebx, fp+3   
44 [0x2c]:           jmp @3   
45 [0x2d]: line: 185 movi #-1, ebx   
47 [0x2f]:           return_val ebx   
48 [0x30]:           ret   


function: std#list<std#string>.to_string[3517] params(0) in file: lib\support\0.2.805/list.sharp:188:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 189 new_class @70 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           call @3474 // <std#string_builder.string_builder>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 191 movl 1   
6 [0x6]:           pushobj   
7 [0x7]:           newstr @100 // [    
8 [0x8]:           call @3470 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 192 movi #0, ebx   
12 [0xc]:           smovr_2 ebx, fp+2   
13 [0xd]:           loadl ebx, fp+2   
14 [0xe]:           rstore ebx   
15 [0xf]:           movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           movi #0, adx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           loadval ecx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 71   
27 [0x1b]: line: 193 movl 1   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #1   
32 [0x20]:           pushobj   
33 [0x21]:           loadl ebx, fp+2   
34 [0x22]:           popobj2    
35 [0x23]:           movr adx, ebx   
36 [0x24]:           chklen adx   
37 [0x25]:           movnd adx   
38 [0x26]:           pushobj   
39 [0x27]:           call @3467 // <std#string_builder.operator+=>   
40 [0x28]:           pop   
41 [0x29]: line: 195 loadl ebx, fp+2   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movi #1, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           add ecx, ebx -> ebx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movl 0   
49 [0x31]:           movn #0   
51 [0x33]:           movi #0, adx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           loadval ecx   
56 [0x38]:           lt ecx, ebx   
57 [0x39]:           movr ebx, cmt   
58 [0x3a]:           movr cmt, ebx   
59 [0x3b]:           jne 65   
60 [0x3c]: line: 196 movl 1   
61 [0x3d]:           pushobj   
62 [0x3e]:           newstr @101 // ,    
63 [0x3f]:           call @3470 // <std#string_builder.operator+=>   
64 [0x40]:           pop   
65 [0x41]:           nop   
66 [0x42]:           loadl ebx, fp+2   
67 [0x43]:           movr egx, ebx   
68 [0x44]:           inc ebx   
69 [0x45]:           smovr_2 ebx, fp+2   
70 [0x46]:           jmp @13   
71 [0x47]: line: 200 movl 1   
72 [0x48]:           pushobj   
73 [0x49]:           newstr @102 //  ]   
74 [0x4a]:           call @3470 // <std#string_builder.operator+=>   
75 [0x4b]:           pop   
76 [0x4c]: line: 201 movl 1   
77 [0x4d]:           pushobj   
78 [0x4e]:           call @3447 // <std#string_builder.to_string>   
79 [0x4f]:           popobj2    
80 [0x50]:           returnobj   
81 [0x51]:           ret   


function: std#list<std#string>.out_of_bounds_msg[3518] params(1) in file: lib\support\0.2.805/list.sharp:204:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 205 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @103 // Index:    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           loadl ebx, fp+1   
5 [0x5]:           rstore ebx   
6 [0x6]:           call @3403 // <std#string.operator+>   
7 [0x7]:           newstr @104 // , size:    
8 [0x8]:           call @3383 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @3403 // <std#string.operator+>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   


constructor: std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable[3519] params(1) in file: lib\support\0.2.805/hashtable.sharp:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #96, ebx   
11 [0xb]:         rstore ebx   
12 [0xc]:         movl 0   
13 [0xd]:         movn #2   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         pushl 0   
20 [0x14]:         call @2262 // <std#_object_._object_>   
21 [0x15]: line: 11 loadl ebx, fp+1   
22 [0x16]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          popobj   
27 [0x1b]: line: 12 movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          sizeof ebx   
31 [0x1f]:          rstore ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          movi #0, adx   
37 [0x25]:          chklen adx   
38 [0x26]:          iaload ebx, adx   
39 [0x27]:          loadval ecx   
40 [0x28]:          mul ecx, ebx -> ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #2   
45 [0x2d]:          loadval ebx   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          rmov adx, ebx   
49 [0x31]:          ret   


constructor: std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable[3520] params(0) in file: lib\support\0.2.805/hashtable.sharp:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #96, ebx   
11 [0xb]:         rstore ebx   
12 [0xc]:         movl 0   
13 [0xd]:         movn #2   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         pushl 0   
20 [0x14]:         call @2262 // <std#_object_._object_>   
21 [0x15]: line: 16 movi #128, ebx   
23 [0x17]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          popobj   
28 [0x1c]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.set_threshold[3521] params(1) in file: lib\support\0.2.805/hashtable.sharp:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 21 loadl ebx, fp+1   
3 [0x3]:          rstore ebx   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          loadval ebx   
8 [0x8]:          movi #0, adx   
10 [0xa]:          rmov adx, ebx   
11 [0xb]: line: 22 movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          sizeof ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          loadl ebx, fp+1   
17 [0x11]:          loadval ecx   
18 [0x12]:          mul ecx, ebx -> ebx   
19 [0x13]:          rstore ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #2   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          _ulck   
29 [0x1d]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.hash[3522] params(1) in file: lib\support\0.2.805/hashtable.sharp:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]: line: 27 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          call @2183 // <std.io#thread.hash>   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          sizeof ebx   
7 [0x7]:          rstore ebx   
8 [0x8]:          call @300 // <std#integer<_int64>.operator%>   
9 [0x9]:          loadval ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.resize[3523] params(0) in file: lib\support\0.2.805/hashtable.sharp:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
17 [0x11]:          movl 0   
18 [0x12]:          movn #0   
20 [0x14]:          popobj   
21 [0x15]: line: 33 movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          sizeof ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          chklen adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          rstore ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #2   
39 [0x27]:          loadval ebx   
40 [0x28]:          movi #0, adx   
42 [0x2a]:          rmov adx, ebx   
43 [0x2b]: line: 34 istorel -1, fp+3   
45 [0x2d]:          movl 1   
46 [0x2e]:          pushobj   
47 [0x2f]:          movl 4   
48 [0x30]:          popobj   
49 [0x31]:          iaddl 1, fp@3   
51 [0x33]:          movl 4   
52 [0x34]:          sizeof ecx   
53 [0x35]:          loadl ebx, fp+3   
54 [0x36]:          lt ebx, ecx   
55 [0x37]:          jne 110   
56 [0x38]:          movnd ebx   
57 [0x39]:          pushobj   
58 [0x3a]:          movl 2   
59 [0x3b]:          popobj   
60 [0x3c]: line: 36 movl 2   
61 [0x3d]:          pushobj   
62 [0x3e]:          pushnull    
63 [0x3f]:          itest ebx   
64 [0x40]:          not ebx, ebx   
65 [0x41]:          movr cmt, ebx   
66 [0x42]:          jne 109   
67 [0x43]: line: 38 movl 2   
68 [0x44]:          movn #2   
70 [0x46]:          smovr_3 fp+5   
71 [0x47]: line: 39 movl 0   
72 [0x48]:          pushobj   
73 [0x49]:          movl 2   
74 [0x4a]:          movn #0   
76 [0x4c]:          pushobj   
77 [0x4d]:          call @3522 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
78 [0x4e]:          loadval ebx   
79 [0x4f]:          smovr_2 ebx, fp+6   
80 [0x50]: line: 40 movl 0   
81 [0x51]:          movn #0   
83 [0x53]:          pushobj   
84 [0x54]:          loadl ebx, fp+6   
85 [0x55]:          popobj2    
86 [0x56]:          movr adx, ebx   
87 [0x57]:          chklen adx   
88 [0x58]:          movnd adx   
89 [0x59]:          pushobj   
90 [0x5a]:          movl 2   
91 [0x5b]:          movn #2   
93 [0x5d]:          popobj   
94 [0x5e]: line: 41 movl 2   
95 [0x5f]:          pushobj   
96 [0x60]:          movl 0   
97 [0x61]:          movn #0   
99 [0x63]:          pushobj   
100 [0x64]:          loadl ebx, fp+6   
101 [0x65]:          popobj2    
102 [0x66]:          movr adx, ebx   
103 [0x67]:          chklen adx   
104 [0x68]:          movnd adx   
105 [0x69]:          popobj   
106 [0x6a]: line: 42 movl 5   
107 [0x6b]:          smovr_3 fp+2   
108 [0x6c]:          jmp @60   
109 [0x6d]:          jmp @49   
110 [0x6e]: line: 46 pushnull    
111 [0x6f]:          popobj2    
112 [0x70]:          smovr_3 fp+1   
113 [0x71]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.at[3524] params(1) in file: lib\support\0.2.805/hashtable.sharp:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 51 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @3522 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
7 [0x7]:          loadval ebx   
8 [0x8]:          smovr_2 ebx, fp+2   
9 [0x9]: line: 52 movi #-1, ebx   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 53 movl 4   
13 [0xd]:          del   
14 [0xe]: line: 55 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          loadl ebx, fp+2   
19 [0x13]:          popobj2    
20 [0x14]:          movr adx, ebx   
21 [0x15]:          chklen adx   
22 [0x16]:          movnd adx   
23 [0x17]:          pushobj   
24 [0x18]:          pushnull    
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 34   
28 [0x1c]: line: 56 movl 4   
29 [0x1d]:          returnobj   
30 [0x1e]:          movl 0   
31 [0x1f]:          _ulck   
32 [0x20]:          ret   
33 [0x21]:          jmp @93   
34 [0x22]: line: 58 movl 0   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          loadl ebx, fp+2   
39 [0x27]:          popobj2    
40 [0x28]:          movr adx, ebx   
41 [0x29]:          chklen adx   
42 [0x2a]:          movnd adx   
43 [0x2b]:          smovr_3 fp+5   
44 [0x2c]: line: 59 movl 5   
45 [0x2d]:          pushobj   
46 [0x2e]:          pushnull    
47 [0x2f]:          itest ebx   
48 [0x30]:          not ebx, ebx   
49 [0x31]:          skne ebx // pc = 66   
50 [0x32]:          movl 5   
51 [0x33]:          movn #0   
53 [0x35]:          pushobj   
54 [0x36]:          movl 1   
55 [0x37]:          pushobj   
56 [0x38]:          itest ebx   
57 [0x39]:          not ebx, ebx   
58 [0x3a]:          skne ebx // pc = 66   
59 [0x3b]:          movl 5   
60 [0x3c]:          movn #2   
62 [0x3e]:          pushobj   
63 [0x3f]:          pushnull    
64 [0x40]:          itest ebx   
65 [0x41]:          not ebx, ebx   
66 [0x42]:          movr cmt, ebx   
67 [0x43]:          jne 73   
68 [0x44]: line: 61 movl 5   
69 [0x45]:          movn #2   
71 [0x47]:          smovr_3 fp+5   
72 [0x48]:          jmp @44   
73 [0x49]: line: 63 movl 5   
74 [0x4a]:          pushobj   
75 [0x4b]:          pushnull    
76 [0x4c]:          itest ebx   
77 [0x4d]:          movr cmt, ebx   
78 [0x4e]:          jne 85   
79 [0x4f]: line: 64 movl 4   
80 [0x50]:          returnobj   
81 [0x51]:          movl 0   
82 [0x52]:          _ulck   
83 [0x53]:          ret   
84 [0x54]:          jmp @92   
85 [0x55]: line: 66 movl 5   
86 [0x56]:          movn #1   
88 [0x58]:          returnobj   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   
91 [0x5b]:          ret   
92 [0x5c]:          nop   
93 [0x5d]:          nop   
94 [0x5e]:          movl 0   
95 [0x5f]:          _ulck   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.put[3525] params(2) in file: lib\support\0.2.805/hashtable.sharp:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @3522 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
7 [0x7]:          loadval ebx   
8 [0x8]:          smovr_2 ebx, fp+3   
9 [0x9]: line: 75 movl 4   
10 [0xa]:          del   
11 [0xb]: line: 76 movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          loadl ebx, fp+3   
16 [0x10]:          popobj2    
17 [0x11]:          movr adx, ebx   
18 [0x12]:          chklen adx   
19 [0x13]:          movnd adx   
20 [0x14]:          smovr_3 fp+5   
21 [0x15]: line: 78 movl 5   
22 [0x16]:          pushobj   
23 [0x17]:          pushnull    
24 [0x18]:          itest ebx   
25 [0x19]:          not ebx, ebx   
26 [0x1a]:          skne ebx // pc = 35   
27 [0x1b]:          movl 5   
28 [0x1c]:          movn #0   
30 [0x1e]:          pushobj   
31 [0x1f]:          movl 1   
32 [0x20]:          pushobj   
33 [0x21]:          itest ebx   
34 [0x22]:          not ebx, ebx   
35 [0x23]:          movr cmt, ebx   
36 [0x24]:          jne 44   
37 [0x25]: line: 79 movl 5   
38 [0x26]:          smovr_3 fp+4   
39 [0x27]: line: 80 movl 5   
40 [0x28]:          movn #2   
42 [0x2a]:          smovr_3 fp+5   
43 [0x2b]:          jmp @21   
44 [0x2c]: line: 83 movl 5   
45 [0x2d]:          pushobj   
46 [0x2e]:          pushnull    
47 [0x2f]:          itest ebx   
48 [0x30]:          movr cmt, ebx   
49 [0x31]:          jne 104   
50 [0x32]: line: 84 movl 0   
51 [0x33]:          movn #3   
53 [0x35]:          movi #0, adx   
55 [0x37]:          chklen adx   
56 [0x38]:          iaload ebx, adx   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          rmov adx, ebx   
62 [0x3e]: line: 85 new_class @96 // std.io.task#entry<std.io#thread,std.io.task#job_controller>   
63 [0x3f]:          dup    
64 [0x40]:          movl 1   
65 [0x41]:          pushobj   
66 [0x42]:          movl 2   
67 [0x43]:          pushobj   
68 [0x44]:          call @3649 // <std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry>   
69 [0x45]:          popobj2    
70 [0x46]:          smovr_3 fp+5   
71 [0x47]: line: 86 movl 4   
72 [0x48]:          pushobj   
73 [0x49]:          pushnull    
74 [0x4a]:          itest ebx   
75 [0x4b]:          movr cmt, ebx   
76 [0x4c]:          jne 90   
77 [0x4d]: line: 87 movl 5   
78 [0x4e]:          pushobj   
79 [0x4f]:          movl 0   
80 [0x50]:          movn #0   
82 [0x52]:          pushobj   
83 [0x53]:          loadl ebx, fp+3   
84 [0x54]:          popobj2    
85 [0x55]:          movr adx, ebx   
86 [0x56]:          chklen adx   
87 [0x57]:          movnd adx   
88 [0x58]:          popobj   
89 [0x59]:          jmp @96   
90 [0x5a]: line: 89 movl 5   
91 [0x5b]:          pushobj   
92 [0x5c]:          movl 4   
93 [0x5d]:          movn #2   
95 [0x5f]:          popobj   
96 [0x60]:          nop   
97 [0x61]: line: 92 movi #1, ebx   
99 [0x63]:          return_val ebx   
100 [0x64]:          movl 0   
101 [0x65]:          _ulck   
102 [0x66]:          ret   
103 [0x67]:          jmp @116   
104 [0x68]: line: 94 movl 2   
105 [0x69]:          pushobj   
106 [0x6a]:          movl 5   
107 [0x6b]:          movn #1   
109 [0x6d]:          popobj   
110 [0x6e]: line: 95 movi #0, ebx   
112 [0x70]:          return_val ebx   
113 [0x71]:          movl 0   
114 [0x72]:          _ulck   
115 [0x73]:          ret   
116 [0x74]:          nop   
117 [0x75]:          movl 0   
118 [0x76]:          _ulck   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.remove[3526] params(1) in file: lib\support\0.2.805/hashtable.sharp:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 102 movl 0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 1   
5 [0x5]:           pushobj   
6 [0x6]:           call @3522 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
7 [0x7]:           loadval ebx   
8 [0x8]:           smovr_2 ebx, fp+2   
9 [0x9]: line: 103 movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           pushobj   
13 [0xd]:           loadl ebx, fp+2   
14 [0xe]:           popobj2    
15 [0xf]:           movr adx, ebx   
16 [0x10]:           chklen adx   
17 [0x11]:           movnd adx   
18 [0x12]:           pushobj   
19 [0x13]:           pushnull    
20 [0x14]:           itest ebx   
21 [0x15]:           movr cmt, ebx   
22 [0x16]:           jne 112   
23 [0x17]: line: 104 movl 3   
24 [0x18]:           del   
25 [0x19]: line: 105 movl 0   
26 [0x1a]:           movn #0   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           smovr_3 fp+4   
35 [0x23]: line: 106 movl 4   
36 [0x24]:           pushobj   
37 [0x25]:           pushnull    
38 [0x26]:           itest ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           skne ebx // pc = 49   
41 [0x29]:           movl 4   
42 [0x2a]:           movn #0   
44 [0x2c]:           pushobj   
45 [0x2d]:           movl 1   
46 [0x2e]:           pushobj   
47 [0x2f]:           itest ebx   
48 [0x30]:           not ebx, ebx   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 58   
51 [0x33]: line: 107 movl 4   
52 [0x34]:           smovr_3 fp+3   
53 [0x35]: line: 108 movl 4   
54 [0x36]:           movn #2   
56 [0x38]:           smovr_3 fp+4   
57 [0x39]:           jmp @35   
58 [0x3a]: line: 111 movl 4   
59 [0x3b]:           movn #0   
61 [0x3d]:           pushobj   
62 [0x3e]:           movl 1   
63 [0x3f]:           pushobj   
64 [0x40]:           call @2200 // <std.io#thread.operator==>   
65 [0x41]:           loadval ebx   
66 [0x42]:           movr cmt, ebx   
67 [0x43]:           jne 111   
68 [0x44]: line: 112 movl 3   
69 [0x45]:           pushobj   
70 [0x46]:           pushnull    
71 [0x47]:           itest ebx   
72 [0x48]:           movr cmt, ebx   
73 [0x49]:           jne 91   
74 [0x4a]: line: 113 movl 4   
75 [0x4b]:           movn #2   
77 [0x4d]:           smovr_3 fp+5   
78 [0x4e]: line: 114 movl 5   
79 [0x4f]:           pushobj   
80 [0x50]:           movl 0   
81 [0x51]:           movn #0   
83 [0x53]:           pushobj   
84 [0x54]:           loadl ebx, fp+2   
85 [0x55]:           popobj2    
86 [0x56]:           movr adx, ebx   
87 [0x57]:           chklen adx   
88 [0x58]:           movnd adx   
89 [0x59]:           popobj   
90 [0x5a]:           jmp @104   
91 [0x5b]: line: 116 movl 4   
92 [0x5c]:           movn #2   
94 [0x5e]:           smovr_3 fp+6   
95 [0x5f]: line: 117 movl 6   
96 [0x60]:           pushobj   
97 [0x61]:           movl 3   
98 [0x62]:           movn #2   
100 [0x64]:           popobj   
101 [0x65]: line: 118 pushnull    
102 [0x66]:           popobj2    
103 [0x67]:           smovr_3 fp+4   
104 [0x68]:           nop   
105 [0x69]: line: 121 movi #1, ebx   
107 [0x6b]:           return_val ebx   
108 [0x6c]:           movl 0   
109 [0x6d]:           _ulck   
110 [0x6e]:           ret   
111 [0x6f]:           nop   
112 [0x70]:           nop   
113 [0x71]: line: 125 movi #0, ebx   
115 [0x73]:           return_val ebx   
116 [0x74]:           movl 0   
117 [0x75]:           _ulck   
118 [0x76]:           ret   
119 [0x77]:           movl 0   
120 [0x78]:           _ulck   


constructor: std#hashtable<std#int,std.io#thread>.hashtable[3527] params(1) in file: lib\support\0.2.805/hashtable.sharp:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #96, ebx   
11 [0xb]:         rstore ebx   
12 [0xc]:         movl 0   
13 [0xd]:         movn #2   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         pushl 0   
20 [0x14]:         call @2262 // <std#_object_._object_>   
21 [0x15]: line: 11 loadl ebx, fp+1   
22 [0x16]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          popobj   
27 [0x1b]: line: 12 movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          sizeof ebx   
31 [0x1f]:          rstore ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          movi #0, adx   
37 [0x25]:          chklen adx   
38 [0x26]:          iaload ebx, adx   
39 [0x27]:          loadval ecx   
40 [0x28]:          mul ecx, ebx -> ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #2   
45 [0x2d]:          loadval ebx   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          rmov adx, ebx   
49 [0x31]:          ret   


constructor: std#hashtable<std#int,std.io#thread>.hashtable[3528] params(0) in file: lib\support\0.2.805/hashtable.sharp:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #96, ebx   
11 [0xb]:         rstore ebx   
12 [0xc]:         movl 0   
13 [0xd]:         movn #2   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         pushl 0   
20 [0x14]:         call @2262 // <std#_object_._object_>   
21 [0x15]: line: 16 movi #128, ebx   
23 [0x17]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          popobj   
28 [0x1c]:          ret   


function: std#hashtable<std#int,std.io#thread>.set_threshold[3529] params(1) in file: lib\support\0.2.805/hashtable.sharp:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 21 loadl ebx, fp+1   
3 [0x3]:          rstore ebx   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          loadval ebx   
8 [0x8]:          movi #0, adx   
10 [0xa]:          rmov adx, ebx   
11 [0xb]: line: 22 movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          sizeof ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          loadl ebx, fp+1   
17 [0x11]:          loadval ecx   
18 [0x12]:          mul ecx, ebx -> ebx   
19 [0x13]:          rstore ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #2   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          _ulck   
29 [0x1d]:          ret   


function: std#hashtable<std#int,std.io#thread>.hash[3530] params(1) in file: lib\support\0.2.805/hashtable.sharp:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]: line: 27 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          call @635 // <std#integer<_int32>.hash>   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          sizeof ebx   
7 [0x7]:          rstore ebx   
8 [0x8]:          call @300 // <std#integer<_int64>.operator%>   
9 [0x9]:          loadval ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#hashtable<std#int,std.io#thread>.resize[3531] params(0) in file: lib\support\0.2.805/hashtable.sharp:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
17 [0x11]:          movl 0   
18 [0x12]:          movn #0   
20 [0x14]:          popobj   
21 [0x15]: line: 33 movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          sizeof ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          chklen adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          rstore ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #2   
39 [0x27]:          loadval ebx   
40 [0x28]:          movi #0, adx   
42 [0x2a]:          rmov adx, ebx   
43 [0x2b]: line: 34 istorel -1, fp+3   
45 [0x2d]:          movl 1   
46 [0x2e]:          pushobj   
47 [0x2f]:          movl 4   
48 [0x30]:          popobj   
49 [0x31]:          iaddl 1, fp@3   
51 [0x33]:          movl 4   
52 [0x34]:          sizeof ecx   
53 [0x35]:          loadl ebx, fp+3   
54 [0x36]:          lt ebx, ecx   
55 [0x37]:          jne 110   
56 [0x38]:          movnd ebx   
57 [0x39]:          pushobj   
58 [0x3a]:          movl 2   
59 [0x3b]:          popobj   
60 [0x3c]: line: 36 movl 2   
61 [0x3d]:          pushobj   
62 [0x3e]:          pushnull    
63 [0x3f]:          itest ebx   
64 [0x40]:          not ebx, ebx   
65 [0x41]:          movr cmt, ebx   
66 [0x42]:          jne 109   
67 [0x43]: line: 38 movl 2   
68 [0x44]:          movn #2   
70 [0x46]:          smovr_3 fp+5   
71 [0x47]: line: 39 movl 0   
72 [0x48]:          pushobj   
73 [0x49]:          movl 2   
74 [0x4a]:          movn #0   
76 [0x4c]:          pushobj   
77 [0x4d]:          call @3530 // <std#hashtable<std#int,std.io#thread>.hash>   
78 [0x4e]:          loadval ebx   
79 [0x4f]:          smovr_2 ebx, fp+6   
80 [0x50]: line: 40 movl 0   
81 [0x51]:          movn #0   
83 [0x53]:          pushobj   
84 [0x54]:          loadl ebx, fp+6   
85 [0x55]:          popobj2    
86 [0x56]:          movr adx, ebx   
87 [0x57]:          chklen adx   
88 [0x58]:          movnd adx   
89 [0x59]:          pushobj   
90 [0x5a]:          movl 2   
91 [0x5b]:          movn #2   
93 [0x5d]:          popobj   
94 [0x5e]: line: 41 movl 2   
95 [0x5f]:          pushobj   
96 [0x60]:          movl 0   
97 [0x61]:          movn #0   
99 [0x63]:          pushobj   
100 [0x64]:          loadl ebx, fp+6   
101 [0x65]:          popobj2    
102 [0x66]:          movr adx, ebx   
103 [0x67]:          chklen adx   
104 [0x68]:          movnd adx   
105 [0x69]:          popobj   
106 [0x6a]: line: 42 movl 5   
107 [0x6b]:          smovr_3 fp+2   
108 [0x6c]:          jmp @60   
109 [0x6d]:          jmp @49   
110 [0x6e]: line: 46 pushnull    
111 [0x6f]:          popobj2    
112 [0x70]:          smovr_3 fp+1   
113 [0x71]:          ret   


function: std#hashtable<std#int,std.io#thread>.at[3532] params(1) in file: lib\support\0.2.805/hashtable.sharp:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 51 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @3530 // <std#hashtable<std#int,std.io#thread>.hash>   
7 [0x7]:          loadval ebx   
8 [0x8]:          smovr_2 ebx, fp+2   
9 [0x9]: line: 52 movi #-1, ebx   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 53 movl 4   
13 [0xd]:          del   
14 [0xe]: line: 55 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          loadl ebx, fp+2   
19 [0x13]:          popobj2    
20 [0x14]:          movr adx, ebx   
21 [0x15]:          chklen adx   
22 [0x16]:          movnd adx   
23 [0x17]:          pushobj   
24 [0x18]:          pushnull    
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 34   
28 [0x1c]: line: 56 movl 4   
29 [0x1d]:          returnobj   
30 [0x1e]:          movl 0   
31 [0x1f]:          _ulck   
32 [0x20]:          ret   
33 [0x21]:          jmp @93   
34 [0x22]: line: 58 movl 0   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          loadl ebx, fp+2   
39 [0x27]:          popobj2    
40 [0x28]:          movr adx, ebx   
41 [0x29]:          chklen adx   
42 [0x2a]:          movnd adx   
43 [0x2b]:          smovr_3 fp+5   
44 [0x2c]: line: 59 movl 5   
45 [0x2d]:          pushobj   
46 [0x2e]:          pushnull    
47 [0x2f]:          itest ebx   
48 [0x30]:          not ebx, ebx   
49 [0x31]:          skne ebx // pc = 66   
50 [0x32]:          movl 5   
51 [0x33]:          movn #0   
53 [0x35]:          pushobj   
54 [0x36]:          movl 1   
55 [0x37]:          pushobj   
56 [0x38]:          call @642 // <std#integer<_int32>.operator!=>   
57 [0x39]:          loadval ebx   
58 [0x3a]:          skne ebx // pc = 66   
59 [0x3b]:          movl 5   
60 [0x3c]:          movn #2   
62 [0x3e]:          pushobj   
63 [0x3f]:          pushnull    
64 [0x40]:          itest ebx   
65 [0x41]:          not ebx, ebx   
66 [0x42]:          movr cmt, ebx   
67 [0x43]:          jne 73   
68 [0x44]: line: 61 movl 5   
69 [0x45]:          movn #2   
71 [0x47]:          smovr_3 fp+5   
72 [0x48]:          jmp @44   
73 [0x49]: line: 63 movl 5   
74 [0x4a]:          pushobj   
75 [0x4b]:          pushnull    
76 [0x4c]:          itest ebx   
77 [0x4d]:          movr cmt, ebx   
78 [0x4e]:          jne 85   
79 [0x4f]: line: 64 movl 4   
80 [0x50]:          returnobj   
81 [0x51]:          movl 0   
82 [0x52]:          _ulck   
83 [0x53]:          ret   
84 [0x54]:          jmp @92   
85 [0x55]: line: 66 movl 5   
86 [0x56]:          movn #1   
88 [0x58]:          returnobj   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   
91 [0x5b]:          ret   
92 [0x5c]:          nop   
93 [0x5d]:          nop   
94 [0x5e]:          movl 0   
95 [0x5f]:          _ulck   


function: std#hashtable<std#int,std.io#thread>.put[3533] params(2) in file: lib\support\0.2.805/hashtable.sharp:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @3530 // <std#hashtable<std#int,std.io#thread>.hash>   
7 [0x7]:          loadval ebx   
8 [0x8]:          smovr_2 ebx, fp+3   
9 [0x9]: line: 75 movl 4   
10 [0xa]:          del   
11 [0xb]: line: 76 movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          loadl ebx, fp+3   
16 [0x10]:          popobj2    
17 [0x11]:          movr adx, ebx   
18 [0x12]:          chklen adx   
19 [0x13]:          movnd adx   
20 [0x14]:          smovr_3 fp+5   
21 [0x15]: line: 78 movl 5   
22 [0x16]:          pushobj   
23 [0x17]:          pushnull    
24 [0x18]:          itest ebx   
25 [0x19]:          not ebx, ebx   
26 [0x1a]:          skne ebx // pc = 35   
27 [0x1b]:          movl 5   
28 [0x1c]:          movn #0   
30 [0x1e]:          pushobj   
31 [0x1f]:          movl 1   
32 [0x20]:          pushobj   
33 [0x21]:          call @642 // <std#integer<_int32>.operator!=>   
34 [0x22]:          loadval ebx   
35 [0x23]:          movr cmt, ebx   
36 [0x24]:          jne 44   
37 [0x25]: line: 79 movl 5   
38 [0x26]:          smovr_3 fp+4   
39 [0x27]: line: 80 movl 5   
40 [0x28]:          movn #2   
42 [0x2a]:          smovr_3 fp+5   
43 [0x2b]:          jmp @21   
44 [0x2c]: line: 83 movl 5   
45 [0x2d]:          pushobj   
46 [0x2e]:          pushnull    
47 [0x2f]:          itest ebx   
48 [0x30]:          movr cmt, ebx   
49 [0x31]:          jne 104   
50 [0x32]: line: 84 movl 0   
51 [0x33]:          movn #3   
53 [0x35]:          movi #0, adx   
55 [0x37]:          chklen adx   
56 [0x38]:          iaload ebx, adx   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          rmov adx, ebx   
62 [0x3e]: line: 85 new_class @97 // std.io#entry<std#int,std.io#thread>   
63 [0x3f]:          dup    
64 [0x40]:          movl 1   
65 [0x41]:          pushobj   
66 [0x42]:          movl 2   
67 [0x43]:          pushobj   
68 [0x44]:          call @3652 // <std.io#entry<std#int,std.io#thread>.entry>   
69 [0x45]:          popobj2    
70 [0x46]:          smovr_3 fp+5   
71 [0x47]: line: 86 movl 4   
72 [0x48]:          pushobj   
73 [0x49]:          pushnull    
74 [0x4a]:          itest ebx   
75 [0x4b]:          movr cmt, ebx   
76 [0x4c]:          jne 90   
77 [0x4d]: line: 87 movl 5   
78 [0x4e]:          pushobj   
79 [0x4f]:          movl 0   
80 [0x50]:          movn #0   
82 [0x52]:          pushobj   
83 [0x53]:          loadl ebx, fp+3   
84 [0x54]:          popobj2    
85 [0x55]:          movr adx, ebx   
86 [0x56]:          chklen adx   
87 [0x57]:          movnd adx   
88 [0x58]:          popobj   
89 [0x59]:          jmp @96   
90 [0x5a]: line: 89 movl 5   
91 [0x5b]:          pushobj   
92 [0x5c]:          movl 4   
93 [0x5d]:          movn #2   
95 [0x5f]:          popobj   
96 [0x60]:          nop   
97 [0x61]: line: 92 movi #1, ebx   
99 [0x63]:          return_val ebx   
100 [0x64]:          movl 0   
101 [0x65]:          _ulck   
102 [0x66]:          ret   
103 [0x67]:          jmp @116   
104 [0x68]: line: 94 movl 2   
105 [0x69]:          pushobj   
106 [0x6a]:          movl 5   
107 [0x6b]:          movn #1   
109 [0x6d]:          popobj   
110 [0x6e]: line: 95 movi #0, ebx   
112 [0x70]:          return_val ebx   
113 [0x71]:          movl 0   
114 [0x72]:          _ulck   
115 [0x73]:          ret   
116 [0x74]:          nop   
117 [0x75]:          movl 0   
118 [0x76]:          _ulck   


function: std#hashtable<std#int,std.io#thread>.remove[3534] params(1) in file: lib\support\0.2.805/hashtable.sharp:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 102 movl 0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 1   
5 [0x5]:           pushobj   
6 [0x6]:           call @3530 // <std#hashtable<std#int,std.io#thread>.hash>   
7 [0x7]:           loadval ebx   
8 [0x8]:           smovr_2 ebx, fp+2   
9 [0x9]: line: 103 movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           pushobj   
13 [0xd]:           loadl ebx, fp+2   
14 [0xe]:           popobj2    
15 [0xf]:           movr adx, ebx   
16 [0x10]:           chklen adx   
17 [0x11]:           movnd adx   
18 [0x12]:           pushobj   
19 [0x13]:           pushnull    
20 [0x14]:           itest ebx   
21 [0x15]:           movr cmt, ebx   
22 [0x16]:           jne 112   
23 [0x17]: line: 104 movl 3   
24 [0x18]:           del   
25 [0x19]: line: 105 movl 0   
26 [0x1a]:           movn #0   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           smovr_3 fp+4   
35 [0x23]: line: 106 movl 4   
36 [0x24]:           pushobj   
37 [0x25]:           pushnull    
38 [0x26]:           itest ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           skne ebx // pc = 49   
41 [0x29]:           movl 4   
42 [0x2a]:           movn #0   
44 [0x2c]:           pushobj   
45 [0x2d]:           movl 1   
46 [0x2e]:           pushobj   
47 [0x2f]:           call @642 // <std#integer<_int32>.operator!=>   
48 [0x30]:           loadval ebx   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 58   
51 [0x33]: line: 107 movl 4   
52 [0x34]:           smovr_3 fp+3   
53 [0x35]: line: 108 movl 4   
54 [0x36]:           movn #2   
56 [0x38]:           smovr_3 fp+4   
57 [0x39]:           jmp @35   
58 [0x3a]: line: 111 movl 4   
59 [0x3b]:           movn #0   
61 [0x3d]:           pushobj   
62 [0x3e]:           movl 1   
63 [0x3f]:           pushobj   
64 [0x40]:           call @643 // <std#integer<_int32>.operator==>   
65 [0x41]:           loadval ebx   
66 [0x42]:           movr cmt, ebx   
67 [0x43]:           jne 111   
68 [0x44]: line: 112 movl 3   
69 [0x45]:           pushobj   
70 [0x46]:           pushnull    
71 [0x47]:           itest ebx   
72 [0x48]:           movr cmt, ebx   
73 [0x49]:           jne 91   
74 [0x4a]: line: 113 movl 4   
75 [0x4b]:           movn #2   
77 [0x4d]:           smovr_3 fp+5   
78 [0x4e]: line: 114 movl 5   
79 [0x4f]:           pushobj   
80 [0x50]:           movl 0   
81 [0x51]:           movn #0   
83 [0x53]:           pushobj   
84 [0x54]:           loadl ebx, fp+2   
85 [0x55]:           popobj2    
86 [0x56]:           movr adx, ebx   
87 [0x57]:           chklen adx   
88 [0x58]:           movnd adx   
89 [0x59]:           popobj   
90 [0x5a]:           jmp @104   
91 [0x5b]: line: 116 movl 4   
92 [0x5c]:           movn #2   
94 [0x5e]:           smovr_3 fp+6   
95 [0x5f]: line: 117 movl 6   
96 [0x60]:           pushobj   
97 [0x61]:           movl 3   
98 [0x62]:           movn #2   
100 [0x64]:           popobj   
101 [0x65]: line: 118 pushnull    
102 [0x66]:           popobj2    
103 [0x67]:           smovr_3 fp+4   
104 [0x68]:           nop   
105 [0x69]: line: 121 movi #1, ebx   
107 [0x6b]:           return_val ebx   
108 [0x6c]:           movl 0   
109 [0x6d]:           _ulck   
110 [0x6e]:           ret   
111 [0x6f]:           nop   
112 [0x70]:           nop   
113 [0x71]: line: 125 movi #0, ebx   
115 [0x73]:           return_val ebx   
116 [0x74]:           movl 0   
117 [0x75]:           _ulck   
118 [0x76]:           ret   
119 [0x77]:           movl 0   
120 [0x78]:           _ulck   


function: std#throwable.get_stack_trace[3535] params(0) in file: lib\support\0.2.805/exceptions.sharp:13:25: note:  
		    stack_trace : string;
		                        ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 17   
8 [0x8]: line: 16 movl 0   
9 [0x9]:          movn #2   
11 [0xb]:          pushobj   
12 [0xc]:          call @2280 // <platform.kernel#vm.get_stack_trace>   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          popobj   
17 [0x11]:          nop   
18 [0x12]: line: 20 movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          returnobj   
22 [0x16]:          ret   


constructor: std#list<std.io#thread>.list[3536] params(0) in file: lib\support\0.2.805/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 14 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io#thread[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std.io#thread>.list[3537] params(1) in file: lib\support\0.2.805/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 18 loadl ebx, fp+1   
3 [0x3]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<std.io#thread>.list[3538] params(1) in file: lib\support\0.2.805/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 22 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @3549 // <std#list<std.io#thread>.add_all>   
7 [0x7]:          ret   


function: std#list<std.io#thread>.empty[3539] params(0) in file: lib\support\0.2.805/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #0, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#list<std.io#thread>.set_compact[3540] params(1) in file: lib\support\0.2.805/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #2   
5 [0x5]:          loadval ebx   
6 [0x6]:          movi #0, adx   
8 [0x8]:          rmov adx, ebx   
9 [0x9]:          ret   


function: std#list<std.io#thread>.get_elements[3541] params(0) in file: lib\support\0.2.805/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #0, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 20   
15 [0xf]:          pushnull    
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   
19 [0x13]:          jmp @39   
20 [0x14]: line: 33 movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movi #0, ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          chklen adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          rstore ebx   
35 [0x23]:          call @2078 // <std.io#__srt_global.copy>   
36 [0x24]:          popobj2    
37 [0x25]:          returnobj   
38 [0x26]:          ret   
39 [0x27]:          nop   


overload function: std#list<std.io#thread>.operator[[3542] params(1) in file: lib\support\0.2.805/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 38 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3562 // <std#list<std.io#thread>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 39 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          movnd adx   
41 [0x29]:          returnobj   
42 [0x2a]:          ret   


function: std#list<std.io#thread>.at[3543] params(1) in file: lib\support\0.2.805/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 44 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3562 // <std#list<std.io#thread>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 45 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          movnd adx   
41 [0x29]:          returnobj   
42 [0x2a]:          ret   


function: std#list<std.io#thread>.last[3544] params(0) in file: lib\support\0.2.805/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          sub ecx, ebx -> ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3543 // <std#list<std.io#thread>.at>   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#list<std.io#thread>.put[3545] params(2) in file: lib\support\0.2.805/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 54 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3562 // <std#list<std.io#thread>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 56 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          movnd adx   
41 [0x29]:          smovr_3 fp+3   
42 [0x2a]: line: 57 movl 2   
43 [0x2b]:          pushobj   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          pushobj   
48 [0x30]:          loadl ebx, fp+1   
49 [0x31]:          popobj2    
50 [0x32]:          movr adx, ebx   
51 [0x33]:          chklen adx   
52 [0x34]:          movnd adx   
53 [0x35]:          popobj   
54 [0x36]: line: 58 movl 3   
55 [0x37]:          returnobj   
56 [0x38]:          ret   


function: std#list<std.io#thread>.expand[3546] params(0) in file: lib\support\0.2.805/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 25   
9 [0x9]: line: 63 movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          pushobj   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          sizeof ebx   
17 [0x11]:          rstore ebx   
18 [0x12]:          movi #128, ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          add ecx, ebx -> ebx   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @2058 // <std.io#__srt_global.realloc>   
24 [0x18]:          jmp @52   
25 [0x19]: line: 65 movl 0   
26 [0x1a]:          movn #1   
28 [0x1c]:          pushobj   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          sizeof ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          sizeof ebx   
38 [0x26]:          rstore ebx   
39 [0x27]:          movi #4, ebx   
41 [0x29]:          loadval ecx   
42 [0x2a]:          shr ecx, ebx -> ebx   
43 [0x2b]:          loadval ecx   
44 [0x2c]:          add ecx, ebx -> ebx   
45 [0x2d]:          rstore ebx   
46 [0x2e]:          movi #128, ebx   
48 [0x30]:          loadval ecx   
49 [0x31]:          add ecx, ebx -> ebx   
50 [0x32]:          rstore ebx   
51 [0x33]:          call @2058 // <std.io#__srt_global.realloc>   
52 [0x34]:          nop   
53 [0x35]:          ret   


function: std#list<std.io#thread>.clear[3547] params(0) in file: lib\support\0.2.805/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std.io#thread[]   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 70 movi #0, ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          loadval ebx   
14 [0xe]:          movi #0, adx   
16 [0x10]:          rmov adx, ebx   
17 [0x11]:          ret   


function: std#list<std.io#thread>.add_all[3548] params(1) in file: lib\support\0.2.805/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          movi #0, ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          chklen adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2078 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #31, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 75 movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          chklen adx   
31 [0x1f]:          iaload ebx, adx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          loadval ebx   
37 [0x25]:          movi #0, adx   
39 [0x27]:          rmov adx, ebx   
40 [0x28]:          ret   


function: std#list<std.io#thread>.add_all[3549] params(1) in file: lib\support\0.2.805/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          pushnull    
3 [0x3]:          itest ebx   
4 [0x4]:          not ebx, ebx   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 36   
7 [0x7]: line: 80 movl 1   
8 [0x8]:          pushobj   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2078 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #31, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 81 movl 1   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          loadval ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          jmp @53   
36 [0x24]: line: 83 movi #0, ebx   
38 [0x26]:          rstore ebx   
39 [0x27]:          movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          rmov adx, ebx   
46 [0x2e]: line: 84 movi #10, ebx   
48 [0x30]:          new_classarray ebx  // std.io#thread[]   
49 [0x31]:          movl 0   
50 [0x32]:          movn #1   
52 [0x34]:          popobj   
53 [0x35]:          nop   
54 [0x36]:          ret   


function: std#list<std.io#thread>.add[3550] params(1) in file: lib\support\0.2.805/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          sizeof ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          gte ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 20   
17 [0x11]: line: 90 movl 0   
18 [0x12]:          pushobj   
19 [0x13]:          call @3546 // <std#list<std.io#thread>.expand>   
20 [0x14]:          nop   
21 [0x15]: line: 91 movl 1   
22 [0x16]:          pushobj   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          chklen adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          inc ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]:          ret   


function: std#list<std.io#thread>.indexof[3551] params(1) in file: lib\support\0.2.805/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movi #0, ebx   
2 [0x2]:          smovr_2 ebx, fp+2   
3 [0x3]:          loadl ebx, fp+2   
4 [0x4]:          rstore ebx   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          chklen adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          loadval ecx   
13 [0xd]:          lt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 42   
17 [0x11]: line: 96 movl 1   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          pushobj   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          popobj2    
25 [0x19]:          movr adx, ebx   
26 [0x1a]:          chklen adx   
27 [0x1b]:          movnd adx   
28 [0x1c]:          pushobj   
29 [0x1d]:          call @2200 // <std.io#thread.operator==>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 36   
33 [0x21]: line: 97 loadl ebx, fp+2   
34 [0x22]:          return_val ebx   
35 [0x23]:          ret   
36 [0x24]:          nop   
37 [0x25]:          loadl ebx, fp+2   
38 [0x26]:          movr egx, ebx   
39 [0x27]:          inc ebx   
40 [0x28]:          smovr_2 ebx, fp+2   
41 [0x29]:          jmp @3   
42 [0x2a]: line: 101 movi #-1, ebx   
44 [0x2c]:           return_val ebx   
45 [0x2d]:           ret   


function: std#list<std.io#thread>.pop_back[3552] params(0) in file: lib\support\0.2.805/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #0, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           gt ecx, ebx   
12 [0xc]:           movr ebx, cmt   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 41   
15 [0xf]: line: 106 movl 1   
16 [0x10]:           del   
17 [0x11]: line: 107 movl 1   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           movi #0, adx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           movr egx, ebx   
31 [0x1f]:           dec ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           movr ebx, egx   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           popobj   
41 [0x29]:           nop   
42 [0x2a]:           ret   


function: std#list<std.io#thread>.size[3553] params(0) in file: lib\support\0.2.805/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std#list<std.io#thread>.insert[3554] params(2) in file: lib\support\0.2.805/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 20   
13 [0xd]:           loadl ebx, fp+1   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 31   
22 [0x16]: line: 115 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           movl 0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+1   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           call @3562 // <std#list<std.io#thread>.out_of_bounds_msg>   
29 [0x1d]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 117 movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           movi #0, adx   
37 [0x25]:           chklen adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #0, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           test ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 53   
47 [0x2f]: line: 118 movl 0   
48 [0x30]:           pushobj   
49 [0x31]:           movl 2   
50 [0x32]:           pushobj   
51 [0x33]:           call @3550 // <std#list<std.io#thread>.add>   
52 [0x34]:           jmp @149   
53 [0x35]: line: 120 movl 0   
54 [0x36]:           movn #0   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           chklen adx   
59 [0x3b]:           iaload ebx, adx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movl 0   
62 [0x3e]:           movn #1   
64 [0x40]:           sizeof ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           gte ecx, ebx   
67 [0x43]:           movr ebx, cmt   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 73   
70 [0x46]: line: 121 movl 0   
71 [0x47]:           pushobj   
72 [0x48]:           call @3546 // <std#list<std.io#thread>.expand>   
73 [0x49]:           nop   
74 [0x4a]: line: 122 movl 0   
75 [0x4b]:           movn #0   
77 [0x4d]:           movi #0, adx   
79 [0x4f]:           chklen adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           movr egx, ebx   
82 [0x52]:           inc ebx   
83 [0x53]:           movi #0, adx   
85 [0x55]:           rmov adx, ebx   
86 [0x56]: line: 123 movl 0   
87 [0x57]:           movn #0   
89 [0x59]:           movi #0, adx   
91 [0x5b]:           chklen adx   
92 [0x5c]:           iaload ebx, adx   
93 [0x5d]:           rstore ebx   
94 [0x5e]:           movi #1, ebx   
96 [0x60]:           loadval ecx   
97 [0x61]:           sub ecx, ebx -> ebx   
98 [0x62]:           smovr_2 ebx, fp+3   
99 [0x63]:           loadl ebx, fp+3   
100 [0x64]:           rstore ebx   
101 [0x65]:           loadl ebx, fp+1   
102 [0x66]:           loadval ecx   
103 [0x67]:           gt ecx, ebx   
104 [0x68]:           movr ebx, cmt   
105 [0x69]:           movr cmt, ebx   
106 [0x6a]:           jne 137   
107 [0x6b]: line: 124 movl 0   
108 [0x6c]:           movn #1   
110 [0x6e]:           pushobj   
111 [0x6f]:           loadl ebx, fp+3   
112 [0x70]:           rstore ebx   
113 [0x71]:           movi #1, ebx   
115 [0x73]:           loadval ecx   
116 [0x74]:           sub ecx, ebx -> ebx   
117 [0x75]:           popobj2    
118 [0x76]:           movr adx, ebx   
119 [0x77]:           chklen adx   
120 [0x78]:           movnd adx   
121 [0x79]:           pushobj   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+3   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           loadl ebx, fp+3   
133 [0x85]:           movr egx, ebx   
134 [0x86]:           dec ebx   
135 [0x87]:           smovr_2 ebx, fp+3   
136 [0x88]:           jmp @99   
137 [0x89]: line: 125 movl 2   
138 [0x8a]:           pushobj   
139 [0x8b]:           movl 0   
140 [0x8c]:           movn #1   
142 [0x8e]:           pushobj   
143 [0x8f]:           loadl ebx, fp+1   
144 [0x90]:           popobj2    
145 [0x91]:           movr adx, ebx   
146 [0x92]:           chklen adx   
147 [0x93]:           movnd adx   
148 [0x94]:           popobj   
149 [0x95]:           nop   
150 [0x96]:           ret   


function: std#list<std.io#thread>.find[3555] params(2) in file: lib\support\0.2.805/list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 53   
17 [0x11]: line: 131 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 1   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 47   
36 [0x24]: line: 132 movl 0   
37 [0x25]:           movn #1   
39 [0x27]:           pushobj   
40 [0x28]:           loadl ebx, fp+3   
41 [0x29]:           popobj2    
42 [0x2a]:           movr adx, ebx   
43 [0x2b]:           chklen adx   
44 [0x2c]:           movnd adx   
45 [0x2d]:           returnobj   
46 [0x2e]:           ret   
47 [0x2f]:           nop   
48 [0x30]:           loadl ebx, fp+3   
49 [0x31]:           movr egx, ebx   
50 [0x32]:           inc ebx   
51 [0x33]:           smovr_2 ebx, fp+3   
52 [0x34]:           jmp @3   
53 [0x35]: line: 136 movl 4   
54 [0x36]:           del   
55 [0x37]: line: 137 movl 4   
56 [0x38]:           returnobj   
57 [0x39]:           ret   


function: std#list<std.io#thread>.remove[3556] params(1) in file: lib\support\0.2.805/list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+2   
3 [0x3]:           loadl ebx, fp+2   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 45   
17 [0x11]: line: 142 movl 1   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           call @2200 // <std.io#thread.operator==>   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 39   
33 [0x21]: line: 143 movl 0   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+2   
36 [0x24]:           rstore ebx   
37 [0x25]:           call @3559 // <std#list<std.io#thread>.remove_at>   
38 [0x26]: line: 144 ret   
39 [0x27]:           nop   
40 [0x28]:           loadl ebx, fp+2   
41 [0x29]:           movr egx, ebx   
42 [0x2a]:           inc ebx   
43 [0x2b]:           smovr_2 ebx, fp+2   
44 [0x2c]:           jmp @3   
45 [0x2d]:           ret   


function: std#list<std.io#thread>.remove[3557] params(2) in file: lib\support\0.2.805/list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 48   
17 [0x11]: line: 151 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           movnd adx   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 42   
36 [0x24]: line: 152 movl 0   
37 [0x25]:           pushobj   
38 [0x26]:           loadl ebx, fp+3   
39 [0x27]:           rstore ebx   
40 [0x28]:           call @3559 // <std#list<std.io#thread>.remove_at>   
41 [0x29]: line: 153 ret   
42 [0x2a]:           nop   
43 [0x2b]:           loadl ebx, fp+3   
44 [0x2c]:           movr egx, ebx   
45 [0x2d]:           inc ebx   
46 [0x2e]:           smovr_2 ebx, fp+3   
47 [0x2f]:           jmp @3   
48 [0x30]:           ret   


function: std#list<std.io#thread>.replace[3558] params(2) in file: lib\support\0.2.805/list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 55   
17 [0x11]: line: 160 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           movnd adx   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 49   
36 [0x24]: line: 161 movl 1   
37 [0x25]:           pushobj   
38 [0x26]:           movl 0   
39 [0x27]:           movn #1   
41 [0x29]:           pushobj   
42 [0x2a]:           loadl ebx, fp+3   
43 [0x2b]:           popobj2    
44 [0x2c]:           movr adx, ebx   
45 [0x2d]:           chklen adx   
46 [0x2e]:           movnd adx   
47 [0x2f]:           popobj   
48 [0x30]: line: 162 ret   
49 [0x31]:           nop   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           movr egx, ebx   
52 [0x34]:           inc ebx   
53 [0x35]:           smovr_2 ebx, fp+3   
54 [0x36]:           jmp @3   
55 [0x37]:           ret   


function: std#list<std.io#thread>.remove_at[3559] params(1) in file: lib\support\0.2.805/list.sharp:167:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 168 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 20   
13 [0xd]:           loadl ebx, fp+1   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 31   
22 [0x16]: line: 169 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           movl 0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+1   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           call @3562 // <std#list<std.io#thread>.out_of_bounds_msg>   
29 [0x1d]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 171 movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           movi #0, adx   
37 [0x25]:           chklen adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           rstore ebx   
40 [0x28]:           loadl ebx, fp+1   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           rstore ebx   
44 [0x2c]:           movi #1, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           sub ecx, ebx -> ebx   
48 [0x30]:           smovr_2 ebx, fp+2   
49 [0x31]: line: 172 loadl ebx, fp+2   
50 [0x32]:           rstore ebx   
51 [0x33]:           movi #0, ebx   
53 [0x35]:           loadval ecx   
54 [0x36]:           gt ecx, ebx   
55 [0x37]:           movr ebx, cmt   
56 [0x38]:           movr cmt, ebx   
57 [0x39]:           jne 84   
58 [0x3a]: line: 173 movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           movl 0   
63 [0x3f]:           movn #1   
65 [0x41]:           pushobj   
66 [0x42]:           loadl ebx, fp+1   
67 [0x43]:           rstore ebx   
68 [0x44]:           loadl ebx, fp+1   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #1, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movl 0   
76 [0x4c]:           movn #0   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           chklen adx   
81 [0x51]:           iaload ebx, adx   
82 [0x52]:           rstore ebx   
83 [0x53]:           call @2068 // <std.io#__srt_global.memcopy>   
84 [0x54]:           nop   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           pushobj   
87 [0x57]:           call @3552 // <std#list<std.io#thread>.pop_back>   
88 [0x58]:           ret   


function: std#list<std.io#thread>.indexof[3560] params(2) in file: lib\support\0.2.805/list.sharp:178:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 179 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 45   
17 [0x11]: line: 180 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 1   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 39   
36 [0x24]: line: 181 loadl ebx, fp+3   
37 [0x25]:           return_val ebx   
38 [0x26]:           ret   
39 [0x27]:           nop   
40 [0x28]:           loadl ebx, fp+3   
41 [0x29]:           movr egx, ebx   
42 [0x2a]:           inc ebx   
43 [0x2b]:           smovr_2 ebx, fp+3   
44 [0x2c]:           jmp @3   
45 [0x2d]: line: 185 movi #-1, ebx   
47 [0x2f]:           return_val ebx   
48 [0x30]:           ret   


function: std#list<std.io#thread>.to_string[3561] params(0) in file: lib\support\0.2.805/list.sharp:188:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 189 new_class @70 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           call @3474 // <std#string_builder.string_builder>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 191 movl 1   
6 [0x6]:           pushobj   
7 [0x7]:           newstr @100 // [    
8 [0x8]:           call @3470 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 192 movi #0, ebx   
12 [0xc]:           smovr_2 ebx, fp+2   
13 [0xd]:           loadl ebx, fp+2   
14 [0xe]:           rstore ebx   
15 [0xf]:           movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           movi #0, adx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           loadval ecx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 71   
27 [0x1b]: line: 193 movl 1   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #1   
32 [0x20]:           pushobj   
33 [0x21]:           loadl ebx, fp+2   
34 [0x22]:           popobj2    
35 [0x23]:           movr adx, ebx   
36 [0x24]:           chklen adx   
37 [0x25]:           movnd adx   
38 [0x26]:           pushobj   
39 [0x27]:           call @3466 // <std#string_builder.operator+=>   
40 [0x28]:           pop   
41 [0x29]: line: 195 loadl ebx, fp+2   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movi #1, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           add ecx, ebx -> ebx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movl 0   
49 [0x31]:           movn #0   
51 [0x33]:           movi #0, adx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           loadval ecx   
56 [0x38]:           lt ecx, ebx   
57 [0x39]:           movr ebx, cmt   
58 [0x3a]:           movr cmt, ebx   
59 [0x3b]:           jne 65   
60 [0x3c]: line: 196 movl 1   
61 [0x3d]:           pushobj   
62 [0x3e]:           newstr @101 // ,    
63 [0x3f]:           call @3470 // <std#string_builder.operator+=>   
64 [0x40]:           pop   
65 [0x41]:           nop   
66 [0x42]:           loadl ebx, fp+2   
67 [0x43]:           movr egx, ebx   
68 [0x44]:           inc ebx   
69 [0x45]:           smovr_2 ebx, fp+2   
70 [0x46]:           jmp @13   
71 [0x47]: line: 200 movl 1   
72 [0x48]:           pushobj   
73 [0x49]:           newstr @102 //  ]   
74 [0x4a]:           call @3470 // <std#string_builder.operator+=>   
75 [0x4b]:           pop   
76 [0x4c]: line: 201 movl 1   
77 [0x4d]:           pushobj   
78 [0x4e]:           call @3447 // <std#string_builder.to_string>   
79 [0x4f]:           popobj2    
80 [0x50]:           returnobj   
81 [0x51]:           ret   


function: std#list<std.io#thread>.out_of_bounds_msg[3562] params(1) in file: lib\support\0.2.805/list.sharp:204:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 205 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @103 // Index:    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           loadl ebx, fp+1   
5 [0x5]:           rstore ebx   
6 [0x6]:           call @3403 // <std#string.operator+>   
7 [0x7]:           newstr @104 // , size:    
8 [0x8]:           call @3383 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @3403 // <std#string.operator+>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   


std#loopable<std.io.task#job>.get_elements[3563] params(0) in file: lib\support\0.2.805/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<std.io.task#job>.loopable[3564] params(0) in file: lib\support\0.2.805/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#synced_list<std.io.task#job>.synced_list[3565] params(0) in file: lib\support\0.2.805/synced_list.sharp:13:16: note:  
		    synced_list() {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 14 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io.task#job[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#synced_list<std.io.task#job>.synced_list[3566] params(1) in file: lib\support\0.2.805/synced_list.sharp:17:16: note:  
		    synced_list(starting_capacity: var) {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 18 loadl ebx, fp+1   
3 [0x3]:          new_classarray ebx  // std.io.task#job[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: std#synced_list<std.io.task#job>.set_compact[3567] params(1) in file: lib\support\0.2.805/synced_list.sharp:21:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 23 loadl ebx, fp+1   
3 [0x3]:          rstore ebx   
4 [0x4]:          movl 0   
5 [0x5]:          movn #2   
7 [0x7]:          loadval ebx   
8 [0x8]:          movi #0, adx   
10 [0xa]:          rmov adx, ebx   
11 [0xb]:          movl 0   
12 [0xc]:          _ulck   
13 [0xd]:          ret   


function: std#synced_list<std.io.task#job>.get_elements[3568] params(0) in file: lib\support\0.2.805/synced_list.sharp:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #0, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          test ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 24   
17 [0x11]:          pushnull    
18 [0x12]:          popobj2    
19 [0x13]:          returnobj   
20 [0x14]:          movl 0   
21 [0x15]:          _ulck   
22 [0x16]:          ret   
23 [0x17]:          jmp @45   
24 [0x18]: line: 30 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movi #0, ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          movi #0, adx   
36 [0x24]:          chklen adx   
37 [0x25]:          iaload ebx, adx   
38 [0x26]:          rstore ebx   
39 [0x27]:          call @2078 // <std.io#__srt_global.copy>   
40 [0x28]:          popobj2    
41 [0x29]:          returnobj   
42 [0x2a]:          movl 0   
43 [0x2b]:          _ulck   
44 [0x2c]:          ret   
45 [0x2d]:          nop   
46 [0x2e]:          movl 0   
47 [0x2f]:          _ulck   


overload function: std#synced_list<std.io.task#job>.operator[[3569] params(1) in file: lib\support\0.2.805/synced_list.sharp:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 36 loadl ebx, fp+1   
3 [0x3]:          rstore ebx   
4 [0x4]:          movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          chklen adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 22   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #0, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          lt ecx, ebx   
21 [0x15]:          movr ebx, cmt   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 33   
24 [0x18]: line: 37 new_class @7 // std#out_of_bounds_exception   
25 [0x19]:          dup    
26 [0x1a]:          movl 0   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3616 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
31 [0x1f]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
32 [0x20]:          throw    
33 [0x21]:          nop   
34 [0x22]: line: 38 movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          pushobj   
38 [0x26]:          loadl ebx, fp+1   
39 [0x27]:          popobj2    
40 [0x28]:          movr adx, ebx   
41 [0x29]:          chklen adx   
42 [0x2a]:          movnd adx   
43 [0x2b]:          returnobj   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   
46 [0x2e]:          ret   
47 [0x2f]:          movl 0   
48 [0x30]:          _ulck   


function: std#synced_list<std.io.task#job>.at[3570] params(1) in file: lib\support\0.2.805/synced_list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 44 loadl ebx, fp+1   
3 [0x3]:          rstore ebx   
4 [0x4]:          movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          chklen adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 22   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #0, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          lt ecx, ebx   
21 [0x15]:          movr ebx, cmt   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 33   
24 [0x18]: line: 45 new_class @7 // std#out_of_bounds_exception   
25 [0x19]:          dup    
26 [0x1a]:          movl 0   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3616 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
31 [0x1f]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
32 [0x20]:          throw    
33 [0x21]:          nop   
34 [0x22]: line: 46 movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          pushobj   
38 [0x26]:          loadl ebx, fp+1   
39 [0x27]:          popobj2    
40 [0x28]:          movr adx, ebx   
41 [0x29]:          chklen adx   
42 [0x2a]:          movnd adx   
43 [0x2b]:          returnobj   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   
46 [0x2e]:          ret   
47 [0x2f]:          movl 0   
48 [0x30]:          _ulck   


function: std#synced_list<std.io.task#job>.last[3571] params(0) in file: lib\support\0.2.805/synced_list.sharp:50:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          sub ecx, ebx -> ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3570 // <std#synced_list<std.io.task#job>.at>   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#synced_list<std.io.task#job>.put[3572] params(2) in file: lib\support\0.2.805/synced_list.sharp:54:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 loadl ebx, fp+1   
3 [0x3]:          rstore ebx   
4 [0x4]:          movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          chklen adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 22   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #0, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          lt ecx, ebx   
21 [0x15]:          movr ebx, cmt   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 33   
24 [0x18]: line: 57 new_class @7 // std#out_of_bounds_exception   
25 [0x19]:          dup    
26 [0x1a]:          movl 0   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+1   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @3616 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
31 [0x1f]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
32 [0x20]:          throw    
33 [0x21]:          nop   
34 [0x22]: line: 59 movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          pushobj   
38 [0x26]:          loadl ebx, fp+1   
39 [0x27]:          popobj2    
40 [0x28]:          movr adx, ebx   
41 [0x29]:          chklen adx   
42 [0x2a]:          movnd adx   
43 [0x2b]:          smovr_3 fp+3   
44 [0x2c]: line: 60 movl 2   
45 [0x2d]:          pushobj   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #1   
49 [0x31]:          pushobj   
50 [0x32]:          loadl ebx, fp+1   
51 [0x33]:          popobj2    
52 [0x34]:          movr adx, ebx   
53 [0x35]:          chklen adx   
54 [0x36]:          movnd adx   
55 [0x37]:          popobj   
56 [0x38]: line: 61 movl 3   
57 [0x39]:          returnobj   
58 [0x3a]:          movl 0   
59 [0x3b]:          _ulck   
60 [0x3c]:          ret   
61 [0x3d]:          movl 0   
62 [0x3e]:          _ulck   


function: std#synced_list<std.io.task#job>.expand[3573] params(0) in file: lib\support\0.2.805/synced_list.sharp:65:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 25   
9 [0x9]: line: 67 movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          pushobj   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          sizeof ebx   
17 [0x11]:          rstore ebx   
18 [0x12]:          movi #128, ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          add ecx, ebx -> ebx   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @2058 // <std.io#__srt_global.realloc>   
24 [0x18]:          jmp @52   
25 [0x19]: line: 69 movl 0   
26 [0x1a]:          movn #1   
28 [0x1c]:          pushobj   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          sizeof ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          sizeof ebx   
38 [0x26]:          rstore ebx   
39 [0x27]:          movi #4, ebx   
41 [0x29]:          loadval ecx   
42 [0x2a]:          shr ecx, ebx -> ebx   
43 [0x2b]:          loadval ecx   
44 [0x2c]:          add ecx, ebx -> ebx   
45 [0x2d]:          rstore ebx   
46 [0x2e]:          movi #128, ebx   
48 [0x30]:          loadval ecx   
49 [0x31]:          add ecx, ebx -> ebx   
50 [0x32]:          rstore ebx   
51 [0x33]:          call @2058 // <std.io#__srt_global.realloc>   
52 [0x34]:          nop   
53 [0x35]:          ret   


function: std#synced_list<std.io.task#job>.clear[3574] params(0) in file: lib\support\0.2.805/synced_list.sharp:72:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io.task#job[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]: line: 75 movi #0, ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          loadval ebx   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]:          movl 0   
20 [0x14]:          _ulck   
21 [0x15]:          ret   


constructor: std#list<std.io.task#job>.list[3575] params(0) in file: lib\support\0.2.805/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 14 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io.task#job[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std.io.task#job>.list[3576] params(1) in file: lib\support\0.2.805/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 18 loadl ebx, fp+1   
3 [0x3]:          new_classarray ebx  // std.io.task#job[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<std.io.task#job>.list[3577] params(1) in file: lib\support\0.2.805/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 22 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @3588 // <std#list<std.io.task#job>.add_all>   
7 [0x7]:          ret   


function: std#list<std.io.task#job>.empty[3578] params(0) in file: lib\support\0.2.805/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #0, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#list<std.io.task#job>.set_compact[3579] params(1) in file: lib\support\0.2.805/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #2   
5 [0x5]:          loadval ebx   
6 [0x6]:          movi #0, adx   
8 [0x8]:          rmov adx, ebx   
9 [0x9]:          ret   


function: std#list<std.io.task#job>.get_elements[3580] params(0) in file: lib\support\0.2.805/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #0, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 20   
15 [0xf]:          pushnull    
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   
19 [0x13]:          jmp @39   
20 [0x14]: line: 33 movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movi #0, ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          chklen adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          rstore ebx   
35 [0x23]:          call @2078 // <std.io#__srt_global.copy>   
36 [0x24]:          popobj2    
37 [0x25]:          returnobj   
38 [0x26]:          ret   
39 [0x27]:          nop   


overload function: std#list<std.io.task#job>.operator[[3581] params(1) in file: lib\support\0.2.805/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 38 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3601 // <std#list<std.io.task#job>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 39 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          movnd adx   
41 [0x29]:          returnobj   
42 [0x2a]:          ret   


function: std#list<std.io.task#job>.at[3582] params(1) in file: lib\support\0.2.805/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 44 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3601 // <std#list<std.io.task#job>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 45 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          movnd adx   
41 [0x29]:          returnobj   
42 [0x2a]:          ret   


function: std#list<std.io.task#job>.last[3583] params(0) in file: lib\support\0.2.805/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          sub ecx, ebx -> ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3582 // <std#list<std.io.task#job>.at>   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#list<std.io.task#job>.put[3584] params(2) in file: lib\support\0.2.805/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 54 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3601 // <std#list<std.io.task#job>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 56 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          movnd adx   
41 [0x29]:          smovr_3 fp+3   
42 [0x2a]: line: 57 movl 2   
43 [0x2b]:          pushobj   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          pushobj   
48 [0x30]:          loadl ebx, fp+1   
49 [0x31]:          popobj2    
50 [0x32]:          movr adx, ebx   
51 [0x33]:          chklen adx   
52 [0x34]:          movnd adx   
53 [0x35]:          popobj   
54 [0x36]: line: 58 movl 3   
55 [0x37]:          returnobj   
56 [0x38]:          ret   


function: std#list<std.io.task#job>.expand[3585] params(0) in file: lib\support\0.2.805/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 25   
9 [0x9]: line: 63 movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          pushobj   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          sizeof ebx   
17 [0x11]:          rstore ebx   
18 [0x12]:          movi #128, ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          add ecx, ebx -> ebx   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @2058 // <std.io#__srt_global.realloc>   
24 [0x18]:          jmp @52   
25 [0x19]: line: 65 movl 0   
26 [0x1a]:          movn #1   
28 [0x1c]:          pushobj   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          sizeof ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          sizeof ebx   
38 [0x26]:          rstore ebx   
39 [0x27]:          movi #4, ebx   
41 [0x29]:          loadval ecx   
42 [0x2a]:          shr ecx, ebx -> ebx   
43 [0x2b]:          loadval ecx   
44 [0x2c]:          add ecx, ebx -> ebx   
45 [0x2d]:          rstore ebx   
46 [0x2e]:          movi #128, ebx   
48 [0x30]:          loadval ecx   
49 [0x31]:          add ecx, ebx -> ebx   
50 [0x32]:          rstore ebx   
51 [0x33]:          call @2058 // <std.io#__srt_global.realloc>   
52 [0x34]:          nop   
53 [0x35]:          ret   


function: std#list<std.io.task#job>.clear[3586] params(0) in file: lib\support\0.2.805/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std.io.task#job[]   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 70 movi #0, ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          loadval ebx   
14 [0xe]:          movi #0, adx   
16 [0x10]:          rmov adx, ebx   
17 [0x11]:          ret   


function: std#list<std.io.task#job>.add_all[3587] params(1) in file: lib\support\0.2.805/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          movi #0, ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          chklen adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2078 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #25, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 75 movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          chklen adx   
31 [0x1f]:          iaload ebx, adx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          loadval ebx   
37 [0x25]:          movi #0, adx   
39 [0x27]:          rmov adx, ebx   
40 [0x28]:          ret   


function: std#list<std.io.task#job>.add_all[3588] params(1) in file: lib\support\0.2.805/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          pushnull    
3 [0x3]:          itest ebx   
4 [0x4]:          not ebx, ebx   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 36   
7 [0x7]: line: 80 movl 1   
8 [0x8]:          pushobj   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2078 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #25, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 81 movl 1   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          loadval ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          jmp @53   
36 [0x24]: line: 83 movi #0, ebx   
38 [0x26]:          rstore ebx   
39 [0x27]:          movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          rmov adx, ebx   
46 [0x2e]: line: 84 movi #10, ebx   
48 [0x30]:          new_classarray ebx  // std.io.task#job[]   
49 [0x31]:          movl 0   
50 [0x32]:          movn #1   
52 [0x34]:          popobj   
53 [0x35]:          nop   
54 [0x36]:          ret   


function: std#list<std.io.task#job>.add[3589] params(1) in file: lib\support\0.2.805/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          sizeof ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          gte ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 20   
17 [0x11]: line: 90 movl 0   
18 [0x12]:          pushobj   
19 [0x13]:          call @3585 // <std#list<std.io.task#job>.expand>   
20 [0x14]:          nop   
21 [0x15]: line: 91 movl 1   
22 [0x16]:          pushobj   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          chklen adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          inc ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]:          ret   


function: std#list<std.io.task#job>.indexof[3590] params(1) in file: lib\support\0.2.805/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movi #0, ebx   
2 [0x2]:          smovr_2 ebx, fp+2   
3 [0x3]:          loadl ebx, fp+2   
4 [0x4]:          rstore ebx   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          chklen adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          loadval ecx   
13 [0xd]:          lt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 41   
17 [0x11]: line: 96 movl 1   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          pushobj   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          popobj2    
25 [0x19]:          movr adx, ebx   
26 [0x1a]:          chklen adx   
27 [0x1b]:          movnd adx   
28 [0x1c]:          pushobj   
29 [0x1d]:          itest ebx   
30 [0x1e]:          movr cmt, ebx   
31 [0x1f]:          jne 35   
32 [0x20]: line: 97 loadl ebx, fp+2   
33 [0x21]:          return_val ebx   
34 [0x22]:          ret   
35 [0x23]:          nop   
36 [0x24]:          loadl ebx, fp+2   
37 [0x25]:          movr egx, ebx   
38 [0x26]:          inc ebx   
39 [0x27]:          smovr_2 ebx, fp+2   
40 [0x28]:          jmp @3   
41 [0x29]: line: 101 movi #-1, ebx   
43 [0x2b]:           return_val ebx   
44 [0x2c]:           ret   


function: std#list<std.io.task#job>.pop_back[3591] params(0) in file: lib\support\0.2.805/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #0, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           gt ecx, ebx   
12 [0xc]:           movr ebx, cmt   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 41   
15 [0xf]: line: 106 movl 1   
16 [0x10]:           del   
17 [0x11]: line: 107 movl 1   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           movi #0, adx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           movr egx, ebx   
31 [0x1f]:           dec ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           movr ebx, egx   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           popobj   
41 [0x29]:           nop   
42 [0x2a]:           ret   


function: std#list<std.io.task#job>.size[3592] params(0) in file: lib\support\0.2.805/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std#list<std.io.task#job>.insert[3593] params(2) in file: lib\support\0.2.805/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 20   
13 [0xd]:           loadl ebx, fp+1   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 31   
22 [0x16]: line: 115 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           movl 0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+1   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           call @3601 // <std#list<std.io.task#job>.out_of_bounds_msg>   
29 [0x1d]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 117 movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           movi #0, adx   
37 [0x25]:           chklen adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #0, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           test ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 53   
47 [0x2f]: line: 118 movl 0   
48 [0x30]:           pushobj   
49 [0x31]:           movl 2   
50 [0x32]:           pushobj   
51 [0x33]:           call @3589 // <std#list<std.io.task#job>.add>   
52 [0x34]:           jmp @149   
53 [0x35]: line: 120 movl 0   
54 [0x36]:           movn #0   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           chklen adx   
59 [0x3b]:           iaload ebx, adx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movl 0   
62 [0x3e]:           movn #1   
64 [0x40]:           sizeof ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           gte ecx, ebx   
67 [0x43]:           movr ebx, cmt   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 73   
70 [0x46]: line: 121 movl 0   
71 [0x47]:           pushobj   
72 [0x48]:           call @3585 // <std#list<std.io.task#job>.expand>   
73 [0x49]:           nop   
74 [0x4a]: line: 122 movl 0   
75 [0x4b]:           movn #0   
77 [0x4d]:           movi #0, adx   
79 [0x4f]:           chklen adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           movr egx, ebx   
82 [0x52]:           inc ebx   
83 [0x53]:           movi #0, adx   
85 [0x55]:           rmov adx, ebx   
86 [0x56]: line: 123 movl 0   
87 [0x57]:           movn #0   
89 [0x59]:           movi #0, adx   
91 [0x5b]:           chklen adx   
92 [0x5c]:           iaload ebx, adx   
93 [0x5d]:           rstore ebx   
94 [0x5e]:           movi #1, ebx   
96 [0x60]:           loadval ecx   
97 [0x61]:           sub ecx, ebx -> ebx   
98 [0x62]:           smovr_2 ebx, fp+3   
99 [0x63]:           loadl ebx, fp+3   
100 [0x64]:           rstore ebx   
101 [0x65]:           loadl ebx, fp+1   
102 [0x66]:           loadval ecx   
103 [0x67]:           gt ecx, ebx   
104 [0x68]:           movr ebx, cmt   
105 [0x69]:           movr cmt, ebx   
106 [0x6a]:           jne 137   
107 [0x6b]: line: 124 movl 0   
108 [0x6c]:           movn #1   
110 [0x6e]:           pushobj   
111 [0x6f]:           loadl ebx, fp+3   
112 [0x70]:           rstore ebx   
113 [0x71]:           movi #1, ebx   
115 [0x73]:           loadval ecx   
116 [0x74]:           sub ecx, ebx -> ebx   
117 [0x75]:           popobj2    
118 [0x76]:           movr adx, ebx   
119 [0x77]:           chklen adx   
120 [0x78]:           movnd adx   
121 [0x79]:           pushobj   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+3   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           loadl ebx, fp+3   
133 [0x85]:           movr egx, ebx   
134 [0x86]:           dec ebx   
135 [0x87]:           smovr_2 ebx, fp+3   
136 [0x88]:           jmp @99   
137 [0x89]: line: 125 movl 2   
138 [0x8a]:           pushobj   
139 [0x8b]:           movl 0   
140 [0x8c]:           movn #1   
142 [0x8e]:           pushobj   
143 [0x8f]:           loadl ebx, fp+1   
144 [0x90]:           popobj2    
145 [0x91]:           movr adx, ebx   
146 [0x92]:           chklen adx   
147 [0x93]:           movnd adx   
148 [0x94]:           popobj   
149 [0x95]:           nop   
150 [0x96]:           ret   


function: std#list<std.io.task#job>.find[3594] params(2) in file: lib\support\0.2.805/list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 53   
17 [0x11]: line: 131 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 1   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 47   
36 [0x24]: line: 132 movl 0   
37 [0x25]:           movn #1   
39 [0x27]:           pushobj   
40 [0x28]:           loadl ebx, fp+3   
41 [0x29]:           popobj2    
42 [0x2a]:           movr adx, ebx   
43 [0x2b]:           chklen adx   
44 [0x2c]:           movnd adx   
45 [0x2d]:           returnobj   
46 [0x2e]:           ret   
47 [0x2f]:           nop   
48 [0x30]:           loadl ebx, fp+3   
49 [0x31]:           movr egx, ebx   
50 [0x32]:           inc ebx   
51 [0x33]:           smovr_2 ebx, fp+3   
52 [0x34]:           jmp @3   
53 [0x35]: line: 136 movl 4   
54 [0x36]:           del   
55 [0x37]: line: 137 movl 4   
56 [0x38]:           returnobj   
57 [0x39]:           ret   


function: std#list<std.io.task#job>.remove[3595] params(1) in file: lib\support\0.2.805/list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+2   
3 [0x3]:           loadl ebx, fp+2   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 44   
17 [0x11]: line: 142 movl 1   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           itest ebx   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 38   
32 [0x20]: line: 143 movl 0   
33 [0x21]:           pushobj   
34 [0x22]:           loadl ebx, fp+2   
35 [0x23]:           rstore ebx   
36 [0x24]:           call @3598 // <std#list<std.io.task#job>.remove_at>   
37 [0x25]: line: 144 ret   
38 [0x26]:           nop   
39 [0x27]:           loadl ebx, fp+2   
40 [0x28]:           movr egx, ebx   
41 [0x29]:           inc ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]:           jmp @3   
44 [0x2c]:           ret   


function: std#list<std.io.task#job>.remove[3596] params(2) in file: lib\support\0.2.805/list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 48   
17 [0x11]: line: 151 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           movnd adx   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 42   
36 [0x24]: line: 152 movl 0   
37 [0x25]:           pushobj   
38 [0x26]:           loadl ebx, fp+3   
39 [0x27]:           rstore ebx   
40 [0x28]:           call @3598 // <std#list<std.io.task#job>.remove_at>   
41 [0x29]: line: 153 ret   
42 [0x2a]:           nop   
43 [0x2b]:           loadl ebx, fp+3   
44 [0x2c]:           movr egx, ebx   
45 [0x2d]:           inc ebx   
46 [0x2e]:           smovr_2 ebx, fp+3   
47 [0x2f]:           jmp @3   
48 [0x30]:           ret   


function: std#list<std.io.task#job>.replace[3597] params(2) in file: lib\support\0.2.805/list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 55   
17 [0x11]: line: 160 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           movnd adx   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 49   
36 [0x24]: line: 161 movl 1   
37 [0x25]:           pushobj   
38 [0x26]:           movl 0   
39 [0x27]:           movn #1   
41 [0x29]:           pushobj   
42 [0x2a]:           loadl ebx, fp+3   
43 [0x2b]:           popobj2    
44 [0x2c]:           movr adx, ebx   
45 [0x2d]:           chklen adx   
46 [0x2e]:           movnd adx   
47 [0x2f]:           popobj   
48 [0x30]: line: 162 ret   
49 [0x31]:           nop   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           movr egx, ebx   
52 [0x34]:           inc ebx   
53 [0x35]:           smovr_2 ebx, fp+3   
54 [0x36]:           jmp @3   
55 [0x37]:           ret   


function: std#list<std.io.task#job>.remove_at[3598] params(1) in file: lib\support\0.2.805/list.sharp:167:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 168 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 20   
13 [0xd]:           loadl ebx, fp+1   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 31   
22 [0x16]: line: 169 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           movl 0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+1   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           call @3601 // <std#list<std.io.task#job>.out_of_bounds_msg>   
29 [0x1d]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 171 movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           movi #0, adx   
37 [0x25]:           chklen adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           rstore ebx   
40 [0x28]:           loadl ebx, fp+1   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           rstore ebx   
44 [0x2c]:           movi #1, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           sub ecx, ebx -> ebx   
48 [0x30]:           smovr_2 ebx, fp+2   
49 [0x31]: line: 172 loadl ebx, fp+2   
50 [0x32]:           rstore ebx   
51 [0x33]:           movi #0, ebx   
53 [0x35]:           loadval ecx   
54 [0x36]:           gt ecx, ebx   
55 [0x37]:           movr ebx, cmt   
56 [0x38]:           movr cmt, ebx   
57 [0x39]:           jne 84   
58 [0x3a]: line: 173 movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           movl 0   
63 [0x3f]:           movn #1   
65 [0x41]:           pushobj   
66 [0x42]:           loadl ebx, fp+1   
67 [0x43]:           rstore ebx   
68 [0x44]:           loadl ebx, fp+1   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #1, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movl 0   
76 [0x4c]:           movn #0   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           chklen adx   
81 [0x51]:           iaload ebx, adx   
82 [0x52]:           rstore ebx   
83 [0x53]:           call @2068 // <std.io#__srt_global.memcopy>   
84 [0x54]:           nop   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           pushobj   
87 [0x57]:           call @3591 // <std#list<std.io.task#job>.pop_back>   
88 [0x58]:           ret   


function: std#list<std.io.task#job>.indexof[3599] params(2) in file: lib\support\0.2.805/list.sharp:178:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 179 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 45   
17 [0x11]: line: 180 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 1   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 39   
36 [0x24]: line: 181 loadl ebx, fp+3   
37 [0x25]:           return_val ebx   
38 [0x26]:           ret   
39 [0x27]:           nop   
40 [0x28]:           loadl ebx, fp+3   
41 [0x29]:           movr egx, ebx   
42 [0x2a]:           inc ebx   
43 [0x2b]:           smovr_2 ebx, fp+3   
44 [0x2c]:           jmp @3   
45 [0x2d]: line: 185 movi #-1, ebx   
47 [0x2f]:           return_val ebx   
48 [0x30]:           ret   


function: std#list<std.io.task#job>.to_string[3600] params(0) in file: lib\support\0.2.805/list.sharp:188:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 189 new_class @70 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           call @3474 // <std#string_builder.string_builder>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 191 movl 1   
6 [0x6]:           pushobj   
7 [0x7]:           newstr @100 // [    
8 [0x8]:           call @3470 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 192 movi #0, ebx   
12 [0xc]:           smovr_2 ebx, fp+2   
13 [0xd]:           loadl ebx, fp+2   
14 [0xe]:           rstore ebx   
15 [0xf]:           movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           movi #0, adx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           loadval ecx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 71   
27 [0x1b]: line: 193 movl 1   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #1   
32 [0x20]:           pushobj   
33 [0x21]:           loadl ebx, fp+2   
34 [0x22]:           popobj2    
35 [0x23]:           movr adx, ebx   
36 [0x24]:           chklen adx   
37 [0x25]:           movnd adx   
38 [0x26]:           pushobj   
39 [0x27]:           call @3466 // <std#string_builder.operator+=>   
40 [0x28]:           pop   
41 [0x29]: line: 195 loadl ebx, fp+2   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movi #1, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           add ecx, ebx -> ebx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movl 0   
49 [0x31]:           movn #0   
51 [0x33]:           movi #0, adx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           loadval ecx   
56 [0x38]:           lt ecx, ebx   
57 [0x39]:           movr ebx, cmt   
58 [0x3a]:           movr cmt, ebx   
59 [0x3b]:           jne 65   
60 [0x3c]: line: 196 movl 1   
61 [0x3d]:           pushobj   
62 [0x3e]:           newstr @101 // ,    
63 [0x3f]:           call @3470 // <std#string_builder.operator+=>   
64 [0x40]:           pop   
65 [0x41]:           nop   
66 [0x42]:           loadl ebx, fp+2   
67 [0x43]:           movr egx, ebx   
68 [0x44]:           inc ebx   
69 [0x45]:           smovr_2 ebx, fp+2   
70 [0x46]:           jmp @13   
71 [0x47]: line: 200 movl 1   
72 [0x48]:           pushobj   
73 [0x49]:           newstr @102 //  ]   
74 [0x4a]:           call @3470 // <std#string_builder.operator+=>   
75 [0x4b]:           pop   
76 [0x4c]: line: 201 movl 1   
77 [0x4d]:           pushobj   
78 [0x4e]:           call @3447 // <std#string_builder.to_string>   
79 [0x4f]:           popobj2    
80 [0x50]:           returnobj   
81 [0x51]:           ret   


function: std#list<std.io.task#job>.out_of_bounds_msg[3601] params(1) in file: lib\support\0.2.805/list.sharp:204:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 205 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @103 // Index:    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           loadl ebx, fp+1   
5 [0x5]:           rstore ebx   
6 [0x6]:           call @3403 // <std#string.operator+>   
7 [0x7]:           newstr @104 // , size:    
8 [0x8]:           call @3383 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @3403 // <std#string.operator+>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   


function: std#synced_list<std.io.task#job>.add_all[3602] params(1) in file: lib\support\0.2.805/synced_list.sharp:79:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 81 movl 1   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          movi #0, ebx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movl 1   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @2078 // <std.io#__srt_global.copy>   
18 [0x12]:          popobj2    
19 [0x13]:          movi #25, cmt   
21 [0x15]:          cast cmt   
22 [0x16]:          pushobj   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          popobj   
27 [0x1b]: line: 82 movl 1   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          chklen adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          rstore ebx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #0   
38 [0x26]:          loadval ebx   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          movl 0   
43 [0x2b]:          _ulck   
44 [0x2c]:          ret   


function: std#synced_list<std.io.task#job>.add[3603] params(1) in file: lib\support\0.2.805/synced_list.sharp:86:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 88 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          gte ecx, ebx   
16 [0x10]:          movr ebx, cmt   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 22   
19 [0x13]: line: 89 movl 0   
20 [0x14]:          pushobj   
21 [0x15]:          call @3573 // <std#synced_list<std.io.task#job>.expand>   
22 [0x16]:          nop   
23 [0x17]: line: 90 movl 1   
24 [0x18]:          pushobj   
25 [0x19]:          movl 0   
26 [0x1a]:          movn #1   
28 [0x1c]:          pushobj   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          movr egx, ebx   
37 [0x25]:          inc ebx   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]:          movr ebx, egx   
42 [0x2a]:          popobj2    
43 [0x2b]:          movr adx, ebx   
44 [0x2c]:          chklen adx   
45 [0x2d]:          movnd adx   
46 [0x2e]:          popobj   
47 [0x2f]:          movl 0   
48 [0x30]:          _ulck   
49 [0x31]:          ret   


function: std#synced_list<std.io.task#job>.indexof[3604] params(1) in file: lib\support\0.2.805/synced_list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 96 movi #0, ebx   
4 [0x4]:          smovr_2 ebx, fp+2   
5 [0x5]:          loadl ebx, fp+2   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          chklen adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          loadval ecx   
15 [0xf]:          lt ecx, ebx   
16 [0x10]:          movr ebx, cmt   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 45   
19 [0x13]: line: 97 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          loadl ebx, fp+2   
26 [0x1a]:          popobj2    
27 [0x1b]:          movr adx, ebx   
28 [0x1c]:          chklen adx   
29 [0x1d]:          movnd adx   
30 [0x1e]:          pushobj   
31 [0x1f]:          itest ebx   
32 [0x20]:          movr cmt, ebx   
33 [0x21]:          jne 39   
34 [0x22]: line: 98 loadl ebx, fp+2   
35 [0x23]:          return_val ebx   
36 [0x24]:          movl 0   
37 [0x25]:          _ulck   
38 [0x26]:          ret   
39 [0x27]:          nop   
40 [0x28]:          loadl ebx, fp+2   
41 [0x29]:          movr egx, ebx   
42 [0x2a]:          inc ebx   
43 [0x2b]:          smovr_2 ebx, fp+2   
44 [0x2c]:          jmp @5   
45 [0x2d]: line: 102 movi #-1, ebx   
47 [0x2f]:           return_val ebx   
48 [0x30]:           movl 0   
49 [0x31]:           _ulck   
50 [0x32]:           ret   
51 [0x33]:           movl 0   
52 [0x34]:           _ulck   


function: std#synced_list<std.io.task#job>.pop_back[3605] params(0) in file: lib\support\0.2.805/synced_list.sharp:106:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #0, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           gt ecx, ebx   
12 [0xc]:           movr ebx, cmt   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 41   
15 [0xf]: line: 108 movl 1   
16 [0x10]:           del   
17 [0x11]: line: 109 movl 1   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           movi #0, adx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           movr egx, ebx   
31 [0x1f]:           dec ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           movr ebx, egx   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           popobj   
41 [0x29]:           nop   
42 [0x2a]:           ret   


function: std#synced_list<std.io.task#job>.size[3606] params(0) in file: lib\support\0.2.805/synced_list.sharp:113:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 115 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           return_val ebx   
10 [0xa]:           movl 0   
11 [0xb]:           _ulck   
12 [0xc]:           ret   
13 [0xd]:           movl 0   
14 [0xe]:           _ulck   


function: std#synced_list<std.io.task#job>.empty[3607] params(0) in file: lib\support\0.2.805/synced_list.sharp:119:8: note:  
		    def empty() : var {
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 121 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           movi #0, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           test ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           return_val ebx   
16 [0x10]:           movl 0   
17 [0x11]:           _ulck   
18 [0x12]:           ret   
19 [0x13]:           movl 0   
20 [0x14]:           _ulck   


function: std#synced_list<std.io.task#job>.insert[3608] params(2) in file: lib\support\0.2.805/synced_list.sharp:125:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 127 loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 22   
15 [0xf]:           loadl ebx, fp+1   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 33   
24 [0x18]: line: 128 new_class @7 // std#out_of_bounds_exception   
25 [0x19]:           dup    
26 [0x1a]:           movl 0   
27 [0x1b]:           pushobj   
28 [0x1c]:           loadl ebx, fp+1   
29 [0x1d]:           rstore ebx   
30 [0x1e]:           call @3616 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
31 [0x1f]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
32 [0x20]:           throw    
33 [0x21]:           nop   
34 [0x22]: line: 130 movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           chklen adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           movi #0, ebx   
44 [0x2c]:           loadval ecx   
45 [0x2d]:           test ecx, ebx   
46 [0x2e]:           movr ebx, cmt   
47 [0x2f]:           movr cmt, ebx   
48 [0x30]:           jne 55   
49 [0x31]: line: 131 movl 0   
50 [0x32]:           pushobj   
51 [0x33]:           movl 2   
52 [0x34]:           pushobj   
53 [0x35]:           call @3603 // <std#synced_list<std.io.task#job>.add>   
54 [0x36]:           jmp @151   
55 [0x37]: line: 133 movl 0   
56 [0x38]:           movn #0   
58 [0x3a]:           movi #0, adx   
60 [0x3c]:           chklen adx   
61 [0x3d]:           iaload ebx, adx   
62 [0x3e]:           rstore ebx   
63 [0x3f]:           movl 0   
64 [0x40]:           movn #1   
66 [0x42]:           sizeof ebx   
67 [0x43]:           loadval ecx   
68 [0x44]:           gte ecx, ebx   
69 [0x45]:           movr ebx, cmt   
70 [0x46]:           movr cmt, ebx   
71 [0x47]:           jne 75   
72 [0x48]: line: 134 movl 0   
73 [0x49]:           pushobj   
74 [0x4a]:           call @3573 // <std#synced_list<std.io.task#job>.expand>   
75 [0x4b]:           nop   
76 [0x4c]: line: 135 movl 0   
77 [0x4d]:           movn #0   
79 [0x4f]:           movi #0, adx   
81 [0x51]:           chklen adx   
82 [0x52]:           iaload ebx, adx   
83 [0x53]:           movr egx, ebx   
84 [0x54]:           inc ebx   
85 [0x55]:           movi #0, adx   
87 [0x57]:           rmov adx, ebx   
88 [0x58]: line: 136 movl 0   
89 [0x59]:           movn #0   
91 [0x5b]:           movi #0, adx   
93 [0x5d]:           chklen adx   
94 [0x5e]:           iaload ebx, adx   
95 [0x5f]:           rstore ebx   
96 [0x60]:           movi #1, ebx   
98 [0x62]:           loadval ecx   
99 [0x63]:           sub ecx, ebx -> ebx   
100 [0x64]:           smovr_2 ebx, fp+3   
101 [0x65]:           loadl ebx, fp+3   
102 [0x66]:           rstore ebx   
103 [0x67]:           loadl ebx, fp+1   
104 [0x68]:           loadval ecx   
105 [0x69]:           gt ecx, ebx   
106 [0x6a]:           movr ebx, cmt   
107 [0x6b]:           movr cmt, ebx   
108 [0x6c]:           jne 139   
109 [0x6d]: line: 137 movl 0   
110 [0x6e]:           movn #1   
112 [0x70]:           pushobj   
113 [0x71]:           loadl ebx, fp+3   
114 [0x72]:           rstore ebx   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           sub ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           pushobj   
124 [0x7c]:           movl 0   
125 [0x7d]:           movn #1   
127 [0x7f]:           pushobj   
128 [0x80]:           loadl ebx, fp+3   
129 [0x81]:           popobj2    
130 [0x82]:           movr adx, ebx   
131 [0x83]:           chklen adx   
132 [0x84]:           movnd adx   
133 [0x85]:           popobj   
134 [0x86]:           loadl ebx, fp+3   
135 [0x87]:           movr egx, ebx   
136 [0x88]:           dec ebx   
137 [0x89]:           smovr_2 ebx, fp+3   
138 [0x8a]:           jmp @101   
139 [0x8b]: line: 138 movl 2   
140 [0x8c]:           pushobj   
141 [0x8d]:           movl 0   
142 [0x8e]:           movn #1   
144 [0x90]:           pushobj   
145 [0x91]:           loadl ebx, fp+1   
146 [0x92]:           popobj2    
147 [0x93]:           movr adx, ebx   
148 [0x94]:           chklen adx   
149 [0x95]:           movnd adx   
150 [0x96]:           popobj   
151 [0x97]:           nop   
152 [0x98]:           movl 0   
153 [0x99]:           _ulck   
154 [0x9a]:           ret   


function: std#synced_list<std.io.task#job>.remove[3609] params(1) in file: lib\support\0.2.805/synced_list.sharp:144:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 146 movi #0, ebx   
4 [0x4]:           smovr_2 ebx, fp+2   
5 [0x5]:           loadl ebx, fp+2   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           chklen adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           loadval ecx   
15 [0xf]:           lt ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 48   
19 [0x13]: line: 147 movl 1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+2   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           movnd adx   
30 [0x1e]:           pushobj   
31 [0x1f]:           itest ebx   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 42   
34 [0x22]: line: 148 movl 0   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+2   
37 [0x25]:           rstore ebx   
38 [0x26]:           call @3611 // <std#synced_list<std.io.task#job>.remove_at>   
39 [0x27]: line: 149 movl 0   
40 [0x28]:           _ulck   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           loadl ebx, fp+2   
44 [0x2c]:           movr egx, ebx   
45 [0x2d]:           inc ebx   
46 [0x2e]:           smovr_2 ebx, fp+2   
47 [0x2f]:           jmp @5   
48 [0x30]:           movl 0   
49 [0x31]:           _ulck   
50 [0x32]:           ret   


function: std#synced_list<std.io.task#job>.remove[3610] params(2) in file: lib\support\0.2.805/synced_list.sharp:155:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 157 movi #0, ebx   
4 [0x4]:           smovr_2 ebx, fp+3   
5 [0x5]:           loadl ebx, fp+3   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           chklen adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           loadval ecx   
15 [0xf]:           lt ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 52   
19 [0x13]: line: 158 loadl ebx, fp+2   
20 [0x14]:           rstore ebx   
21 [0x15]:           movl 1   
22 [0x16]:           pushobj   
23 [0x17]:           movl 0   
24 [0x18]:           movn #1   
26 [0x1a]:           pushobj   
27 [0x1b]:           loadl ebx, fp+3   
28 [0x1c]:           popobj2    
29 [0x1d]:           movr adx, ebx   
30 [0x1e]:           chklen adx   
31 [0x1f]:           movnd adx   
32 [0x20]:           pushobj   
33 [0x21]:           smov ebx, sp+[-2]   
34 [0x22]:           calld ebx   
35 [0x23]:           loadval ebx   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 46   
38 [0x26]: line: 159 movl 0   
39 [0x27]:           pushobj   
40 [0x28]:           loadl ebx, fp+3   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @3611 // <std#synced_list<std.io.task#job>.remove_at>   
43 [0x2b]: line: 160 movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           ret   
46 [0x2e]:           nop   
47 [0x2f]:           loadl ebx, fp+3   
48 [0x30]:           movr egx, ebx   
49 [0x31]:           inc ebx   
50 [0x32]:           smovr_2 ebx, fp+3   
51 [0x33]:           jmp @5   
52 [0x34]:           movl 0   
53 [0x35]:           _ulck   
54 [0x36]:           ret   


function: std#synced_list<std.io.task#job>.remove_at[3611] params(1) in file: lib\support\0.2.805/synced_list.sharp:166:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 168 loadl ebx, fp+1   
3 [0x3]:           rstore ebx   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           chklen adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gte ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 22   
15 [0xf]:           loadl ebx, fp+1   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 33   
24 [0x18]: line: 169 new_class @7 // std#out_of_bounds_exception   
25 [0x19]:           dup    
26 [0x1a]:           movl 0   
27 [0x1b]:           pushobj   
28 [0x1c]:           loadl ebx, fp+1   
29 [0x1d]:           rstore ebx   
30 [0x1e]:           call @3616 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
31 [0x1f]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
32 [0x20]:           throw    
33 [0x21]:           nop   
34 [0x22]: line: 171 movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           chklen adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           loadl ebx, fp+1   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           sub ecx, ebx -> ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           movi #1, ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           sub ecx, ebx -> ebx   
50 [0x32]:           smovr_2 ebx, fp+2   
51 [0x33]: line: 172 loadl ebx, fp+2   
52 [0x34]:           rstore ebx   
53 [0x35]:           movi #0, ebx   
55 [0x37]:           loadval ecx   
56 [0x38]:           gt ecx, ebx   
57 [0x39]:           movr ebx, cmt   
58 [0x3a]:           movr cmt, ebx   
59 [0x3b]:           jne 86   
60 [0x3c]: line: 173 movl 0   
61 [0x3d]:           movn #1   
63 [0x3f]:           pushobj   
64 [0x40]:           movl 0   
65 [0x41]:           movn #1   
67 [0x43]:           pushobj   
68 [0x44]:           loadl ebx, fp+1   
69 [0x45]:           rstore ebx   
70 [0x46]:           loadl ebx, fp+1   
71 [0x47]:           rstore ebx   
72 [0x48]:           movi #1, ebx   
74 [0x4a]:           loadval ecx   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           movl 0   
78 [0x4e]:           movn #0   
80 [0x50]:           movi #0, adx   
82 [0x52]:           chklen adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           rstore ebx   
85 [0x55]:           call @2068 // <std.io#__srt_global.memcopy>   
86 [0x56]:           nop   
87 [0x57]: line: 175 movl 0   
88 [0x58]:           pushobj   
89 [0x59]:           call @3605 // <std#synced_list<std.io.task#job>.pop_back>   
90 [0x5a]:           movl 0   
91 [0x5b]:           _ulck   
92 [0x5c]:           ret   


function: std#synced_list<std.io.task#job>.indexof[3612] params(2) in file: lib\support\0.2.805/synced_list.sharp:179:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 180 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 45   
17 [0x11]: line: 181 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 1   
30 [0x1e]:           pushobj   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 39   
36 [0x24]: line: 182 loadl ebx, fp+3   
37 [0x25]:           return_val ebx   
38 [0x26]:           ret   
39 [0x27]:           nop   
40 [0x28]:           loadl ebx, fp+3   
41 [0x29]:           movr egx, ebx   
42 [0x2a]:           inc ebx   
43 [0x2b]:           smovr_2 ebx, fp+3   
44 [0x2c]:           jmp @3   
45 [0x2d]: line: 186 movi #-1, ebx   
47 [0x2f]:           return_val ebx   
48 [0x30]:           ret   


function: std#synced_list<std.io.task#job>.find[3613] params(2) in file: lib\support\0.2.805/synced_list.sharp:189:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 191 movi #0, ebx   
4 [0x4]:           smovr_2 ebx, fp+3   
5 [0x5]:           loadl ebx, fp+3   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           chklen adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           loadval ecx   
15 [0xf]:           lt ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 57   
19 [0x13]: line: 192 loadl ebx, fp+2   
20 [0x14]:           rstore ebx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           movnd adx   
30 [0x1e]:           pushobj   
31 [0x1f]:           movl 1   
32 [0x20]:           pushobj   
33 [0x21]:           smov ebx, sp+[-2]   
34 [0x22]:           calld ebx   
35 [0x23]:           loadval ebx   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 51   
38 [0x26]: line: 193 movl 0   
39 [0x27]:           movn #1   
41 [0x29]:           pushobj   
42 [0x2a]:           loadl ebx, fp+3   
43 [0x2b]:           popobj2    
44 [0x2c]:           movr adx, ebx   
45 [0x2d]:           chklen adx   
46 [0x2e]:           movnd adx   
47 [0x2f]:           returnobj   
48 [0x30]:           movl 0   
49 [0x31]:           _ulck   
50 [0x32]:           ret   
51 [0x33]:           nop   
52 [0x34]:           loadl ebx, fp+3   
53 [0x35]:           movr egx, ebx   
54 [0x36]:           inc ebx   
55 [0x37]:           smovr_2 ebx, fp+3   
56 [0x38]:           jmp @5   
57 [0x39]: line: 197 movl 4   
58 [0x3a]:           del   
59 [0x3b]: line: 198 movl 4   
60 [0x3c]:           returnobj   
61 [0x3d]:           movl 0   
62 [0x3e]:           _ulck   
63 [0x3f]:           ret   
64 [0x40]:           movl 0   
65 [0x41]:           _ulck   


function: std#synced_list<std.io.task#job>.replace[3614] params(2) in file: lib\support\0.2.805/synced_list.sharp:202:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 204 movi #0, ebx   
4 [0x4]:           smovr_2 ebx, fp+3   
5 [0x5]:           loadl ebx, fp+3   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           chklen adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           loadval ecx   
15 [0xf]:           lt ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 62   
19 [0x13]: line: 205 loadl ebx, fp+2   
20 [0x14]:           rstore ebx   
21 [0x15]:           movl 1   
22 [0x16]:           pushobj   
23 [0x17]:           movl 0   
24 [0x18]:           movn #1   
26 [0x1a]:           pushobj   
27 [0x1b]:           loadl ebx, fp+3   
28 [0x1c]:           popobj2    
29 [0x1d]:           movr adx, ebx   
30 [0x1e]:           chklen adx   
31 [0x1f]:           movnd adx   
32 [0x20]:           pushobj   
33 [0x21]:           smov ebx, sp+[-2]   
34 [0x22]:           calld ebx   
35 [0x23]:           loadval ebx   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 56   
38 [0x26]: line: 206 movl 1   
39 [0x27]:           pushobj   
40 [0x28]:           movl 0   
41 [0x29]:           movn #1   
43 [0x2b]:           pushobj   
44 [0x2c]:           loadl ebx, fp+3   
45 [0x2d]:           popobj2    
46 [0x2e]:           movr adx, ebx   
47 [0x2f]:           chklen adx   
48 [0x30]:           movnd adx   
49 [0x31]:           popobj   
50 [0x32]: line: 207 movi #1, ebx   
52 [0x34]:           return_val ebx   
53 [0x35]:           movl 0   
54 [0x36]:           _ulck   
55 [0x37]:           ret   
56 [0x38]:           nop   
57 [0x39]:           loadl ebx, fp+3   
58 [0x3a]:           movr egx, ebx   
59 [0x3b]:           inc ebx   
60 [0x3c]:           smovr_2 ebx, fp+3   
61 [0x3d]:           jmp @5   
62 [0x3e]: line: 211 movi #0, ebx   
64 [0x40]:           return_val ebx   
65 [0x41]:           movl 0   
66 [0x42]:           _ulck   
67 [0x43]:           ret   
68 [0x44]:           movl 0   
69 [0x45]:           _ulck   


function: std#synced_list<std.io.task#job>.to_string[3615] params(0) in file: lib\support\0.2.805/synced_list.sharp:215:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 217 new_class @70 // std#string_builder   
3 [0x3]:           dup    
4 [0x4]:           call @3474 // <std#string_builder.string_builder>   
5 [0x5]:           popobj2    
6 [0x6]:           smovr_3 fp+1   
7 [0x7]: line: 219 movl 1   
8 [0x8]:           pushobj   
9 [0x9]:           newstr @100 // [    
10 [0xa]:           call @3470 // <std#string_builder.operator+=>   
11 [0xb]:           pop   
12 [0xc]: line: 220 movi #0, ebx   
14 [0xe]:           smovr_2 ebx, fp+2   
15 [0xf]:           loadl ebx, fp+2   
16 [0x10]:           rstore ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           loadval ecx   
25 [0x19]:           lt ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 73   
29 [0x1d]: line: 221 movl 1   
30 [0x1e]:           pushobj   
31 [0x1f]:           movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+2   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           pushobj   
41 [0x29]:           call @3466 // <std#string_builder.operator+=>   
42 [0x2a]:           pop   
43 [0x2b]: line: 223 loadl ebx, fp+2   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           movi #1, ebx   
47 [0x2f]:           loadval ecx   
48 [0x30]:           add ecx, ebx -> ebx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #0   
53 [0x35]:           movi #0, adx   
55 [0x37]:           chklen adx   
56 [0x38]:           iaload ebx, adx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           lt ecx, ebx   
59 [0x3b]:           movr ebx, cmt   
60 [0x3c]:           movr cmt, ebx   
61 [0x3d]:           jne 67   
62 [0x3e]: line: 224 movl 1   
63 [0x3f]:           pushobj   
64 [0x40]:           newstr @101 // ,    
65 [0x41]:           call @3470 // <std#string_builder.operator+=>   
66 [0x42]:           pop   
67 [0x43]:           nop   
68 [0x44]:           loadl ebx, fp+2   
69 [0x45]:           movr egx, ebx   
70 [0x46]:           inc ebx   
71 [0x47]:           smovr_2 ebx, fp+2   
72 [0x48]:           jmp @15   
73 [0x49]: line: 228 movl 1   
74 [0x4a]:           pushobj   
75 [0x4b]:           newstr @102 //  ]   
76 [0x4c]:           call @3470 // <std#string_builder.operator+=>   
77 [0x4d]:           pop   
78 [0x4e]: line: 229 movl 1   
79 [0x4f]:           pushobj   
80 [0x50]:           call @3447 // <std#string_builder.to_string>   
81 [0x51]:           popobj2    
82 [0x52]:           returnobj   
83 [0x53]:           movl 0   
84 [0x54]:           _ulck   
85 [0x55]:           ret   
86 [0x56]:           movl 0   
87 [0x57]:           _ulck   


function: std#synced_list<std.io.task#job>.out_of_bounds_msg[3616] params(1) in file: lib\support\0.2.805/synced_list.sharp:233:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 234 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @103 // Index:    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           loadl ebx, fp+1   
5 [0x5]:           rstore ebx   
6 [0x6]:           call @3403 // <std#string.operator+>   
7 [0x7]:           newstr @104 // , size:    
8 [0x8]:           call @3383 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @3403 // <std#string.operator+>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   


std#loopable<var>.get_elements[3617] params(0) in file: lib\support\0.2.805/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<var>.loopable[3618] params(0) in file: lib\support\0.2.805/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std#list<var>.list[3619] params(0) in file: lib\support\0.2.805/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 14 movi #10, ebx   
4 [0x4]:          newarry ebx: 8   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<var>.list[3620] params(1) in file: lib\support\0.2.805/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 18 loadl ebx, fp+1   
3 [0x3]:          newarry ebx: 8   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<var>.list[3621] params(1) in file: lib\support\0.2.805/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 22 movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          pushobj   
6 [0x6]:          call @3632 // <std#list<var>.add_all>   
7 [0x7]:          ret   


function: std#list<var>.empty[3622] params(0) in file: lib\support\0.2.805/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #0, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#list<var>.set_compact[3623] params(1) in file: lib\support\0.2.805/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #2   
5 [0x5]:          loadval ebx   
6 [0x6]:          movi #0, adx   
8 [0x8]:          rmov adx, ebx   
9 [0x9]:          ret   


function: std#list<var>.get_elements[3624] params(0) in file: lib\support\0.2.805/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #0, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 20   
15 [0xf]:          pushnull    
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   
19 [0x13]:          jmp @39   
20 [0x14]: line: 33 movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movi #0, ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          chklen adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          rstore ebx   
35 [0x23]:          call @2079 // <std.io#__srt_global.copy>   
36 [0x24]:          popobj2    
37 [0x25]:          returnobj   
38 [0x26]:          ret   
39 [0x27]:          nop   


overload function: std#list<var>.operator[[3625] params(1) in file: lib\support\0.2.805/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 38 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3645 // <std#list<var>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 39 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          iaload ebx, adx   
41 [0x29]:          return_val ebx   
42 [0x2a]:          ret   


function: std#list<var>.at[3626] params(1) in file: lib\support\0.2.805/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 44 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3645 // <std#list<var>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 45 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          iaload ebx, adx   
41 [0x29]:          return_val ebx   
42 [0x2a]:          ret   


function: std#list<var>.last[3627] params(0) in file: lib\support\0.2.805/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          sub ecx, ebx -> ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3626 // <std#list<var>.at>   
16 [0x10]:          loadval ebx   
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


function: std#list<var>.put[3628] params(2) in file: lib\support\0.2.805/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 20   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 31   
22 [0x16]: line: 54 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          pushobj   
26 [0x1a]:          loadl ebx, fp+1   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3645 // <std#list<var>.out_of_bounds_msg>   
29 [0x1d]:          call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 56 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          iaload ebx, adx   
41 [0x29]:          smovr_2 ebx, fp+3   
42 [0x2a]: line: 57 loadl ebx, fp+2   
43 [0x2b]:          rstore ebx   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          pushobj   
48 [0x30]:          loadl ebx, fp+1   
49 [0x31]:          popobj2    
50 [0x32]:          movr adx, ebx   
51 [0x33]:          chklen adx   
52 [0x34]:          loadval ebx   
53 [0x35]:          rmov adx, ebx   
54 [0x36]: line: 58 loadl ebx, fp+3   
55 [0x37]:          return_val ebx   
56 [0x38]:          ret   


function: std#list<var>.expand[3629] params(0) in file: lib\support\0.2.805/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 25   
9 [0x9]: line: 63 movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          pushobj   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          sizeof ebx   
17 [0x11]:          rstore ebx   
18 [0x12]:          movi #128, ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          add ecx, ebx -> ebx   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @2059 // <std.io#__srt_global.realloc>   
24 [0x18]:          jmp @52   
25 [0x19]: line: 65 movl 0   
26 [0x1a]:          movn #1   
28 [0x1c]:          pushobj   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          sizeof ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          sizeof ebx   
38 [0x26]:          rstore ebx   
39 [0x27]:          movi #4, ebx   
41 [0x29]:          loadval ecx   
42 [0x2a]:          shr ecx, ebx -> ebx   
43 [0x2b]:          loadval ecx   
44 [0x2c]:          add ecx, ebx -> ebx   
45 [0x2d]:          rstore ebx   
46 [0x2e]:          movi #128, ebx   
48 [0x30]:          loadval ecx   
49 [0x31]:          add ecx, ebx -> ebx   
50 [0x32]:          rstore ebx   
51 [0x33]:          call @2059 // <std.io#__srt_global.realloc>   
52 [0x34]:          nop   
53 [0x35]:          ret   


function: std#list<var>.clear[3630] params(0) in file: lib\support\0.2.805/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          newarry ebx: 8   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 70 movi #0, ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          loadval ebx   
14 [0xe]:          movi #0, adx   
16 [0x10]:          rmov adx, ebx   
17 [0x11]:          ret   


function: std#list<var>.add_all[3631] params(1) in file: lib\support\0.2.805/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          movi #0, ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          chklen adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2079 // <std.io#__srt_global.copy>   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          popobj   
20 [0x14]: line: 75 movl 1   
21 [0x15]:          movn #0   
23 [0x17]:          movi #0, adx   
25 [0x19]:          chklen adx   
26 [0x1a]:          iaload ebx, adx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          loadval ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<var>.add_all[3632] params(1) in file: lib\support\0.2.805/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          pushnull    
3 [0x3]:          itest ebx   
4 [0x4]:          not ebx, ebx   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 31   
7 [0x7]: line: 80 movl 1   
8 [0x8]:          pushobj   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movl 1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2079 // <std.io#__srt_global.copy>   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          popobj   
20 [0x14]: line: 81 movl 1   
21 [0x15]:          sizeof ebx   
22 [0x16]:          rstore ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          jmp @48   
31 [0x1f]: line: 83 movi #0, ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          movl 0   
35 [0x23]:          movn #0   
37 [0x25]:          loadval ebx   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 84 movi #10, ebx   
43 [0x2b]:          newarry ebx: 8   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          popobj   
48 [0x30]:          nop   
49 [0x31]:          ret   


function: std#list<var>.add[3633] params(1) in file: lib\support\0.2.805/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          sizeof ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          gte ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 20   
17 [0x11]: line: 90 movl 0   
18 [0x12]:          pushobj   
19 [0x13]:          call @3629 // <std#list<var>.expand>   
20 [0x14]:          nop   
21 [0x15]: line: 91 loadl ebx, fp+1   
22 [0x16]:          rstore ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          chklen adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          inc ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]:          ret   


function: std#list<var>.indexof[3634] params(1) in file: lib\support\0.2.805/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movi #0, ebx   
2 [0x2]:          smovr_2 ebx, fp+2   
3 [0x3]:          loadl ebx, fp+2   
4 [0x4]:          rstore ebx   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          chklen adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          loadval ecx   
13 [0xd]:          lt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 42   
17 [0x11]: line: 96 loadl ebx, fp+1   
18 [0x12]:          rstore ebx   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          pushobj   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          popobj2    
25 [0x19]:          movr adx, ebx   
26 [0x1a]:          chklen adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          test ecx, ebx   
30 [0x1e]:          movr ebx, cmt   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 36   
33 [0x21]: line: 97 loadl ebx, fp+2   
34 [0x22]:          return_val ebx   
35 [0x23]:          ret   
36 [0x24]:          nop   
37 [0x25]:          loadl ebx, fp+2   
38 [0x26]:          movr egx, ebx   
39 [0x27]:          inc ebx   
40 [0x28]:          smovr_2 ebx, fp+2   
41 [0x29]:          jmp @3   
42 [0x2a]: line: 101 movi #-1, ebx   
44 [0x2c]:           return_val ebx   
45 [0x2d]:           ret   


function: std#list<var>.pop_back[3635] params(0) in file: lib\support\0.2.805/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #0, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           gt ecx, ebx   
12 [0xc]:           movr ebx, cmt   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 41   
15 [0xf]: line: 106 istorel 0, fp+1   
17 [0x11]: line: 107 loadl ebx, fp+1   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           movi #0, adx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           movr egx, ebx   
31 [0x1f]:           dec ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           movr ebx, egx   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           loadval ebx   
40 [0x28]:           rmov adx, ebx   
41 [0x29]:           nop   
42 [0x2a]:           ret   


function: std#list<var>.size[3636] params(0) in file: lib\support\0.2.805/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std#list<var>.insert[3637] params(2) in file: lib\support\0.2.805/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 20   
13 [0xd]:           loadl ebx, fp+1   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 31   
22 [0x16]: line: 115 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           movl 0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+1   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           call @3645 // <std#list<var>.out_of_bounds_msg>   
29 [0x1d]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 117 movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           movi #0, adx   
37 [0x25]:           chklen adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #0, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           test ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 53   
47 [0x2f]: line: 118 movl 0   
48 [0x30]:           pushobj   
49 [0x31]:           loadl ebx, fp+2   
50 [0x32]:           rstore ebx   
51 [0x33]:           call @3633 // <std#list<var>.add>   
52 [0x34]:           jmp @149   
53 [0x35]: line: 120 movl 0   
54 [0x36]:           movn #0   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           chklen adx   
59 [0x3b]:           iaload ebx, adx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movl 0   
62 [0x3e]:           movn #1   
64 [0x40]:           sizeof ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           gte ecx, ebx   
67 [0x43]:           movr ebx, cmt   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 73   
70 [0x46]: line: 121 movl 0   
71 [0x47]:           pushobj   
72 [0x48]:           call @3629 // <std#list<var>.expand>   
73 [0x49]:           nop   
74 [0x4a]: line: 122 movl 0   
75 [0x4b]:           movn #0   
77 [0x4d]:           movi #0, adx   
79 [0x4f]:           chklen adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           movr egx, ebx   
82 [0x52]:           inc ebx   
83 [0x53]:           movi #0, adx   
85 [0x55]:           rmov adx, ebx   
86 [0x56]: line: 123 movl 0   
87 [0x57]:           movn #0   
89 [0x59]:           movi #0, adx   
91 [0x5b]:           chklen adx   
92 [0x5c]:           iaload ebx, adx   
93 [0x5d]:           rstore ebx   
94 [0x5e]:           movi #1, ebx   
96 [0x60]:           loadval ecx   
97 [0x61]:           sub ecx, ebx -> ebx   
98 [0x62]:           smovr_2 ebx, fp+3   
99 [0x63]:           loadl ebx, fp+3   
100 [0x64]:           rstore ebx   
101 [0x65]:           loadl ebx, fp+1   
102 [0x66]:           loadval ecx   
103 [0x67]:           gt ecx, ebx   
104 [0x68]:           movr ebx, cmt   
105 [0x69]:           movr cmt, ebx   
106 [0x6a]:           jne 137   
107 [0x6b]: line: 124 movl 0   
108 [0x6c]:           movn #1   
110 [0x6e]:           pushobj   
111 [0x6f]:           loadl ebx, fp+3   
112 [0x70]:           rstore ebx   
113 [0x71]:           movi #1, ebx   
115 [0x73]:           loadval ecx   
116 [0x74]:           sub ecx, ebx -> ebx   
117 [0x75]:           popobj2    
118 [0x76]:           movr adx, ebx   
119 [0x77]:           chklen adx   
120 [0x78]:           iaload ebx, adx   
121 [0x79]:           rstore ebx   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+3   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           loadval ebx   
131 [0x83]:           rmov adx, ebx   
132 [0x84]:           loadl ebx, fp+3   
133 [0x85]:           movr egx, ebx   
134 [0x86]:           dec ebx   
135 [0x87]:           smovr_2 ebx, fp+3   
136 [0x88]:           jmp @99   
137 [0x89]: line: 125 loadl ebx, fp+2   
138 [0x8a]:           rstore ebx   
139 [0x8b]:           movl 0   
140 [0x8c]:           movn #1   
142 [0x8e]:           pushobj   
143 [0x8f]:           loadl ebx, fp+1   
144 [0x90]:           popobj2    
145 [0x91]:           movr adx, ebx   
146 [0x92]:           chklen adx   
147 [0x93]:           loadval ebx   
148 [0x94]:           rmov adx, ebx   
149 [0x95]:           nop   
150 [0x96]:           ret   


function: std#list<var>.find[3638] params(2) in file: lib\support\0.2.805/list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 53   
17 [0x11]: line: 131 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           iaload ebx, adx   
28 [0x1c]:           rstore ebx   
29 [0x1d]:           loadl ebx, fp+1   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 47   
36 [0x24]: line: 132 movl 0   
37 [0x25]:           movn #1   
39 [0x27]:           pushobj   
40 [0x28]:           loadl ebx, fp+3   
41 [0x29]:           popobj2    
42 [0x2a]:           movr adx, ebx   
43 [0x2b]:           chklen adx   
44 [0x2c]:           iaload ebx, adx   
45 [0x2d]:           return_val ebx   
46 [0x2e]:           ret   
47 [0x2f]:           nop   
48 [0x30]:           loadl ebx, fp+3   
49 [0x31]:           movr egx, ebx   
50 [0x32]:           inc ebx   
51 [0x33]:           smovr_2 ebx, fp+3   
52 [0x34]:           jmp @3   
53 [0x35]: line: 136 istorel 0, fp+4   
55 [0x37]: line: 137 loadl ebx, fp+4   
56 [0x38]:           return_val ebx   
57 [0x39]:           ret   


function: std#list<var>.remove[3639] params(1) in file: lib\support\0.2.805/list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+2   
3 [0x3]:           loadl ebx, fp+2   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 45   
17 [0x11]: line: 142 loadl ebx, fp+1   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           iaload ebx, adx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           test ecx, ebx   
30 [0x1e]:           movr ebx, cmt   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 39   
33 [0x21]: line: 143 movl 0   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+2   
36 [0x24]:           rstore ebx   
37 [0x25]:           call @3642 // <std#list<var>.remove_at>   
38 [0x26]: line: 144 ret   
39 [0x27]:           nop   
40 [0x28]:           loadl ebx, fp+2   
41 [0x29]:           movr egx, ebx   
42 [0x2a]:           inc ebx   
43 [0x2b]:           smovr_2 ebx, fp+2   
44 [0x2c]:           jmp @3   
45 [0x2d]:           ret   


function: std#list<var>.remove[3640] params(2) in file: lib\support\0.2.805/list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 48   
17 [0x11]: line: 151 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           loadl ebx, fp+1   
20 [0x14]:           rstore ebx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 42   
36 [0x24]: line: 152 movl 0   
37 [0x25]:           pushobj   
38 [0x26]:           loadl ebx, fp+3   
39 [0x27]:           rstore ebx   
40 [0x28]:           call @3642 // <std#list<var>.remove_at>   
41 [0x29]: line: 153 ret   
42 [0x2a]:           nop   
43 [0x2b]:           loadl ebx, fp+3   
44 [0x2c]:           movr egx, ebx   
45 [0x2d]:           inc ebx   
46 [0x2e]:           smovr_2 ebx, fp+3   
47 [0x2f]:           jmp @3   
48 [0x30]:           ret   


function: std#list<var>.replace[3641] params(2) in file: lib\support\0.2.805/list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 55   
17 [0x11]: line: 160 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           loadl ebx, fp+1   
20 [0x14]:           rstore ebx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+3   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 49   
36 [0x24]: line: 161 loadl ebx, fp+1   
37 [0x25]:           rstore ebx   
38 [0x26]:           movl 0   
39 [0x27]:           movn #1   
41 [0x29]:           pushobj   
42 [0x2a]:           loadl ebx, fp+3   
43 [0x2b]:           popobj2    
44 [0x2c]:           movr adx, ebx   
45 [0x2d]:           chklen adx   
46 [0x2e]:           loadval ebx   
47 [0x2f]:           rmov adx, ebx   
48 [0x30]: line: 162 ret   
49 [0x31]:           nop   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           movr egx, ebx   
52 [0x34]:           inc ebx   
53 [0x35]:           smovr_2 ebx, fp+3   
54 [0x36]:           jmp @3   
55 [0x37]:           ret   


function: std#list<var>.remove_at[3642] params(1) in file: lib\support\0.2.805/list.sharp:167:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 168 loadl ebx, fp+1   
1 [0x1]:           rstore ebx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           chklen adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 20   
13 [0xd]:           loadl ebx, fp+1   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 31   
22 [0x16]: line: 169 new_class @7 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           movl 0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+1   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           call @3645 // <std#list<var>.out_of_bounds_msg>   
29 [0x1d]:           call @1951 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 171 movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           movi #0, adx   
37 [0x25]:           chklen adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           rstore ebx   
40 [0x28]:           loadl ebx, fp+1   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           rstore ebx   
44 [0x2c]:           movi #1, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           sub ecx, ebx -> ebx   
48 [0x30]:           smovr_2 ebx, fp+2   
49 [0x31]: line: 172 loadl ebx, fp+2   
50 [0x32]:           rstore ebx   
51 [0x33]:           movi #0, ebx   
53 [0x35]:           loadval ecx   
54 [0x36]:           gt ecx, ebx   
55 [0x37]:           movr ebx, cmt   
56 [0x38]:           movr cmt, ebx   
57 [0x39]:           jne 84   
58 [0x3a]: line: 173 movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           movl 0   
63 [0x3f]:           movn #1   
65 [0x41]:           pushobj   
66 [0x42]:           loadl ebx, fp+1   
67 [0x43]:           rstore ebx   
68 [0x44]:           loadl ebx, fp+1   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #1, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           add ecx, ebx -> ebx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movl 0   
76 [0x4c]:           movn #0   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           chklen adx   
81 [0x51]:           iaload ebx, adx   
82 [0x52]:           rstore ebx   
83 [0x53]:           call @2069 // <std.io#__srt_global.memcopy>   
84 [0x54]:           nop   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           pushobj   
87 [0x57]:           call @3635 // <std#list<var>.pop_back>   
88 [0x58]:           ret   


function: std#list<var>.indexof[3643] params(2) in file: lib\support\0.2.805/list.sharp:178:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 179 movi #0, ebx   
2 [0x2]:           smovr_2 ebx, fp+3   
3 [0x3]:           loadl ebx, fp+3   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           chklen adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           loadval ecx   
13 [0xd]:           lt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 45   
17 [0x11]: line: 180 loadl ebx, fp+2   
18 [0x12]:           rstore ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           iaload ebx, adx   
28 [0x1c]:           rstore ebx   
29 [0x1d]:           loadl ebx, fp+1   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           smov ebx, sp+[-2]   
32 [0x20]:           calld ebx   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 39   
36 [0x24]: line: 181 loadl ebx, fp+3   
37 [0x25]:           return_val ebx   
38 [0x26]:           ret   
39 [0x27]:           nop   
40 [0x28]:           loadl ebx, fp+3   
41 [0x29]:           movr egx, ebx   
42 [0x2a]:           inc ebx   
43 [0x2b]:           smovr_2 ebx, fp+3   
44 [0x2c]:           jmp @3   
45 [0x2d]: line: 185 movi #-1, ebx   
47 [0x2f]:           return_val ebx   
48 [0x30]:           ret   


function: std#list<var>.to_string[3644] params(0) in file: lib\support\0.2.805/list.sharp:188:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 189 new_class @70 // std#string_builder   
1 [0x1]:           dup    
2 [0x2]:           call @3474 // <std#string_builder.string_builder>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 191 movl 1   
6 [0x6]:           pushobj   
7 [0x7]:           newstr @100 // [    
8 [0x8]:           call @3470 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 192 movi #0, ebx   
12 [0xc]:           smovr_2 ebx, fp+2   
13 [0xd]:           loadl ebx, fp+2   
14 [0xe]:           rstore ebx   
15 [0xf]:           movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           movi #0, adx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           loadval ecx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 71   
27 [0x1b]: line: 193 movl 1   
28 [0x1c]:           pushobj   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #1   
32 [0x20]:           pushobj   
33 [0x21]:           loadl ebx, fp+2   
34 [0x22]:           popobj2    
35 [0x23]:           movr adx, ebx   
36 [0x24]:           chklen adx   
37 [0x25]:           iaload ebx, adx   
38 [0x26]:           rstore ebx   
39 [0x27]:           call @3465 // <std#string_builder.operator+=>   
40 [0x28]:           pop   
41 [0x29]: line: 195 loadl ebx, fp+2   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movi #1, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           add ecx, ebx -> ebx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movl 0   
49 [0x31]:           movn #0   
51 [0x33]:           movi #0, adx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           loadval ecx   
56 [0x38]:           lt ecx, ebx   
57 [0x39]:           movr ebx, cmt   
58 [0x3a]:           movr cmt, ebx   
59 [0x3b]:           jne 65   
60 [0x3c]: line: 196 movl 1   
61 [0x3d]:           pushobj   
62 [0x3e]:           newstr @101 // ,    
63 [0x3f]:           call @3470 // <std#string_builder.operator+=>   
64 [0x40]:           pop   
65 [0x41]:           nop   
66 [0x42]:           loadl ebx, fp+2   
67 [0x43]:           movr egx, ebx   
68 [0x44]:           inc ebx   
69 [0x45]:           smovr_2 ebx, fp+2   
70 [0x46]:           jmp @13   
71 [0x47]: line: 200 movl 1   
72 [0x48]:           pushobj   
73 [0x49]:           newstr @102 //  ]   
74 [0x4a]:           call @3470 // <std#string_builder.operator+=>   
75 [0x4b]:           pop   
76 [0x4c]: line: 201 movl 1   
77 [0x4d]:           pushobj   
78 [0x4e]:           call @3447 // <std#string_builder.to_string>   
79 [0x4f]:           popobj2    
80 [0x50]:           returnobj   
81 [0x51]:           ret   


function: std#list<var>.out_of_bounds_msg[3645] params(1) in file: lib\support\0.2.805/list.sharp:204:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 205 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @103 // Index:    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           loadl ebx, fp+1   
5 [0x5]:           rstore ebx   
6 [0x6]:           call @3403 // <std#string.operator+>   
7 [0x7]:           newstr @104 // , size:    
8 [0x8]:           call @3383 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @3403 // <std#string.operator+>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   


function: std#_nil_.set_instance[3646] params(1) in file: lib\support\0.2.805/nil.sharp:11:44: note:  
		    static instance : _nil_ = new _nil_ { };
		                                           ^

0 [0x0]:         ret   


function: std.reflect#reflect.set_reflect_obj[3647] params(1) in file: lib\support\0.2.805/reflect//reflection.sharp:5:35: note:  
		        get { return reflect_obj; }
		                                  ^

0 [0x0]:         ret   


function: std.reflect#reflect.get_reflect_obj[3648] params(0) in file: lib\support\0.2.805/reflect//reflection.sharp:4:25: note:  
		    reflect_obj : object;
		                        ^

0 [0x0]: line: 5 movl 0   
1 [0x1]:         movn #0   
3 [0x3]:         returnobj   
4 [0x4]:         ret   


constructor: std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry[3649] params(2) in file: lib\support\0.2.805/hashtable.sharp:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 135 movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           popobj   
8 [0x8]: line: 136 movl 2   
9 [0x9]:           pushobj   
10 [0xa]:           movl 0   
11 [0xb]:           movn #1   
13 [0xd]:           popobj   
14 [0xe]:           ret   


function: std.io.task#entry<std.io#thread,std.io.task#job_controller>.to_string[3650] params(0) in file: lib\support\0.2.805/hashtable.sharp:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 140 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @105 // key    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @3385 // <std#string.operator+>   
9 [0x9]:           newstr @106 //  value    
10 [0xa]:           call @3383 // <std#string.operator+>   
11 [0xb]:           movl 0   
12 [0xc]:           movn #1   
14 [0xe]:           pushobj   
15 [0xf]:           call @3385 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


constructor: std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry[3651] params(0) in file: lib\support\0.2.805/hashtable.sharp:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


constructor: std.io#entry<std#int,std.io#thread>.entry[3652] params(2) in file: lib\support\0.2.805/hashtable.sharp:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]: line: 135 movl 1   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           popobj   
8 [0x8]: line: 136 movl 2   
9 [0x9]:           pushobj   
10 [0xa]:           movl 0   
11 [0xb]:           movn #1   
13 [0xd]:           popobj   
14 [0xe]:           ret   


function: std.io#entry<std#int,std.io#thread>.to_string[3653] params(0) in file: lib\support\0.2.805/hashtable.sharp:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 140 new_class @69 // std#string   
1 [0x1]:           dup    
2 [0x2]:           newstr @105 // key    
3 [0x3]:           call @3371 // <std#string.string>   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @3385 // <std#string.operator+>   
9 [0x9]:           newstr @106 //  value    
10 [0xa]:           call @3383 // <std#string.operator+>   
11 [0xb]:           movl 0   
12 [0xc]:           movn #1   
14 [0xe]:           pushobj   
15 [0xf]:           call @3385 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


constructor: std.io#entry<std#int,std.io#thread>.entry[3654] params(0) in file: lib\support\0.2.805/hashtable.sharp:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2262 // <std#_object_._object_>   
2 [0x2]:         ret   


function: std.io#__srt_global.$03internal_static_init[3655] params(0) in file: lib\support\0.2.805/io//critical_section.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @40 // std#_object_   
1 [0x1]:         dup    
2 [0x2]:         call @2262 // <std#_object_._object_>   
3 [0x3]:         movg @20 // @std.io#__srt_global   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std.io#file.$03internal_static_init[3656] params(0) in file: lib\support\0.2.805/io//file.sharp:17:13: note:  
		public class file {
		            ^

0 [0x0]:         call @2036 // <std.io#file.get_file_system>   
1 [0x1]:         movg @21 // @std.io#file   
2 [0x2]:         movn #0   
4 [0x4]:         popobj   
5 [0x5]:         movg @21 // @std.io#file   
6 [0x6]:         movn #0   
8 [0x8]:         pushobj   
9 [0x9]:         invoke_delegate 2038 { static=0, args=0 }   
11 [0xb]:         movg @21 // @std.io#file   
12 [0xc]:         movn #1   
14 [0xe]:         loadval ebx   
15 [0xf]:         movi #0, adx   
17 [0x11]:         rmov adx, ebx   
18 [0x12]:         ret   
19 [0x13]:         ret   


function: std.io.task#job.$03internal_static_init[3657] params(0) in file: lib\support\0.2.805/io//task//job.sharp:5:13: note:  
		public class job {
		            ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movg @25 // @std.io.task#job   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   
11 [0xb]:         ret   


function: std.io.task#__srt_global.$03internal_static_init[3658] params(0) in file: lib\support\0.2.805/io//task//task.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @28 // std.io.task#job_master   
1 [0x1]:         dup    
2 [0x2]:         call @2136 // <std.io.task#job_master.job_master>   
3 [0x3]:         movg @23 // @std.io.task#__srt_global   
4 [0x4]:         movn #5   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std.io#thread_group.$03internal_static_init[3659] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @32 // std.io#thread_group   
1 [0x1]:         dup    
2 [0x2]:         new_class @69 // std#string   
3 [0x3]:         dup    
4 [0x4]:         newstr @2 // main   
5 [0x5]:         call @3371 // <std#string.string>   
6 [0x6]:         call @2201 // <std.io#thread_group.thread_group>   
7 [0x7]:         movg @32 // @std.io#thread_group   
8 [0x8]:         movn #0   
10 [0xa]:         popobj   
11 [0xb]:         ret   
12 [0xc]:         ret   


function: std#_nil_.$03internal_static_init[3660] params(0) in file: lib\support\0.2.805/nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         new_class @39 // std#_nil_   
1 [0x1]:         movg @39 // @std#_nil_   
2 [0x2]:         movn #0   
4 [0x4]:         popobj   
5 [0x5]:         ret   
6 [0x6]:         ret   


function: std#__srt_global.$03internal_static_init[3661] params(0) in file: lib\support\0.2.805/object.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movg @1 // @std#__srt_global   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#string.$03internal_static_init[3662] params(0) in file: lib\support\0.2.805/string.sharp:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         movi #103, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movg @69 // @std#string   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         mov8 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         movi #0, ebx   
13 [0xd]:         rstore ebx   
14 [0xe]:         movg @69 // @std#string   
15 [0xf]:         movn #1   
17 [0x11]:         loadval ebx   
18 [0x12]:         movi #0, adx   
20 [0x14]:         rmov adx, ebx   
21 [0x15]:         ret   
22 [0x16]:         ret   


function: std#string_builder.$03internal_static_init[3663] params(0) in file: lib\support\0.2.805/string_builder.sharp:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         movi #103, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movg @70 // @std#string_builder   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         mov8 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         movi #0, ebx   
13 [0xd]:         rstore ebx   
14 [0xe]:         movg @70 // @std#string_builder   
15 [0xf]:         movn #1   
17 [0x11]:         loadval ebx   
18 [0x12]:         movi #0, adx   
20 [0x14]:         rmov adx, ebx   
21 [0x15]:         ret   
22 [0x16]:         ret   


function: std#time.$03internal_static_init[3664] params(0) in file: lib\support\0.2.805/time.sharp:6:6: note:  
		class time {
		     ^

0 [0x0]:         movi #-1, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movg @71 // @std#time   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   
11 [0xb]:         ret   


function: std.io#thread_result.$03internal_static_init[3665] params(0) in file: lib\support\0.2.805/io//thread_kernel.sharp:3:5: note:  
		import platform.kernel;
		    ^

0 [0x0]: line: 42 movi #0, ebx   
2 [0x2]:          smovr_2 ebx, fp+0   
3 [0x3]: line: 43 movi #17, ebx   
5 [0x5]:          new_classarray ebx  // std.io#thread_result[]   
6 [0x6]:          movg @34 // @std.io#thread_result   
7 [0x7]:          movn #17   
9 [0x9]:          popobj   
10 [0xa]: line: 44 movg @34 // @std.io#thread_result   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movg @34 // @std.io#thread_result   
15 [0xf]:          movn #17   
17 [0x11]:          pushobj   
18 [0x12]:          loadl ebx, fp+0   
19 [0x13]:          movr egx, ebx   
20 [0x14]:          inc ebx   
21 [0x15]:          smovr_2 ebx, fp+0   
22 [0x16]:          movr ebx, egx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          popobj   
28 [0x1c]: line: 45 movg @34 // @std.io#thread_result   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movg @34 // @std.io#thread_result   
33 [0x21]:          movn #17   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+0   
37 [0x25]:          movr egx, ebx   
38 [0x26]:          inc ebx   
39 [0x27]:          smovr_2 ebx, fp+0   
40 [0x28]:          movr ebx, egx   
41 [0x29]:          popobj2    
42 [0x2a]:          movr adx, ebx   
43 [0x2b]:          chklen adx   
44 [0x2c]:          movnd adx   
45 [0x2d]:          popobj   
46 [0x2e]: line: 46 movg @34 // @std.io#thread_result   
47 [0x2f]:          movn #2   
49 [0x31]:          pushobj   
50 [0x32]:          movg @34 // @std.io#thread_result   
51 [0x33]:          movn #17   
53 [0x35]:          pushobj   
54 [0x36]:          loadl ebx, fp+0   
55 [0x37]:          movr egx, ebx   
56 [0x38]:          inc ebx   
57 [0x39]:          smovr_2 ebx, fp+0   
58 [0x3a]:          movr ebx, egx   
59 [0x3b]:          popobj2    
60 [0x3c]:          movr adx, ebx   
61 [0x3d]:          chklen adx   
62 [0x3e]:          movnd adx   
63 [0x3f]:          popobj   
64 [0x40]: line: 47 movg @34 // @std.io#thread_result   
65 [0x41]:          movn #3   
67 [0x43]:          pushobj   
68 [0x44]:          movg @34 // @std.io#thread_result   
69 [0x45]:          movn #17   
71 [0x47]:          pushobj   
72 [0x48]:          loadl ebx, fp+0   
73 [0x49]:          movr egx, ebx   
74 [0x4a]:          inc ebx   
75 [0x4b]:          smovr_2 ebx, fp+0   
76 [0x4c]:          movr ebx, egx   
77 [0x4d]:          popobj2    
78 [0x4e]:          movr adx, ebx   
79 [0x4f]:          chklen adx   
80 [0x50]:          movnd adx   
81 [0x51]:          popobj   
82 [0x52]: line: 48 movg @34 // @std.io#thread_result   
83 [0x53]:          movn #4   
85 [0x55]:          pushobj   
86 [0x56]:          movg @34 // @std.io#thread_result   
87 [0x57]:          movn #17   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+0   
91 [0x5b]:          movr egx, ebx   
92 [0x5c]:          inc ebx   
93 [0x5d]:          smovr_2 ebx, fp+0   
94 [0x5e]:          movr ebx, egx   
95 [0x5f]:          popobj2    
96 [0x60]:          movr adx, ebx   
97 [0x61]:          chklen adx   
98 [0x62]:          movnd adx   
99 [0x63]:          popobj   
100 [0x64]: line: 49 movg @34 // @std.io#thread_result   
101 [0x65]:          movn #5   
103 [0x67]:          pushobj   
104 [0x68]:          movg @34 // @std.io#thread_result   
105 [0x69]:          movn #17   
107 [0x6b]:          pushobj   
108 [0x6c]:          loadl ebx, fp+0   
109 [0x6d]:          movr egx, ebx   
110 [0x6e]:          inc ebx   
111 [0x6f]:          smovr_2 ebx, fp+0   
112 [0x70]:          movr ebx, egx   
113 [0x71]:          popobj2    
114 [0x72]:          movr adx, ebx   
115 [0x73]:          chklen adx   
116 [0x74]:          movnd adx   
117 [0x75]:          popobj   
118 [0x76]: line: 50 movg @34 // @std.io#thread_result   
119 [0x77]:          movn #6   
121 [0x79]:          pushobj   
122 [0x7a]:          movg @34 // @std.io#thread_result   
123 [0x7b]:          movn #17   
125 [0x7d]:          pushobj   
126 [0x7e]:          loadl ebx, fp+0   
127 [0x7f]:          movr egx, ebx   
128 [0x80]:          inc ebx   
129 [0x81]:          smovr_2 ebx, fp+0   
130 [0x82]:          movr ebx, egx   
131 [0x83]:          popobj2    
132 [0x84]:          movr adx, ebx   
133 [0x85]:          chklen adx   
134 [0x86]:          movnd adx   
135 [0x87]:          popobj   
136 [0x88]: line: 51 movg @34 // @std.io#thread_result   
137 [0x89]:          movn #7   
139 [0x8b]:          pushobj   
140 [0x8c]:          movg @34 // @std.io#thread_result   
141 [0x8d]:          movn #17   
143 [0x8f]:          pushobj   
144 [0x90]:          loadl ebx, fp+0   
145 [0x91]:          movr egx, ebx   
146 [0x92]:          inc ebx   
147 [0x93]:          smovr_2 ebx, fp+0   
148 [0x94]:          movr ebx, egx   
149 [0x95]:          popobj2    
150 [0x96]:          movr adx, ebx   
151 [0x97]:          chklen adx   
152 [0x98]:          movnd adx   
153 [0x99]:          popobj   
154 [0x9a]: line: 52 movg @34 // @std.io#thread_result   
155 [0x9b]:          movn #8   
157 [0x9d]:          pushobj   
158 [0x9e]:          movg @34 // @std.io#thread_result   
159 [0x9f]:          movn #17   
161 [0xa1]:          pushobj   
162 [0xa2]:          loadl ebx, fp+0   
163 [0xa3]:          movr egx, ebx   
164 [0xa4]:          inc ebx   
165 [0xa5]:          smovr_2 ebx, fp+0   
166 [0xa6]:          movr ebx, egx   
167 [0xa7]:          popobj2    
168 [0xa8]:          movr adx, ebx   
169 [0xa9]:          chklen adx   
170 [0xaa]:          movnd adx   
171 [0xab]:          popobj   
172 [0xac]: line: 53 movg @34 // @std.io#thread_result   
173 [0xad]:          movn #9   
175 [0xaf]:          pushobj   
176 [0xb0]:          movg @34 // @std.io#thread_result   
177 [0xb1]:          movn #17   
179 [0xb3]:          pushobj   
180 [0xb4]:          loadl ebx, fp+0   
181 [0xb5]:          movr egx, ebx   
182 [0xb6]:          inc ebx   
183 [0xb7]:          smovr_2 ebx, fp+0   
184 [0xb8]:          movr ebx, egx   
185 [0xb9]:          popobj2    
186 [0xba]:          movr adx, ebx   
187 [0xbb]:          chklen adx   
188 [0xbc]:          movnd adx   
189 [0xbd]:          popobj   
190 [0xbe]: line: 54 movg @34 // @std.io#thread_result   
191 [0xbf]:          movn #10   
193 [0xc1]:          pushobj   
194 [0xc2]:          movg @34 // @std.io#thread_result   
195 [0xc3]:          movn #17   
197 [0xc5]:          pushobj   
198 [0xc6]:          loadl ebx, fp+0   
199 [0xc7]:          movr egx, ebx   
200 [0xc8]:          inc ebx   
201 [0xc9]:          smovr_2 ebx, fp+0   
202 [0xca]:          movr ebx, egx   
203 [0xcb]:          popobj2    
204 [0xcc]:          movr adx, ebx   
205 [0xcd]:          chklen adx   
206 [0xce]:          movnd adx   
207 [0xcf]:          popobj   
208 [0xd0]: line: 55 movg @34 // @std.io#thread_result   
209 [0xd1]:          movn #11   
211 [0xd3]:          pushobj   
212 [0xd4]:          movg @34 // @std.io#thread_result   
213 [0xd5]:          movn #17   
215 [0xd7]:          pushobj   
216 [0xd8]:          loadl ebx, fp+0   
217 [0xd9]:          movr egx, ebx   
218 [0xda]:          inc ebx   
219 [0xdb]:          smovr_2 ebx, fp+0   
220 [0xdc]:          movr ebx, egx   
221 [0xdd]:          popobj2    
222 [0xde]:          movr adx, ebx   
223 [0xdf]:          chklen adx   
224 [0xe0]:          movnd adx   
225 [0xe1]:          popobj   
226 [0xe2]: line: 56 movg @34 // @std.io#thread_result   
227 [0xe3]:          movn #12   
229 [0xe5]:          pushobj   
230 [0xe6]:          movg @34 // @std.io#thread_result   
231 [0xe7]:          movn #17   
233 [0xe9]:          pushobj   
234 [0xea]:          loadl ebx, fp+0   
235 [0xeb]:          movr egx, ebx   
236 [0xec]:          inc ebx   
237 [0xed]:          smovr_2 ebx, fp+0   
238 [0xee]:          movr ebx, egx   
239 [0xef]:          popobj2    
240 [0xf0]:          movr adx, ebx   
241 [0xf1]:          chklen adx   
242 [0xf2]:          movnd adx   
243 [0xf3]:          popobj   
244 [0xf4]: line: 57 movg @34 // @std.io#thread_result   
245 [0xf5]:          movn #13   
247 [0xf7]:          pushobj   
248 [0xf8]:          movg @34 // @std.io#thread_result   
249 [0xf9]:          movn #17   
251 [0xfb]:          pushobj   
252 [0xfc]:          loadl ebx, fp+0   
253 [0xfd]:          movr egx, ebx   
254 [0xfe]:          inc ebx   
255 [0xff]:          smovr_2 ebx, fp+0   
256 [0x100]:          movr ebx, egx   
257 [0x101]:          popobj2    
258 [0x102]:          movr adx, ebx   
259 [0x103]:          chklen adx   
260 [0x104]:          movnd adx   
261 [0x105]:          popobj   
262 [0x106]: line: 58 movg @34 // @std.io#thread_result   
263 [0x107]:          movn #14   
265 [0x109]:          pushobj   
266 [0x10a]:          movg @34 // @std.io#thread_result   
267 [0x10b]:          movn #17   
269 [0x10d]:          pushobj   
270 [0x10e]:          loadl ebx, fp+0   
271 [0x10f]:          movr egx, ebx   
272 [0x110]:          inc ebx   
273 [0x111]:          smovr_2 ebx, fp+0   
274 [0x112]:          movr ebx, egx   
275 [0x113]:          popobj2    
276 [0x114]:          movr adx, ebx   
277 [0x115]:          chklen adx   
278 [0x116]:          movnd adx   
279 [0x117]:          popobj   
280 [0x118]: line: 59 movg @34 // @std.io#thread_result   
281 [0x119]:          movn #15   
283 [0x11b]:          pushobj   
284 [0x11c]:          movg @34 // @std.io#thread_result   
285 [0x11d]:          movn #17   
287 [0x11f]:          pushobj   
288 [0x120]:          loadl ebx, fp+0   
289 [0x121]:          movr egx, ebx   
290 [0x122]:          inc ebx   
291 [0x123]:          smovr_2 ebx, fp+0   
292 [0x124]:          movr ebx, egx   
293 [0x125]:          popobj2    
294 [0x126]:          movr adx, ebx   
295 [0x127]:          chklen adx   
296 [0x128]:          movnd adx   
297 [0x129]:          popobj   
298 [0x12a]: line: 60 movg @34 // @std.io#thread_result   
299 [0x12b]:          movn #16   
301 [0x12d]:          pushobj   
302 [0x12e]:          movg @34 // @std.io#thread_result   
303 [0x12f]:          movn #17   
305 [0x131]:          pushobj   
306 [0x132]:          loadl ebx, fp+0   
307 [0x133]:          movr egx, ebx   
308 [0x134]:          inc ebx   
309 [0x135]:          smovr_2 ebx, fp+0   
310 [0x136]:          movr ebx, egx   
311 [0x137]:          popobj2    
312 [0x138]:          movr adx, ebx   
313 [0x139]:          chklen adx   
314 [0x13a]:          movnd adx   
315 [0x13b]:          popobj   
316 [0x13c]:          ret   
317 [0x13d]:          ret   


function: std#tmp.$03internal_static_init[3666] params(0) in file: lib\support\0.2.805/random.sharp:31:6: note:  
		class tmp {
		     ^

0 [0x0]: line: 33 ldc ebx // 3.74628e+15   
1 [0x1]:          rstore ebx   
2 [0x2]:          movg @1 // @std#__srt_global   
3 [0x3]:          movn #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          movi #0, adx   
8 [0x8]:          rmov adx, ebx   
9 [0x9]: line: 34 movg @1 // @std#__srt_global   
10 [0xa]:          movn #1   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @2299 // <platform.kernel#vm.random_seed>   
18 [0x12]:          ret   
19 [0x13]:          ret   


lambda: std.io.task#__srt_global.anon_func$3667[3667] params(2) in file: lib\support\0.2.805/io//task//job_master.sharp:71:35: note:  
				job_queue.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                  ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #15   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


lambda: std.io.task#__srt_global.anon_func$3668[3668] params(2) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:89:52: note:  
		                        jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                                   ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #15   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


lambda: std.io.task#__srt_global.anon_func$3669[3669] params(2) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:104:48: note:  
		                    jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                               ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #15   
3 [0x3]:           movi #0, adx   
5 [0x5]:           chklen adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 1   
9 [0x9]:           movn #15   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           test ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


lambda: std.io.task#__srt_global.anon_func$3670[3670] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:128:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movg @23 // @std.io.task#__srt_global   
3 [0x3]:           movn #3   
5 [0x5]:           pushobj   
6 [0x6]:           call @2200 // <std.io#thread.operator==>   
7 [0x7]:           loadval ebx   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 14   
10 [0xa]:           movi #0, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   
14 [0xe]:           nop   
15 [0xf]: line: 131 movg @23 // @std.io.task#__srt_global   
16 [0x10]:           movn #5   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           pushobj   
21 [0x15]:           call @2141 // <std.io.task#job_master.get_host_controller>   
22 [0x16]:           popobj2    
23 [0x17]:           movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           pushnull    
27 [0x1b]:           itest ebx   
28 [0x1c]:           return_val ebx   
29 [0x1d]:           ret   


lambda: std.io.task#__srt_global.anon_func$3671[3671] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:162:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           pushobj   
2 [0x2]:           movg @23 // @std.io.task#__srt_global   
3 [0x3]:           movn #3   
5 [0x5]:           pushobj   
6 [0x6]:           call @2200 // <std.io#thread.operator==>   
7 [0x7]:           loadval ebx   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 14   
10 [0xa]:           movi #0, ebx   
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   
14 [0xe]:           nop   
15 [0xf]: line: 164 movg @23 // @std.io.task#__srt_global   
16 [0x10]:           movn #5   
18 [0x12]:           pushobj   
19 [0x13]:           movl 0   
20 [0x14]:           pushobj   
21 [0x15]:           call @2141 // <std.io.task#job_master.get_host_controller>   
22 [0x16]:           popobj2    
23 [0x17]:           smovr_3 fp+1   
24 [0x18]: line: 166 movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           pushnull    
29 [0x1d]:           itest ebx   
30 [0x1e]:           skne ebx // pc = 68   
31 [0x1f]:           movl 1   
32 [0x20]:           movn #1   
34 [0x22]:           movi #0, adx   
36 [0x24]:           chklen adx   
37 [0x25]:           iaload ebx, adx   
38 [0x26]:           rstore ebx   
39 [0x27]:           movi #0, ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           gt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           skne ebx // pc = 68   
45 [0x2d]:           movg @23 // @std.io.task#__srt_global   
46 [0x2e]:           movn #4   
48 [0x30]:           movi #0, adx   
50 [0x32]:           chklen adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           rstore ebx   
53 [0x35]:           movl 1   
54 [0x36]:           movn #1   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           chklen adx   
59 [0x3b]:           iaload ebx, adx   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           sub ecx, ebx -> ebx   
62 [0x3e]:           rstore ebx   
63 [0x3f]:           movi #180000, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           gt ecx, ebx   
67 [0x43]:           movr ebx, cmt   
68 [0x44]:           return_val ebx   
69 [0x45]:           ret   


lambda: std.io.task#__srt_global.anon_func$3672[3672] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:177:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 178 movg @23 // @std.io.task#__srt_global   
1 [0x1]:           movn #5   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2141 // <std.io.task#job_master.get_host_controller>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 179 movl 1   
10 [0xa]:           movn #0   
12 [0xc]:           pushobj   
13 [0xd]:           pushnull    
14 [0xe]:           itest ebx   
15 [0xf]:           skne ebx // pc = 53   
16 [0x10]:           movl 1   
17 [0x11]:           movn #1   
19 [0x13]:           movi #0, adx   
21 [0x15]:           chklen adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           rstore ebx   
24 [0x18]:           movi #0, ebx   
26 [0x1a]:           loadval ecx   
27 [0x1b]:           gt ecx, ebx   
28 [0x1c]:           movr ebx, cmt   
29 [0x1d]:           skne ebx // pc = 53   
30 [0x1e]:           movg @23 // @std.io.task#__srt_global   
31 [0x1f]:           movn #4   
33 [0x21]:           movi #0, adx   
35 [0x23]:           chklen adx   
36 [0x24]:           iaload ebx, adx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movl 1   
39 [0x27]:           movn #1   
41 [0x29]:           movi #0, adx   
43 [0x2b]:           chklen adx   
44 [0x2c]:           iaload ebx, adx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           sub ecx, ebx -> ebx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movi #180000, ebx   
50 [0x32]:           loadval ecx   
51 [0x33]:           gt ecx, ebx   
52 [0x34]:           movr ebx, cmt   
53 [0x35]:           return_val ebx   
54 [0x36]:           ret   


