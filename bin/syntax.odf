## Object Dump file for bin/syntax:

class: main#__srt_global[0] fields(0) methods(2)
class: std#__srt_global[1] fields(1) methods(2)
class: std#_enum_[2] fields(3) methods(13)
class: std#throwable[3] fields(2) methods(8)
class: std#exception[4] fields(2) methods(11)
class: std#illegal_argument_exception[5] fields(2) methods(14)
class: std#illegal_state_exception[6] fields(2) methods(14)
class: std#out_of_bounds_exception[7] fields(2) methods(14)
class: std#invalid_operation_exception[8] fields(2) methods(14)
class: std#nullptr_exception[9] fields(2) methods(14)
class: std#runtime_exception[10] fields(2) methods(14)
class: std#stack_overflow_exception[11] fields(2) methods(14)
class: std#thread_stack_exception[12] fields(2) methods(14)
class: std#class_cast_exception[13] fields(2) methods(14)
class: std#out_of_memory_exception[14] fields(2) methods(14)
class: std.io#__srt_global[15] fields(1) methods(14)
class: std#_nil_[16] fields(1) methods(9)
class: std#_object_[17] fields(0) methods(5)
class: platform#__srt_global[18] fields(0) methods(1)
class: platform#build[19] fields(4) methods(8)
class: platform.kernel#__srt_global[20] fields(0) methods(1)
class: platform.kernel#platform[21] fields(4) methods(10)
class: std#ulong[22] fields(1) methods(26)
class: std#long[23] fields(1) methods(27)
class: std#uint[24] fields(1) methods(26)
class: std#int[25] fields(1) methods(26)
class: std#ushort[26] fields(1) methods(26)
class: std#short[27] fields(1) methods(26)
class: std#uchar[28] fields(1) methods(26)
class: std#char[29] fields(1) methods(26)
class: std#byte[30] fields(1) methods(28)
class: std#bool[31] fields(1) methods(25)
interface: std#printable[32] fields(0) methods(7)
class: std.reflect#__srt_global[33] fields(0) methods(1)
class: std.reflect#_class_[34] fields(1) methods(7)
class: std.reflect#data_entity[35] fields(1) methods(6)
enum: std.reflect#property_type[36] fields(6) methods(13)
class: std.reflect#data_property[37] fields(1) methods(7)
class: std.reflect#field[38] fields(2) methods(6)
class: std.reflect#function[39] fields(1) methods(7)
class: std.reflect#reflect[40] fields(3) methods(9)
class: std#string[41] fields(3) methods(16)
interface: std#unique[42] fields(0) methods(8)
generic: std#integer<_uint64>[43] fields(1) methods(24)
generic: std#integer<_int64>[44] fields(1) methods(24)
generic: std#integer<_uint32>[45] fields(1) methods(24)
generic: std#integer<_int32>[46] fields(1) methods(24)
generic: std#integer<_uint16>[47] fields(1) methods(24)
generic: std#integer<_int16>[48] fields(1) methods(24)
generic: std#integer<_uint8>[49] fields(1) methods(24)
generic: std#integer<_int8>[50] fields(1) methods(24)


 strings: 

[0]: nil
[1]: 
[2]: win
[3]: posix
[4]: null
[5]: class_property
[6]: field_property
[7]: function_property

 constants: 

[0]: 1e+09

 methods: 
constructor: main#__srt_global.__srt_global[0] params(0) in file: tests/syntax.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std#__srt_global.__srt_global[1] params(0) in file: lib/support/0.2.805//dictionary.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io#__srt_global.__srt_global[2] params(0) in file: lib/support/0.2.805//io//atomic.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform#__srt_global.__srt_global[3] params(0) in file: lib/support/0.2.805//platform//build.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform.kernel#__srt_global.__srt_global[4] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.reflect#__srt_global.__srt_global[5] params(0) in file: lib/support/0.2.805//reflect//class.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std#integer<_uint64>.integer[6] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+1   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu64 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


constructor: std#integer<_uint64>.integer[7] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          loadval ebx   
12 [0xc]:          movu64 ebx, ebx   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#integer<_uint64>.hash[8] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @23 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @233 // <std#long.long>   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint64>.operator!=[9] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator==[10] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint64>.operator!=[11] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


overload function: std#integer<_uint64>.operator=[12] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#integer<_uint64>.to_ulong[13] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @22 // std#ulong   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint64>.to_long[14] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @23 // std#long   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint64>.to_uint[15] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @24 // std#uint   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint64>.to_int[16] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @25 // std#int   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint64>.to_ushort[17] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @26 // std#ushort   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint64>.to_short[18] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @27 // std#short   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint64>.to_uchar[19] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @28 // std#uchar   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint64>.to_char[20] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @29 // std#char   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint64>.to_byte[21] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @30 // std#byte   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint64>.to_bool[22] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @31 // std#bool   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint64>.get_value[23] params(0) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: std#integer<_uint64>.integer<_uint64>[24] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret   


constructor: std#integer<_int64>.integer[25] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+1   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov64 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


constructor: std#integer<_int64>.integer[26] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          loadval ebx   
12 [0xc]:          mov64 ebx, ebx   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#integer<_int64>.hash[27] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @23 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @233 // <std#long.long>   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int64>.operator!=[28] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator==[29] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int64>.operator!=[30] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


overload function: std#integer<_int64>.operator=[31] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#integer<_int64>.to_ulong[32] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @22 // std#ulong   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int64>.to_long[33] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @23 // std#long   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int64>.to_uint[34] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @24 // std#uint   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int64>.to_int[35] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @25 // std#int   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int64>.to_ushort[36] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @26 // std#ushort   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int64>.to_short[37] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @27 // std#short   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int64>.to_uchar[38] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @28 // std#uchar   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int64>.to_char[39] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @29 // std#char   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int64>.to_byte[40] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @30 // std#byte   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int64>.to_bool[41] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @31 // std#bool   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int64>.get_value[42] params(0) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: std#integer<_int64>.integer<_int64>[43] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret   


constructor: std#integer<_uint32>.integer[44] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+1   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu32 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


constructor: std#integer<_uint32>.integer[45] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          loadval ebx   
12 [0xc]:          movu32 ebx, ebx   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#integer<_uint32>.hash[46] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @23 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @233 // <std#long.long>   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint32>.operator!=[47] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator==[48] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint32>.operator!=[49] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


overload function: std#integer<_uint32>.operator=[50] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#integer<_uint32>.to_ulong[51] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @22 // std#ulong   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint32>.to_long[52] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @23 // std#long   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint32>.to_uint[53] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @24 // std#uint   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint32>.to_int[54] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @25 // std#int   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint32>.to_ushort[55] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @26 // std#ushort   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint32>.to_short[56] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @27 // std#short   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint32>.to_uchar[57] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @28 // std#uchar   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint32>.to_char[58] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @29 // std#char   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint32>.to_byte[59] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @30 // std#byte   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint32>.to_bool[60] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @31 // std#bool   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint32>.get_value[61] params(0) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: std#integer<_uint32>.integer<_uint32>[62] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret   


constructor: std#integer<_int32>.integer[63] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+1   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov32 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


constructor: std#integer<_int32>.integer[64] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          loadval ebx   
12 [0xc]:          mov32 ebx, ebx   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#integer<_int32>.hash[65] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @23 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @233 // <std#long.long>   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int32>.operator!=[66] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator==[67] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int32>.operator!=[68] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


overload function: std#integer<_int32>.operator=[69] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#integer<_int32>.to_ulong[70] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @22 // std#ulong   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int32>.to_long[71] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @23 // std#long   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int32>.to_uint[72] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @24 // std#uint   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int32>.to_int[73] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @25 // std#int   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int32>.to_ushort[74] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @26 // std#ushort   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int32>.to_short[75] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @27 // std#short   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int32>.to_uchar[76] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @28 // std#uchar   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int32>.to_char[77] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @29 // std#char   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int32>.to_byte[78] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @30 // std#byte   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int32>.to_bool[79] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @31 // std#bool   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int32>.get_value[80] params(0) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: std#integer<_int32>.integer<_int32>[81] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret   


constructor: std#integer<_uint16>.integer[82] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+1   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu16 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


constructor: std#integer<_uint16>.integer[83] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          loadval ebx   
12 [0xc]:          movu16 ebx, ebx   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#integer<_uint16>.hash[84] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @23 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @233 // <std#long.long>   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint16>.operator!=[85] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator==[86] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint16>.operator!=[87] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


overload function: std#integer<_uint16>.operator=[88] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#integer<_uint16>.to_ulong[89] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @22 // std#ulong   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint16>.to_long[90] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @23 // std#long   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint16>.to_uint[91] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @24 // std#uint   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint16>.to_int[92] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @25 // std#int   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint16>.to_ushort[93] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @26 // std#ushort   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint16>.to_short[94] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @27 // std#short   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint16>.to_uchar[95] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @28 // std#uchar   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint16>.to_char[96] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @29 // std#char   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint16>.to_byte[97] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @30 // std#byte   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint16>.to_bool[98] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @31 // std#bool   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint16>.get_value[99] params(0) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: std#integer<_uint16>.integer<_uint16>[100] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret   


constructor: std#integer<_int16>.integer[101] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+1   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov16 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


constructor: std#integer<_int16>.integer[102] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          loadval ebx   
12 [0xc]:          mov16 ebx, ebx   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#integer<_int16>.hash[103] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @23 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @233 // <std#long.long>   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int16>.operator!=[104] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator==[105] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int16>.operator!=[106] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


overload function: std#integer<_int16>.operator=[107] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#integer<_int16>.to_ulong[108] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @22 // std#ulong   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int16>.to_long[109] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @23 // std#long   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int16>.to_uint[110] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @24 // std#uint   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int16>.to_int[111] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @25 // std#int   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int16>.to_ushort[112] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @26 // std#ushort   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int16>.to_short[113] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @27 // std#short   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int16>.to_uchar[114] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @28 // std#uchar   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int16>.to_char[115] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @29 // std#char   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int16>.to_byte[116] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @30 // std#byte   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int16>.to_bool[117] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @31 // std#bool   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int16>.get_value[118] params(0) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: std#integer<_int16>.integer<_int16>[119] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret   


constructor: std#integer<_uint8>.integer[120] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+1   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


constructor: std#integer<_uint8>.integer[121] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          loadval ebx   
12 [0xc]:          movu8 ebx, ebx   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#integer<_uint8>.hash[122] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @23 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @233 // <std#long.long>   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_uint8>.operator!=[123] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator==[124] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_uint8>.operator!=[125] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


overload function: std#integer<_uint8>.operator=[126] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#integer<_uint8>.to_ulong[127] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @22 // std#ulong   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint8>.to_long[128] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @23 // std#long   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint8>.to_uint[129] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @24 // std#uint   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint8>.to_int[130] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @25 // std#int   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint8>.to_ushort[131] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @26 // std#ushort   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint8>.to_short[132] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @27 // std#short   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint8>.to_uchar[133] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @28 // std#uchar   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint8>.to_char[134] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @29 // std#char   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint8>.to_byte[135] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @30 // std#byte   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint8>.to_bool[136] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @31 // std#bool   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_uint8>.get_value[137] params(0) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: std#integer<_uint8>.integer<_uint8>[138] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret   


constructor: std#integer<_int8>.integer[139] params(1) in file: lib/support/0.2.805//primitives.sharp:6:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]: line: 7 loadl ebx, fp+1   
1 [0x1]:         rstore ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


constructor: std#integer<_int8>.integer[140] params(1) in file: lib/support/0.2.805//primitives.sharp:10:12: note:  
		    integer(num : integer<native_type>) {
		           ^

0 [0x0]: line: 11 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          loadval ebx   
12 [0xc]:          mov8 ebx, ebx   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#integer<_int8>.hash[141] params(0) in file: lib/support/0.2.805//primitives.sharp:14:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 15 new_class @23 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @233 // <std#long.long>   
11 [0xb]:          return_val ebx   
12 [0xc]:          ret   


overload function: std#integer<_int8>.operator!=[142] params(1) in file: lib/support/0.2.805//primitives.sharp:18:8: note:  
		    def operator!=(num : integer<native_type>) := (value!=num.value); // TODO: add func for every integer type
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator==[143] params(1) in file: lib/support/0.2.805//primitives.sharp:19:7: note:  
		    def operator==(num : integer<native_type>) := (value==num.value);
		      ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#integer<_int8>.operator!=[144] params(1) in file: lib/support/0.2.805//primitives.sharp:20:8: note:  
		    def operator!=(num : var) := 0; //TODO: see why it is broken (value!=num.value);
		       ^

0 [0x0]: line: 20 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


overload function: std#integer<_int8>.operator=[145] params(1) in file: lib/support/0.2.805//primitives.sharp:21:7: note:  
		    def operator=(num : var) := 0;
		      ^

0 [0x0]: line: 21 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#integer<_int8>.to_ulong[146] params(0) in file: lib/support/0.2.805//primitives.sharp:28:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 28 new_class @22 // std#ulong   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int8>.to_long[147] params(0) in file: lib/support/0.2.805//primitives.sharp:29:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 29 new_class @23 // std#long   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov64 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int8>.to_uint[148] params(0) in file: lib/support/0.2.805//primitives.sharp:30:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 30 new_class @24 // std#uint   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int8>.to_int[149] params(0) in file: lib/support/0.2.805//primitives.sharp:31:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 31 new_class @25 // std#int   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov32 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int8>.to_ushort[150] params(0) in file: lib/support/0.2.805//primitives.sharp:32:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 32 new_class @26 // std#ushort   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int8>.to_short[151] params(0) in file: lib/support/0.2.805//primitives.sharp:33:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 33 new_class @27 // std#short   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov16 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int8>.to_uchar[152] params(0) in file: lib/support/0.2.805//primitives.sharp:34:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 34 new_class @28 // std#uchar   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int8>.to_char[153] params(0) in file: lib/support/0.2.805//primitives.sharp:35:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 35 new_class @29 // std#char   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int8>.to_byte[154] params(0) in file: lib/support/0.2.805//primitives.sharp:36:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 36 new_class @30 // std#byte   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movu8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int8>.to_bool[155] params(0) in file: lib/support/0.2.805//primitives.sharp:37:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 37 new_class @31 // std#bool   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          chklen adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          mov8 ebx, ebx   
9 [0x9]:          movsl #0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          chklen adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


function: std#integer<_int8>.get_value[156] params(0) in file: lib/support/0.2.805//primitives.sharp:39:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: std#integer<_int8>.integer<_int8>[157] params(0) in file: lib/support/0.2.805//primitives.sharp:3:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         ret   


function: main#__srt_global.main[158] params(0) in file: tests/syntax.sharp:4:4: note:  
		def main() {
		   ^

0 [0x0]:         ret   


constructor: std#_enum_._enum_[159] params(1) in file: lib/support/0.2.805//enum.sharp:17:11: note:  
		    _enum_(ord : var) {
		          ^

0 [0x0]: line: 18 loadl ebx, fp+1   
1 [0x1]:          rstore ebx   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          mov64 ebx, ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          ret   


overload function: std#_enum_.operator!=[160] params(1) in file: lib/support/0.2.805//enum.sharp:26:15: note:  
		    public def operator!=(e : _enum_) : var {
		              ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #1   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#_enum_.operator!=[161] params(1) in file: lib/support/0.2.805//enum.sharp:30:15: note:  
		    public def operator!=(num : var) : var {
		              ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          tne ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          return_val ebx   
13 [0xd]:          ret   


overload function: std#_enum_.operator==[162] params(1) in file: lib/support/0.2.805//enum.sharp:34:15: note:  
		    public def operator==(e : _enum_) : var {
		              ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movl 1   
9 [0x9]:          movn #1   
11 [0xb]:          movi #0, adx   
13 [0xd]:          chklen adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          return_val ebx   
19 [0x13]:          ret   


overload function: std#_enum_.operator==[163] params(1) in file: lib/support/0.2.805//enum.sharp:38:15: note:  
		    public def operator==(num : var) : var {
		              ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          loadl ebx, fp+1   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          return_val ebx   
13 [0xd]:          ret   


function: std#_enum_.get_name[164] params(0) in file: lib/support/0.2.805//enum.sharp:42:15: note:  
		    public def get_name() : _int8[] {
		              ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: std#_enum_.get_ordinal[165] params(0) in file: lib/support/0.2.805//enum.sharp:46:15: note:  
		    public def get_ordinal() : _int64 {
		              ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          chklen adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: std#_enum_._enum_[166] params(0) in file: lib/support/0.2.805//enum.sharp:12:17: note:  
		stable ext class _enum_ {
		                ^

0 [0x0]:         ret   


constructor: std#throwable.throwable[167] params(1) in file: lib/support/0.2.805//exceptions.sharp:15:21: note:  
		    public throwable(message : _int8[]) {
		                    ^

0 [0x0]: line: 16 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          popobj   
6 [0x6]:          ret   


constructor: std#throwable.throwable[168] params(1) in file: lib/support/0.2.805//exceptions.sharp:19:21: note:  
		    public throwable(message : string) {
		                    ^

0 [0x0]:         ret   


constructor: std#throwable.throwable[169] params(0) in file: lib/support/0.2.805//exceptions.sharp:8:6: note:  
		class throwable {
		     ^

0 [0x0]:         ret   


constructor: std#exception.exception[170] params(1) in file: lib/support/0.2.805//exceptions.sharp:28:21: note:  
		    public exception(message : _int8[]) { base->throwable(message); }
		                    ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @167 // <std#throwable.throwable>   
5 [0x5]:          ret   


constructor: std#exception.exception[171] params(1) in file: lib/support/0.2.805//exceptions.sharp:29:21: note:  
		    public exception(message : string) { base->throwable(message); }
		                    ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @168 // <std#throwable.throwable>   
5 [0x5]:          ret   


constructor: std#exception.exception[172] params(0) in file: lib/support/0.2.805//exceptions.sharp:27:6: note:  
		class exception base throwable {
		     ^

0 [0x0]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[173] params(1) in file: lib/support/0.2.805//exceptions.sharp:33:38: note:  
		    public illegal_argument_exception(message : _int8[]) { base->exception(message); }
		                                     ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @170 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[174] params(1) in file: lib/support/0.2.805//exceptions.sharp:34:38: note:  
		    public illegal_argument_exception(message : string) { base->exception(message); }
		                                     ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @171 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[175] params(0) in file: lib/support/0.2.805//exceptions.sharp:32:6: note:  
		class illegal_argument_exception base exception {
		     ^

0 [0x0]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[176] params(1) in file: lib/support/0.2.805//exceptions.sharp:37:35: note:  
		    public illegal_state_exception(message : _int8[]) { base->exception(message); }
		                                  ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @170 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#illegal_state_exception.illegal_state_exception[177] params(1) in file: lib/support/0.2.805//exceptions.sharp:38:35: note:  
		    public illegal_state_exception(message : string) { base->exception(message); }
		                                  ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @171 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#illegal_state_exception.illegal_state_exception[178] params(0) in file: lib/support/0.2.805//exceptions.sharp:36:6: note:  
		class illegal_state_exception base exception {
		     ^

0 [0x0]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[179] params(1) in file: lib/support/0.2.805//exceptions.sharp:41:35: note:  
		    public out_of_bounds_exception(message : _int8[]) { base->exception(message); }
		                                  ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @170 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[180] params(1) in file: lib/support/0.2.805//exceptions.sharp:42:35: note:  
		    public out_of_bounds_exception(message : string) { base->exception(message); }
		                                  ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @171 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[181] params(0) in file: lib/support/0.2.805//exceptions.sharp:40:6: note:  
		class out_of_bounds_exception base exception {
		     ^

0 [0x0]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[182] params(1) in file: lib/support/0.2.805//exceptions.sharp:45:39: note:  
		    public invalid_operation_exception(message : _int8[]) { base->exception(message); }
		                                      ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @170 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[183] params(1) in file: lib/support/0.2.805//exceptions.sharp:46:39: note:  
		    public invalid_operation_exception(message : string) { base->exception(message); }
		                                      ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @171 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[184] params(0) in file: lib/support/0.2.805//exceptions.sharp:44:6: note:  
		class invalid_operation_exception base exception {
		     ^

0 [0x0]:         ret   


constructor: std#nullptr_exception.nullptr_exception[185] params(1) in file: lib/support/0.2.805//exceptions.sharp:49:29: note:  
		    public nullptr_exception(message : _int8[]) { base->exception(message); }
		                            ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @170 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#nullptr_exception.nullptr_exception[186] params(1) in file: lib/support/0.2.805//exceptions.sharp:50:29: note:  
		    public nullptr_exception(message : string) { base->exception(message); }
		                            ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @171 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#nullptr_exception.nullptr_exception[187] params(0) in file: lib/support/0.2.805//exceptions.sharp:48:6: note:  
		class nullptr_exception base exception {
		     ^

0 [0x0]:         ret   


constructor: std#runtime_exception.runtime_exception[188] params(1) in file: lib/support/0.2.805//exceptions.sharp:53:29: note:  
		    public runtime_exception(message : _int8[]) { base->exception(message); }
		                            ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @170 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#runtime_exception.runtime_exception[189] params(1) in file: lib/support/0.2.805//exceptions.sharp:54:29: note:  
		    public runtime_exception(message : string) { base->exception(message); }
		                            ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @171 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#runtime_exception.runtime_exception[190] params(0) in file: lib/support/0.2.805//exceptions.sharp:52:6: note:  
		class runtime_exception base exception {
		     ^

0 [0x0]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[191] params(1) in file: lib/support/0.2.805//exceptions.sharp:57:36: note:  
		    public stack_overflow_exception(message : _int8[]) { base->exception(message); }
		                                   ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @170 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[192] params(1) in file: lib/support/0.2.805//exceptions.sharp:58:36: note:  
		    public stack_overflow_exception(message : string) { base->exception(message); }
		                                   ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @171 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[193] params(0) in file: lib/support/0.2.805//exceptions.sharp:56:6: note:  
		class stack_overflow_exception base exception {
		     ^

0 [0x0]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[194] params(1) in file: lib/support/0.2.805//exceptions.sharp:61:34: note:  
		    public thread_stack_exception(message : _int8[]) { base->exception(message); }
		                                 ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @170 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#thread_stack_exception.thread_stack_exception[195] params(1) in file: lib/support/0.2.805//exceptions.sharp:62:34: note:  
		    public thread_stack_exception(message : string) { base->exception(message); }
		                                 ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @171 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#thread_stack_exception.thread_stack_exception[196] params(0) in file: lib/support/0.2.805//exceptions.sharp:60:6: note:  
		class thread_stack_exception base exception {
		     ^

0 [0x0]:         ret   


constructor: std#class_cast_exception.class_cast_exception[197] params(1) in file: lib/support/0.2.805//exceptions.sharp:65:32: note:  
		    public class_cast_exception(message : _int8[]) { base->exception(message); }
		                               ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @170 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#class_cast_exception.class_cast_exception[198] params(1) in file: lib/support/0.2.805//exceptions.sharp:66:32: note:  
		    public class_cast_exception(message : string) { base->exception(message); }
		                               ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @171 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#class_cast_exception.class_cast_exception[199] params(0) in file: lib/support/0.2.805//exceptions.sharp:64:6: note:  
		class class_cast_exception base exception {
		     ^

0 [0x0]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[200] params(1) in file: lib/support/0.2.805//exceptions.sharp:69:35: note:  
		    public out_of_memory_exception(message : _int8[]) { base->exception(message); }
		                                  ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @170 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[201] params(1) in file: lib/support/0.2.805//exceptions.sharp:70:35: note:  
		    public out_of_memory_exception(message : string) { base->exception(message); }
		                                  ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @171 // <std#exception.exception>   
5 [0x5]:          ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[202] params(0) in file: lib/support/0.2.805//exceptions.sharp:68:6: note:  
		class out_of_memory_exception base exception {
		     ^

0 [0x0]:         ret   


function: std.io#__srt_global.critical_section[203] params(1) in file: lib/support/0.2.805//io//critical_section.sharp:4:4: note:  
		def critical_section(block : ()()) {
		   ^

0 [0x0]: line: 5 movl 1   
1 [0x1]:         del   
2 [0x2]: line: 6 movg @15 // @std.io#__srt_global   
3 [0x3]:         movn #0   
5 [0x5]:         _lck    
6 [0x6]: line: 7 loadl ebx, fp+0   : try start: try block start
7 [0x7]: line: 8 rstore ebx   
8 [0x8]:         loadval ebx   
9 [0x9]:         calld ebx   
10 [0xa]:         jmp @14   : try block end
11 [0xb]: line: 10 movl 2   : catch(std#exception)
12 [0xc]:          smovr_3 fp+1   
13 [0xd]:          jmp @14   
14 [0xe]:          nop   : try end
15 [0xf]:          movg @15 // @std.io#__srt_global   
16 [0x10]:          movn #0   
18 [0x12]:          _ulck   
19 [0x13]: line: 14 movl 1   
20 [0x14]:          pushobj   
21 [0x15]:          pushnull    
22 [0x16]:          itest ebx   
23 [0x17]:          not ebx, ebx   
24 [0x18]:          movr cmt, ebx   
25 [0x19]:          jne 29   
26 [0x1a]:          movl 1   
27 [0x1b]:          pushobj   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]:          ret   


function: std.io#__srt_global.critical_section[204] params(2) in file: lib/support/0.2.805//io//critical_section.sharp:30:4: note:  
		def critical_section(block : ()(), lock_obj : object) {
		   ^

0 [0x0]: line: 31 movl 2   
1 [0x1]:          del   
2 [0x2]: line: 32 movl 1   
3 [0x3]:          _lck    
4 [0x4]: line: 33 loadl ebx, fp+0   : try start: try block start
5 [0x5]: line: 34 rstore ebx   
6 [0x6]:          loadval ebx   
7 [0x7]:          calld ebx   
8 [0x8]:          jmp @12   : try block end
9 [0x9]: line: 36 movl 3   : catch(std#exception)
10 [0xa]:          smovr_3 fp+2   
11 [0xb]:          jmp @12   
12 [0xc]:          nop   : try end
13 [0xd]:          movl 1   
14 [0xe]:          _ulck   
15 [0xf]: line: 40 movl 2   
16 [0x10]:          pushobj   
17 [0x11]:          pushnull    
18 [0x12]:          itest ebx   
19 [0x13]:          not ebx, ebx   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 25   
22 [0x16]:          movl 2   
23 [0x17]:          pushobj   
24 [0x18]:          throw    
25 [0x19]:          nop   
26 [0x1a]:          ret   


function: std.io#__srt_global.realloc[205] params(2) in file: lib/support/0.2.805//io//memory.sharp:4:11: note:  
		static def realloc(data: object[], size: var) {
		          ^

0 [0x0]: line: 5 pushl 0   : protected asm start
1 [0x1]:         ipushl #1   
2 [0x2]:         int 0xc6   
3 [0x3]:         ret   : protected asm end


function: std.io#__srt_global.realloc[206] params(2) in file: lib/support/0.2.805//io//memory.sharp:12:11: note:  
		static def realloc(data: var[], size: var) {
		          ^

0 [0x0]: line: 13 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0xc6   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[207] params(2) in file: lib/support/0.2.805//io//memory.sharp:20:11: note:  
		static def realloc(data: _int8[], size: var) {
		          ^

0 [0x0]: line: 21 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0xc6   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[208] params(2) in file: lib/support/0.2.805//io//memory.sharp:28:11: note:  
		static def realloc(data: _int16[], size: var) {
		          ^

0 [0x0]: line: 29 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0xc6   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[209] params(2) in file: lib/support/0.2.805//io//memory.sharp:36:11: note:  
		static def realloc(data: _int32[], size: var) {
		          ^

0 [0x0]: line: 37 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0xc6   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[210] params(2) in file: lib/support/0.2.805//io//memory.sharp:44:11: note:  
		static def realloc(data: _int64[], size: var) {
		          ^

0 [0x0]: line: 45 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0xc6   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[211] params(2) in file: lib/support/0.2.805//io//memory.sharp:52:11: note:  
		static def realloc(data: _uint8[], size: var) {
		          ^

0 [0x0]: line: 53 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0xc6   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[212] params(2) in file: lib/support/0.2.805//io//memory.sharp:60:11: note:  
		static def realloc(data: _uint16[], size: var) {
		          ^

0 [0x0]: line: 61 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0xc6   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[213] params(2) in file: lib/support/0.2.805//io//memory.sharp:68:11: note:  
		static def realloc(data: _uint32[], size: var) {
		          ^

0 [0x0]: line: 69 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0xc6   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[214] params(2) in file: lib/support/0.2.805//io//memory.sharp:76:11: note:  
		static def realloc(data: _uint64[], size: var) {
		          ^

0 [0x0]: line: 77 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0xc6   
3 [0x3]:          ret   : protected asm end


function: std#_nil_.to_string[215] params(0) in file: lib/support/0.2.805//nil.sharp:18:15: note:  
		    public def to_string() := new string("nil");
		              ^

0 [0x0]: line: 18 new_class @41 // std#string   
1 [0x1]:          dup    
2 [0x2]:          newstr @0 // nil   
3 [0x3]:          call @259 // <std#string.string>   
4 [0x4]:          movsl #0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   


constructor: std#_nil_._nil_[216] params(0) in file: lib/support/0.2.805//nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         ret   


overload function: std#_object_.operator==[217] params(1) in file: lib/support/0.2.805//object.sharp:13:15: note:  
		    public def operator==(o : object) : var {
		              ^

0 [0x0]: line: 14 movl 0   
1 [0x1]:          movl 1   
2 [0x2]:          pushobj   
3 [0x3]:          itest ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#_object_.to_string[218] params(0) in file: lib/support/0.2.805//object.sharp:17:15: note:  
		    public def to_string() := new string("");
		              ^

0 [0x0]: line: 17 new_class @41 // std#string   
1 [0x1]:          dup    
2 [0x2]:          newstr @1 //    
3 [0x3]:          call @259 // <std#string.string>   
4 [0x4]:          movsl #0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#_object_.hash[219] params(0) in file: lib/support/0.2.805//object.sharp:19:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 21 new_class @23 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movi #0, ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          call @233 // <std#long.long>   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#_object_.guid[220] params(0) in file: lib/support/0.2.805//object.sharp:24:8: note:  
		    def guid() : long {
		       ^

0 [0x0]: line: 26 new_class @23 // std#long   
1 [0x1]:          dup    
2 [0x2]:          movg @1 // @std#__srt_global   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          chklen adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          movr egx, ebx   
10 [0xa]:          inc ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]:          rstore egx   
15 [0xf]:          call @233 // <std#long.long>   
16 [0x10]:          return_val ebx   
17 [0x11]:          ret   


constructor: std#_object_._object_[221] params(0) in file: lib/support/0.2.805//object.sharp:11:13: note:  
		stable class _object_ : printable, unique {
		            ^

0 [0x0]:         ret   


function: platform#build.is_windows[222] params(0) in file: lib/support/0.2.805//platform//build.sharp:9:15: note:  
		    static def is_windows() : var {
		              ^

0 [0x0]: line: 10 movg @19 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @2 // win   
5 [0x5]:          call @264 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: platform#build.is_linux[223] params(0) in file: lib/support/0.2.805//platform//build.sharp:13:15: note:  
		    static def is_linux() : var {
		              ^

0 [0x0]: line: 14 movg @19 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @3 // posix   
5 [0x5]:          call @264 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: platform#build.build[224] params(0) in file: lib/support/0.2.805//platform//build.sharp:3:6: note:  
		class build {
		     ^

0 [0x0]:         ret   


function: platform.kernel#platform.tls_init[225] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:12:15: note:  
		    static def tls_init() {}
		              ^

0 [0x0]: line: 12 ret   


function: platform.kernel#platform.static_init[226] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:13:23: note:  
		    private static def static_init() {}
		                      ^

0 [0x0]: line: 13 call @277 // <std#__srt_global.$03internal_static_init>   
1 [0x1]:          call @275 // <std.io#__srt_global.$03internal_static_init>   
2 [0x2]:          call @276 // <std#_nil_.$03internal_static_init>   
3 [0x3]:          call @278 // <std#string.$03internal_static_init>   
4 [0x4]:          call @275 // <std.io#__srt_global.$03internal_static_init>   
5 [0x5]:          call @276 // <std#_nil_.$03internal_static_init>   
6 [0x6]:          call @277 // <std#__srt_global.$03internal_static_init>   
7 [0x7]:          call @278 // <std#string.$03internal_static_init>   
8 [0x8]:          new_class @36 // std.reflect#property_type   
9 [0x9]:          movg @36 // @std.reflect#property_type   
10 [0xa]:          movn #1   
12 [0xc]:          popobj   
13 [0xd]:          newstr @5 // class_property   
14 [0xe]:          movg @36 // @std.reflect#property_type   
15 [0xf]:          movn #1   
17 [0x11]:          movn #0   
19 [0x13]:          popobj   
20 [0x14]:          movi #92777, ebx   
22 [0x16]:          movg @36 // @std.reflect#property_type   
23 [0x17]:          movn #1   
25 [0x19]:          movn #1   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          new_class @36 // std.reflect#property_type   
31 [0x1f]:          movg @36 // @std.reflect#property_type   
32 [0x20]:          movn #2   
34 [0x22]:          popobj   
35 [0x23]:          newstr @6 // field_property   
36 [0x24]:          movg @36 // @std.reflect#property_type   
37 [0x25]:          movn #2   
39 [0x27]:          movn #0   
41 [0x29]:          popobj   
42 [0x2a]:          movi #92778, ebx   
44 [0x2c]:          movg @36 // @std.reflect#property_type   
45 [0x2d]:          movn #2   
47 [0x2f]:          movn #1   
49 [0x31]:          movi #0, adx   
51 [0x33]:          rmov adx, ebx   
52 [0x34]:          new_class @36 // std.reflect#property_type   
53 [0x35]:          movg @36 // @std.reflect#property_type   
54 [0x36]:          movn #3   
56 [0x38]:          popobj   
57 [0x39]:          newstr @7 // function_property   
58 [0x3a]:          movg @36 // @std.reflect#property_type   
59 [0x3b]:          movn #3   
61 [0x3d]:          movn #0   
63 [0x3f]:          popobj   
64 [0x40]:          movi #92779, ebx   
66 [0x42]:          movg @36 // @std.reflect#property_type   
67 [0x43]:          movn #3   
69 [0x45]:          movn #1   
71 [0x47]:          movi #0, adx   
73 [0x49]:          rmov adx, ebx   
74 [0x4a]:          movi #3, ebx   
76 [0x4c]:          new_classarray ebx  // std.reflect#property_type[]   
77 [0x4d]:          movg @36 // @std.reflect#property_type   
78 [0x4e]:          movn #1   
80 [0x50]:          pushobj   
81 [0x51]:          movsl #-1   
82 [0x52]:          movn #0   
84 [0x54]:          popobj   
85 [0x55]:          movg @36 // @std.reflect#property_type   
86 [0x56]:          movn #2   
88 [0x58]:          pushobj   
89 [0x59]:          movsl #-1   
90 [0x5a]:          movn #1   
92 [0x5c]:          popobj   
93 [0x5d]:          movg @36 // @std.reflect#property_type   
94 [0x5e]:          movn #3   
96 [0x60]:          pushobj   
97 [0x61]:          movsl #-1   
98 [0x62]:          movn #2   
100 [0x64]:          popobj   
101 [0x65]:          movg @36 // @std.reflect#property_type   
102 [0x66]:          movn #0   
104 [0x68]:          popobj   
105 [0x69]:          movg @21 // @platform.kernel#platform   
106 [0x6a]:          movn #2   
108 [0x6c]:          movi #0, adx   
110 [0x6e]:          movi #158, ebx   
112 [0x70]:          rmov adx, ebx   
113 [0x71]:          ret   


function: platform.kernel#platform.print[227] params(1) in file: lib/support/0.2.805//platform//kernel//platform.sharp:15:15: note:  
		    static def print(msg : _int8[]) {
		              ^

0 [0x0]: line: 16 istorel -1, fp+2   
2 [0x2]:          movl 0   
3 [0x3]:          pushobj   
4 [0x4]:          movl 3   
5 [0x5]:          popobj   
6 [0x6]:          iaddl 1, fp@2   
8 [0x8]:          movl 3   
9 [0x9]:          sizeof ecx   
10 [0xa]:          loadl ebx, fp+2   
11 [0xb]:          lt ebx, ecx   
12 [0xc]:          jne 18   
13 [0xd]:          iaload ecx, ebx   
14 [0xe]:          smovr_2 ecx, fp+1   
15 [0xf]: line: 17 loadl ebx, fp+1   : protected asm start
16 [0x10]:          _putc ebx   
17 [0x11]:          jmp @6   : protected asm end
18 [0x12]:          ret   


function: platform.kernel#platform.srt_init[228] params(1) in file: lib/support/0.2.805//platform//kernel//platform.sharp:24:23: note:  
		    private static def srt_init(args: object[]) : var {
		                      ^

0 [0x0]: line: 25 new_class @41 // std#string   
1 [0x1]:          dup    
2 [0x2]:          newstr @1 //    
3 [0x3]:          call @259 // <std#string.string>   
4 [0x4]:          movl 0   
5 [0x5]:          pushobj   
6 [0x6]:          movi #0, ebx   
8 [0x8]:          popobj2    
9 [0x9]:          movr adx, ebx   
10 [0xa]:          chklen adx   
11 [0xb]:          movnd adx   
12 [0xc]:          vcast 0 -> []   
13 [0xd]:          pushobj   
14 [0xe]:          call @263 // <std#string.operator+>   
15 [0xf]:          movg @19 // @platform#build   
16 [0x10]:          movn #1   
18 [0x12]:          popobj   
19 [0x13]: line: 26 new_class @41 // std#string   
20 [0x14]:          dup    
21 [0x15]:          newstr @1 //    
22 [0x16]:          call @259 // <std#string.string>   
23 [0x17]:          movl 0   
24 [0x18]:          pushobj   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          popobj2    
28 [0x1c]:          movr adx, ebx   
29 [0x1d]:          chklen adx   
30 [0x1e]:          movnd adx   
31 [0x1f]:          vcast 0 -> []   
32 [0x20]:          pushobj   
33 [0x21]:          call @263 // <std#string.operator+>   
34 [0x22]:          movg @19 // @platform#build   
35 [0x23]:          movn #3   
37 [0x25]:          popobj   
38 [0x26]: line: 27 new_class @41 // std#string   
39 [0x27]:          dup    
40 [0x28]:          newstr @1 //    
41 [0x29]:          call @259 // <std#string.string>   
42 [0x2a]:          movl 0   
43 [0x2b]:          pushobj   
44 [0x2c]:          movi #2, ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          vcast 0 -> []   
51 [0x33]:          pushobj   
52 [0x34]:          call @263 // <std#string.operator+>   
53 [0x35]:          movg @19 // @platform#build   
54 [0x36]:          movn #2   
56 [0x38]:          popobj   
57 [0x39]: line: 28 new_class @41 // std#string   
58 [0x3a]:          dup    
59 [0x3b]:          newstr @1 //    
60 [0x3c]:          call @259 // <std#string.string>   
61 [0x3d]:          movl 0   
62 [0x3e]:          pushobj   
63 [0x3f]:          movi #3, ebx   
65 [0x41]:          popobj2    
66 [0x42]:          movr adx, ebx   
67 [0x43]:          chklen adx   
68 [0x44]:          movnd adx   
69 [0x45]:          vcast 0 -> []   
70 [0x46]:          pushobj   
71 [0x47]:          call @263 // <std#string.operator+>   
72 [0x48]:          movg @19 // @platform#build   
73 [0x49]:          movn #0   
75 [0x4b]:          popobj   
76 [0x4c]: line: 30 call @226 // <platform.kernel#platform.static_init>   
77 [0x4d]: line: 31 call @225 // <platform.kernel#platform.tls_init>   
78 [0x4e]: line: 32 movi #0, ebx   
80 [0x50]:          return_val ebx   
81 [0x51]:          ret   


constructor: platform.kernel#platform.platform[229] params(0) in file: lib/support/0.2.805//platform//kernel//platform.sharp:5:6: note:  
		class platform
		     ^

0 [0x0]:         ret   


constructor: std#ulong.ulong[230] params(1) in file: lib/support/0.2.805//primitives.sharp:44:10: note:  
		    ulong(i : var) {
		         ^

0 [0x0]:         ret   


constructor: std#ulong.ulong[231] params(0) in file: lib/support/0.2.805//primitives.sharp:42:6: note:  
		class ulong base integer<_uint64> {
		     ^

0 [0x0]:         ret   


constructor: std#long.long[232] params(1) in file: lib/support/0.2.805//primitives.sharp:49:9: note:  
		    long(i : int) {
		        ^

0 [0x0]:         ret   


constructor: std#long.long[233] params(1) in file: lib/support/0.2.805//primitives.sharp:52:9: note:  
		    long(i : var) {
		        ^

0 [0x0]:         ret   


constructor: std#long.long[234] params(0) in file: lib/support/0.2.805//primitives.sharp:48:6: note:  
		class long base integer<_int64> {
		     ^

0 [0x0]:         ret   


constructor: std#uint.uint[235] params(1) in file: lib/support/0.2.805//primitives.sharp:58:9: note:  
		    uint(i : var) {
		        ^

0 [0x0]:         ret   


constructor: std#uint.uint[236] params(0) in file: lib/support/0.2.805//primitives.sharp:56:6: note:  
		class uint base integer<_uint32> {
		     ^

0 [0x0]:         ret   


constructor: std#int.int[237] params(1) in file: lib/support/0.2.805//primitives.sharp:64:8: note:  
		    int(i : var) {
		       ^

0 [0x0]:         ret   


constructor: std#int.int[238] params(0) in file: lib/support/0.2.805//primitives.sharp:62:6: note:  
		class int base integer<_int32> {
		     ^

0 [0x0]:         ret   


constructor: std#ushort.ushort[239] params(1) in file: lib/support/0.2.805//primitives.sharp:70:11: note:  
		    ushort(i : var) {
		          ^

0 [0x0]:         ret   


constructor: std#ushort.ushort[240] params(0) in file: lib/support/0.2.805//primitives.sharp:68:6: note:  
		class ushort base integer<_uint16> {
		     ^

0 [0x0]:         ret   


constructor: std#short.short[241] params(1) in file: lib/support/0.2.805//primitives.sharp:76:10: note:  
		    short(i : var) {
		         ^

0 [0x0]:         ret   


constructor: std#short.short[242] params(0) in file: lib/support/0.2.805//primitives.sharp:74:6: note:  
		class short base integer<_int16> {
		     ^

0 [0x0]:         ret   


constructor: std#uchar.uchar[243] params(1) in file: lib/support/0.2.805//primitives.sharp:82:10: note:  
		    uchar(i : var) {
		         ^

0 [0x0]:         ret   


constructor: std#uchar.uchar[244] params(0) in file: lib/support/0.2.805//primitives.sharp:80:6: note:  
		class uchar base integer<_uint8> {
		     ^

0 [0x0]:         ret   


constructor: std#char.char[245] params(1) in file: lib/support/0.2.805//primitives.sharp:88:9: note:  
		    char(i : var) {
		        ^

0 [0x0]:         ret   


constructor: std#char.char[246] params(0) in file: lib/support/0.2.805//primitives.sharp:86:6: note:  
		class char base integer<_int8> {
		     ^

0 [0x0]:         ret   


constructor: std#byte.byte[247] params(1) in file: lib/support/0.2.805//primitives.sharp:94:9: note:  
		    byte(i : var) {
		        ^

0 [0x0]:         ret   


constructor: std#byte.byte[248] params(0) in file: lib/support/0.2.805//primitives.sharp:92:6: note:  
		class byte base uchar {
		     ^

0 [0x0]:         ret   


constructor: std#bool.bool[249] params(0) in file: lib/support/0.2.805//primitives.sharp:98:6: note:  
		class bool base integer<_int8> { /* TDOO: override base class methods */ }
		     ^

0 [0x0]:         ret   


std#printable.to_string[250] params(0) in file: lib/support/0.2.805//printable.sharp:11:8: note:  
		    def to_string() : string;
		       ^



constructor: std#printable.printable[251] params(0) in file: lib/support/0.2.805//printable.sharp:10:10: note:  
		interface printable {
		         ^

0 [0x0]:         ret   


constructor: std.reflect#_class_._class_[252] params(0) in file: lib/support/0.2.805//reflect//class.sharp:4:6: note:  
		class _class_ base data_entity {
		     ^

0 [0x0]:         ret   


constructor: std.reflect#data_entity.data_entity[253] params(0) in file: lib/support/0.2.805//reflect//data_entity.sharp:4:6: note:  
		class data_entity {
		     ^

0 [0x0]:         ret   


constructor: std.reflect#data_property.data_property[254] params(0) in file: lib/support/0.2.805//reflect//data_property.sharp:11:6: note:  
		class data_property base data_entity {
		     ^

0 [0x0]:         ret   


constructor: std.reflect#field.field[255] params(0) in file: lib/support/0.2.805//reflect//field.sharp:4:6: note:  
		class field {
		     ^

0 [0x0]:         ret   


constructor: std.reflect#function.function[256] params(0) in file: lib/support/0.2.805//reflect//function.sharp:4:6: note:  
		class function base data_entity {
		     ^

0 [0x0]:         ret   


constructor: std.reflect#reflect.reflect[257] params(1) in file: lib/support/0.2.805//reflect//reflection.sharp:15:12: note:  
		    reflect(ref_obj : object) {
		           ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @273 // <std.reflect#reflect.set_reflect_obj>   
5 [0x5]:          ret   


constructor: std.reflect#reflect.reflect[258] params(0) in file: lib/support/0.2.805//reflect//reflection.sharp:3:6: note:  
		class reflect {
		     ^

0 [0x0]:         ret   


constructor: std#string.string[259] params(1) in file: lib/support/0.2.805//string.sharp:10:11: note:  
		    string(str : _int8[]) {
		          ^

0 [0x0]: line: 11 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          pushnull    
3 [0x3]:          itest ebx   
4 [0x4]:          not ebx, ebx   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 13   
7 [0x7]: line: 12 movl 0   
8 [0x8]:          pushobj   
9 [0x9]:          movl 1   
10 [0xa]:          pushobj   
11 [0xb]:          call @262 // <std#string.append>   
12 [0xc]:          pop   
13 [0xd]:          nop   
14 [0xe]:          ret   


function: std#string.append[260] params(1) in file: lib/support/0.2.805//string.sharp:16:8: note:  
		    def append(char: var) : string
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 19 movi #1, ebx   
10 [0xa]:          newarry ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @31   
16 [0x10]: line: 21 movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          add ecx, ebx -> ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @206 // <std.io#__srt_global.realloc>   
31 [0x1f]:          nop   
32 [0x20]: line: 23 loadl ebx, fp+1   
33 [0x21]:          rstore ebx   
34 [0x22]:          movl 0   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          movl 0   
39 [0x27]:          movn #0   
41 [0x29]:          sizeof ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          movi #1, ebx   
45 [0x2d]:          loadval ecx   
46 [0x2e]:          sub ecx, ebx -> ebx   
47 [0x2f]:          popobj2    
48 [0x30]:          movr adx, ebx   
49 [0x31]:          chklen adx   
50 [0x32]:          loadval ebx   
51 [0x33]:          rmov adx, ebx   
52 [0x34]: line: 24 movl 0   
53 [0x35]:          returnobj   
54 [0x36]:          ret   


function: std#string.append[261] params(1) in file: lib/support/0.2.805//string.sharp:27:8: note:  
		    def append(c: char) : string
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          pushobj   
2 [0x2]:          movl 1   
3 [0x3]:          pushobj   
4 [0x4]:          call @156 // <std#integer<_int8>.get_value>   
5 [0x5]:          pushobj   
6 [0x6]:          call @260 // <std#string.append>   
7 [0x7]:          popobj2    
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: std#string.append[262] params(1) in file: lib/support/0.2.805//string.sharp:32:8: note:  
		    def append(immstr: _int8[]) : string
		       ^

0 [0x0]: line: 34 movl 1   
1 [0x1]:          pushobj   
2 [0x2]:          pushnull    
3 [0x3]:          itest ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 9   
6 [0x6]:          movl 0   
7 [0x7]:          returnobj   
8 [0x8]:          ret   
9 [0x9]:          nop   
10 [0xa]: line: 36 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          sizeof ebx   
14 [0xe]:          smovr_2 ebx, fp+2   
15 [0xf]: line: 38 movl 0   
16 [0x10]:          movn #0   
18 [0x12]:          pushobj   
19 [0x13]:          pushnull    
20 [0x14]:          itest ebx   
21 [0x15]:          movr cmt, ebx   
22 [0x16]:          jne 31   
23 [0x17]: line: 39 movl 1   
24 [0x18]:          sizeof ebx   
25 [0x19]:          newarry ebx   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          popobj   
30 [0x1e]:          jmp @46   
31 [0x1f]: line: 41 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #0   
38 [0x26]:          sizeof ebx   
39 [0x27]:          rstore ebx   
40 [0x28]:          movl 1   
41 [0x29]:          sizeof ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          call @206 // <std.io#__srt_global.realloc>   
46 [0x2e]:          nop   
47 [0x2f]: line: 43 istorel -1, fp+4   
49 [0x31]:          movl 1   
50 [0x32]:          pushobj   
51 [0x33]:          movl 5   
52 [0x34]:          popobj   
53 [0x35]:          iaddl 1, fp@4   
55 [0x37]:          movl 5   
56 [0x38]:          sizeof ecx   
57 [0x39]:          loadl ebx, fp+4   
58 [0x3a]:          lt ebx, ecx   
59 [0x3b]:          jne 79   
60 [0x3c]:          iaload ecx, ebx   
61 [0x3d]:          smovr_2 ecx, fp+3   
62 [0x3e]: line: 45 loadl ebx, fp+3   
63 [0x3f]:          rstore ebx   
64 [0x40]:          movl 0   
65 [0x41]:          movn #0   
67 [0x43]:          pushobj   
68 [0x44]:          loadl ebx, fp+2   
69 [0x45]:          movr egx, ebx   
70 [0x46]:          inc ebx   
71 [0x47]:          smovr_2 ebx, fp+2   
72 [0x48]:          movr ebx, egx   
73 [0x49]:          popobj2    
74 [0x4a]:          movr adx, ebx   
75 [0x4b]:          chklen adx   
76 [0x4c]:          loadval ebx   
77 [0x4d]:          rmov adx, ebx   
78 [0x4e]:          jmp @53   
79 [0x4f]: line: 48 movl 0   
80 [0x50]:          returnobj   
81 [0x51]:          ret   


overload function: std#string.operator+[263] params(1) in file: lib/support/0.2.805//string.sharp:51:8: note:  
		    def operator+(immstr : _int8[]) : string {
		       ^

0 [0x0]: line: 52 new_class @41 // std#string   
1 [0x1]:          dup    
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          call @259 // <std#string.string>   
7 [0x7]:          movsl #0   
8 [0x8]:          smovr_3 fp+2   
9 [0x9]: line: 53 movl 1   
10 [0xa]:          pushobj   
11 [0xb]:          pushnull    
12 [0xc]:          itest ebx   
13 [0xd]:          not ebx, ebx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 25   
16 [0x10]: line: 54 movl 2   
17 [0x11]:          pushobj   
18 [0x12]:          movl 1   
19 [0x13]:          pushobj   
20 [0x14]:          call @262 // <std#string.append>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   
24 [0x18]:          jmp @32   
25 [0x19]: line: 56 movl 2   
26 [0x1a]:          pushobj   
27 [0x1b]:          newstr @4 // null   
28 [0x1c]:          call @262 // <std#string.append>   
29 [0x1d]:          popobj2    
30 [0x1e]:          returnobj   
31 [0x1f]:          ret   
32 [0x20]:          nop   


overload function: std#string.operator==[264] params(1) in file: lib/support/0.2.805//string.sharp:59:8: note:  
		    def operator==(num : _int8[]) : var {
		       ^

0 [0x0]: line: 60 movi #0, ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


overload function: std#string.operator+[265] params(1) in file: lib/support/0.2.805//string.sharp:63:8: note:  
		    def operator+(num : var) : string {
		       ^

0 [0x0]: line: 64 pushnull    
1 [0x1]:          popobj2    
2 [0x2]:          returnobj   
3 [0x3]:          ret   


function: std#string.foo[266] params(0) in file: lib/support/0.2.805//string.sharp:67:8: note:  
		    def foo() { }
		       ^

0 [0x0]:         ret   


function: std#string.hash[267] params(0) in file: lib/support/0.2.805//string.sharp:69:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 70 movi #0, ebx   
2 [0x2]: line: 71 smovr_2 ebx, fp+1   
3 [0x3]: line: 72 movi #1, ebx   
5 [0x5]: line: 73 smovr_2 ebx, fp+2   
6 [0x6]: line: 74 istorel -1, fp+4   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          movl 5   
13 [0xd]:          popobj   
14 [0xe]:          iaddl 1, fp@4   
16 [0x10]:          movl 5   
17 [0x11]:          sizeof ecx   
18 [0x12]:          loadl ebx, fp+4   
19 [0x13]:          lt ebx, ecx   
20 [0x14]:          jne 61   
21 [0x15]:          iaload ecx, ebx   
22 [0x16]:          smovr_2 ecx, fp+3   
23 [0x17]: line: 75 loadl ebx, fp+1   
24 [0x18]:          rstore ebx   
25 [0x19]:          loadl ebx, fp+3   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movi #97, ebx   
29 [0x1d]:          loadval ecx   
30 [0x1e]:          sub ecx, ebx -> ebx   
31 [0x1f]:          rstore ebx   
32 [0x20]:          movi #1, ebx   
34 [0x22]:          loadval ecx   
35 [0x23]:          add ecx, ebx -> ebx   
36 [0x24]:          rstore ebx   
37 [0x25]:          loadl ebx, fp+2   
38 [0x26]:          loadval ecx   
39 [0x27]:          mul ecx, ebx -> ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          movi #1000000009, ebx   
45 [0x2d]:          loadval ecx   
46 [0x2e]:          mod ecx, ebx -> ebx   
47 [0x2f]:          smovr_2 ebx, fp+1   
48 [0x30]: line: 76 loadl ebx, fp+2   
49 [0x31]:          rstore ebx   
50 [0x32]:          movi #31, ebx   
52 [0x34]:          loadval ecx   
53 [0x35]:          mul ecx, ebx -> ebx   
54 [0x36]:          rstore ebx   
55 [0x37]:          movi #1000000009, ebx   
57 [0x39]:          loadval ecx   
58 [0x3a]:          mod ecx, ebx -> ebx   
59 [0x3b]:          smovr_2 ebx, fp+2   
60 [0x3c]:          jmp @14   
61 [0x3d]: line: 78 new_class @23 // std#long   
62 [0x3e]:          dup    
63 [0x3f]:          loadl ebx, fp+1   
64 [0x40]:          rstore ebx   
65 [0x41]:          call @233 // <std#long.long>   
66 [0x42]:          return_val ebx   
67 [0x43]:          ret   


constructor: std#string.string[268] params(0) in file: lib/support/0.2.805//string.sharp:5:6: note:  
		class string {
		     ^

0 [0x0]:         ret   


std#unique.hash[269] params(0) in file: lib/support/0.2.805//unique.sharp:11:8: note:  
		    def hash() : long;
		       ^



std#unique.guid[270] params(0) in file: lib/support/0.2.805//unique.sharp:12:8: note:  
		    def guid() : long;
		       ^



constructor: std#unique.unique[271] params(0) in file: lib/support/0.2.805//unique.sharp:10:10: note:  
		interface unique {
		         ^

0 [0x0]:         ret   


function: std#_nil_.set_instance[272] params(2) in file: lib/support/0.2.805//nil.sharp:11:44: note:  
		    static instance : _nil_ = new _nil_ { };
		                                           ^

0 [0x0]:         ret   


function: std.reflect#reflect.set_reflect_obj[273] params(2) in file: lib/support/0.2.805//reflect//reflection.sharp:5:35: note:  
		        get { return reflect_obj; }
		                                  ^

0 [0x0]:         ret   


function: std.reflect#reflect.get_reflect_obj[274] params(0) in file: lib/support/0.2.805//reflect//reflection.sharp:4:25: note:  
		    reflect_obj : object;
		                        ^

0 [0x0]: line: 5 movl 0   
1 [0x1]:         movn #1   
3 [0x3]:         returnobj   
4 [0x4]:         ret   


function: std.io#__srt_global.$03internal_static_init[275] params(0) in file: lib/support/0.2.805//io//critical_section.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @17 // std#_object_   
1 [0x1]:         dup    
2 [0x2]:         call @221 // <std#_object_._object_>   
3 [0x3]:         movg @15 // @std.io#__srt_global   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std#_nil_.$03internal_static_init[276] params(0) in file: lib/support/0.2.805//nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         new_class @16 // std#_nil_   
1 [0x1]:         movg @16 // @std#_nil_   
2 [0x2]:         movn #0   
4 [0x4]:         popobj   
5 [0x5]:         ret   


function: std#__srt_global.$03internal_static_init[277] params(0) in file: lib/support/0.2.805//object.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movg @1 // @std#__srt_global   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#string.$03internal_static_init[278] params(0) in file: lib/support/0.2.805//string.sharp:5:6: note:  
		class string {
		     ^

0 [0x0]:         movi #103, ebx   
2 [0x2]:         rstore ebx   
3 [0x3]:         movg @41 // @std#string   
4 [0x4]:         movn #0   
6 [0x6]:         loadval ebx   
7 [0x7]:         mov8 ebx, ebx   
8 [0x8]:         movi #0, adx   
10 [0xa]:         rmov adx, ebx   
11 [0xb]:         movi #0, ebx   
13 [0xd]:         rstore ebx   
14 [0xe]:         movg @41 // @std#string   
15 [0xf]:         movn #1   
17 [0x11]:         loadval ebx   
18 [0x12]:         movi #0, adx   
20 [0x14]:         rmov adx, ebx   
21 [0x15]:         ret   


