## Object Dump file for bin/syntax:

pre codebase size: 72642
post codebase size: 65238
optimized opcodes: 7404
net % gain 10.1925


class: std#__srt_global[0] fields(1) methods(47)
class: std#_enum_[1] fields(2) methods(14)
class: std#throwable[2] fields(3) methods(9)
class: std#exception[3] fields(3) methods(12)
class: std#illegal_argument_exception[4] fields(3) methods(15)
class: std#illegal_state_exception[5] fields(3) methods(15)
class: std#out_of_bounds_exception[6] fields(3) methods(15)
class: std#io_exception[7] fields(3) methods(15)
class: std#invalid_operation_exception[8] fields(3) methods(15)
class: std#nullptr_exception[9] fields(3) methods(15)
class: std#runtime_exception[10] fields(3) methods(15)
class: std#stack_overflow_exception[11] fields(3) methods(15)
class: std#thread_stack_exception[12] fields(3) methods(15)
class: std#class_cast_exception[13] fields(3) methods(15)
class: std#out_of_memory_exception[14] fields(3) methods(15)
class: std#not_implemented_error[15] fields(3) methods(15)
class: std#unsatisfied_link_error[16] fields(3) methods(15)
class: std.io#__srt_global[17] fields(1) methods(45)
class: std.io#file[18] fields(3) methods(47)
class: std.io#file_system[19] fields(18) methods(24)
class: std.io.task#__srt_global[20] fields(4) methods(15)
class: std.io.task#cancellation_exception[21] fields(3) methods(18)
class: std.io.task#job[22] fields(22) methods(25)
class: std.io.task#job_builder[23] fields(2) methods(18)
class: std.io.task#job_controller[24] fields(1) methods(5)
class: std.io.task#job_master[25] fields(5) methods(11)
enum: std.io.task#job_state[26] fields(6) methods(14)
class: std.io.task#task[27] fields(0) methods(12)
class: std.io#thread[28] fields(15) methods(43)
class: std.io#thread_group[29] fields(6) methods(17)
enum: std.io#thread_priority[30] fields(5) methods(14)
enum: std.io#thread_result[31] fields(20) methods(17)
interface: std.io#uncaught_exception_handler[32] fields(0) methods(6)
class: std.io#unix_fs[33] fields(20) methods(29)
class: std.io#win_fs[34] fields(20) methods(29)
class: std.math#__srt_global[35] fields(5) methods(27)
class: std#_nil_[36] fields(1) methods(8)
class: std#_object_[37] fields(0) methods(4)
class: platform#__srt_global[38] fields(0) methods(4)
class: platform#build[39] fields(4) methods(7)
class: platform.kernel#__srt_global[40] fields(0) methods(1)
class: platform.kernel#platform[41] fields(4) methods(13)
class: platform.kernel#stack_state[42] fields(2) methods(5)
class: platform.kernel#vm[43] fields(0) methods(20)
class: std#ulong[44] fields(1) methods(291)
class: std#long[45] fields(1) methods(291)
class: std#uint[46] fields(1) methods(291)
class: std#int[47] fields(1) methods(291)
class: std#ushort[48] fields(1) methods(291)
class: std#short[49] fields(1) methods(291)
class: std#uchar[50] fields(1) methods(291)
class: std#char[51] fields(1) methods(297)
class: std#byte[52] fields(1) methods(391)
class: std#bool[53] fields(1) methods(292)
interface: std#printable[54] fields(0) methods(6)
class: std.reflect#__srt_global[55] fields(0) methods(1)
class: std.reflect#_class_[56] fields(6) methods(6)
class: std.reflect#data_entity[57] fields(6) methods(5)
enum: std.reflect#data_type[58] fields(19) methods(14)
enum: std.reflect#property_type[59] fields(5) methods(14)
class: std.reflect#data_property[60] fields(6) methods(6)
class: std.reflect#field[61] fields(2) methods(5)
class: std.reflect#function[62] fields(6) methods(6)
class: std.reflect#reflect[63] fields(4) methods(8)
class: std#string[64] fields(3) methods(56)
class: std#string_builder[65] fields(7) methods(50)
class: std#time[66] fields(1) methods(16)
enum: std#time_unit[67] fields(6) methods(14)
interface: std#unique[68] fields(0) methods(7)
class: common#__srt_global[69] fields(0) methods(1)
class: common#constants[70] fields(31) methods(6)
class: common#constants.strings[71] fields(12) methods(6)
class: common.gpio#__srt_global[72] fields(0) methods(5)
class: common.network.core#__srt_global[73] fields(0) methods(2)
class: common.network.core#request[74] fields(3) methods(10)
class: common.network.core#request_data[75] fields(2) methods(9)
class: common.network.core#request_data.request_item[76] fields(2) methods(6)
class: common.network.data.request#__srt_global[77] fields(0) methods(1)
interface: common.network.data.request#acknowledge_request[78] fields(0) methods(6)
interface: common.network.data.request#command_request[79] fields(0) methods(7)
interface: common.network.data.request#flight_mode_change_request[80] fields(0) methods(6)
interface: common.network.data.request#handshake_request[81] fields(0) methods(6)
interface: common.network.data.request#signal_strength_request[82] fields(0) methods(6)
class: common.network.data.response#__srt_global[83] fields(0) methods(1)
class: common.network.data.response#command_response[84] fields(2) methods(6)
class: common.network.driver#__srt_global[85] fields(0) methods(11)
class: common.network.driver#nrf24[86] fields(4) methods(14)
class: common.network#__srt_global[87] fields(0) methods(1)
class: common.network#network[88] fields(6) methods(11)
class: common.network.remote#__srt_global[89] fields(0) methods(2)
class: common.network.remote#acknowledge_request_impl[90] fields(4) methods(15)
class: common.network.remote#command_request_impl[91] fields(3) methods(13)
class: common.network.remote#flight_mode_change_request_impl[92] fields(4) methods(15)
class: common.network.remote#handshake_request_impl[93] fields(4) methods(15)
class: common.network.remote#signal_strength_request_impl[94] fields(3) methods(12)
class: main#__srt_global[95] fields(4) methods(7)
std#loopable<std.io#thread>[96] fields(0) methods(6)
generic: std#integer<_uint64>[97] fields(1) methods(197)
generic: std#integer<_int64>[98] fields(1) methods(197)
generic: std#integer<_uint32>[99] fields(1) methods(197)
generic: std#integer<_int32>[100] fields(1) methods(197)
generic: std#integer<_uint16>[101] fields(1) methods(197)
generic: std#integer<_int16>[102] fields(1) methods(197)
generic: std#integer<_uint8>[103] fields(1) methods(197)
generic: std#integer<_int8>[104] fields(1) methods(197)
std#loopable<_int8>[105] fields(0) methods(6)
generic: std#list<std#string>[106] fields(5) methods(29)
std#loopable<std#string>[107] fields(0) methods(6)
generic: std#hashtable<std.io#thread,std.io.task#job_controller>[108] fields(6) methods(12)
generic: std#hashmap<std#int,std.io#thread>[109] fields(5) methods(12)
generic: std#list<std.io#thread>[110] fields(5) methods(29)
generic: std#synced_list<std.io.task#job>[111] fields(5) methods(27)
std#loopable<std.io.task#job>[112] fields(0) methods(6)
generic: std#list<std.io.task#job>[113] fields(5) methods(29)
generic: std#list<var>[114] fields(5) methods(29)
std#loopable<var>[115] fields(0) methods(6)
generic: std#list<common.network.core#request_data.request_item>[116] fields(5) methods(29)
std#loopable<common.network.core#request_data.request_item>[117] fields(0) methods(6)
generic: std.io.task#entry<std.io#thread,std.io.task#job_controller>[118] fields(3) methods(7)
generic: std.io#entry<std#int,std.io#thread>[119] fields(3) methods(7)


 strings: 

[0]: job#
[1]: nil
[2]: main
[3]: 100
[4]: 200
[5]: cmd
[6]: response
[7]: yes
[8]: mode
[9]: 0
[10]: 1
[11]: 2
[12]: 3
[13]: 4
[14]: 5
[15]: 
[16]: file path cannot be null
[17]: file path cannot be empty
[18]: Negative time
[19]: file could not be resolved: 
[20]: cannot set update restart interval on non-recurring job
[21]: cannot set a timeout on a job that's blocking the calling thread
[22]: cannot set a job recurring that's blocking the calling thread
[23]: cannot block calling thread on job that has a timeout
[24]: cannot block calling thread on a recurring job
[25]: recurring jobs cannot be deferred tasks
[26]: Long term jobs
[27]: Short term jobs
[28]: task_scheduler
[29]: cannot modify max thread count after task library has started, 
[30]: try calling this before your first task
[31]: cannot modify max thread count after task library has started, try calling this before your first ta
[32]: cannot have less than 2 max threads
[33]: jobs 
[34]: long_term_worker_thread#
[35]: worker_thread#
[36]: invalid thread priority 
[37]: win
[38]: posix
[39]: .dll
[40]: .so
[41]: length cannot be less than zero
[42]: length of: 
[43]:  is greater than the string: 
[44]: null
[45]: invalid precision: 
[46]: end_pos: 
[47]:  cannot be less than the start_pos: 
[48]: Index out of bounds exception at: 
[49]:  with size of: 
[50]: endPos: 
[51]:  cannot be less than the startPos: 
[52]: cannot sleep for negative time: 
[53]: =
[54]: ,
[55]: device is not setup
[56]: device is shutown
[57]: created
[58]: active
[59]: completed
[60]: cancelled
[61]: min_priority
[62]: norm_priority
[63]: max_priority
[64]: result_ok
[65]: result_ill_thread_start
[66]: result_thread_running
[67]: result_thread_terminated
[68]: result_invalid_stack_size
[69]: result_thread_not_started
[70]: result_ill_thread_join
[71]: result_thread_join_failed
[72]: result_ill_thread_interrupt
[73]: result_thread_interrupt_failed
[74]: result_ill_thread_destroy
[75]: result_thread_create_failed
[76]: result_no_thread_id
[77]: result_thread_destroy_failed
[78]: result_ill_priority_set
[79]: result_ill_thread_suspend
[80]: result_max_spin
[81]: enums
[82]: int8
[83]: int16
[84]: int32
[85]: int64
[86]: uint8
[87]: uint16
[88]: uint32
[89]: uint64
[90]: fnptr
[91]: _var
[92]: _object
[93]: _class
[94]: method
[95]: _nil
[96]: any
[97]: untyped
[98]: undefined
[99]: class_property
[100]: field_property
[101]: function_property
[102]: seconds
[103]: milliseconds
[104]: microseconds
[105]: nanoseconds
[106]: illegal char in string: 
[107]: [ 
[108]: , 
[109]:  ]
[110]: Index: 
[111]: , size: 
[112]: key 
[113]:  value 

 constants: 

[0]: 2.7182818284590451e+00
[1]: 3.1415926535897931e+00
[2]: 1.0000000000000000e+00
[3]: 0.0000000000000000e+00
[4]: inf
[5]: nan
[6]: nan
[7]: 7.5000000000000000e-01
[8]: 2.5000000000000000e-01
[9]: 5.0000000000000000e-01
[10]: 1.0000000000000000e+09

 methods: 
constructor: std#__srt_global.__srt_global[0] params(0) in file: lib\support\0.2.805/console.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io#__srt_global.__srt_global[1] params(0) in file: lib\support\0.2.805/io//critical_section.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io.task#__srt_global.__srt_global[2] params(0) in file: lib\support\0.2.805/io//task//cancellation_exception.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.math#__srt_global.__srt_global[3] params(0) in file: lib\support\0.2.805/math//math.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform#__srt_global.__srt_global[4] params(0) in file: lib\support\0.2.805/platform//build.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform.kernel#__srt_global.__srt_global[5] params(0) in file: lib\support\0.2.805/platform//kernel//platform.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.reflect#__srt_global.__srt_global[6] params(0) in file: lib\support\0.2.805/reflect//class.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common#__srt_global.__srt_global[7] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/constants.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.gpio#__srt_global.__srt_global[8] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/gpio//gpio.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network.core#__srt_global.__srt_global[9] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network.data.request#__srt_global.__srt_global[10] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//ackowledge_request.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network.data.response#__srt_global.__srt_global[11] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//response//command_response.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network.driver#__srt_global.__srt_global[12] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network#__srt_global.__srt_global[13] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//network.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network.remote#__srt_global.__srt_global[14] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//acknowledge_request_impl.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: main#__srt_global.__srt_global[15] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\controller/connection_tracker.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


std#loopable<std.io#thread>.get_elements[16] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:4:8: note:  
			
		       ^



constructor: std#loopable<std.io#thread>.loopable[17] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:3:10: note:  
		public class thread_group : loopable<thread> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint64>.integer[18] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #97, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 9 ipushl #1   
6 [0x6]:         movl 0   
7 [0x7]:         movn #0   
9 [0x9]:         loadval ebx   
10 [0xa]:         movu64 ebx, ebx   
11 [0xb]:         movi #0, adx   
13 [0xd]:         rmov adx, ebx   
14 [0xe]:         ret   


function: std#integer<_uint64>.hash[19] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #97, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 13 new_class @45 // std#long   
5 [0x5]:          dup    
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2065 // <std#long.long>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[20] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[21] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[22] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[23] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[24] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[25] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[26] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[27] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[28] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[29] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[30] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[31] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[32] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[33] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[34] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[35] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[36] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[37] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[38] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[39] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[40] params(1) in file: lib\support\0.2.805/primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[41] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[42] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[43] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[44] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[45] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[46] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[47] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[48] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[49] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[50] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator-[51] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[52] params(1) in file: lib\support\0.2.805/primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[53] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[54] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[55] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[56] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[57] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[58] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[59] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[60] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[61] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator*[62] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[63] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[64] params(1) in file: lib\support\0.2.805/primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[65] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[66] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[67] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[68] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[69] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[70] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[71] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[72] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator/[73] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[74] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[75] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[76] params(1) in file: lib\support\0.2.805/primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[77] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[78] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[79] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[80] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[81] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[82] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[83] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator%[84] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[85] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[86] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[87] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[88] params(1) in file: lib\support\0.2.805/primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[89] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[90] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[91] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[92] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[93] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[94] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator<[95] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator<[96] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator<[97] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator<[98] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[99] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[100] params(1) in file: lib\support\0.2.805/primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[101] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[102] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[103] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[104] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[105] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator>[106] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[107] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[108] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[109] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[110] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[111] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[112] params(1) in file: lib\support\0.2.805/primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[113] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[114] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[115] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[116] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator<=[117] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[118] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[119] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[120] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[121] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[122] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[123] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[124] params(1) in file: lib\support\0.2.805/primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[125] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[126] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[127] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator**[128] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[129] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[130] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[131] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[132] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[133] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[134] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[135] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[136] params(1) in file: lib\support\0.2.805/primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[137] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[138] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator<<[139] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[140] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[141] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[142] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[143] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[144] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[145] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[146] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[147] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[148] params(1) in file: lib\support\0.2.805/primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[149] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator>>[150] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[151] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[152] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[153] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[154] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[155] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[156] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[157] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[158] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[159] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[160] params(1) in file: lib\support\0.2.805/primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator^[161] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[162] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[163] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[164] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[165] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[166] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[167] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[168] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[169] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[170] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[171] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator&[172] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[173] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[174] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[175] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[176] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[177] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[178] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[179] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[180] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[181] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[182] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator|[183] params(1) in file: lib\support\0.2.805/primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[184] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[185] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[186] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[187] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[188] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[189] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[190] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[191] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[192] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[193] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator!=[194] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator==[195] params(1) in file: lib\support\0.2.805/primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator=[196] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint64>.to_string[197] params(0) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #97, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 210 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @15 //    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2955 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.parse[198] params(1) in file: lib\support\0.2.805/primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           movu64 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2956 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2945 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           movr ebx, cmt   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 79   
34 [0x22]: line: 226 pushl 0   
35 [0x23]:           ipushl #1   
36 [0x24]:           call @2945 // <std#string.at>   
37 [0x25]:           call @2712 // <std#char.is_digit>   
38 [0x26]:           loadval ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 54   
42 [0x2a]: line: 227 new_class @4 // std#illegal_argument_exception   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @64 // std#string   
45 [0x2d]:           dup    
46 [0x2e]:           newstr @106 // illegal char in string:    
47 [0x2f]:           call @2923 // <std#string.string>   
48 [0x30]:           pushl 0   
49 [0x31]:           ipushl #1   
50 [0x32]:           call @2945 // <std#string.at>   
51 [0x33]:           call @2955 // <std#string.operator+>   
52 [0x34]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
53 [0x35]:           throw    
54 [0x36]:           nop   
55 [0x37]: line: 231 movi #10, ebx   
57 [0x39]:           loadl ecx, fp+2   
58 [0x3a]:           mul ecx, ebx -> ebx   
59 [0x3b]:           movu64 ebx, ebx   
60 [0x3c]:           smovr_2 ebx, fp+2   
61 [0x3d]: line: 232 pushl 0   
62 [0x3e]:           loadl ebx, fp+1   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           smovr_2 ebx, fp+1   
66 [0x42]:           rstore egx   
67 [0x43]:           call @2945 // <std#string.at>   
68 [0x44]:           loadval ebx   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #48, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           sub ecx, ebx -> ebx   
74 [0x4a]:           loadl ecx, fp+2   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           movu64 ebx, ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           jmp @27   
79 [0x4f]: line: 234 loadl ebx, fp+3   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 86   
82 [0x52]: line: 235 loadl ebx, fp+2   
83 [0x53]:           neg ebx, ebx   
84 [0x54]:           movu64 ebx, ebx   
85 [0x55]:           smovr_2 ebx, fp+2   
86 [0x56]:           nop   
87 [0x57]: line: 236 loadl ebx, fp+2   
88 [0x58]:           return_val ebx   
89 [0x59]:           ret   


function: std#integer<_uint64>.to_ulong[199] params(0) in file: lib\support\0.2.805/primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @44 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_long[200] params(0) in file: lib\support\0.2.805/primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @45 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_uint[201] params(0) in file: lib\support\0.2.805/primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @46 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_int[202] params(0) in file: lib\support\0.2.805/primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @47 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_ushort[203] params(0) in file: lib\support\0.2.805/primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @48 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_short[204] params(0) in file: lib\support\0.2.805/primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @49 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_uchar[205] params(0) in file: lib\support\0.2.805/primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @50 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_char[206] params(0) in file: lib\support\0.2.805/primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @51 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_byte[207] params(0) in file: lib\support\0.2.805/primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @52 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.to_bool[208] params(0) in file: lib\support\0.2.805/primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @53 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.get_value[209] params(0) in file: lib\support\0.2.805/primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint64>.integer[210] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int64>.integer[211] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #98, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 9 ipushl #1   
6 [0x6]:         movl 0   
7 [0x7]:         movn #0   
9 [0x9]:         loadval ebx   
10 [0xa]:         mov64 ebx, ebx   
11 [0xb]:         movi #0, adx   
13 [0xd]:         rmov adx, ebx   
14 [0xe]:         ret   


function: std#integer<_int64>.hash[212] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #98, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 13 new_class @45 // std#long   
5 [0x5]:          dup    
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2065 // <std#long.long>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[213] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[214] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[215] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[216] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[217] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[218] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[219] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[220] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[221] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[222] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[223] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[224] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[225] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[226] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[227] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[228] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[229] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[230] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[231] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[232] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[233] params(1) in file: lib\support\0.2.805/primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[234] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[235] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[236] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[237] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[238] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[239] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[240] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[241] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[242] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[243] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator-[244] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[245] params(1) in file: lib\support\0.2.805/primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[246] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[247] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[248] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[249] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[250] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[251] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[252] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[253] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[254] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator*[255] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[256] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[257] params(1) in file: lib\support\0.2.805/primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[258] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[259] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[260] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[261] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[262] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[263] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[264] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[265] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator/[266] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[267] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[268] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[269] params(1) in file: lib\support\0.2.805/primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[270] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[271] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[272] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[273] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[274] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[275] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[276] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator%[277] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[278] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[279] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[280] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[281] params(1) in file: lib\support\0.2.805/primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[282] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[283] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[284] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[285] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[286] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[287] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator<[288] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator<[289] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator<[290] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator<[291] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[292] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[293] params(1) in file: lib\support\0.2.805/primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[294] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[295] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[296] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[297] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[298] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator>[299] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[300] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[301] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[302] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[303] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[304] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[305] params(1) in file: lib\support\0.2.805/primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[306] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[307] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[308] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[309] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator<=[310] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[311] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[312] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[313] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[314] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[315] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[316] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[317] params(1) in file: lib\support\0.2.805/primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[318] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[319] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[320] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator**[321] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[322] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[323] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[324] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[325] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[326] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[327] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[328] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[329] params(1) in file: lib\support\0.2.805/primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[330] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[331] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator<<[332] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[333] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[334] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[335] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[336] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[337] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[338] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[339] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[340] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[341] params(1) in file: lib\support\0.2.805/primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[342] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator>>[343] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[344] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[345] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[346] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[347] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[348] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[349] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[350] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[351] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[352] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[353] params(1) in file: lib\support\0.2.805/primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator^[354] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[355] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[356] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[357] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[358] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[359] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[360] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[361] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[362] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[363] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[364] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator&[365] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[366] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[367] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[368] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[369] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[370] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[371] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[372] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[373] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[374] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[375] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator|[376] params(1) in file: lib\support\0.2.805/primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[377] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[378] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[379] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[380] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[381] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[382] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[383] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[384] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[385] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[386] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator!=[387] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator==[388] params(1) in file: lib\support\0.2.805/primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator=[389] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int64>.to_string[390] params(0) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #98, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 210 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @15 //    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2955 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.parse[391] params(1) in file: lib\support\0.2.805/primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           mov64 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2956 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2945 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           movr ebx, cmt   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 79   
34 [0x22]: line: 226 pushl 0   
35 [0x23]:           ipushl #1   
36 [0x24]:           call @2945 // <std#string.at>   
37 [0x25]:           call @2712 // <std#char.is_digit>   
38 [0x26]:           loadval ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 54   
42 [0x2a]: line: 227 new_class @4 // std#illegal_argument_exception   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @64 // std#string   
45 [0x2d]:           dup    
46 [0x2e]:           newstr @106 // illegal char in string:    
47 [0x2f]:           call @2923 // <std#string.string>   
48 [0x30]:           pushl 0   
49 [0x31]:           ipushl #1   
50 [0x32]:           call @2945 // <std#string.at>   
51 [0x33]:           call @2955 // <std#string.operator+>   
52 [0x34]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
53 [0x35]:           throw    
54 [0x36]:           nop   
55 [0x37]: line: 231 movi #10, ebx   
57 [0x39]:           loadl ecx, fp+2   
58 [0x3a]:           mul ecx, ebx -> ebx   
59 [0x3b]:           mov64 ebx, ebx   
60 [0x3c]:           smovr_2 ebx, fp+2   
61 [0x3d]: line: 232 pushl 0   
62 [0x3e]:           loadl ebx, fp+1   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           smovr_2 ebx, fp+1   
66 [0x42]:           rstore egx   
67 [0x43]:           call @2945 // <std#string.at>   
68 [0x44]:           loadval ebx   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #48, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           sub ecx, ebx -> ebx   
74 [0x4a]:           loadl ecx, fp+2   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           mov64 ebx, ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           jmp @27   
79 [0x4f]: line: 234 loadl ebx, fp+3   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 86   
82 [0x52]: line: 235 loadl ebx, fp+2   
83 [0x53]:           neg ebx, ebx   
84 [0x54]:           mov64 ebx, ebx   
85 [0x55]:           smovr_2 ebx, fp+2   
86 [0x56]:           nop   
87 [0x57]: line: 236 loadl ebx, fp+2   
88 [0x58]:           return_val ebx   
89 [0x59]:           ret   


function: std#integer<_int64>.to_ulong[392] params(0) in file: lib\support\0.2.805/primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @44 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_long[393] params(0) in file: lib\support\0.2.805/primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @45 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_uint[394] params(0) in file: lib\support\0.2.805/primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @46 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_int[395] params(0) in file: lib\support\0.2.805/primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @47 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_ushort[396] params(0) in file: lib\support\0.2.805/primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @48 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_short[397] params(0) in file: lib\support\0.2.805/primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @49 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_uchar[398] params(0) in file: lib\support\0.2.805/primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @50 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_char[399] params(0) in file: lib\support\0.2.805/primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @51 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_byte[400] params(0) in file: lib\support\0.2.805/primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @52 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.to_bool[401] params(0) in file: lib\support\0.2.805/primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @53 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.get_value[402] params(0) in file: lib\support\0.2.805/primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int64>.integer[403] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint32>.integer[404] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #99, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 9 ipushl #1   
6 [0x6]:         movl 0   
7 [0x7]:         movn #0   
9 [0x9]:         loadval ebx   
10 [0xa]:         movu32 ebx, ebx   
11 [0xb]:         movi #0, adx   
13 [0xd]:         rmov adx, ebx   
14 [0xe]:         ret   


function: std#integer<_uint32>.hash[405] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #99, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 13 new_class @45 // std#long   
5 [0x5]:          dup    
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2065 // <std#long.long>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[406] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[407] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[408] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[409] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[410] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[411] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[412] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[413] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[414] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[415] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[416] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[417] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[418] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[419] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[420] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[421] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[422] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[423] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[424] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[425] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[426] params(1) in file: lib\support\0.2.805/primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[427] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[428] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[429] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[430] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[431] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[432] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[433] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[434] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[435] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[436] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator-[437] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[438] params(1) in file: lib\support\0.2.805/primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[439] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[440] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[441] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[442] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[443] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[444] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[445] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[446] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[447] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator*[448] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[449] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[450] params(1) in file: lib\support\0.2.805/primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[451] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[452] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[453] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[454] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[455] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[456] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[457] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[458] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator/[459] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[460] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[461] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[462] params(1) in file: lib\support\0.2.805/primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[463] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[464] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[465] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[466] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[467] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[468] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[469] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator%[470] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[471] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[472] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[473] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[474] params(1) in file: lib\support\0.2.805/primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[475] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[476] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[477] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[478] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[479] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[480] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator<[481] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator<[482] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator<[483] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator<[484] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[485] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[486] params(1) in file: lib\support\0.2.805/primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[487] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[488] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[489] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[490] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[491] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator>[492] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[493] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[494] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[495] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[496] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[497] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[498] params(1) in file: lib\support\0.2.805/primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[499] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[500] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[501] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[502] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator<=[503] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[504] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[505] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[506] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[507] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[508] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[509] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[510] params(1) in file: lib\support\0.2.805/primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[511] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[512] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[513] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator**[514] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[515] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[516] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[517] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[518] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[519] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[520] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[521] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[522] params(1) in file: lib\support\0.2.805/primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[523] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[524] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator<<[525] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[526] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[527] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[528] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[529] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[530] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[531] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[532] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[533] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[534] params(1) in file: lib\support\0.2.805/primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[535] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator>>[536] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[537] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[538] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[539] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[540] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[541] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[542] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[543] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[544] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[545] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[546] params(1) in file: lib\support\0.2.805/primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator^[547] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[548] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[549] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[550] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[551] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[552] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[553] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[554] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[555] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[556] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[557] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator&[558] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[559] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[560] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[561] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[562] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[563] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[564] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[565] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[566] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[567] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[568] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator|[569] params(1) in file: lib\support\0.2.805/primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[570] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[571] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[572] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[573] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[574] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[575] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[576] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[577] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[578] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[579] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator!=[580] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator==[581] params(1) in file: lib\support\0.2.805/primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator=[582] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint32>.to_string[583] params(0) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #99, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 210 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @15 //    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2955 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.parse[584] params(1) in file: lib\support\0.2.805/primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           movu32 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2956 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2945 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           movr ebx, cmt   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 79   
34 [0x22]: line: 226 pushl 0   
35 [0x23]:           ipushl #1   
36 [0x24]:           call @2945 // <std#string.at>   
37 [0x25]:           call @2712 // <std#char.is_digit>   
38 [0x26]:           loadval ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 54   
42 [0x2a]: line: 227 new_class @4 // std#illegal_argument_exception   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @64 // std#string   
45 [0x2d]:           dup    
46 [0x2e]:           newstr @106 // illegal char in string:    
47 [0x2f]:           call @2923 // <std#string.string>   
48 [0x30]:           pushl 0   
49 [0x31]:           ipushl #1   
50 [0x32]:           call @2945 // <std#string.at>   
51 [0x33]:           call @2955 // <std#string.operator+>   
52 [0x34]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
53 [0x35]:           throw    
54 [0x36]:           nop   
55 [0x37]: line: 231 movi #10, ebx   
57 [0x39]:           loadl ecx, fp+2   
58 [0x3a]:           mul ecx, ebx -> ebx   
59 [0x3b]:           movu32 ebx, ebx   
60 [0x3c]:           smovr_2 ebx, fp+2   
61 [0x3d]: line: 232 pushl 0   
62 [0x3e]:           loadl ebx, fp+1   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           smovr_2 ebx, fp+1   
66 [0x42]:           rstore egx   
67 [0x43]:           call @2945 // <std#string.at>   
68 [0x44]:           loadval ebx   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #48, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           sub ecx, ebx -> ebx   
74 [0x4a]:           loadl ecx, fp+2   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           movu32 ebx, ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           jmp @27   
79 [0x4f]: line: 234 loadl ebx, fp+3   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 86   
82 [0x52]: line: 235 loadl ebx, fp+2   
83 [0x53]:           neg ebx, ebx   
84 [0x54]:           movu32 ebx, ebx   
85 [0x55]:           smovr_2 ebx, fp+2   
86 [0x56]:           nop   
87 [0x57]: line: 236 loadl ebx, fp+2   
88 [0x58]:           return_val ebx   
89 [0x59]:           ret   


function: std#integer<_uint32>.to_ulong[585] params(0) in file: lib\support\0.2.805/primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @44 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_long[586] params(0) in file: lib\support\0.2.805/primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @45 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_uint[587] params(0) in file: lib\support\0.2.805/primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @46 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_int[588] params(0) in file: lib\support\0.2.805/primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @47 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_ushort[589] params(0) in file: lib\support\0.2.805/primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @48 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_short[590] params(0) in file: lib\support\0.2.805/primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @49 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_uchar[591] params(0) in file: lib\support\0.2.805/primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @50 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_char[592] params(0) in file: lib\support\0.2.805/primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @51 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_byte[593] params(0) in file: lib\support\0.2.805/primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @52 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.to_bool[594] params(0) in file: lib\support\0.2.805/primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @53 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.get_value[595] params(0) in file: lib\support\0.2.805/primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint32>.integer[596] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int32>.integer[597] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #100, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 9 ipushl #1   
6 [0x6]:         movl 0   
7 [0x7]:         movn #0   
9 [0x9]:         loadval ebx   
10 [0xa]:         mov32 ebx, ebx   
11 [0xb]:         movi #0, adx   
13 [0xd]:         rmov adx, ebx   
14 [0xe]:         ret   


function: std#integer<_int32>.hash[598] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #100, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 13 new_class @45 // std#long   
5 [0x5]:          dup    
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2065 // <std#long.long>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[599] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[600] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[601] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[602] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[603] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[604] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[605] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[606] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[607] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[608] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[609] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[610] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[611] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[612] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[613] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[614] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[615] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[616] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[617] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[618] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[619] params(1) in file: lib\support\0.2.805/primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[620] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[621] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[622] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[623] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[624] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[625] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[626] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[627] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[628] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[629] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator-[630] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[631] params(1) in file: lib\support\0.2.805/primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[632] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[633] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[634] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[635] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[636] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[637] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[638] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[639] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[640] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator*[641] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[642] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[643] params(1) in file: lib\support\0.2.805/primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[644] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[645] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[646] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[647] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[648] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[649] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[650] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[651] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator/[652] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[653] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[654] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[655] params(1) in file: lib\support\0.2.805/primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[656] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[657] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[658] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[659] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[660] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[661] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[662] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator%[663] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[664] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[665] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[666] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[667] params(1) in file: lib\support\0.2.805/primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[668] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[669] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[670] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[671] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[672] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[673] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator<[674] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator<[675] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator<[676] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator<[677] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[678] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[679] params(1) in file: lib\support\0.2.805/primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[680] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[681] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[682] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[683] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[684] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator>[685] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[686] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[687] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[688] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[689] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[690] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[691] params(1) in file: lib\support\0.2.805/primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[692] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[693] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[694] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[695] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator<=[696] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[697] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[698] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[699] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[700] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[701] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[702] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[703] params(1) in file: lib\support\0.2.805/primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[704] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[705] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[706] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator**[707] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[708] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[709] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[710] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[711] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[712] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[713] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[714] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[715] params(1) in file: lib\support\0.2.805/primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[716] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[717] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator<<[718] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[719] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[720] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[721] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[722] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[723] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[724] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[725] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[726] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[727] params(1) in file: lib\support\0.2.805/primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[728] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator>>[729] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[730] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[731] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[732] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[733] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[734] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[735] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[736] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[737] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[738] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[739] params(1) in file: lib\support\0.2.805/primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator^[740] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[741] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[742] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[743] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[744] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[745] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[746] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[747] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[748] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[749] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[750] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator&[751] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[752] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[753] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[754] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[755] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[756] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[757] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[758] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[759] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[760] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[761] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator|[762] params(1) in file: lib\support\0.2.805/primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[763] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[764] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[765] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[766] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[767] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[768] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[769] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[770] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[771] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[772] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator!=[773] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator==[774] params(1) in file: lib\support\0.2.805/primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator=[775] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int32>.to_string[776] params(0) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #100, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 210 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @15 //    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2955 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.parse[777] params(1) in file: lib\support\0.2.805/primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           mov32 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2956 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2945 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           movr ebx, cmt   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 79   
34 [0x22]: line: 226 pushl 0   
35 [0x23]:           ipushl #1   
36 [0x24]:           call @2945 // <std#string.at>   
37 [0x25]:           call @2712 // <std#char.is_digit>   
38 [0x26]:           loadval ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 54   
42 [0x2a]: line: 227 new_class @4 // std#illegal_argument_exception   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @64 // std#string   
45 [0x2d]:           dup    
46 [0x2e]:           newstr @106 // illegal char in string:    
47 [0x2f]:           call @2923 // <std#string.string>   
48 [0x30]:           pushl 0   
49 [0x31]:           ipushl #1   
50 [0x32]:           call @2945 // <std#string.at>   
51 [0x33]:           call @2955 // <std#string.operator+>   
52 [0x34]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
53 [0x35]:           throw    
54 [0x36]:           nop   
55 [0x37]: line: 231 movi #10, ebx   
57 [0x39]:           loadl ecx, fp+2   
58 [0x3a]:           mul ecx, ebx -> ebx   
59 [0x3b]:           mov32 ebx, ebx   
60 [0x3c]:           smovr_2 ebx, fp+2   
61 [0x3d]: line: 232 pushl 0   
62 [0x3e]:           loadl ebx, fp+1   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           smovr_2 ebx, fp+1   
66 [0x42]:           rstore egx   
67 [0x43]:           call @2945 // <std#string.at>   
68 [0x44]:           loadval ebx   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #48, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           sub ecx, ebx -> ebx   
74 [0x4a]:           loadl ecx, fp+2   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           mov32 ebx, ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           jmp @27   
79 [0x4f]: line: 234 loadl ebx, fp+3   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 86   
82 [0x52]: line: 235 loadl ebx, fp+2   
83 [0x53]:           neg ebx, ebx   
84 [0x54]:           mov32 ebx, ebx   
85 [0x55]:           smovr_2 ebx, fp+2   
86 [0x56]:           nop   
87 [0x57]: line: 236 loadl ebx, fp+2   
88 [0x58]:           return_val ebx   
89 [0x59]:           ret   


function: std#integer<_int32>.to_ulong[778] params(0) in file: lib\support\0.2.805/primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @44 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_long[779] params(0) in file: lib\support\0.2.805/primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @45 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_uint[780] params(0) in file: lib\support\0.2.805/primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @46 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_int[781] params(0) in file: lib\support\0.2.805/primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @47 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_ushort[782] params(0) in file: lib\support\0.2.805/primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @48 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_short[783] params(0) in file: lib\support\0.2.805/primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @49 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_uchar[784] params(0) in file: lib\support\0.2.805/primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @50 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_char[785] params(0) in file: lib\support\0.2.805/primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @51 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_byte[786] params(0) in file: lib\support\0.2.805/primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @52 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.to_bool[787] params(0) in file: lib\support\0.2.805/primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @53 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.get_value[788] params(0) in file: lib\support\0.2.805/primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int32>.integer[789] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint16>.integer[790] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #101, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 9 ipushl #1   
6 [0x6]:         movl 0   
7 [0x7]:         movn #0   
9 [0x9]:         loadval ebx   
10 [0xa]:         movu16 ebx, ebx   
11 [0xb]:         movi #0, adx   
13 [0xd]:         rmov adx, ebx   
14 [0xe]:         ret   


function: std#integer<_uint16>.hash[791] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #101, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 13 new_class @45 // std#long   
5 [0x5]:          dup    
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2065 // <std#long.long>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[792] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[793] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[794] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[795] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[796] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[797] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[798] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[799] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[800] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[801] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[802] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[803] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[804] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[805] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[806] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[807] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[808] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[809] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[810] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[811] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[812] params(1) in file: lib\support\0.2.805/primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[813] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[814] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[815] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[816] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[817] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[818] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[819] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[820] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[821] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[822] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator-[823] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[824] params(1) in file: lib\support\0.2.805/primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[825] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[826] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[827] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[828] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[829] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[830] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[831] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[832] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[833] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator*[834] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[835] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[836] params(1) in file: lib\support\0.2.805/primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[837] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[838] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[839] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[840] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[841] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[842] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[843] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[844] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator/[845] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[846] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[847] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[848] params(1) in file: lib\support\0.2.805/primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[849] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[850] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[851] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[852] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[853] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[854] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[855] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator%[856] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[857] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[858] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[859] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[860] params(1) in file: lib\support\0.2.805/primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[861] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[862] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[863] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[864] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[865] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[866] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator<[867] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator<[868] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator<[869] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator<[870] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[871] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[872] params(1) in file: lib\support\0.2.805/primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[873] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[874] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[875] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[876] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[877] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator>[878] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[879] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[880] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[881] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[882] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[883] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[884] params(1) in file: lib\support\0.2.805/primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[885] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[886] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[887] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[888] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator<=[889] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[890] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[891] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[892] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[893] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[894] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[895] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[896] params(1) in file: lib\support\0.2.805/primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[897] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[898] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[899] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator**[900] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[901] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[902] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[903] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[904] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[905] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[906] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[907] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[908] params(1) in file: lib\support\0.2.805/primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[909] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[910] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator<<[911] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[912] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[913] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[914] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[915] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[916] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[917] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[918] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[919] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[920] params(1) in file: lib\support\0.2.805/primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[921] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator>>[922] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[923] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[924] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[925] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[926] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[927] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[928] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[929] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[930] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[931] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[932] params(1) in file: lib\support\0.2.805/primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator^[933] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[934] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[935] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[936] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[937] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[938] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[939] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[940] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[941] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[942] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[943] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator&[944] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[945] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[946] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[947] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[948] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[949] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[950] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[951] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[952] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[953] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[954] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator|[955] params(1) in file: lib\support\0.2.805/primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[956] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[957] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[958] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[959] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[960] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[961] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[962] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[963] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[964] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[965] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator!=[966] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator==[967] params(1) in file: lib\support\0.2.805/primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator=[968] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint16>.to_string[969] params(0) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #101, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 210 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @15 //    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2955 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.parse[970] params(1) in file: lib\support\0.2.805/primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           movu16 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2956 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2945 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           movr ebx, cmt   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 79   
34 [0x22]: line: 226 pushl 0   
35 [0x23]:           ipushl #1   
36 [0x24]:           call @2945 // <std#string.at>   
37 [0x25]:           call @2712 // <std#char.is_digit>   
38 [0x26]:           loadval ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 54   
42 [0x2a]: line: 227 new_class @4 // std#illegal_argument_exception   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @64 // std#string   
45 [0x2d]:           dup    
46 [0x2e]:           newstr @106 // illegal char in string:    
47 [0x2f]:           call @2923 // <std#string.string>   
48 [0x30]:           pushl 0   
49 [0x31]:           ipushl #1   
50 [0x32]:           call @2945 // <std#string.at>   
51 [0x33]:           call @2955 // <std#string.operator+>   
52 [0x34]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
53 [0x35]:           throw    
54 [0x36]:           nop   
55 [0x37]: line: 231 movi #10, ebx   
57 [0x39]:           loadl ecx, fp+2   
58 [0x3a]:           mul ecx, ebx -> ebx   
59 [0x3b]:           movu16 ebx, ebx   
60 [0x3c]:           smovr_2 ebx, fp+2   
61 [0x3d]: line: 232 pushl 0   
62 [0x3e]:           loadl ebx, fp+1   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           smovr_2 ebx, fp+1   
66 [0x42]:           rstore egx   
67 [0x43]:           call @2945 // <std#string.at>   
68 [0x44]:           loadval ebx   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #48, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           sub ecx, ebx -> ebx   
74 [0x4a]:           loadl ecx, fp+2   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           movu16 ebx, ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           jmp @27   
79 [0x4f]: line: 234 loadl ebx, fp+3   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 86   
82 [0x52]: line: 235 loadl ebx, fp+2   
83 [0x53]:           neg ebx, ebx   
84 [0x54]:           movu16 ebx, ebx   
85 [0x55]:           smovr_2 ebx, fp+2   
86 [0x56]:           nop   
87 [0x57]: line: 236 loadl ebx, fp+2   
88 [0x58]:           return_val ebx   
89 [0x59]:           ret   


function: std#integer<_uint16>.to_ulong[971] params(0) in file: lib\support\0.2.805/primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @44 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_long[972] params(0) in file: lib\support\0.2.805/primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @45 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_uint[973] params(0) in file: lib\support\0.2.805/primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @46 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_int[974] params(0) in file: lib\support\0.2.805/primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @47 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_ushort[975] params(0) in file: lib\support\0.2.805/primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @48 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_short[976] params(0) in file: lib\support\0.2.805/primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @49 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_uchar[977] params(0) in file: lib\support\0.2.805/primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @50 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_char[978] params(0) in file: lib\support\0.2.805/primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @51 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_byte[979] params(0) in file: lib\support\0.2.805/primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @52 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.to_bool[980] params(0) in file: lib\support\0.2.805/primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @53 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.get_value[981] params(0) in file: lib\support\0.2.805/primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint16>.integer[982] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int16>.integer[983] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #102, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 9 ipushl #1   
6 [0x6]:         movl 0   
7 [0x7]:         movn #0   
9 [0x9]:         loadval ebx   
10 [0xa]:         mov16 ebx, ebx   
11 [0xb]:         movi #0, adx   
13 [0xd]:         rmov adx, ebx   
14 [0xe]:         ret   


function: std#integer<_int16>.hash[984] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #102, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 13 new_class @45 // std#long   
5 [0x5]:          dup    
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2065 // <std#long.long>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[985] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[986] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[987] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[988] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[989] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[990] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[991] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[992] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[993] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[994] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[995] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[996] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[997] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[998] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[999] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1000] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1001] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1002] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1003] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1004] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1005] params(1) in file: lib\support\0.2.805/primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1006] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1007] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1008] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1009] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1010] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1011] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1012] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1013] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1014] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1015] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator-[1016] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1017] params(1) in file: lib\support\0.2.805/primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1018] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1019] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1020] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1021] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1022] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1023] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1024] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1025] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1026] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator*[1027] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1028] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1029] params(1) in file: lib\support\0.2.805/primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1030] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1031] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1032] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1033] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1034] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1035] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1036] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1037] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator/[1038] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1039] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1040] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1041] params(1) in file: lib\support\0.2.805/primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1042] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1043] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1044] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1045] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1046] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1047] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1048] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator%[1049] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1050] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1051] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1052] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1053] params(1) in file: lib\support\0.2.805/primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1054] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1055] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1056] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1057] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1058] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1059] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator<[1060] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator<[1061] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator<[1062] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator<[1063] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1064] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1065] params(1) in file: lib\support\0.2.805/primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1066] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1067] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1068] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1069] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1070] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator>[1071] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1072] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1073] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1074] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1075] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1076] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1077] params(1) in file: lib\support\0.2.805/primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1078] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1079] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1080] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1081] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator<=[1082] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1083] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1084] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1085] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1086] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1087] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1088] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1089] params(1) in file: lib\support\0.2.805/primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1090] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1091] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1092] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator**[1093] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1094] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1095] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1096] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1097] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1098] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1099] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1100] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1101] params(1) in file: lib\support\0.2.805/primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1102] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1103] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator<<[1104] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1105] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1106] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1107] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1108] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1109] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1110] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1111] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1112] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1113] params(1) in file: lib\support\0.2.805/primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1114] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator>>[1115] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1116] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1117] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1118] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1119] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1120] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1121] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1122] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1123] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1124] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1125] params(1) in file: lib\support\0.2.805/primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator^[1126] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1127] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1128] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1129] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1130] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1131] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1132] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1133] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1134] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1135] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1136] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator&[1137] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1138] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1139] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1140] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1141] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1142] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1143] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1144] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1145] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1146] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1147] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator|[1148] params(1) in file: lib\support\0.2.805/primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1149] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1150] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1151] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1152] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1153] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1154] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1155] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1156] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1157] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1158] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator!=[1159] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator==[1160] params(1) in file: lib\support\0.2.805/primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator=[1161] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int16>.to_string[1162] params(0) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #102, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 210 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @15 //    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2955 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.parse[1163] params(1) in file: lib\support\0.2.805/primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           mov16 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2956 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2945 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           movr ebx, cmt   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 79   
34 [0x22]: line: 226 pushl 0   
35 [0x23]:           ipushl #1   
36 [0x24]:           call @2945 // <std#string.at>   
37 [0x25]:           call @2712 // <std#char.is_digit>   
38 [0x26]:           loadval ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 54   
42 [0x2a]: line: 227 new_class @4 // std#illegal_argument_exception   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @64 // std#string   
45 [0x2d]:           dup    
46 [0x2e]:           newstr @106 // illegal char in string:    
47 [0x2f]:           call @2923 // <std#string.string>   
48 [0x30]:           pushl 0   
49 [0x31]:           ipushl #1   
50 [0x32]:           call @2945 // <std#string.at>   
51 [0x33]:           call @2955 // <std#string.operator+>   
52 [0x34]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
53 [0x35]:           throw    
54 [0x36]:           nop   
55 [0x37]: line: 231 movi #10, ebx   
57 [0x39]:           loadl ecx, fp+2   
58 [0x3a]:           mul ecx, ebx -> ebx   
59 [0x3b]:           mov16 ebx, ebx   
60 [0x3c]:           smovr_2 ebx, fp+2   
61 [0x3d]: line: 232 pushl 0   
62 [0x3e]:           loadl ebx, fp+1   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           smovr_2 ebx, fp+1   
66 [0x42]:           rstore egx   
67 [0x43]:           call @2945 // <std#string.at>   
68 [0x44]:           loadval ebx   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #48, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           sub ecx, ebx -> ebx   
74 [0x4a]:           loadl ecx, fp+2   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           mov16 ebx, ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           jmp @27   
79 [0x4f]: line: 234 loadl ebx, fp+3   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 86   
82 [0x52]: line: 235 loadl ebx, fp+2   
83 [0x53]:           neg ebx, ebx   
84 [0x54]:           mov16 ebx, ebx   
85 [0x55]:           smovr_2 ebx, fp+2   
86 [0x56]:           nop   
87 [0x57]: line: 236 loadl ebx, fp+2   
88 [0x58]:           return_val ebx   
89 [0x59]:           ret   


function: std#integer<_int16>.to_ulong[1164] params(0) in file: lib\support\0.2.805/primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @44 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_long[1165] params(0) in file: lib\support\0.2.805/primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @45 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_uint[1166] params(0) in file: lib\support\0.2.805/primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @46 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_int[1167] params(0) in file: lib\support\0.2.805/primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @47 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_ushort[1168] params(0) in file: lib\support\0.2.805/primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @48 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_short[1169] params(0) in file: lib\support\0.2.805/primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @49 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_uchar[1170] params(0) in file: lib\support\0.2.805/primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @50 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_char[1171] params(0) in file: lib\support\0.2.805/primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @51 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_byte[1172] params(0) in file: lib\support\0.2.805/primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @52 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.to_bool[1173] params(0) in file: lib\support\0.2.805/primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @53 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.get_value[1174] params(0) in file: lib\support\0.2.805/primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int16>.integer[1175] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint8>.integer[1176] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #103, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 9 ipushl #1   
6 [0x6]:         movl 0   
7 [0x7]:         movn #0   
9 [0x9]:         loadval ebx   
10 [0xa]:         movu8 ebx, ebx   
11 [0xb]:         movi #0, adx   
13 [0xd]:         rmov adx, ebx   
14 [0xe]:         ret   


function: std#integer<_uint8>.hash[1177] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #103, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 13 new_class @45 // std#long   
5 [0x5]:          dup    
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2065 // <std#long.long>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1178] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1179] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1180] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1181] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1182] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1183] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1184] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1185] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1186] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1187] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1188] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1189] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1190] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1191] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1192] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1193] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1194] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1195] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1196] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1197] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1198] params(1) in file: lib\support\0.2.805/primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1199] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1200] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1201] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1202] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1203] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1204] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1205] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1206] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1207] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1208] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator-[1209] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1210] params(1) in file: lib\support\0.2.805/primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1211] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1212] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1213] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1214] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1215] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1216] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1217] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1218] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1219] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator*[1220] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1221] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1222] params(1) in file: lib\support\0.2.805/primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1223] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1224] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1225] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1226] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1227] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1228] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1229] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1230] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator/[1231] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1232] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1233] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1234] params(1) in file: lib\support\0.2.805/primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1235] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1236] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1237] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1238] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1239] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1240] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1241] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator%[1242] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1243] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1244] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1245] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1246] params(1) in file: lib\support\0.2.805/primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1247] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1248] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1249] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1250] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1251] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1252] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator<[1253] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator<[1254] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator<[1255] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator<[1256] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1257] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1258] params(1) in file: lib\support\0.2.805/primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1259] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1260] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1261] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1262] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1263] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator>[1264] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1265] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1266] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1267] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1268] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1269] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1270] params(1) in file: lib\support\0.2.805/primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1271] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1272] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1273] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1274] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator<=[1275] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1276] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1277] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1278] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1279] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1280] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1281] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1282] params(1) in file: lib\support\0.2.805/primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1283] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1284] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1285] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator**[1286] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1287] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1288] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1289] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1290] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1291] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1292] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1293] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1294] params(1) in file: lib\support\0.2.805/primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1295] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1296] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator<<[1297] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1298] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1299] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1300] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1301] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1302] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1303] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1304] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1305] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1306] params(1) in file: lib\support\0.2.805/primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1307] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator>>[1308] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1309] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1310] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1311] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1312] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1313] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1314] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1315] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1316] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1317] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1318] params(1) in file: lib\support\0.2.805/primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator^[1319] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1320] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1321] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1322] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1323] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1324] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1325] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1326] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1327] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1328] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1329] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator&[1330] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1331] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1332] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1333] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1334] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1335] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1336] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1337] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1338] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1339] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1340] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator|[1341] params(1) in file: lib\support\0.2.805/primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1342] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1343] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1344] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1345] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1346] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1347] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1348] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1349] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1350] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1351] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator!=[1352] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator==[1353] params(1) in file: lib\support\0.2.805/primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator=[1354] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint8>.to_string[1355] params(0) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #103, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 210 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @15 //    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2955 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.parse[1356] params(1) in file: lib\support\0.2.805/primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           movu8 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2956 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2945 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           movr ebx, cmt   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 79   
34 [0x22]: line: 226 pushl 0   
35 [0x23]:           ipushl #1   
36 [0x24]:           call @2945 // <std#string.at>   
37 [0x25]:           call @2712 // <std#char.is_digit>   
38 [0x26]:           loadval ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 54   
42 [0x2a]: line: 227 new_class @4 // std#illegal_argument_exception   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @64 // std#string   
45 [0x2d]:           dup    
46 [0x2e]:           newstr @106 // illegal char in string:    
47 [0x2f]:           call @2923 // <std#string.string>   
48 [0x30]:           pushl 0   
49 [0x31]:           ipushl #1   
50 [0x32]:           call @2945 // <std#string.at>   
51 [0x33]:           call @2955 // <std#string.operator+>   
52 [0x34]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
53 [0x35]:           throw    
54 [0x36]:           nop   
55 [0x37]: line: 231 movi #10, ebx   
57 [0x39]:           loadl ecx, fp+2   
58 [0x3a]:           mul ecx, ebx -> ebx   
59 [0x3b]:           movu8 ebx, ebx   
60 [0x3c]:           smovr_2 ebx, fp+2   
61 [0x3d]: line: 232 pushl 0   
62 [0x3e]:           loadl ebx, fp+1   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           smovr_2 ebx, fp+1   
66 [0x42]:           rstore egx   
67 [0x43]:           call @2945 // <std#string.at>   
68 [0x44]:           loadval ebx   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #48, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           sub ecx, ebx -> ebx   
74 [0x4a]:           loadl ecx, fp+2   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           movu8 ebx, ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           jmp @27   
79 [0x4f]: line: 234 loadl ebx, fp+3   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 86   
82 [0x52]: line: 235 loadl ebx, fp+2   
83 [0x53]:           neg ebx, ebx   
84 [0x54]:           movu8 ebx, ebx   
85 [0x55]:           smovr_2 ebx, fp+2   
86 [0x56]:           nop   
87 [0x57]: line: 236 loadl ebx, fp+2   
88 [0x58]:           return_val ebx   
89 [0x59]:           ret   


function: std#integer<_uint8>.to_ulong[1357] params(0) in file: lib\support\0.2.805/primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @44 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_long[1358] params(0) in file: lib\support\0.2.805/primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @45 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_uint[1359] params(0) in file: lib\support\0.2.805/primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @46 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_int[1360] params(0) in file: lib\support\0.2.805/primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @47 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_ushort[1361] params(0) in file: lib\support\0.2.805/primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @48 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_short[1362] params(0) in file: lib\support\0.2.805/primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @49 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_uchar[1363] params(0) in file: lib\support\0.2.805/primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @50 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_char[1364] params(0) in file: lib\support\0.2.805/primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @51 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_byte[1365] params(0) in file: lib\support\0.2.805/primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @52 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.to_bool[1366] params(0) in file: lib\support\0.2.805/primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @53 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.get_value[1367] params(0) in file: lib\support\0.2.805/primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint8>.integer[1368] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int8>.integer[1369] params(1) in file: lib\support\0.2.805/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #104, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 9 ipushl #1   
6 [0x6]:         movl 0   
7 [0x7]:         movn #0   
9 [0x9]:         loadval ebx   
10 [0xa]:         mov8 ebx, ebx   
11 [0xb]:         movi #0, adx   
13 [0xd]:         rmov adx, ebx   
14 [0xe]:         ret   


function: std#integer<_int8>.hash[1370] params(0) in file: lib\support\0.2.805/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #104, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 13 new_class @45 // std#long   
5 [0x5]:          dup    
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2065 // <std#long.long>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1371] params(1) in file: lib\support\0.2.805/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1372] params(1) in file: lib\support\0.2.805/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1373] params(1) in file: lib\support\0.2.805/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1374] params(1) in file: lib\support\0.2.805/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1375] params(1) in file: lib\support\0.2.805/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1376] params(1) in file: lib\support\0.2.805/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1377] params(1) in file: lib\support\0.2.805/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1378] params(1) in file: lib\support\0.2.805/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1379] params(1) in file: lib\support\0.2.805/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1380] params(1) in file: lib\support\0.2.805/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1381] params(1) in file: lib\support\0.2.805/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1382] params(1) in file: lib\support\0.2.805/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1383] params(1) in file: lib\support\0.2.805/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1384] params(1) in file: lib\support\0.2.805/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1385] params(1) in file: lib\support\0.2.805/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1386] params(1) in file: lib\support\0.2.805/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1387] params(1) in file: lib\support\0.2.805/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1388] params(1) in file: lib\support\0.2.805/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1389] params(1) in file: lib\support\0.2.805/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1390] params(1) in file: lib\support\0.2.805/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1391] params(1) in file: lib\support\0.2.805/primitives.sharp:37:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 37 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1392] params(1) in file: lib\support\0.2.805/primitives.sharp:38:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1393] params(1) in file: lib\support\0.2.805/primitives.sharp:39:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1394] params(1) in file: lib\support\0.2.805/primitives.sharp:40:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1395] params(1) in file: lib\support\0.2.805/primitives.sharp:41:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1396] params(1) in file: lib\support\0.2.805/primitives.sharp:42:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1397] params(1) in file: lib\support\0.2.805/primitives.sharp:43:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1398] params(1) in file: lib\support\0.2.805/primitives.sharp:44:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1399] params(1) in file: lib\support\0.2.805/primitives.sharp:45:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1400] params(1) in file: lib\support\0.2.805/primitives.sharp:46:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1401] params(1) in file: lib\support\0.2.805/primitives.sharp:47:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator-[1402] params(1) in file: lib\support\0.2.805/primitives.sharp:49:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1403] params(1) in file: lib\support\0.2.805/primitives.sharp:50:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1404] params(1) in file: lib\support\0.2.805/primitives.sharp:51:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1405] params(1) in file: lib\support\0.2.805/primitives.sharp:52:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1406] params(1) in file: lib\support\0.2.805/primitives.sharp:53:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1407] params(1) in file: lib\support\0.2.805/primitives.sharp:54:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1408] params(1) in file: lib\support\0.2.805/primitives.sharp:55:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1409] params(1) in file: lib\support\0.2.805/primitives.sharp:56:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1410] params(1) in file: lib\support\0.2.805/primitives.sharp:57:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1411] params(1) in file: lib\support\0.2.805/primitives.sharp:58:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1412] params(1) in file: lib\support\0.2.805/primitives.sharp:59:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator*[1413] params(1) in file: lib\support\0.2.805/primitives.sharp:61:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1414] params(1) in file: lib\support\0.2.805/primitives.sharp:62:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1415] params(1) in file: lib\support\0.2.805/primitives.sharp:63:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 63 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1416] params(1) in file: lib\support\0.2.805/primitives.sharp:64:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1417] params(1) in file: lib\support\0.2.805/primitives.sharp:65:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1418] params(1) in file: lib\support\0.2.805/primitives.sharp:66:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1419] params(1) in file: lib\support\0.2.805/primitives.sharp:67:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1420] params(1) in file: lib\support\0.2.805/primitives.sharp:68:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1421] params(1) in file: lib\support\0.2.805/primitives.sharp:69:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1422] params(1) in file: lib\support\0.2.805/primitives.sharp:70:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1423] params(1) in file: lib\support\0.2.805/primitives.sharp:71:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator/[1424] params(1) in file: lib\support\0.2.805/primitives.sharp:73:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1425] params(1) in file: lib\support\0.2.805/primitives.sharp:74:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1426] params(1) in file: lib\support\0.2.805/primitives.sharp:75:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1427] params(1) in file: lib\support\0.2.805/primitives.sharp:76:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 76 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1428] params(1) in file: lib\support\0.2.805/primitives.sharp:77:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1429] params(1) in file: lib\support\0.2.805/primitives.sharp:78:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1430] params(1) in file: lib\support\0.2.805/primitives.sharp:79:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1431] params(1) in file: lib\support\0.2.805/primitives.sharp:80:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1432] params(1) in file: lib\support\0.2.805/primitives.sharp:81:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1433] params(1) in file: lib\support\0.2.805/primitives.sharp:82:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1434] params(1) in file: lib\support\0.2.805/primitives.sharp:83:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator%[1435] params(1) in file: lib\support\0.2.805/primitives.sharp:85:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1436] params(1) in file: lib\support\0.2.805/primitives.sharp:86:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1437] params(1) in file: lib\support\0.2.805/primitives.sharp:87:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1438] params(1) in file: lib\support\0.2.805/primitives.sharp:88:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1439] params(1) in file: lib\support\0.2.805/primitives.sharp:89:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1440] params(1) in file: lib\support\0.2.805/primitives.sharp:90:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1441] params(1) in file: lib\support\0.2.805/primitives.sharp:91:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1442] params(1) in file: lib\support\0.2.805/primitives.sharp:92:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1443] params(1) in file: lib\support\0.2.805/primitives.sharp:93:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1444] params(1) in file: lib\support\0.2.805/primitives.sharp:94:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1445] params(1) in file: lib\support\0.2.805/primitives.sharp:95:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mod ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator<[1446] params(1) in file: lib\support\0.2.805/primitives.sharp:97:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator<[1447] params(1) in file: lib\support\0.2.805/primitives.sharp:98:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator<[1448] params(1) in file: lib\support\0.2.805/primitives.sharp:99:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator<[1449] params(1) in file: lib\support\0.2.805/primitives.sharp:100:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1450] params(1) in file: lib\support\0.2.805/primitives.sharp:101:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1451] params(1) in file: lib\support\0.2.805/primitives.sharp:102:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 102 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1452] params(1) in file: lib\support\0.2.805/primitives.sharp:103:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1453] params(1) in file: lib\support\0.2.805/primitives.sharp:104:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1454] params(1) in file: lib\support\0.2.805/primitives.sharp:105:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1455] params(1) in file: lib\support\0.2.805/primitives.sharp:106:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1456] params(1) in file: lib\support\0.2.805/primitives.sharp:107:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator>[1457] params(1) in file: lib\support\0.2.805/primitives.sharp:109:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1458] params(1) in file: lib\support\0.2.805/primitives.sharp:110:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1459] params(1) in file: lib\support\0.2.805/primitives.sharp:111:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1460] params(1) in file: lib\support\0.2.805/primitives.sharp:112:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1461] params(1) in file: lib\support\0.2.805/primitives.sharp:113:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1462] params(1) in file: lib\support\0.2.805/primitives.sharp:114:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1463] params(1) in file: lib\support\0.2.805/primitives.sharp:115:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 115 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1464] params(1) in file: lib\support\0.2.805/primitives.sharp:116:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1465] params(1) in file: lib\support\0.2.805/primitives.sharp:117:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1466] params(1) in file: lib\support\0.2.805/primitives.sharp:118:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1467] params(1) in file: lib\support\0.2.805/primitives.sharp:119:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator<=[1468] params(1) in file: lib\support\0.2.805/primitives.sharp:121:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1469] params(1) in file: lib\support\0.2.805/primitives.sharp:122:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1470] params(1) in file: lib\support\0.2.805/primitives.sharp:123:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1471] params(1) in file: lib\support\0.2.805/primitives.sharp:124:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1472] params(1) in file: lib\support\0.2.805/primitives.sharp:125:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1473] params(1) in file: lib\support\0.2.805/primitives.sharp:126:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1474] params(1) in file: lib\support\0.2.805/primitives.sharp:127:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1475] params(1) in file: lib\support\0.2.805/primitives.sharp:128:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 128 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1476] params(1) in file: lib\support\0.2.805/primitives.sharp:129:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1477] params(1) in file: lib\support\0.2.805/primitives.sharp:130:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1478] params(1) in file: lib\support\0.2.805/primitives.sharp:131:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator**[1479] params(1) in file: lib\support\0.2.805/primitives.sharp:133:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1480] params(1) in file: lib\support\0.2.805/primitives.sharp:134:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1481] params(1) in file: lib\support\0.2.805/primitives.sharp:135:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1482] params(1) in file: lib\support\0.2.805/primitives.sharp:136:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1483] params(1) in file: lib\support\0.2.805/primitives.sharp:137:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1484] params(1) in file: lib\support\0.2.805/primitives.sharp:138:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1485] params(1) in file: lib\support\0.2.805/primitives.sharp:139:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1486] params(1) in file: lib\support\0.2.805/primitives.sharp:140:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1487] params(1) in file: lib\support\0.2.805/primitives.sharp:141:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 141 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1488] params(1) in file: lib\support\0.2.805/primitives.sharp:142:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1489] params(1) in file: lib\support\0.2.805/primitives.sharp:143:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator<<[1490] params(1) in file: lib\support\0.2.805/primitives.sharp:145:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1491] params(1) in file: lib\support\0.2.805/primitives.sharp:146:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1492] params(1) in file: lib\support\0.2.805/primitives.sharp:147:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1493] params(1) in file: lib\support\0.2.805/primitives.sharp:148:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1494] params(1) in file: lib\support\0.2.805/primitives.sharp:149:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1495] params(1) in file: lib\support\0.2.805/primitives.sharp:150:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1496] params(1) in file: lib\support\0.2.805/primitives.sharp:151:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1497] params(1) in file: lib\support\0.2.805/primitives.sharp:152:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1498] params(1) in file: lib\support\0.2.805/primitives.sharp:153:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1499] params(1) in file: lib\support\0.2.805/primitives.sharp:154:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1500] params(1) in file: lib\support\0.2.805/primitives.sharp:155:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator>>[1501] params(1) in file: lib\support\0.2.805/primitives.sharp:157:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1502] params(1) in file: lib\support\0.2.805/primitives.sharp:158:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1503] params(1) in file: lib\support\0.2.805/primitives.sharp:159:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1504] params(1) in file: lib\support\0.2.805/primitives.sharp:160:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1505] params(1) in file: lib\support\0.2.805/primitives.sharp:161:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1506] params(1) in file: lib\support\0.2.805/primitives.sharp:162:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1507] params(1) in file: lib\support\0.2.805/primitives.sharp:163:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1508] params(1) in file: lib\support\0.2.805/primitives.sharp:164:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1509] params(1) in file: lib\support\0.2.805/primitives.sharp:165:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1510] params(1) in file: lib\support\0.2.805/primitives.sharp:166:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1511] params(1) in file: lib\support\0.2.805/primitives.sharp:167:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator^[1512] params(1) in file: lib\support\0.2.805/primitives.sharp:169:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1513] params(1) in file: lib\support\0.2.805/primitives.sharp:170:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1514] params(1) in file: lib\support\0.2.805/primitives.sharp:171:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1515] params(1) in file: lib\support\0.2.805/primitives.sharp:172:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1516] params(1) in file: lib\support\0.2.805/primitives.sharp:173:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1517] params(1) in file: lib\support\0.2.805/primitives.sharp:174:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1518] params(1) in file: lib\support\0.2.805/primitives.sharp:175:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1519] params(1) in file: lib\support\0.2.805/primitives.sharp:176:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1520] params(1) in file: lib\support\0.2.805/primitives.sharp:177:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1521] params(1) in file: lib\support\0.2.805/primitives.sharp:178:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1522] params(1) in file: lib\support\0.2.805/primitives.sharp:179:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator&[1523] params(1) in file: lib\support\0.2.805/primitives.sharp:181:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1524] params(1) in file: lib\support\0.2.805/primitives.sharp:182:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1525] params(1) in file: lib\support\0.2.805/primitives.sharp:183:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1526] params(1) in file: lib\support\0.2.805/primitives.sharp:184:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1527] params(1) in file: lib\support\0.2.805/primitives.sharp:185:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1528] params(1) in file: lib\support\0.2.805/primitives.sharp:186:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1529] params(1) in file: lib\support\0.2.805/primitives.sharp:187:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1530] params(1) in file: lib\support\0.2.805/primitives.sharp:188:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1531] params(1) in file: lib\support\0.2.805/primitives.sharp:189:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1532] params(1) in file: lib\support\0.2.805/primitives.sharp:190:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1533] params(1) in file: lib\support\0.2.805/primitives.sharp:191:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator|[1534] params(1) in file: lib\support\0.2.805/primitives.sharp:193:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 193 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1535] params(1) in file: lib\support\0.2.805/primitives.sharp:194:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1536] params(1) in file: lib\support\0.2.805/primitives.sharp:195:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1537] params(1) in file: lib\support\0.2.805/primitives.sharp:196:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1538] params(1) in file: lib\support\0.2.805/primitives.sharp:197:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1539] params(1) in file: lib\support\0.2.805/primitives.sharp:198:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1540] params(1) in file: lib\support\0.2.805/primitives.sharp:199:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1541] params(1) in file: lib\support\0.2.805/primitives.sharp:200:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1542] params(1) in file: lib\support\0.2.805/primitives.sharp:201:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1543] params(1) in file: lib\support\0.2.805/primitives.sharp:202:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1544] params(1) in file: lib\support\0.2.805/primitives.sharp:203:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator!=[1545] params(1) in file: lib\support\0.2.805/primitives.sharp:205:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator==[1546] params(1) in file: lib\support\0.2.805/primitives.sharp:206:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 206 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator=[1547] params(1) in file: lib\support\0.2.805/primitives.sharp:207:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 207 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int8>.to_string[1548] params(0) in file: lib\support\0.2.805/primitives.sharp:209:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #104, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 210 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @15 //    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2955 // <std#string.operator+>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.parse[1549] params(1) in file: lib\support\0.2.805/primitives.sharp:214:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 215 istorel 0, fp+1   
2 [0x2]: line: 216 movi #0, ebx   
4 [0x4]:           mov8 ebx, ebx   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 217 istorel 0, fp+3   
8 [0x8]: line: 218 pushl 0   
9 [0x9]:           call @2956 // <std#string.size>   
10 [0xa]:           ipopl 4   
11 [0xb]: line: 220 pushl 0   
12 [0xc]:           istore 0   
14 [0xe]:           call @2945 // <std#string.at>   
15 [0xf]:           loadval ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           movi #45, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           test ecx, ebx   
21 [0x15]:           jne 26   
22 [0x16]: line: 221 istorel 1, fp+3   
24 [0x18]: line: 222 istorel 1, fp+1   
26 [0x1a]:           nop   
27 [0x1b]: line: 225 ipushl #1   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           lt ecx, ebx   
31 [0x1f]:           movr ebx, cmt   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 79   
34 [0x22]: line: 226 pushl 0   
35 [0x23]:           ipushl #1   
36 [0x24]:           call @2945 // <std#string.at>   
37 [0x25]:           call @2712 // <std#char.is_digit>   
38 [0x26]:           loadval ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 54   
42 [0x2a]: line: 227 new_class @4 // std#illegal_argument_exception   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @64 // std#string   
45 [0x2d]:           dup    
46 [0x2e]:           newstr @106 // illegal char in string:    
47 [0x2f]:           call @2923 // <std#string.string>   
48 [0x30]:           pushl 0   
49 [0x31]:           ipushl #1   
50 [0x32]:           call @2945 // <std#string.at>   
51 [0x33]:           call @2955 // <std#string.operator+>   
52 [0x34]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
53 [0x35]:           throw    
54 [0x36]:           nop   
55 [0x37]: line: 231 movi #10, ebx   
57 [0x39]:           loadl ecx, fp+2   
58 [0x3a]:           mul ecx, ebx -> ebx   
59 [0x3b]:           mov8 ebx, ebx   
60 [0x3c]:           smovr_2 ebx, fp+2   
61 [0x3d]: line: 232 pushl 0   
62 [0x3e]:           loadl ebx, fp+1   
63 [0x3f]:           movr egx, ebx   
64 [0x40]:           inc ebx   
65 [0x41]:           smovr_2 ebx, fp+1   
66 [0x42]:           rstore egx   
67 [0x43]:           call @2945 // <std#string.at>   
68 [0x44]:           loadval ebx   
69 [0x45]:           rstore ebx   
70 [0x46]:           movi #48, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           sub ecx, ebx -> ebx   
74 [0x4a]:           loadl ecx, fp+2   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           mov8 ebx, ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           jmp @27   
79 [0x4f]: line: 234 loadl ebx, fp+3   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 86   
82 [0x52]: line: 235 loadl ebx, fp+2   
83 [0x53]:           neg ebx, ebx   
84 [0x54]:           mov8 ebx, ebx   
85 [0x55]:           smovr_2 ebx, fp+2   
86 [0x56]:           nop   
87 [0x57]: line: 236 loadl ebx, fp+2   
88 [0x58]:           return_val ebx   
89 [0x59]:           ret   


function: std#integer<_int8>.to_ulong[1550] params(0) in file: lib\support\0.2.805/primitives.sharp:239:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 239 new_class @44 // std#ulong   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_long[1551] params(0) in file: lib\support\0.2.805/primitives.sharp:240:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 240 new_class @45 // std#long   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_uint[1552] params(0) in file: lib\support\0.2.805/primitives.sharp:241:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 241 new_class @46 // std#uint   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_int[1553] params(0) in file: lib\support\0.2.805/primitives.sharp:242:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 242 new_class @47 // std#int   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_ushort[1554] params(0) in file: lib\support\0.2.805/primitives.sharp:243:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 243 new_class @48 // std#ushort   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_short[1555] params(0) in file: lib\support\0.2.805/primitives.sharp:244:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 244 new_class @49 // std#short   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_uchar[1556] params(0) in file: lib\support\0.2.805/primitives.sharp:245:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 245 new_class @50 // std#uchar   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_char[1557] params(0) in file: lib\support\0.2.805/primitives.sharp:246:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 246 new_class @51 // std#char   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_byte[1558] params(0) in file: lib\support\0.2.805/primitives.sharp:247:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 247 new_class @52 // std#byte   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.to_bool[1559] params(0) in file: lib\support\0.2.805/primitives.sharp:248:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 248 new_class @53 // std#bool   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.get_value[1560] params(0) in file: lib\support\0.2.805/primitives.sharp:250:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 250 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int8>.integer[1561] params(0) in file: lib\support\0.2.805/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std#loopable<_int8>.get_elements[1562] params(0) in file: lib\support\0.2.805/string.sharp:4:8: note:  
		
		       ^



constructor: std#loopable<_int8>.loopable[1563] params(0) in file: lib\support\0.2.805/string.sharp:3:10: note:  
		import std.io;
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#__srt_global.snprintf[1564] params(3) in file: lib\support\0.2.805/console.sharp:3:4: note:  
		def snprintf(fmt: var, num: var, precision: var) : var[] {
		   ^

0 [0x0]: line: 4 loadl egx, fp+0   : protected asm start
1 [0x1]:         loadl ebx, fp+1   
2 [0x2]:         loadl ecx, fp+2   
3 [0x3]:         int 0x1   
4 [0x4]:         popobj2    
5 [0x5]:         returnobj   
6 [0x6]:         ret   
7 [0x7]: line: 13 pushnull    : protected asm end
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#__srt_global.print[1565] params(1) in file: lib\support\0.2.805/console.sharp:16:4: note:  
		def print(data: _int8[]) {
		   ^

0 [0x0]: line: 17 pushl 0   
1 [0x1]:          call @1593 // <std#__srt_global.print_chars>   
2 [0x2]:          ret   


function: std#__srt_global.print[1566] params(1) in file: lib\support\0.2.805/console.sharp:20:4: note:  
		def print(str: string) {
		   ^

0 [0x0]: line: 21 pushl 0   
1 [0x1]:          call @2949 // <std#string.get_data>   
2 [0x2]:          call @1593 // <std#__srt_global.print_chars>   
3 [0x3]:          ret   


function: std#__srt_global.println[1567] params(1) in file: lib\support\0.2.805/console.sharp:24:4: note:  
		def println(data: var[]) {
		   ^

0 [0x0]: line: 25 pushl 0   
1 [0x1]:          call @1596 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 26 istore 10   
4 [0x4]:          call @1595 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1568] params(1) in file: lib\support\0.2.805/console.sharp:29:4: note:  
		def println(data: _int8[]) {
		   ^

0 [0x0]: line: 30 pushl 0   
1 [0x1]:          call @1593 // <std#__srt_global.print_chars>   
2 [0x2]: line: 31 istore 10   
4 [0x4]:          call @1595 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1569] params(1) in file: lib\support\0.2.805/console.sharp:34:4: note:  
		def println(data: _int16[]) {
		   ^

0 [0x0]: line: 35 pushl 0   
1 [0x1]:          call @1597 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 36 istore 10   
4 [0x4]:          call @1595 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1570] params(1) in file: lib\support\0.2.805/console.sharp:39:4: note:  
		def println(data: _int32[]) {
		   ^

0 [0x0]: line: 40 pushl 0   
1 [0x1]:          call @1598 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 41 istore 10   
4 [0x4]:          call @1595 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1571] params(1) in file: lib\support\0.2.805/console.sharp:44:4: note:  
		def println(data: _int64[]) {
		   ^

0 [0x0]: line: 45 pushl 0   
1 [0x1]:          call @1599 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 46 istore 10   
4 [0x4]:          call @1595 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1572] params(1) in file: lib\support\0.2.805/console.sharp:49:4: note:  
		def println(data: _uint8[]) {
		   ^

0 [0x0]: line: 50 pushl 0   
1 [0x1]:          call @1600 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 51 istore 10   
4 [0x4]:          call @1595 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1573] params(1) in file: lib\support\0.2.805/console.sharp:54:4: note:  
		def println(data: _uint16[]) {
		   ^

0 [0x0]: line: 55 pushl 0   
1 [0x1]:          call @1601 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 56 istore 10   
4 [0x4]:          call @1595 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1574] params(1) in file: lib\support\0.2.805/console.sharp:59:4: note:  
		def println(data: _uint32[]) {
		   ^

0 [0x0]: line: 60 pushl 0   
1 [0x1]:          call @1602 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 61 istore 10   
4 [0x4]:          call @1595 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1575] params(1) in file: lib\support\0.2.805/console.sharp:64:4: note:  
		def println(data: _uint64[]) {
		   ^

0 [0x0]: line: 65 pushl 0   
1 [0x1]:          call @1603 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 66 istore 10   
4 [0x4]:          call @1595 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1576] params(1) in file: lib\support\0.2.805/console.sharp:69:4: note:  
		def println(data: var) {
		   ^

0 [0x0]: line: 70 ipushl #0   
1 [0x1]:          call @1594 // <std#__srt_global.print_num>   
2 [0x2]: line: 71 istore 10   
4 [0x4]:          call @1595 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1577] params(0) in file: lib\support\0.2.805/console.sharp:74:4: note:  
		def println() {
		   ^

0 [0x0]: line: 75 istore 10   
2 [0x2]:          call @1595 // <std#__srt_global.print_char>   
3 [0x3]:          ret   


function: std#__srt_global.println[1578] params(1) in file: lib\support\0.2.805/console.sharp:78:4: note:  
		def println(e: _enum_) {
		   ^

0 [0x0]: line: 79 pushl 0   
1 [0x1]:          call @1612 // <std#_enum_.get_name>   
2 [0x2]:          call @1593 // <std#__srt_global.print_chars>   
3 [0x3]: line: 80 istore 10   
5 [0x5]:          call @1595 // <std#__srt_global.print_char>   
6 [0x6]:          ret   


function: std#__srt_global.read_line[1579] params(0) in file: lib\support\0.2.805/console.sharp:83:4: note:  
		def read_line() : string {
		   ^

0 [0x0]: line: 84 istorel 0, fp+0   
2 [0x2]: line: 85 new_class @64 // std#string   
3 [0x3]:          dup    
4 [0x4]:          newstr @15 //    
5 [0x5]:          call @2923 // <std#string.string>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 87 call @1581 // <std#__srt_global.read_char>   
9 [0x9]:          loadval ebx   
10 [0xa]:          mov8 ebx, ebx   
11 [0xb]:          smovr_2 ebx, fp+0   
12 [0xc]: line: 88 ipushl #0   
13 [0xd]:          movi #13, ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          skne ebx // pc = 23   
19 [0x13]:          ipushl #0   
20 [0x14]:          movi #10, ebx   
22 [0x16]:          loadval ecx   
23 [0x17]:          tne ecx, ebx   
24 [0x18]:          jne 34   
25 [0x19]: line: 89 pushl 1   
26 [0x1a]:          ipushl #0   
27 [0x1b]:          call @2930 // <std#string.append>   
28 [0x1c]:          pop   
29 [0x1d]: line: 90 call @1581 // <std#__srt_global.read_char>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          mov8 ebx, ebx   
32 [0x20]:          smovr_2 ebx, fp+0   
33 [0x21]:          jmp @12   
34 [0x22]: line: 93 movl 1   
35 [0x23]:          returnobj   
36 [0x24]:          ret   


function: std#__srt_global.read_passwd[1580] params(0) in file: lib\support\0.2.805/console.sharp:96:4: note:  
		def read_passwd() : string {
		   ^

0 [0x0]: line: 97 istorel 0, fp+0   
2 [0x2]: line: 98 new_class @64 // std#string   
3 [0x3]:          dup    
4 [0x4]:          newstr @15 //    
5 [0x5]:          call @2923 // <std#string.string>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 100 call @1582 // <std#__srt_global.read_raw_char>   
9 [0x9]:           loadval ebx   
10 [0xa]:           mov8 ebx, ebx   
11 [0xb]:           smovr_2 ebx, fp+0   
12 [0xc]: line: 101 ipushl #0   
13 [0xd]:           movi #13, ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           tne ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           skne ebx // pc = 23   
19 [0x13]:           ipushl #0   
20 [0x14]:           movi #10, ebx   
22 [0x16]:           loadval ecx   
23 [0x17]:           tne ecx, ebx   
24 [0x18]:           jne 34   
25 [0x19]: line: 102 pushl 1   
26 [0x1a]:           ipushl #0   
27 [0x1b]:           call @2930 // <std#string.append>   
28 [0x1c]:           pop   
29 [0x1d]: line: 103 call @1582 // <std#__srt_global.read_raw_char>   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           mov8 ebx, ebx   
32 [0x20]:           smovr_2 ebx, fp+0   
33 [0x21]:           jmp @12   
34 [0x22]: line: 106 movl 1   
35 [0x23]:           returnobj   
36 [0x24]:           ret   


function: std#__srt_global.read_char[1581] params(0) in file: lib\support\0.2.805/console.sharp:109:4: note:  
		def read_char() : var {
		   ^

0 [0x0]: line: 110 istore 0   
2 [0x2]:           call @1605 // <std#__srt_global.read_ch>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#__srt_global.read_raw_char[1582] params(0) in file: lib\support\0.2.805/console.sharp:113:4: note:  
		def read_raw_char() : var {
		   ^

0 [0x0]: line: 114 istore 1   
2 [0x2]:           call @1605 // <std#__srt_global.read_ch>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#__srt_global.println[1583] params(1) in file: lib\support\0.2.805/console.sharp:117:4: note:  
		def println(str: string) {
		   ^

0 [0x0]: line: 118 pushl 0   
1 [0x1]:           call @2949 // <std#string.get_data>   
2 [0x2]:           call @1593 // <std#__srt_global.print_chars>   
3 [0x3]: line: 119 istore 10   
5 [0x5]:           call @1595 // <std#__srt_global.print_char>   
6 [0x6]:           ret   


function: std#__srt_global.println[1584] params(1) in file: lib\support\0.2.805/console.sharp:122:4: note:  
		def println(o: printable) {
		   ^

0 [0x0]: line: 123 pushl 0   
1 [0x1]:           invoke_delegate 2914 { static=0, args=0 }   
3 [0x3]:           call @2949 // <std#string.get_data>   
4 [0x4]:           call @1593 // <std#__srt_global.print_chars>   
5 [0x5]: line: 124 istore 10   
7 [0x7]:           call @1595 // <std#__srt_global.print_char>   
8 [0x8]:           ret   


function: std#__srt_global.print[1585] params(1) in file: lib\support\0.2.805/console.sharp:127:4: note:  
		def print(o: printable) {
		   ^

0 [0x0]: line: 128 pushl 0   
1 [0x1]:           invoke_delegate 2914 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1593 // <std#__srt_global.print_chars>   
8 [0x8]:           ret   


function: std#__srt_global.print[1586] params(1) in file: lib\support\0.2.805/console.sharp:131:4: note:  
		def print(data: var) {
		   ^

0 [0x0]: line: 132 ipushl #0   
1 [0x1]:           call @1594 // <std#__srt_global.print_num>   
2 [0x2]:           ret   


function: std#__srt_global.flush[1587] params(0) in file: lib\support\0.2.805/console.sharp:135:4: note:  
		def flush() {
		   ^

0 [0x0]: line: 136 int 0x34   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#__srt_global.utc_mills_time[1588] params(0) in file: lib\support\0.2.805/console.sharp:139:4: note:  
		def utc_mills_time() : var {
		   ^

0 [0x0]: line: 140 call @3023 // <std#time.mills_time>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#__srt_global.nano_time[1589] params(0) in file: lib\support\0.2.805/console.sharp:143:4: note:  
		def nano_time() : var {
		   ^

0 [0x0]: line: 144 call @3019 // <std#time.nano_time>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#__srt_global.exit[1590] params(0) in file: lib\support\0.2.805/console.sharp:147:4: note:  
		def exit() {
		   ^

0 [0x0]: line: 148 int 0x1d   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#__srt_global.sizeOf[1591] params(1) in file: lib\support\0.2.805/console.sharp:151:4: note:  
		def sizeOf(data: object) : var {
		   ^

0 [0x0]: line: 152 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 158 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


function: std#__srt_global.sizeOf[1592] params(1) in file: lib\support\0.2.805/console.sharp:161:4: note:  
		def sizeOf(data: object[]) : var {
		   ^

0 [0x0]: line: 162 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 168 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


function: std#__srt_global.print_chars[1593] params(1) in file: lib\support\0.2.805/console.sharp:171:10: note:  
		local def print_chars(str: _int8[]) {
		         ^

0 [0x0]: line: 172 istorel -1, fp+2   
2 [0x2]:           pushl 0   
3 [0x3]:           popl 3   
4 [0x4]:           iaddl 1, fp@2   
6 [0x6]:           movl 3   
7 [0x7]:           sizeof ecx   
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           lt ebx, ecx   
10 [0xa]:           jne 16   
11 [0xb]:           iaload ecx, ebx   
12 [0xc]:           smovr_2 ecx, fp+1   
13 [0xd]: line: 173 loadl ebx, fp+1   : protected asm start
14 [0xe]:           _putc ebx   
15 [0xf]:           jmp @4   : protected asm end
16 [0x10]:           ret   


function: std#__srt_global.print_num[1594] params(1) in file: lib\support\0.2.805/console.sharp:180:10: note:  
		local def print_num(val: var) {
		         ^

0 [0x0]: line: 181 loadl ebx, fp+0   : protected asm start
1 [0x1]:           put ebx   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_char[1595] params(1) in file: lib\support\0.2.805/console.sharp:187:10: note:  
		local def print_char(val: _int8) {
		         ^

0 [0x0]: line: 188 loadl ebx, fp+0   : protected asm start
1 [0x1]:           _putc ebx   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1596] params(1) in file: lib\support\0.2.805/console.sharp:194:10: note:  
		local def print_numbers(str: var[]) {
		         ^

0 [0x0]: line: 195 movi #91, ebx   : protected asm start
2 [0x2]:           movi #32, ecx   
4 [0x4]:           _putc ebx   
5 [0x5]:           _putc ecx   
6 [0x6]: line: 201 istorel 0, fp+1   : protected asm end
8 [0x8]:           ipushl #1   
9 [0x9]:           movl 0   
10 [0xa]:           sizeof ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 48   
16 [0x10]: line: 202 pushl 0   
17 [0x11]:           loadl ebx, fp+1   
18 [0x12]:           popobj2    
19 [0x13]:           movr adx, ebx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           smovr_2 ebx, fp+2   
23 [0x17]: line: 203 loadl ebx, fp+2   : protected asm start
24 [0x18]:           put ebx   
25 [0x19]: line: 208 ipushl #1   : protected asm end
26 [0x1a]:           movi #1, ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           add ecx, ebx -> ebx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movl 0   
32 [0x20]:           sizeof ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           lt ecx, ebx   
35 [0x23]:           movr ebx, cmt   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 44   
38 [0x26]: line: 209 movi #44, ebx   : protected asm start
40 [0x28]:           movi #32, ecx   
42 [0x2a]:           _putc ebx   
43 [0x2b]:           _putc ecx   
44 [0x2c]:           nop   : protected asm end
45 [0x2d]:           iaddl 1, fp@1   
47 [0x2f]:           jmp @8   
48 [0x30]: line: 217 movi #32, ebx   : protected asm start
50 [0x32]:           movi #93, ecx   
52 [0x34]:           _putc ebx   
53 [0x35]:           _putc ecx   
54 [0x36]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1597] params(1) in file: lib\support\0.2.805/console.sharp:225:10: note:  
		local def print_numbers(str: _int16[]) {
		         ^

0 [0x0]: line: 226 pushl 0   : protected asm start
1 [0x1]:           call @1596 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1598] params(1) in file: lib\support\0.2.805/console.sharp:232:10: note:  
		local def print_numbers(str: _int32[]) {
		         ^

0 [0x0]: line: 233 pushl 0   : protected asm start
1 [0x1]:           call @1596 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1599] params(1) in file: lib\support\0.2.805/console.sharp:239:10: note:  
		local def print_numbers(str: _int64[]) {
		         ^

0 [0x0]: line: 240 pushl 0   : protected asm start
1 [0x1]:           call @1596 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1600] params(1) in file: lib\support\0.2.805/console.sharp:246:10: note:  
		local def print_numbers(str: _uint8[]) {
		         ^

0 [0x0]: line: 247 pushl 0   : protected asm start
1 [0x1]:           call @1596 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1601] params(1) in file: lib\support\0.2.805/console.sharp:253:10: note:  
		local def print_numbers(str: _uint16[]) {
		         ^

0 [0x0]: line: 254 pushl 0   : protected asm start
1 [0x1]:           call @1596 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1602] params(1) in file: lib\support\0.2.805/console.sharp:260:10: note:  
		local def print_numbers(str: _uint32[]) {
		         ^

0 [0x0]: line: 261 pushl 0   : protected asm start
1 [0x1]:           call @1596 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1603] params(1) in file: lib\support\0.2.805/console.sharp:267:10: note:  
		local def print_numbers(str: _uint64[]) {
		         ^

0 [0x0]: line: 268 pushl 0   : protected asm start
1 [0x1]:           call @1596 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_chars[1604] params(1) in file: lib\support\0.2.805/console.sharp:274:10: note:  
		local def print_chars(str: _int16[]) {
		         ^

0 [0x0]: line: 275 pushl 0   : protected asm start
1 [0x1]:           call @1593 // <std#__srt_global.print_chars>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.read_ch[1605] params(1) in file: lib\support\0.2.805/console.sharp:281:10: note:  
		local def read_ch(hide: var) : var {
		         ^

0 [0x0]: line: 282 loadl cmt, fp+0   : protected asm start
1 [0x1]:           get ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 288 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


constructor: std#_enum_._enum_[1606] params(1) in file: lib\support\0.2.805/enum.sharp:18:11: note:  
		    _enum_(ord : var) {
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #1, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 19 ipushl #1   
6 [0x6]:          movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          loadval ebx   
10 [0xa]:          mov64 ebx, ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]:          ret   


constructor: std#_enum_._enum_[1607] params(1) in file: lib\support\0.2.805/enum.sharp:22:11: note:  
		    _enum_(e : _enum_) {
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #1, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 23 movl 1   
6 [0x6]:          movn #1   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          mov64 ebx, ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 24 movl 1   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          istore 0   
24 [0x18]:          movl 1   
25 [0x19]:          movn #0   
27 [0x1b]:          sizeof ebx   
28 [0x1c]:          rstore ebx   
29 [0x1d]:          call @1751 // <std.io#__srt_global.copy>   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          popobj   
34 [0x22]:          ret   


overload function: std#_enum_.operator!=[1608] params(1) in file: lib\support\0.2.805/enum.sharp:27:8: note:  
		    def operator!=(e : _enum_) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #1, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 28 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 1   
12 [0xc]:          movn #1   
14 [0xe]:          movi #0, adx   
16 [0x10]:          iaload ebx, adx   
17 [0x11]:          loadval ecx   
18 [0x12]:          tne ecx, ebx   
19 [0x13]:          return_val cmt   
20 [0x14]:          ret   


overload function: std#_enum_.operator!=[1609] params(1) in file: lib\support\0.2.805/enum.sharp:31:8: note:  
		    def operator!=(num : var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #1, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 32 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          loadl ebx, fp+1   
12 [0xc]:          loadval ecx   
13 [0xd]:          tne ecx, ebx   
14 [0xe]:          return_val cmt   
15 [0xf]:          ret   


overload function: std#_enum_.operator==[1610] params(1) in file: lib\support\0.2.805/enum.sharp:35:8: note:  
		    def operator==(e : _enum_) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #1, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 36 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 1   
12 [0xc]:          movn #1   
14 [0xe]:          movi #0, adx   
16 [0x10]:          iaload ebx, adx   
17 [0x11]:          loadval ecx   
18 [0x12]:          test ecx, ebx   
19 [0x13]:          return_val cmt   
20 [0x14]:          ret   


overload function: std#_enum_.operator==[1611] params(1) in file: lib\support\0.2.805/enum.sharp:39:8: note:  
		    def operator==(num : var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #1, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 40 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          loadl ebx, fp+1   
12 [0xc]:          loadval ecx   
13 [0xd]:          test ecx, ebx   
14 [0xe]:          return_val cmt   
15 [0xf]:          ret   


function: std#_enum_.get_name[1612] params(0) in file: lib\support\0.2.805/enum.sharp:43:8: note:  
		    def get_name() : _int8[] {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #1, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 44 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std#_enum_.get_ordinal[1613] params(0) in file: lib\support\0.2.805/enum.sharp:47:8: note:  
		    def get_ordinal() : _int64 {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #1, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 48 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#_enum_.to_string[1614] params(0) in file: lib\support\0.2.805/enum.sharp:51:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #1, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 52 new_class @64 // std#string   
5 [0x5]:          dup    
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          call @2923 // <std#string.string>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


constructor: std#_enum_._enum_[1615] params(0) in file: lib\support\0.2.805/enum.sharp:14:17: note:  
		stable ext class _enum_ {
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#throwable.throwable[1616] params(1) in file: lib\support\0.2.805/exceptions.sharp:30:21: note:  
		    public throwable(message : _int8[]) {
		                    ^

0 [0x0]: line: 26 call @1945 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          movl 0   
6 [0x6]:          movi #2, ebx   
8 [0x8]:          cast ebx   
9 [0x9]:          pushl 0   
10 [0xa]: line: 31 pushl 1   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          ret   


constructor: std#throwable.throwable[1617] params(1) in file: lib\support\0.2.805/exceptions.sharp:34:21: note:  
		    public throwable(message : string) {
		                    ^

0 [0x0]: line: 26 call @1945 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          movl 0   
6 [0x6]:          movi #2, ebx   
8 [0x8]:          cast ebx   
9 [0x9]:          pushl 0   
10 [0xa]: line: 35 pushl 1   
11 [0xb]:          call @2949 // <std#string.get_data>   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]:          ret   


function: std#throwable.get_message[1618] params(0) in file: lib\support\0.2.805/exceptions.sharp:38:8: note:  
		    def get_message() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #2, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 39 new_class @64 // std#string   
5 [0x5]:          dup    
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          call @2923 // <std#string.string>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


constructor: std#throwable.throwable[1619] params(0) in file: lib\support\0.2.805/exceptions.sharp:10:6: note:  
		class throwable {
		     ^

0 [0x0]: line: 26 call @1945 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          ret   


constructor: std#exception.exception[1620] params(1) in file: lib\support\0.2.805/exceptions.sharp:47:21: note:  
		    public exception(message : _int8[]) -> base(message) {}
		                    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #3, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1616 // <std#throwable.throwable>   
7 [0x7]:         ret   


constructor: std#exception.exception[1621] params(1) in file: lib\support\0.2.805/exceptions.sharp:48:21: note:  
		    public exception(message : string) -> base(message) {}
		                    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #3, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1617 // <std#throwable.throwable>   
7 [0x7]:         ret   


constructor: std#exception.exception[1622] params(0) in file: lib\support\0.2.805/exceptions.sharp:46:6: note:  
		class exception base throwable {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1619 // <std#throwable.throwable>   
2 [0x2]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1623] params(1) in file: lib\support\0.2.805/exceptions.sharp:52:38: note:  
		    public illegal_argument_exception(message : _int8[]) -> base(message) {}
		                                     ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #4, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1624] params(1) in file: lib\support\0.2.805/exceptions.sharp:53:38: note:  
		    public illegal_argument_exception(message : string) -> base(message) {}
		                                     ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #4, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1625] params(0) in file: lib\support\0.2.805/exceptions.sharp:51:6: note:  
		class illegal_argument_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1626] params(1) in file: lib\support\0.2.805/exceptions.sharp:56:35: note:  
		    public illegal_state_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #5, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1627] params(1) in file: lib\support\0.2.805/exceptions.sharp:57:35: note:  
		    public illegal_state_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #5, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1628] params(0) in file: lib\support\0.2.805/exceptions.sharp:55:6: note:  
		class illegal_state_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1629] params(1) in file: lib\support\0.2.805/exceptions.sharp:60:35: note:  
		    public out_of_bounds_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #6, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1630] params(1) in file: lib\support\0.2.805/exceptions.sharp:61:35: note:  
		    public out_of_bounds_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #6, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1631] params(0) in file: lib\support\0.2.805/exceptions.sharp:59:6: note:  
		class out_of_bounds_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#io_exception.io_exception[1632] params(1) in file: lib\support\0.2.805/exceptions.sharp:64:24: note:  
		    public io_exception(message : _int8[]) -> base(message) {}
		                       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #7, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#io_exception.io_exception[1633] params(1) in file: lib\support\0.2.805/exceptions.sharp:65:24: note:  
		    public io_exception(message : string) -> base(message) {}
		                       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #7, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#io_exception.io_exception[1634] params(0) in file: lib\support\0.2.805/exceptions.sharp:63:6: note:  
		class io_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1635] params(1) in file: lib\support\0.2.805/exceptions.sharp:68:39: note:  
		    public invalid_operation_exception(message : _int8[]) -> base(message) {}
		                                      ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #8, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1636] params(1) in file: lib\support\0.2.805/exceptions.sharp:69:39: note:  
		    public invalid_operation_exception(message : string) -> base(message) {}
		                                      ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #8, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1637] params(0) in file: lib\support\0.2.805/exceptions.sharp:67:6: note:  
		class invalid_operation_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1638] params(1) in file: lib\support\0.2.805/exceptions.sharp:72:29: note:  
		    public nullptr_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #9, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1639] params(1) in file: lib\support\0.2.805/exceptions.sharp:73:29: note:  
		    public nullptr_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #9, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1640] params(0) in file: lib\support\0.2.805/exceptions.sharp:71:6: note:  
		class nullptr_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#runtime_exception.runtime_exception[1641] params(1) in file: lib\support\0.2.805/exceptions.sharp:76:29: note:  
		    public runtime_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #10, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#runtime_exception.runtime_exception[1642] params(1) in file: lib\support\0.2.805/exceptions.sharp:77:29: note:  
		    public runtime_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #10, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#runtime_exception.runtime_exception[1643] params(0) in file: lib\support\0.2.805/exceptions.sharp:75:6: note:  
		class runtime_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1644] params(1) in file: lib\support\0.2.805/exceptions.sharp:80:36: note:  
		    public stack_overflow_exception(message : _int8[]) -> base(message) {}
		                                   ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #11, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1645] params(1) in file: lib\support\0.2.805/exceptions.sharp:81:36: note:  
		    public stack_overflow_exception(message : string) -> base(message) {}
		                                   ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #11, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1646] params(0) in file: lib\support\0.2.805/exceptions.sharp:79:6: note:  
		class stack_overflow_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1647] params(1) in file: lib\support\0.2.805/exceptions.sharp:84:34: note:  
		    public thread_stack_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #12, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1648] params(1) in file: lib\support\0.2.805/exceptions.sharp:85:34: note:  
		    public thread_stack_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #12, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1649] params(0) in file: lib\support\0.2.805/exceptions.sharp:83:6: note:  
		class thread_stack_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1650] params(1) in file: lib\support\0.2.805/exceptions.sharp:88:32: note:  
		    public class_cast_exception(message : _int8[]) -> base(message) {}
		                               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #13, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1651] params(1) in file: lib\support\0.2.805/exceptions.sharp:89:32: note:  
		    public class_cast_exception(message : string) -> base(message) {}
		                               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #13, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1652] params(0) in file: lib\support\0.2.805/exceptions.sharp:87:6: note:  
		class class_cast_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1653] params(1) in file: lib\support\0.2.805/exceptions.sharp:92:35: note:  
		    public out_of_memory_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #14, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1654] params(1) in file: lib\support\0.2.805/exceptions.sharp:93:35: note:  
		    public out_of_memory_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #14, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1655] params(0) in file: lib\support\0.2.805/exceptions.sharp:91:6: note:  
		class out_of_memory_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1656] params(1) in file: lib\support\0.2.805/exceptions.sharp:96:33: note:  
		    public not_implemented_error(message : _int8[]) -> base(message) {}
		                                ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #15, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1657] params(1) in file: lib\support\0.2.805/exceptions.sharp:97:33: note:  
		    public not_implemented_error(message : string) -> base(message) {}
		                                ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #15, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1658] params(0) in file: lib\support\0.2.805/exceptions.sharp:95:6: note:  
		class not_implemented_error base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[1659] params(1) in file: lib\support\0.2.805/exceptions.sharp:100:34: note:  
		    public unsatisfied_link_error(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #16, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1620 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[1660] params(1) in file: lib\support\0.2.805/exceptions.sharp:101:34: note:  
		    public unsatisfied_link_error(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #16, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1621 // <std#exception.exception>   
7 [0x7]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[1661] params(0) in file: lib\support\0.2.805/exceptions.sharp:99:6: note:  
		class unsatisfied_link_error base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1622 // <std#exception.exception>   
2 [0x2]:         ret   


function: std#__srt_global.runtime_error[1662] params(1) in file: lib\support\0.2.805/exceptions.sharp:118:4: note:  
		def runtime_error(message: string) : runtime_except {
		   ^

0 [0x0]: line: 119 new_class @10 // std#runtime_exception   
1 [0x1]:           dup    
2 [0x2]:           pushl 0   
3 [0x3]:           call @1642 // <std#runtime_exception.runtime_exception>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#__srt_global.runtime_error[1663] params(0) in file: lib\support\0.2.805/exceptions.sharp:122:4: note:  
		def runtime_error() : runtime_except {
		   ^

0 [0x0]: line: 123 new_class @10 // std#runtime_exception   
1 [0x1]:           dup    
2 [0x2]:           call @1643 // <std#runtime_exception.runtime_exception>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#__srt_global.todo[1664] params(1) in file: lib\support\0.2.805/exceptions.sharp:126:4: note:  
		def todo(message: string) {
		   ^

0 [0x0]: line: 127 new_class @15 // std#not_implemented_error   
1 [0x1]:           dup    
2 [0x2]:           pushl 0   
3 [0x3]:           call @1657 // <std#not_implemented_error.not_implemented_error>   
4 [0x4]:           throw    
5 [0x5]:           ret   


function: std.io#__srt_global.critical_section[1665] params(1) in file: lib\support\0.2.805/io//critical_section.sharp:4:4: note:  
		def critical_section(block : ()()) {
		   ^

0 [0x0]: line: 5 movg @17 // @std.io#__srt_global   : protected asm start: try start: try block start
1 [0x1]: line: 6 movn #0   
3 [0x3]:         _lck    
4 [0x4]: line: 11 ipushl #0   : protected asm end
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]:          jmp @8   : try block end
8 [0x8]:          movl 1   : try end
9 [0x9]:          del   
10 [0xa]: line: 13 movg @17 // @std.io#__srt_global   : protected asm start: finally start
11 [0xb]:          movn #0   
13 [0xd]:          _ulck   
14 [0xe]:          movl 1   : protected asm end
15 [0xf]:          checknull   
16 [0x10]:          je 19   
17 [0x11]:          pushobj   
18 [0x12]:          ret ERR   
19 [0x13]:          nop   : finally end
20 [0x14]:          ret   


function: std.io#__srt_global.critical_section[1666] params(2) in file: lib\support\0.2.805/io//critical_section.sharp:21:4: note:  
		def critical_section(block : ()(), lock_obj : object) {
		   ^

0 [0x0]: line: 22 movl 1   : protected asm start: try start: try block start
1 [0x1]: line: 23 _lck    
2 [0x2]: line: 27 ipushl #0   : protected asm end
3 [0x3]:          loadval ebx   
4 [0x4]:          calld ebx   
5 [0x5]:          jmp @6   : try block end
6 [0x6]:          movl 2   : try end
7 [0x7]:          del   
8 [0x8]: line: 29 movl 1   : protected asm start: finally start
9 [0x9]:          _ulck   
10 [0xa]:          movl 2   : protected asm end
11 [0xb]:          checknull   
12 [0xc]:          je 15   
13 [0xd]:          pushobj   
14 [0xe]:          ret ERR   
15 [0xf]:          nop   : finally end
16 [0x10]:          ret   


constructor: std.io#file.file[1667] params(1) in file: lib\support\0.2.805/io//file.sharp:23:9: note:  
		    file(path: string) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 24 pushl 0   
6 [0x6]:          pushl 1   
7 [0x7]:          call @1671 // <std.io#file.update_path>   
8 [0x8]:          ret   


constructor: std.io#file.file[1668] params(1) in file: lib\support\0.2.805/io//file.sharp:27:9: note:  
		    file(path: _int8[]) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 28 pushl 0   
6 [0x6]:          new_class @64 // std#string   
7 [0x7]:          dup    
8 [0x8]:          newstr @15 //    
9 [0x9]:          call @2923 // <std#string.string>   
10 [0xa]:          pushl 1   
11 [0xb]:          call @2935 // <std#string.operator+>   
12 [0xc]:          call @1671 // <std.io#file.update_path>   
13 [0xd]:          ret   


function: std.io#file.get_name[1669] params(0) in file: lib\support\0.2.805/io//file.sharp:31:8: note:  
		    def get_name() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 32 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          skpe ebx // pc = 21   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @2956 // <std#string.size>   
16 [0x10]:          loadval ebx   
17 [0x11]:          rstore ebx   
18 [0x12]:          movi #0, ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          test ecx, ebx   
22 [0x16]:          jne 27   
23 [0x17]: line: 33 pushnull    
24 [0x18]:          popobj2    
25 [0x19]:          returnobj   
26 [0x1a]:          ret   
27 [0x1b]:          nop   
28 [0x1c]: line: 36 movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          pushobj   
32 [0x20]:          call @2956 // <std#string.size>   
33 [0x21]:          loadval ebx   
34 [0x22]:          rstore ebx   
35 [0x23]:          movi #1, ebx   
37 [0x25]:          loadval ecx   
38 [0x26]:          sub ecx, ebx -> ebx   
39 [0x27]:          smovr_2 ebx, fp+1   
40 [0x28]:          ipushl #1   
41 [0x29]:          movi #0, ebx   
43 [0x2b]:          loadval ecx   
44 [0x2c]:          gt ecx, ebx   
45 [0x2d]:          movr ebx, cmt   
46 [0x2e]:          movr cmt, ebx   
47 [0x2f]:          jne 90   
48 [0x30]: line: 37 movl 0   
49 [0x31]:          movn #0   
51 [0x33]:          pushobj   
52 [0x34]:          ipushl #1   
53 [0x35]:          call @2946 // <std#string.operator[>   
54 [0x36]:          loadval ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          movg @18 // @std.io#file   
57 [0x39]:          movn #1   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          loadval ecx   
63 [0x3f]:          test ecx, ebx   
64 [0x40]:          jne 84   
65 [0x41]: line: 38 movl 0   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          ipushl #1   
70 [0x46]:          movi #1, ebx   
72 [0x48]:          loadval ecx   
73 [0x49]:          add ecx, ebx -> ebx   
74 [0x4a]:          rstore ebx   
75 [0x4b]:          movl 0   
76 [0x4c]:          movn #0   
78 [0x4e]:          pushobj   
79 [0x4f]:          call @2956 // <std#string.size>   
80 [0x50]:          call @2970 // <std#string.substring>   
81 [0x51]:          popobj2    
82 [0x52]:          returnobj   
83 [0x53]:          ret   
84 [0x54]:          nop   
85 [0x55]:          loadl ebx, fp+1   
86 [0x56]:          movr egx, ebx   
87 [0x57]:          dec ebx   
88 [0x58]:          smovr_2 ebx, fp+1   
89 [0x59]:          jmp @40   
90 [0x5a]: line: 42 movl 0   
91 [0x5b]:          movn #0   
93 [0x5d]:          returnobj   
94 [0x5e]:          ret   


function: std.io#file.to_string[1670] params(0) in file: lib\support\0.2.805/io//file.sharp:45:8: note:  
		    def to_string() := path;
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#file.update_path[1671] params(1) in file: lib\support\0.2.805/io//file.sharp:47:5: note:  
			def update_path(path: string) {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 48 movl 1   
5 [0x5]:          checknull   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 13   
8 [0x8]: line: 49 new_class @9 // std#nullptr_exception   
9 [0x9]:          dup    
10 [0xa]:          newstr @16 // file path cannot be null   
11 [0xb]:          call @1638 // <std#nullptr_exception.nullptr_exception>   
12 [0xc]:          throw    
13 [0xd]:          nop   
14 [0xe]: line: 51 pushl 1   
15 [0xf]:          call @2931 // <std#string.empty>   
16 [0x10]:          loadval ebx   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 24   
19 [0x13]: line: 52 new_class @9 // std#nullptr_exception   
20 [0x14]:          dup    
21 [0x15]:          newstr @17 // file path cannot be empty   
22 [0x16]:          call @1638 // <std#nullptr_exception.nullptr_exception>   
23 [0x17]:          throw    
24 [0x18]:          nop   
25 [0x19]: line: 53 movg @18 // @std.io#file   
26 [0x1a]:          movn #0   
28 [0x1c]:          pushobj   
29 [0x1d]:          pushl 1   
30 [0x1e]:          invoke_delegate 1710 { static=0, args=1 }   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          popobj   
36 [0x24]:          ret   


function: std.io#file.get_parent_file[1672] params(0) in file: lib\support\0.2.805/io//file.sharp:56:8: note:  
		    def get_parent_file() : file {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 57 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          skpe ebx // pc = 21   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @2956 // <std#string.size>   
16 [0x10]:          loadval ebx   
17 [0x11]:          rstore ebx   
18 [0x12]:          movi #0, ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          test ecx, ebx   
22 [0x16]:          jne 27   
23 [0x17]: line: 58 pushnull    
24 [0x18]:          popobj2    
25 [0x19]:          returnobj   
26 [0x1a]:          ret   
27 [0x1b]:          nop   
28 [0x1c]: line: 61 movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          pushobj   
32 [0x20]:          call @2956 // <std#string.size>   
33 [0x21]:          loadval ebx   
34 [0x22]:          rstore ebx   
35 [0x23]:          movi #1, ebx   
37 [0x25]:          loadval ecx   
38 [0x26]:          sub ecx, ebx -> ebx   
39 [0x27]:          smovr_2 ebx, fp+1   
40 [0x28]:          ipushl #1   
41 [0x29]:          movi #0, ebx   
43 [0x2b]:          loadval ecx   
44 [0x2c]:          gt ecx, ebx   
45 [0x2d]:          movr ebx, cmt   
46 [0x2e]:          movr cmt, ebx   
47 [0x2f]:          jne 90   
48 [0x30]: line: 62 movl 0   
49 [0x31]:          movn #0   
51 [0x33]:          pushobj   
52 [0x34]:          ipushl #1   
53 [0x35]:          call @2946 // <std#string.operator[>   
54 [0x36]:          loadval ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          movg @18 // @std.io#file   
57 [0x39]:          movn #1   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          loadval ecx   
63 [0x3f]:          test ecx, ebx   
64 [0x40]:          jne 84   
65 [0x41]: line: 63 new_class @18 // std.io#file   
66 [0x42]:          dup    
67 [0x43]:          movl 0   
68 [0x44]:          movn #0   
70 [0x46]:          pushobj   
71 [0x47]:          istore 0   
73 [0x49]:          ipushl #1   
74 [0x4a]:          movi #1, ebx   
76 [0x4c]:          loadval ecx   
77 [0x4d]:          add ecx, ebx -> ebx   
78 [0x4e]:          rstore ebx   
79 [0x4f]:          call @2970 // <std#string.substring>   
80 [0x50]:          call @1667 // <std.io#file.file>   
81 [0x51]:          popobj2    
82 [0x52]:          returnobj   
83 [0x53]:          ret   
84 [0x54]:          nop   
85 [0x55]:          loadl ebx, fp+1   
86 [0x56]:          movr egx, ebx   
87 [0x57]:          dec ebx   
88 [0x58]:          smovr_2 ebx, fp+1   
89 [0x59]:          jmp @40   
90 [0x5a]: line: 67 pushnull    
91 [0x5b]:          popobj2    
92 [0x5c]:          returnobj   
93 [0x5d]:          ret   


function: std.io#file.get_path[1673] params(0) in file: lib\support\0.2.805/io//file.sharp:70:8: note:  
		    def get_path() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 71 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std.io#file.get_absolute_path[1674] params(0) in file: lib\support\0.2.805/io//file.sharp:87:8: note:  
		    def get_absolute_path() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 88 movg @18 // @std.io#file   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          pushl 0   
9 [0x9]:          call @1711 // <std.io#file_system.resolve>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io#file.is_readable[1675] params(0) in file: lib\support\0.2.805/io//file.sharp:96:8: note:  
		    def is_readable() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 97 movg @18 // @std.io#file   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          pushl 0   
9 [0x9]:          istore 4   
11 [0xb]:          invoke_delegate 1713 { static=0, args=2 }   
13 [0xd]:          loadval ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          movi #0, ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          test ecx, ebx   
19 [0x13]:          return_val cmt   
20 [0x14]:          ret   


function: std.io#file.is_writeable[1676] params(0) in file: lib\support\0.2.805/io//file.sharp:105:8: note:  
		    def is_writeable() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 106 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           istore 2   
11 [0xb]:           invoke_delegate 1713 { static=0, args=2 }   
13 [0xd]:           loadval ebx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           test ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#file.exists[1677] params(0) in file: lib\support\0.2.805/io//file.sharp:114:8: note:  
		    def exists() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 115 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           ldc ebx // 0   
10 [0xa]:           rstore ebx   
11 [0xb]:           invoke_delegate 1713 { static=0, args=2 }   
13 [0xd]:           loadval ebx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           test ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#file.is_directory[1678] params(0) in file: lib\support\0.2.805/io//file.sharp:123:8: note:  
		    def is_directory() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 124 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           invoke_delegate 1712 { static=0, args=1 }   
11 [0xb]:           loadval ebx   
12 [0xc]:           rstore ebx   
13 [0xd]:           movi #4, ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #0, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           tne ecx, ebx   
23 [0x17]:           return_val cmt   
24 [0x18]:           ret   


function: std.io#file.is_file[1679] params(0) in file: lib\support\0.2.805/io//file.sharp:133:8: note:  
		    def is_file() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 134 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           invoke_delegate 1712 { static=0, args=1 }   
11 [0xb]:           loadval ebx   
12 [0xc]:           rstore ebx   
13 [0xd]:           movi #2, ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #0, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           tne ecx, ebx   
23 [0x17]:           return_val cmt   
24 [0x18]:           ret   


function: std.io#file.is_hidden[1680] params(0) in file: lib\support\0.2.805/io//file.sharp:145:8: note:  
		    def is_hidden() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 146 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           invoke_delegate 1712 { static=0, args=1 }   
11 [0xb]:           loadval ebx   
12 [0xc]:           rstore ebx   
13 [0xd]:           movi #128, ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           uand ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #0, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           tne ecx, ebx   
23 [0x17]:           return_val cmt   
24 [0x18]:           ret   


function: std.io#file.last_modified[1681] params(0) in file: lib\support\0.2.805/io//file.sharp:154:8: note:  
		    def last_modified() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 155 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           ldc ebx // 0   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @1715 // <std.io#file_system.last_modified_time>   
12 [0xc]:           loadval ebx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


function: std.io#file.last_status_changed[1682] params(0) in file: lib\support\0.2.805/io//file.sharp:158:8: note:  
		    def last_status_changed() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 159 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           ldc ebx // 1   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @1715 // <std.io#file_system.last_modified_time>   
12 [0xc]:           loadval ebx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


function: std.io#file.last_accessed[1683] params(0) in file: lib\support\0.2.805/io//file.sharp:162:8: note:  
		    def last_accessed() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 163 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           istore 2   
11 [0xb]:           call @1715 // <std.io#file_system.last_modified_time>   
12 [0xc]:           loadval ebx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


function: std.io#file.length[1684] params(0) in file: lib\support\0.2.805/io//file.sharp:171:8: note:  
		    def length() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 172 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           call @1716 // <std.io#file_system.get_length>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.create[1685] params(0) in file: lib\support\0.2.805/io//file.sharp:186:8: note:  
		    def create() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 187 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           call @1717 // <std.io#file_system.create_file>   
13 [0xd]:           ret   


function: std.io#file.delete[1686] params(0) in file: lib\support\0.2.805/io//file.sharp:196:8: note:  
		    def delete() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 197 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           call @1719 // <std.io#file_system.delete>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.list[1687] params(0) in file: lib\support\0.2.805/io//file.sharp:212:8: note:  
		    def list() : list<string> {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 213 new_class @106 // std#list<std#string>   
5 [0x5]:           dup    
6 [0x6]:           movg @18 // @std.io#file   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           pushl 0   
11 [0xb]:           call @1720 // <std.io#file_system.list>   
12 [0xc]:           call @3108 // <std#list<std#string>.list>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std.io#file.mkdir[1688] params(0) in file: lib\support\0.2.805/io//file.sharp:220:8: note:  
		    def mkdir() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 221 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           call @1721 // <std.io#file_system.create_directory>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.rename[1689] params(1) in file: lib\support\0.2.805/io//file.sharp:239:8: note:  
		    def rename(dest: file) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 240 movl 1   
5 [0x5]:           checknull   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 12   
8 [0x8]: line: 241 new_class @9 // std#nullptr_exception   
9 [0x9]:           dup    
10 [0xa]:           call @1640 // <std#nullptr_exception.nullptr_exception>   
11 [0xb]:           throw    
12 [0xc]:           nop   
13 [0xd]: line: 244 movg @18 // @std.io#file   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           pushl 0   
18 [0x12]:           pushl 1   
19 [0x13]:           call @1722 // <std.io#file_system.rename>   
20 [0x14]:           ipopl 2   
21 [0x15]: line: 245 ipushl #2   
22 [0x16]:           movi #0, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           test ecx, ebx   
26 [0x1a]:           jne 35   
27 [0x1b]: line: 247 movl 1   
28 [0x1c]:           movn #0   
30 [0x1e]:           pushobj   
31 [0x1f]:           movl 0   
32 [0x20]:           movn #0   
34 [0x22]:           popobj   
35 [0x23]:           nop   
36 [0x24]: line: 251 loadl ebx, fp+2   
37 [0x25]:           return_val ebx   
38 [0x26]:           ret   


function: std.io#file.set_last_modified[1690] params(1) in file: lib\support\0.2.805/io//file.sharp:266:8: note:  
		    def set_last_modified(time: var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 267 loadl ebx, fp+1   
5 [0x5]:           mov32 ebx, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 19   
14 [0xe]:           new_class @4 // std#illegal_argument_exception   
15 [0xf]:           dup    
16 [0x10]:           newstr @18 // Negative time   
17 [0x11]:           call @1623 // <std#illegal_argument_exception.illegal_argument_exception>   
18 [0x12]:           throw    
19 [0x13]:           nop   
20 [0x14]: line: 268 movg @18 // @std.io#file   
21 [0x15]:           movn #0   
23 [0x17]:           pushobj   
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @1725 // <std.io#file_system.set_last_modified_time>   
27 [0x1b]:           loadval ebx   
28 [0x1c]:           return_val ebx   
29 [0x1d]:           ret   


function: std.io#file.set_read_only[1691] params(0) in file: lib\support\0.2.805/io//file.sharp:279:8: note:  
		    def set_read_only() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 280 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           call @1726 // <std.io#file_system.set_read_only>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.set_writable[1692] params(2) in file: lib\support\0.2.805/io//file.sharp:288:8: note:  
		    def set_writable(writable: var, owner_only: var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 289 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           istore 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           ipushl #2   
13 [0xd]:           call @1714 // <std.io#file_system.set_permission>   
14 [0xe]:           loadval ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


function: std.io#file.set_writable[1693] params(1) in file: lib\support\0.2.805/io//file.sharp:297:8: note:  
		    def set_writable(writable: var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 298 pushl 0   
5 [0x5]:           ipushl #1   
6 [0x6]:           istore 1   
8 [0x8]:           call @1692 // <std.io#file.set_writable>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: std.io#file.set_readable[1694] params(2) in file: lib\support\0.2.805/io//file.sharp:306:8: note:  
		    def set_readable(readable: var, owner_only: var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 307 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           istore 4   
11 [0xb]:           ipushl #1   
12 [0xc]:           ipushl #2   
13 [0xd]:           call @1714 // <std.io#file_system.set_permission>   
14 [0xe]:           loadval ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


function: std.io#file.set_readable[1695] params(1) in file: lib\support\0.2.805/io//file.sharp:315:8: note:  
		    def set_readable(readable: var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 316 pushl 0   
5 [0x5]:           ipushl #1   
6 [0x6]:           istore 1   
8 [0x8]:           call @1694 // <std.io#file.set_readable>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: std.io#file.set_executable[1696] params(2) in file: lib\support\0.2.805/io//file.sharp:324:8: note:  
		    def set_executable(executable: var, owner_only: var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 325 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           ldc ebx // 1   
10 [0xa]:           rstore ebx   
11 [0xb]:           ipushl #1   
12 [0xc]:           ipushl #2   
13 [0xd]:           call @1714 // <std.io#file_system.set_permission>   
14 [0xe]:           loadval ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


function: std.io#file.set_executable[1697] params(1) in file: lib\support\0.2.805/io//file.sharp:333:8: note:  
		    def set_executable(executable: var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 334 pushl 0   
5 [0x5]:           ipushl #1   
6 [0x6]:           istore 1   
8 [0x8]:           call @1696 // <std.io#file.set_executable>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: std.io#file.is_executable[1698] params(0) in file: lib\support\0.2.805/io//file.sharp:342:8: note:  
		    def is_executable() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 343 movg @18 // @std.io#file   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushl 0   
9 [0x9]:           ldc ebx // 1   
10 [0xa]:           rstore ebx   
11 [0xb]:           invoke_delegate 1713 { static=0, args=2 }   
13 [0xd]:           loadval ebx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           test ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#file.get_total_space[1699] params(0) in file: lib\support\0.2.805/io//file.sharp:354:8: note:  
		    def get_total_space() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 355 ldc ebx // 0   
5 [0x5]:           rstore ebx   
6 [0x6]:           call @1727 // <std.io#file_system.get_space_available>   
7 [0x7]:           loadval ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


function: std.io#file.get_free_space[1700] params(0) in file: lib\support\0.2.805/io//file.sharp:363:8: note:  
		    def get_free_space() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 364 ldc ebx // 1   
5 [0x5]:           rstore ebx   
6 [0x6]:           call @1727 // <std.io#file_system.get_space_available>   
7 [0x7]:           loadval ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


function: std.io#file.get_usable_space[1701] params(0) in file: lib\support\0.2.805/io//file.sharp:386:8: note:  
		    def get_usable_space() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #18, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 387 istore 2   
6 [0x6]:           call @1727 // <std.io#file_system.get_space_available>   
7 [0x7]:           loadval ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


function: std.io#file.generate_temp_file[1702] params(3) in file: lib\support\0.2.805/io//file.sharp:393:22: note:  
		    private static def generate_temp_file(prefix: string, suffix: string, dir: file) : file
		                     ^

0 [0x0]: line: 405 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#file.create_temp_file[1703] params(3) in file: lib\support\0.2.805/io//file.sharp:414:15: note:  
		    static def create_temp_file(prefix: string, suffix: string,
		              ^

0 [0x0]: line: 437 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#file.create_temp_file[1704] params(2) in file: lib\support\0.2.805/io//file.sharp:448:15: note:  
		    static def create_temp_file(prefix: string, suffix: string) : file
		              ^

0 [0x0]: line: 451 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           pushnull    
3 [0x3]:           call @1703 // <std.io#file.create_temp_file>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std.io#file.read_all_text[1705] params(0) in file: lib\support\0.2.805/io//file.sharp:454:8: note:  
		    def read_all_text() := fs.read(self);
		       ^

0 [0x0]: line: 454 pushl 0   
1 [0x1]:           call @1723 // <std.io#file_system.read>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#file.write[1706] params(1) in file: lib\support\0.2.805/io//file.sharp:456:8: note:  
		    def write(data: string) := fs.write(self, data);
		       ^

0 [0x0]: line: 456 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1724 // <std.io#file_system.write>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.get_file_system[1707] params(0) in file: lib\support\0.2.805/io//file.sharp:458:23: note:  
		    private static def get_file_system() : file_system {
		                      ^

0 [0x0]: line: 459 call @1929 // <platform#build.is_windows>   
1 [0x1]:           loadval ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 11   
4 [0x4]: line: 460 new_class @34 // std.io#win_fs   
5 [0x5]:           dup    
6 [0x6]:           call @1896 // <std.io#win_fs.win_fs>   
7 [0x7]:           popobj2    
8 [0x8]:           returnobj   
9 [0x9]:           ret   
10 [0xa]:           jmp @17   
11 [0xb]: line: 462 new_class @33 // std.io#unix_fs   
12 [0xc]:           dup    
13 [0xd]:           call @1891 // <std.io#unix_fs.unix_fs>   
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   
17 [0x11]:           nop   


constructor: std.io#file.file[1708] params(0) in file: lib\support\0.2.805/io//file.sharp:17:13: note:  
		public class file {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std.io#file_system.path_separator[1709] params(0) in file: lib\support\0.2.805/io//file_system.sharp:18:8: note:  
		    def path_separator() : var;
		       ^



std.io#file_system.normalize[1710] params(1) in file: lib\support\0.2.805/io//file_system.sharp:24:8: note:  
		    def normalize(path: string) : string;
		       ^



function: std.io#file_system.resolve[1711] params(1) in file: lib\support\0.2.805/io//file_system.sharp:30:9: note:  
		     def resolve(f: file) : string {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @2949 // <std#string.get_data>   
9 [0x9]:          popobj2    
10 [0xa]:          smovr_3 fp+2   
11 [0xb]: line: 38 pushl 2   : protected asm start
12 [0xc]:          int 0x20   
13 [0xd]:          popl 2   : protected asm end
14 [0xe]: line: 44 movl 2   
15 [0xf]:          checknull   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 31   
18 [0x12]: line: 45 new_class @7 // std#io_exception   
19 [0x13]:          dup    
20 [0x14]:          new_class @64 // std#string   
21 [0x15]:          dup    
22 [0x16]:          newstr @19 // file could not be resolved:    
23 [0x17]:          call @2923 // <std#string.string>   
24 [0x18]:          movl 1   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          call @2938 // <std#string.operator+>   
29 [0x1d]:          call @1633 // <std#io_exception.io_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 48 new_class @64 // std#string   
33 [0x21]:          dup    
34 [0x22]:          newstr @15 //    
35 [0x23]:          call @2923 // <std#string.string>   
36 [0x24]:          pushl 2   
37 [0x25]:          call @2935 // <std#string.operator+>   
38 [0x26]:          popobj2    
39 [0x27]:          returnobj   
40 [0x28]:          ret   


std.io#file_system.get_attributes[1712] params(1) in file: lib\support\0.2.805/io//file_system.sharp:67:9: note:  
		     def get_attributes(f: file) : var;
		        ^



std.io#file_system.check_access[1713] params(2) in file: lib\support\0.2.805/io//file_system.sharp:81:9: note:  
		     def check_access(f: file, access: var) : var;
		        ^



function: std.io#file_system.set_permission[1714] params(4) in file: lib\support\0.2.805/io//file_system.sharp:88:9: note:  
		     def set_permission(f: file, access: var, enable: var, owneronly: var) : var {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 90 pushl 1   
5 [0x5]:          call @1674 // <std.io#file.get_absolute_path>   
6 [0x6]:          call @2949 // <std#string.get_data>   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+5   
9 [0x9]: line: 91 istorel 0, fp+6   
11 [0xb]: line: 93 call @1929 // <platform#build.is_windows>   
12 [0xc]:          loadval ebx   
13 [0xd]:          skne ebx // pc = 17   
14 [0xe]:          ipushl #2   
15 [0xf]:          ldc ebx // 1   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          jne 22   
19 [0x13]: line: 94 istorel -1, fp+0   
21 [0x15]:          ret   
22 [0x16]:          nop   
23 [0x17]: line: 100 pushl 5   : protected asm start
24 [0x18]:           loadl ebx, fp+2   
25 [0x19]:           loadl egx, fp+3   
26 [0x1a]:           loadl ecx, fp+4   
27 [0x1b]:           int 0x2e   
28 [0x1c]:           smovr_2 ebx, fp+6   
29 [0x1d]: line: 109 loadl ebx, fp+6   : protected asm end
30 [0x1e]:           return_val ebx   
31 [0x1f]:           ret   


function: std.io#file_system.last_modified_time[1715] params(2) in file: lib\support\0.2.805/io//file_system.sharp:121:9: note:  
		     def last_modified_time(f: file, stat_id: var) : var {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 123 pushl 1   
5 [0x5]:           call @1674 // <std.io#file.get_absolute_path>   
6 [0x6]:           call @2949 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+3   
9 [0x9]: line: 124 istorel 0, fp+4   
11 [0xb]: line: 130 pushl 3   : protected asm start
12 [0xc]:           loadl ebx, fp+2   
13 [0xd]:           int 0x26   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 137 loadl ebx, fp+4   : protected asm end
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   


function: std.io#file_system.get_length[1716] params(1) in file: lib\support\0.2.805/io//file_system.sharp:145:9: note:  
		     def get_length(f: file) : var {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 147 pushl 1   
5 [0x5]:           call @1674 // <std.io#file.get_absolute_path>   
6 [0x6]:           call @2949 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 148 istorel 0, fp+3   
11 [0xb]: line: 154 pushl 2   : protected asm start
12 [0xc]:           int 0x27   
13 [0xd]:           smovr_2 ebx, fp+3   
14 [0xe]: line: 160 loadl ebx, fp+3   : protected asm end
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


function: std.io#file_system.create_file[1717] params(1) in file: lib\support\0.2.805/io//file_system.sharp:170:8: note:  
		    def create_file(pathname: string) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 172 pushl 1   
5 [0x5]:           call @2949 // <std#string.get_data>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+2   
8 [0x8]: line: 178 pushl 2   : protected asm start
9 [0x9]:           int 0x28   
10 [0xa]:           ret   : protected asm end


function: std.io#file_system.delete_directory[1718] params(1) in file: lib\support\0.2.805/io//file_system.sharp:188:16: note:  
		    private def delete_directory(f: file) : var {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 190 pushl 1   
5 [0x5]:           call @1674 // <std.io#file.get_absolute_path>   
6 [0x6]:           call @2949 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 191 istorel 0, fp+3   
11 [0xb]: line: 197 pushl 2   : protected asm start
12 [0xc]:           int 0x2c   
13 [0xd]:           smovr_2 ebx, fp+3   
14 [0xe]: line: 203 loadl ebx, fp+3   : protected asm end
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


function: std.io#file_system.delete[1719] params(1) in file: lib\support\0.2.805/io//file_system.sharp:210:8: note:  
		    def delete(f: file) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 212 pushl 1   
5 [0x5]:           call @1674 // <std.io#file.get_absolute_path>   
6 [0x6]:           call @2949 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 213 istorel 0, fp+3   
11 [0xb]: line: 215 pushl 1   
12 [0xc]:           call @1678 // <std.io#file.is_directory>   
13 [0xd]:           loadval ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 22   
16 [0x10]: line: 216 pushl 0   
17 [0x11]:           pushl 1   
18 [0x12]:           call @1718 // <std.io#file_system.delete_directory>   
19 [0x13]:           loadval ebx   
20 [0x14]:           return_val ebx   
21 [0x15]:           ret   
22 [0x16]:           nop   
23 [0x17]: line: 222 pushl 2   : protected asm start
24 [0x18]:           int 0x29   
25 [0x19]:           smovr_2 ebx, fp+3   
26 [0x1a]: line: 228 loadl ebx, fp+3   : protected asm end
27 [0x1b]:           return_val ebx   
28 [0x1c]:           ret   


function: std.io#file_system.list[1720] params(1) in file: lib\support\0.2.805/io//file_system.sharp:236:8: note:  
		    def list(f: file) : string[] {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 238 pushl 1   
5 [0x5]:           call @1674 // <std.io#file.get_absolute_path>   
6 [0x6]:           call @2949 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 239 movl 3   
10 [0xa]:           del   
11 [0xb]: line: 241 pushl 1   
12 [0xc]:           call @1678 // <std.io#file.is_directory>   
13 [0xd]:           loadval ebx   
14 [0xe]:           not ebx, ebx   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 21   
17 [0x11]: line: 242 pushnull    
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   
21 [0x15]:           nop   
22 [0x16]: line: 248 pushl 2   : protected asm start
23 [0x17]:           int 0x2a   
24 [0x18]:           popl 3   
25 [0x19]: line: 254 movl 3   : protected asm end
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   


function: std.io#file_system.create_directory[1721] params(1) in file: lib\support\0.2.805/io//file_system.sharp:261:8: note:  
		    def create_directory(f: file) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 263 pushl 1   
5 [0x5]:           call @1673 // <std.io#file.get_path>   
6 [0x6]:           call @2949 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 264 istorel 0, fp+3   
11 [0xb]: line: 270 pushl 2   : protected asm start
12 [0xc]:           int 0x2b   
13 [0xd]:           smovr_2 ebx, fp+3   
14 [0xe]: line: 276 loadl ebx, fp+3   : protected asm end
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


function: std.io#file_system.rename[1722] params(2) in file: lib\support\0.2.805/io//file_system.sharp:284:8: note:  
		    def rename(f1: file, f2: file) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 286 pushl 1   
5 [0x5]:           call @1674 // <std.io#file.get_absolute_path>   
6 [0x6]:           call @2949 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+3   
9 [0x9]: line: 287 pushl 2   
10 [0xa]:           call @1673 // <std.io#file.get_path>   
11 [0xb]:           call @2949 // <std#string.get_data>   
12 [0xc]:           popobj2    
13 [0xd]:           smovr_3 fp+4   
14 [0xe]: line: 288 istorel 0, fp+5   
16 [0x10]: line: 294 pushl 4   : protected asm start
17 [0x11]:           pushl 3   
18 [0x12]:           int 0x30   
19 [0x13]:           smovr_2 ebx, fp+5   
20 [0x14]: line: 301 loadl ebx, fp+5   : protected asm end
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


function: std.io#file_system.read[1723] params(1) in file: lib\support\0.2.805/io//file_system.sharp:305:15: note:  
		    static def read(f: file) : string {
		              ^

0 [0x0]: line: 306 pushl 0   
1 [0x1]:           call @1674 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @2949 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 307 movl 2   
6 [0x6]:           del   
7 [0x7]: line: 308 istorel 0, fp+3   
9 [0x9]: line: 314 pushl 1   : protected asm start
10 [0xa]:           int 0x2f   
11 [0xb]:           popl 2   
12 [0xc]: line: 320 movl 2   : protected asm end
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std.io#file_system.write[1724] params(2) in file: lib\support\0.2.805/io//file_system.sharp:324:15: note:  
		    static def write(f: file, data: string) : var {
		              ^

0 [0x0]: line: 325 pushl 0   
1 [0x1]:           call @1674 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @2949 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 326 pushl 1   
6 [0x6]:           call @2949 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+3   
9 [0x9]: line: 327 istorel 0, fp+4   
11 [0xb]: line: 333 pushl 3   : protected asm start
12 [0xc]:           pushl 2   
13 [0xd]:           int 0x31   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 340 loadl ebx, fp+4   : protected asm end
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   


function: std.io#file_system.set_last_modified_time[1725] params(2) in file: lib\support\0.2.805/io//file_system.sharp:348:15: note:  
		    public def set_last_modified_time(f: file, time: var) : var {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 350 pushl 1   
5 [0x5]:           call @1674 // <std.io#file.get_absolute_path>   
6 [0x6]:           call @2949 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+3   
9 [0x9]: line: 351 istorel 0, fp+4   
11 [0xb]: line: 357 pushl 3   : protected asm start
12 [0xc]:           loadl ebx, fp+2   
13 [0xd]:           int 0x2d   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 364 loadl ebx, fp+4   : protected asm end
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   


function: std.io#file_system.set_read_only[1726] params(1) in file: lib\support\0.2.805/io//file_system.sharp:372:15: note:  
		    public def set_read_only(f: file) : var {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #19, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 373 pushl 0   
5 [0x5]:           pushl 1   
6 [0x6]:           istore 2   
8 [0x8]:           movi #0, ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           istore 1   
13 [0xd]:           call @1714 // <std.io#file_system.set_permission>   
14 [0xe]:           pop   
15 [0xf]: line: 374 pushl 0   
16 [0x10]:           pushl 1   
17 [0x11]:           istore 4   
19 [0x13]:           movi #1, ebx   
21 [0x15]:           rstore ebx   
22 [0x16]:           istore 1   
24 [0x18]:           call @1714 // <std.io#file_system.set_permission>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   


function: std.io#file_system.get_space_available[1727] params(1) in file: lib\support\0.2.805/io//file_system.sharp:382:15: note:  
		    static def get_space_available(request: var) : var {
		              ^

0 [0x0]: line: 384 istorel 0, fp+1   
2 [0x2]: line: 390 loadl ebx, fp+0   : protected asm start
3 [0x3]:           int 0x32   
4 [0x4]:           smovr_2 ebx, fp+1   
5 [0x5]: line: 396 loadl ebx, fp+1   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std.io#file_system.file_system[1728] params(0) in file: lib\support\0.2.805/io//file_system.sharp:10:16: note:  
		protected class file_system {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std.io#__srt_global.realloc[1729] params(2) in file: lib\support\0.2.805/io//memory.sharp:4:4: note:  
		def realloc(data: object[], size: var) {
		   ^

0 [0x0]: line: 5 pushl 0   : protected asm start
1 [0x1]:         ipushl #1   
2 [0x2]:         int 0x23   
3 [0x3]:         ret   : protected asm end


function: std.io#__srt_global.realloc[1730] params(2) in file: lib\support\0.2.805/io//memory.sharp:12:4: note:  
		def realloc(data: var[], size: var) {
		   ^

0 [0x0]: line: 13 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1731] params(2) in file: lib\support\0.2.805/io//memory.sharp:20:4: note:  
		def realloc(data: _int8[], size: var) {
		   ^

0 [0x0]: line: 21 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1732] params(2) in file: lib\support\0.2.805/io//memory.sharp:28:4: note:  
		def realloc(data: _int16[], size: var) {
		   ^

0 [0x0]: line: 29 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1733] params(2) in file: lib\support\0.2.805/io//memory.sharp:36:4: note:  
		def realloc(data: _int32[], size: var) {
		   ^

0 [0x0]: line: 37 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1734] params(2) in file: lib\support\0.2.805/io//memory.sharp:44:4: note:  
		def realloc(data: _int64[], size: var) {
		   ^

0 [0x0]: line: 45 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1735] params(2) in file: lib\support\0.2.805/io//memory.sharp:52:4: note:  
		def realloc(data: _uint8[], size: var) {
		   ^

0 [0x0]: line: 53 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1736] params(2) in file: lib\support\0.2.805/io//memory.sharp:60:4: note:  
		def realloc(data: _uint16[], size: var) {
		   ^

0 [0x0]: line: 61 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1737] params(2) in file: lib\support\0.2.805/io//memory.sharp:68:4: note:  
		def realloc(data: _uint32[], size: var) {
		   ^

0 [0x0]: line: 69 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[1738] params(2) in file: lib\support\0.2.805/io//memory.sharp:76:4: note:  
		def realloc(data: _uint64[], size: var) {
		   ^

0 [0x0]: line: 77 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[1739] params(5) in file: lib\support\0.2.805/io//memory.sharp:84:4: note:  
		def memcopy(src: object[], dest: object[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 85 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[1740] params(5) in file: lib\support\0.2.805/io//memory.sharp:95:4: note:  
		def memcopy(src: var[], dest: var[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 96 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[1741] params(5) in file: lib\support\0.2.805/io//memory.sharp:106:4: note:  
		def memcopy(src: _int8[], dest: _int8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 107 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1742] params(5) in file: lib\support\0.2.805/io//memory.sharp:117:4: note:  
		def memcopy(src: _int16[], dest: _int16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 118 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1743] params(5) in file: lib\support\0.2.805/io//memory.sharp:128:4: note:  
		def memcopy(src: _int32[], dest: _int32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 129 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1744] params(5) in file: lib\support\0.2.805/io//memory.sharp:139:4: note:  
		def memcopy(src: _int64[], dest: _int64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 140 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1745] params(5) in file: lib\support\0.2.805/io//memory.sharp:150:4: note:  
		def memcopy(src: _uint8[], dest: _uint8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 151 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1746] params(5) in file: lib\support\0.2.805/io//memory.sharp:161:4: note:  
		def memcopy(src: _uint16[], dest: _uint16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 162 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1747] params(5) in file: lib\support\0.2.805/io//memory.sharp:172:4: note:  
		def memcopy(src: _uint32[], dest: _uint32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 173 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[1748] params(5) in file: lib\support\0.2.805/io//memory.sharp:183:4: note:  
		def memcopy(src: _uint64[], dest: _uint64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 184 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.copy[1749] params(3) in file: lib\support\0.2.805/io//memory.sharp:194:4: note:  
		def copy(src: object[], srcStart: var, srcEnd: var) : object[] {
		   ^

0 [0x0]: line: 195 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 204 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1750] params(3) in file: lib\support\0.2.805/io//memory.sharp:207:4: note:  
		def copy(src: var[], srcStart: var, srcEnd: var) : var[] {
		   ^

0 [0x0]: line: 208 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 217 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1751] params(3) in file: lib\support\0.2.805/io//memory.sharp:220:4: note:  
		def copy(src: _int8[], srcStart: var, srcEnd: var) : _int8[] {
		   ^

0 [0x0]: line: 221 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 230 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1752] params(3) in file: lib\support\0.2.805/io//memory.sharp:233:4: note:  
		def copy(src: _int16[], srcStart: var, srcEnd: var) : _int16[] {
		   ^

0 [0x0]: line: 234 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 243 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1753] params(3) in file: lib\support\0.2.805/io//memory.sharp:246:4: note:  
		def copy(src: _int32[], srcStart: var, srcEnd: var) : _int32[] {
		   ^

0 [0x0]: line: 247 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 256 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1754] params(3) in file: lib\support\0.2.805/io//memory.sharp:259:4: note:  
		def copy(src: _uint8[], srcStart: var, srcEnd: var) : _uint8[] {
		   ^

0 [0x0]: line: 260 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 269 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1755] params(3) in file: lib\support\0.2.805/io//memory.sharp:272:4: note:  
		def copy(src: _uint16[], srcStart: var, srcEnd: var) : _uint16[] {
		   ^

0 [0x0]: line: 273 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 282 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1756] params(3) in file: lib\support\0.2.805/io//memory.sharp:285:4: note:  
		def copy(src: _uint32[], srcStart: var, srcEnd: var) : _uint32[] {
		   ^

0 [0x0]: line: 286 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 295 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1757] params(3) in file: lib\support\0.2.805/io//memory.sharp:298:4: note:  
		def copy(src: _uint64[], srcStart: var, srcEnd: var) : _uint64[] {
		   ^

0 [0x0]: line: 299 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 308 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[1758] params(3) in file: lib\support\0.2.805/io//memory.sharp:311:4: note:  
		def copy(src: _int64[], srcStart: var, srcEnd: var) : _int64[] {
		   ^

0 [0x0]: line: 312 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 321 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1759] params(3) in file: lib\support\0.2.805/io//memory.sharp:325:4: note:  
		def invert(src: object[], start: var, len: var) : object[] {
		   ^

0 [0x0]: line: 326 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 335 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1760] params(3) in file: lib\support\0.2.805/io//memory.sharp:338:4: note:  
		def invert(src: var[], start: var, len: var) : var[] {
		   ^

0 [0x0]: line: 339 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 348 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1761] params(3) in file: lib\support\0.2.805/io//memory.sharp:351:4: note:  
		def invert(src: _int8[], start: var, len: var) : _int8[] {
		   ^

0 [0x0]: line: 352 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 361 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1762] params(3) in file: lib\support\0.2.805/io//memory.sharp:364:4: note:  
		def invert(src: _int16[], start: var, len: var) : _int16[] {
		   ^

0 [0x0]: line: 365 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 374 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1763] params(3) in file: lib\support\0.2.805/io//memory.sharp:377:4: note:  
		def invert(src: _int32[], start: var, len: var) : _int32[] {
		   ^

0 [0x0]: line: 378 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 387 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1764] params(3) in file: lib\support\0.2.805/io//memory.sharp:390:4: note:  
		def invert(src: _int64[], start: var, len: var) : _int64[] {
		   ^

0 [0x0]: line: 391 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 400 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1765] params(3) in file: lib\support\0.2.805/io//memory.sharp:403:4: note:  
		def invert(src: _uint8[], start: var, len: var) : _uint8[] {
		   ^

0 [0x0]: line: 404 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 413 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1766] params(3) in file: lib\support\0.2.805/io//memory.sharp:416:4: note:  
		def invert(src: _uint16[], start: var, len: var) : _uint16[] {
		   ^

0 [0x0]: line: 417 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 426 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1767] params(3) in file: lib\support\0.2.805/io//memory.sharp:429:4: note:  
		def invert(src: _uint32[], start: var, len: var) : _uint32[] {
		   ^

0 [0x0]: line: 430 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 439 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[1768] params(3) in file: lib\support\0.2.805/io//memory.sharp:442:4: note:  
		def invert(src: _uint64[], start: var, len: var) : _uint64[] {
		   ^

0 [0x0]: line: 443 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 452 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[1769] params(1) in file: lib\support\0.2.805/io//task//cancellation_exception.sharp:4:34: note:  
		    public cancellation_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #21, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1641 // <std#runtime_exception.runtime_exception>   
7 [0x7]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[1770] params(1) in file: lib\support\0.2.805/io//task//cancellation_exception.sharp:5:34: note:  
		    public cancellation_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #21, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         pushl 1   
6 [0x6]:         call @1642 // <std#runtime_exception.runtime_exception>   
7 [0x7]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[1771] params(0) in file: lib\support\0.2.805/io//task//cancellation_exception.sharp:3:6: note:  
		class cancellation_exception base runtime_except {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1643 // <std#runtime_exception.runtime_exception>   
2 [0x2]:         ret   


constructor: std.io.task#job.job[1772] params(0) in file: lib\support\0.2.805/io//task//job.sharp:7:13: note:  
			private job() {}
		            ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #14   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #15   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movi #0, ebx   
58 [0x3a]:         movl 0   
59 [0x3b]:         movn #16   
61 [0x3d]:         movi #0, adx   
63 [0x3f]:         rmov adx, ebx   
64 [0x40]:         movi #0, ebx   
66 [0x42]:         movl 0   
67 [0x43]:         movn #17   
69 [0x45]:         movi #0, adx   
71 [0x47]:         rmov adx, ebx   
72 [0x48]:         movg @26 // @std.io.task#job_state   
73 [0x49]:         movn #0   
75 [0x4b]:         pushobj   
76 [0x4c]:         movl 0   
77 [0x4d]:         movn #18   
79 [0x4f]:         popobj   
80 [0x50]:         new_class @110 // std#list<std.io#thread>   
81 [0x51]:         dup    
82 [0x52]:         call @3148 // <std#list<std.io#thread>.list>   
83 [0x53]:         movl 0   
84 [0x54]:         movn #20   
86 [0x56]:         popobj   
87 [0x57]:         movl 0   
88 [0x58]:         movi #22, ebx   
90 [0x5a]:         cast ebx   
91 [0x5b]:         pushl 0   
92 [0x5c]:         ret   


constructor: std.io.task#job.job[1773] params(1) in file: lib\support\0.2.805/io//task//job.sharp:9:5: note:  
			job(name : string) {
		    ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #14   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #15   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movi #0, ebx   
58 [0x3a]:         movl 0   
59 [0x3b]:         movn #16   
61 [0x3d]:         movi #0, adx   
63 [0x3f]:         rmov adx, ebx   
64 [0x40]:         movi #0, ebx   
66 [0x42]:         movl 0   
67 [0x43]:         movn #17   
69 [0x45]:         movi #0, adx   
71 [0x47]:         rmov adx, ebx   
72 [0x48]:         movg @26 // @std.io.task#job_state   
73 [0x49]:         movn #0   
75 [0x4b]:         pushobj   
76 [0x4c]:         movl 0   
77 [0x4d]:         movn #18   
79 [0x4f]:         popobj   
80 [0x50]:         new_class @110 // std#list<std.io#thread>   
81 [0x51]:         dup    
82 [0x52]:         call @3148 // <std#list<std.io#thread>.list>   
83 [0x53]:         movl 0   
84 [0x54]:         movn #20   
86 [0x56]:         popobj   
87 [0x57]:         movl 0   
88 [0x58]:         movi #22, ebx   
90 [0x5a]:         cast ebx   
91 [0x5b]:         pushl 0   
92 [0x5c]: line: 10 pushl 1   
93 [0x5d]:          movl 0   
94 [0x5e]:          movn #5   
96 [0x60]:          popobj   
97 [0x61]: line: 11 movg @20 // @std.io.task#__srt_global   
98 [0x62]:          movn #3   
100 [0x64]:          _lck    
101 [0x65]: line: 12 movg @22 // @std.io.task#job   
102 [0x66]:          movn #0   
104 [0x68]:          movi #0, adx   
106 [0x6a]:          iaload ebx, adx   
107 [0x6b]:          movr egx, ebx   
108 [0x6c]:          inc ebx   
109 [0x6d]:          movi #0, adx   
111 [0x6f]:          rmov adx, ebx   
112 [0x70]:          rstore egx   
113 [0x71]:          movl 0   
114 [0x72]:          movn #15   
116 [0x74]:          loadval ebx   
117 [0x75]:          movi #0, adx   
119 [0x77]:          rmov adx, ebx   
120 [0x78]:          movg @20 // @std.io.task#__srt_global   
121 [0x79]:          movn #3   
123 [0x7b]:          _ulck   
124 [0x7c]:          ret   


function: std.io.task#job.execute_async[1774] params(0) in file: lib\support\0.2.805/io//task//job.sharp:16:15: note:  
			protected def execute_async() : var {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 17 movl 0   
5 [0x5]:          movn #18   
7 [0x7]:          pushobj   
8 [0x8]:          movg @26 // @std.io.task#job_state   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          call @1610 // <std#_enum_.operator==>   
13 [0xd]:          loadval ebx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 60   
16 [0x10]: line: 18 pushl 0   
17 [0x11]:          movl 0   
18 [0x12]:          movn #19   
20 [0x14]:          movn #0   
22 [0x16]:          popobj   
23 [0x17]: line: 19 movl 0   
24 [0x18]:          movn #4   
26 [0x1a]:          pushobj   
27 [0x1b]:          call @1866 // <std.io#thread.is_active>   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 38   
31 [0x1f]: line: 20 movl 0   
32 [0x20]:          movn #4   
34 [0x22]:          pushobj   
35 [0x23]:          call @1843 // <std.io#thread.notify_and_wait>   
36 [0x24]:          pop   
37 [0x25]:          jmp @55   
38 [0x26]: line: 22 movl 0   
39 [0x27]:          movn #4   
41 [0x29]:          pushobj   
42 [0x2a]:          movi #1, ebx   
44 [0x2c]:          newobj_arry ebx   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #19   
48 [0x30]:          pushobj   
49 [0x31]:          movsl #-1   
50 [0x32]:          movn #0   
52 [0x34]:          popobj   
53 [0x35]:          call @1839 // <std.io#thread.start>   
54 [0x36]:          pop   
55 [0x37]:          nop   
56 [0x38]: line: 24 istorel 0, fp+0   
58 [0x3a]:          ret   
59 [0x3b]:          jmp @75   
60 [0x3c]:          movl 0   
61 [0x3d]:          movn #18   
63 [0x3f]:          pushobj   
64 [0x40]:          movg @26 // @std.io.task#job_state   
65 [0x41]:          movn #1   
67 [0x43]:          pushobj   
68 [0x44]:          call @1610 // <std#_enum_.operator==>   
69 [0x45]:          loadval ebx   
70 [0x46]:          movr cmt, ebx   
71 [0x47]:          jne 75   
72 [0x48]: line: 26 istorel 1, fp+0   
74 [0x4a]:          ret   
75 [0x4b]:          nop   
76 [0x4c]: line: 29 istorel 2, fp+0   
78 [0x4e]:          ret   


function: std.io.task#job.cancel[1775] params(0) in file: lib\support\0.2.805/io//task//job.sharp:32:12: note:  
			public def cancel() {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 33 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 34 movl 0   
7 [0x7]:          movn #18   
9 [0x9]:          pushobj   
10 [0xa]:          movg @26 // @std.io.task#job_state   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @1610 // <std#_enum_.operator==>   
15 [0xf]:          loadval ebx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 53   
18 [0x12]: line: 35 movg @26 // @std.io.task#job_state   
19 [0x13]:          movn #3   
21 [0x15]:          pushobj   
22 [0x16]:          movl 0   
23 [0x17]:          movn #18   
25 [0x19]:          popobj   
26 [0x1a]: line: 37 call @1846 // <std.io#thread.current>   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #4   
30 [0x1e]:          pushobj   
31 [0x1f]:          itest ebx   
32 [0x20]:          not ebx, ebx   
33 [0x21]:          movr cmt, ebx   
34 [0x22]:          jne 48   
35 [0x23]: line: 38 movl 0   
36 [0x24]:          movn #4   
38 [0x26]:          pushobj   
39 [0x27]:          call @1845 // <std.io#thread.interrupt>   
40 [0x28]:          pop   
41 [0x29]: line: 39 movg @20 // @std.io.task#__srt_global   
42 [0x2a]:          movn #3   
44 [0x2c]:          pushobj   
45 [0x2d]:          pushl 0   
46 [0x2e]:          call @1813 // <std.io.task#job_master.cleanup_job>   
47 [0x2f]:          jmp @52   
48 [0x30]: line: 42 new_class @21 // std.io.task#cancellation_exception   
49 [0x31]:          dup    
50 [0x32]:          call @1771 // <std.io.task#cancellation_exception.cancellation_exception>   
51 [0x33]:          throw    
52 [0x34]:          nop   
53 [0x35]:          nop   
54 [0x36]:          movl 0   
55 [0x37]:          _ulck   
56 [0x38]:          ret   


function: std.io.task#job.cancel_future[1776] params(0) in file: lib\support\0.2.805/io//task//job.sharp:48:12: note:  
			public def cancel_future() {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 49 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 50 movl 0   
7 [0x7]:          movn #14   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 36   
14 [0xe]: line: 51 movl 0   
15 [0xf]:          movn #13   
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 52 movl 1   
19 [0x13]:          checknull   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          movr cmt, ebx   
22 [0x16]:          jne 36   
23 [0x17]: line: 53 pushl 1   
24 [0x18]:          call @1775 // <std.io.task#job.cancel>   
25 [0x19]: line: 54 movg @20 // @std.io.task#__srt_global   
26 [0x1a]:          movn #3   
28 [0x1c]:          pushobj   
29 [0x1d]:          pushl 1   
30 [0x1e]:          call @1813 // <std.io.task#job_master.cleanup_job>   
31 [0x1f]: line: 56 movl 1   
32 [0x20]:          movn #13   
34 [0x22]:          smovr_3 fp+1   
35 [0x23]:          jmp @18   
36 [0x24]:          nop   
37 [0x25]:          movl 0   
38 [0x26]:          _ulck   
39 [0x27]:          ret   


function: std.io.task#job.join[1777] params(0) in file: lib\support\0.2.805/io//task//job.sharp:62:12: note:  
			public def join() {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 63 movl 0   
5 [0x5]:          movn #16   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          skpe ebx // pc = 32   
11 [0xb]:          movl 0   
12 [0xc]:          movn #18   
14 [0xe]:          pushobj   
15 [0xf]:          movg @26 // @std.io.task#job_state   
16 [0x10]:          movn #3   
18 [0x12]:          pushobj   
19 [0x13]:          call @1610 // <std#_enum_.operator==>   
20 [0x14]:          loadval ebx   
21 [0x15]:          skpe ebx // pc = 32   
22 [0x16]:          movl 0   
23 [0x17]:          movn #18   
25 [0x19]:          pushobj   
26 [0x1a]:          movg @26 // @std.io.task#job_state   
27 [0x1b]:          movn #2   
29 [0x1d]:          pushobj   
30 [0x1e]:          call @1610 // <std#_enum_.operator==>   
31 [0x1f]:          loadval ebx   
32 [0x20]:          movr cmt, ebx   
33 [0x21]:          jne 35   
34 [0x22]: line: 66 ret   
35 [0x23]:          nop   
36 [0x24]: line: 68 istorel 0, fp+1   
38 [0x26]: line: 69 movl 0   
39 [0x27]:          _lck    
40 [0x28]: line: 70 pushl 0   
41 [0x29]:          call @1787 // <std.io.task#job.is_finished>   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          not ebx, ebx   
44 [0x2c]:          movr cmt, ebx   
45 [0x2d]:          jne 54   
46 [0x2e]: line: 71 istorel 1, fp+1   
48 [0x30]: line: 72 movl 0   
49 [0x31]:          movn #20   
51 [0x33]:          pushobj   
52 [0x34]:          call @1846 // <std.io#thread.current>   
53 [0x35]:          call @3162 // <std#list<std.io#thread>.add>   
54 [0x36]:          nop   
55 [0x37]:          movl 0   
56 [0x38]:          _ulck   
57 [0x39]: line: 76 loadl ebx, fp+1   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 61   
60 [0x3c]:          call @1848 // <std.io#thread.wait>   
61 [0x3d]:          nop   
62 [0x3e]:          ret   


function: std.io.task#job.get_state[1778] params(0) in file: lib\support\0.2.805/io//task//job.sharp:79:12: note:  
			public def get_state() := state;
		           ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io.task#job.get_name[1779] params(0) in file: lib\support\0.2.805/io//task//job.sharp:80:12: note:  
			public def get_name() := name;
		           ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #5   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io.task#job.get_id[1780] params(0) in file: lib\support\0.2.805/io//task//job.sharp:81:12: note:  
			public def get_id() := id;
		           ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


overload function: std.io.task#job.operator=[1781] params(1) in file: lib\support\0.2.805/io//task//job.sharp:83:15: note:  
			protected def operator=(block: ()()) {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 84 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


overload function: std.io.task#job.operator=[1782] params(1) in file: lib\support\0.2.805/io//task//job.sharp:87:15: note:  
			protected def operator=(block: (args : object[])()) {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 88 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


overload function: std.io.task#job.operator=[1783] params(1) in file: lib\support\0.2.805/io//task//job.sharp:91:15: note:  
			protected def operator=(block: (deferred : object, args : object[])()) {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 92 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #2   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


overload function: std.io.task#job.operator=[1784] params(1) in file: lib\support\0.2.805/io//task//job.sharp:95:15: note:  
			protected def operator=(block: (deferred : object)()) {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 96 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #3   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


function: std.io.task#job.job_main[1785] params(1) in file: lib\support\0.2.805/io//task//job.sharp:99:22: note:  
			protected static def job_main(args : object[]) : var {
		                     ^

0 [0x0]: line: 100 pushl 0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           popobj2    
4 [0x4]:           movr adx, ebx   
5 [0x5]:           chklen adx   
6 [0x6]:           movnd adx   
7 [0x7]:           movi #24, cmt   
9 [0x9]:           cast cmt   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]: line: 102 movl 1   : try start: try block start
12 [0xc]: line: 103 movn #0   
14 [0xe]: line: 104 pushobj   
15 [0xf]:           call @1786 // <std.io.task#job.execute>   
16 [0x10]:           jmp @63   : try block end
17 [0x11]: line: 106 movg @26 // @std.io.task#job_state   : catch(std.io.task#cancellation_exception)
18 [0x12]:           movn #3   
20 [0x14]:           pushobj   
21 [0x15]:           movl 1   
22 [0x16]:           movn #0   
24 [0x18]:           movn #18   
26 [0x1a]:           popobj   
27 [0x1b]: line: 107 movg @20 // @std.io.task#__srt_global   
28 [0x1c]:           movn #3   
30 [0x1e]:           pushobj   
31 [0x1f]:           movl 1   
32 [0x20]:           movn #0   
34 [0x22]:           pushobj   
35 [0x23]:           call @1813 // <std.io.task#job_master.cleanup_job>   
36 [0x24]:           jmp @63   
37 [0x25]: line: 109 movg @26 // @std.io.task#job_state   : catch(std#exception)
38 [0x26]:           movn #3   
40 [0x28]:           pushobj   
41 [0x29]:           movl 1   
42 [0x2a]:           movn #0   
44 [0x2c]:           movn #18   
46 [0x2e]:           popobj   
47 [0x2f]: line: 110 movg @20 // @std.io.task#__srt_global   
48 [0x30]:           movn #3   
50 [0x32]:           pushobj   
51 [0x33]:           movl 1   
52 [0x34]:           movn #0   
54 [0x36]:           pushobj   
55 [0x37]:           call @1813 // <std.io.task#job_master.cleanup_job>   
56 [0x38]: line: 111 movl 1   
57 [0x39]:           movn #0   
59 [0x3b]:           del   
60 [0x3c]: line: 112 pushl 2   
61 [0x3d]:           throw    
62 [0x3e]:           jmp @63   
63 [0x3f]:           nop   : try end
64 [0x40]: line: 115 movl 1   
65 [0x41]:           movn #0   
67 [0x43]:           del   
68 [0x44]: line: 116 call @1848 // <std.io#thread.wait>   
69 [0x45]:           jmp @11   
70 [0x46]: line: 119 istorel 0, fp+0   
72 [0x48]:           ret   


function: std.io.task#job.execute[1786] params(0) in file: lib\support\0.2.805/io//task//job.sharp:122:15: note:  
			protected def execute() {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 123 call @3023 // <std#time.mills_time>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #10   
8 [0x8]:           loadval ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]: line: 124 movg @26 // @std.io.task#job_state   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           movl 0   
17 [0x11]:           movn #18   
19 [0x13]:           popobj   
20 [0x14]: line: 125 movl 0   
21 [0x15]:           movn #14   
23 [0x17]:           movi #0, adx   
25 [0x19]:           iaload ebx, adx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 30   
28 [0x1c]: line: 126 pushl 0   
29 [0x1d]:           call @1791 // <std.io.task#job.reschedule>   
30 [0x1e]:           nop   
31 [0x1f]: line: 128 movl 0   
32 [0x20]:           movn #0   
34 [0x22]:           movi #0, adx   
36 [0x24]:           iaload ebx, adx   
37 [0x25]:           movr cmt, ebx   
38 [0x26]:           jne 49   
39 [0x27]: line: 129 movl 0   
40 [0x28]:           movn #0   
42 [0x2a]:           movi #0, adx   
44 [0x2c]:           iaload ebx, adx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           loadval ebx   
47 [0x2f]:           calld ebx   
48 [0x30]:           jmp @118   
49 [0x31]:           movl 0   
50 [0x32]:           movn #1   
52 [0x34]:           movi #0, adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 71   
57 [0x39]: line: 130 movl 0   
58 [0x3a]:           movn #1   
60 [0x3c]:           movi #0, adx   
62 [0x3e]:           iaload ebx, adx   
63 [0x3f]:           rstore ebx   
64 [0x40]:           movl 0   
65 [0x41]:           movn #6   
67 [0x43]:           pushobj   
68 [0x44]:           smov ebx, sp+[-1]   
69 [0x45]:           calld ebx   
70 [0x46]:           jmp @118   
71 [0x47]:           movl 0   
72 [0x48]:           movn #2   
74 [0x4a]:           movi #0, adx   
76 [0x4c]:           iaload ebx, adx   
77 [0x4d]:           movr cmt, ebx   
78 [0x4e]:           jne 97   
79 [0x4f]: line: 131 movl 0   
80 [0x50]:           movn #2   
82 [0x52]:           movi #0, adx   
84 [0x54]:           iaload ebx, adx   
85 [0x55]:           rstore ebx   
86 [0x56]:           movl 0   
87 [0x57]:           movn #7   
89 [0x59]:           pushobj   
90 [0x5a]:           movl 0   
91 [0x5b]:           movn #6   
93 [0x5d]:           pushobj   
94 [0x5e]:           smov ebx, sp+[-2]   
95 [0x5f]:           calld ebx   
96 [0x60]:           jmp @118   
97 [0x61]:           movl 0   
98 [0x62]:           movn #3   
100 [0x64]:           movi #0, adx   
102 [0x66]:           iaload ebx, adx   
103 [0x67]:           movr cmt, ebx   
104 [0x68]:           jne 118   
105 [0x69]: line: 132 movl 0   
106 [0x6a]:           movn #3   
108 [0x6c]:           movi #0, adx   
110 [0x6e]:           iaload ebx, adx   
111 [0x6f]:           rstore ebx   
112 [0x70]:           movl 0   
113 [0x71]:           movn #7   
115 [0x73]:           pushobj   
116 [0x74]:           smov ebx, sp+[-1]   
117 [0x75]:           calld ebx   
118 [0x76]:           nop   
119 [0x77]: line: 135 movg @26 // @std.io.task#job_state   
120 [0x78]:           movn #2   
122 [0x7a]:           pushobj   
123 [0x7b]:           movl 0   
124 [0x7c]:           movn #18   
126 [0x7e]:           popobj   
127 [0x7f]: line: 136 movg @20 // @std.io.task#__srt_global   
128 [0x80]:           movn #3   
130 [0x82]:           pushobj   
131 [0x83]:           pushl 0   
132 [0x84]:           call @1813 // <std.io.task#job_master.cleanup_job>   
133 [0x85]:           ret   


function: std.io.task#job.is_finished[1787] params(0) in file: lib\support\0.2.805/io//task//job.sharp:139:8: note:  
		    def is_finished() := state == completed || state == cancelled;
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @26 // @std.io.task#job_state   
5 [0x5]:           movn #2   
7 [0x7]:           pushobj   
8 [0x8]:           call @1610 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           skpe ebx // pc = 21   
11 [0xb]:           movl 0   
12 [0xc]:           movn #18   
14 [0xe]:           pushobj   
15 [0xf]:           movg @26 // @std.io.task#job_state   
16 [0x10]:           movn #3   
18 [0x12]:           pushobj   
19 [0x13]:           call @1610 // <std#_enum_.operator==>   
20 [0x14]:           loadval ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


function: std.io.task#job.is_active[1788] params(0) in file: lib\support\0.2.805/io//task//job.sharp:140:8: note:  
		    def is_active() := state == active;
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @26 // @std.io.task#job_state   
5 [0x5]:           movn #1   
7 [0x7]:           pushobj   
8 [0x8]:           call @1610 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: std.io.task#job.update_timeout[1789] params(1) in file: lib\support\0.2.805/io//task//job.sharp:142:15: note:  
		    public def update_timeout(tm: var) {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 143 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #9   
8 [0x8]:           loadval ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           ret   


function: std.io.task#job.update_interval[1790] params(2) in file: lib\support\0.2.805/io//task//job.sharp:146:15: note:  
		    public def update_interval(tm: var, interval: time_unit) {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 147 movl 0   
5 [0x5]:           movn #14   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           not ebx, ebx   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 18   
13 [0xd]: line: 148 new_class @5 // std#illegal_state_exception   
14 [0xe]:           dup    
15 [0xf]:           newstr @20 // cannot set update restart interval on non-recurring job   
16 [0x10]:           call @1626 // <std#illegal_state_exception.illegal_state_exception>   
17 [0x11]:           throw    
18 [0x12]:           nop   
19 [0x13]: line: 150 movl 0   
20 [0x14]:           movn #18   
22 [0x16]:           pushobj   
23 [0x17]:           movg @26 // @std.io.task#job_state   
24 [0x18]:           movn #1   
26 [0x1a]:           pushobj   
27 [0x1b]:           call @1610 // <std#_enum_.operator==>   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 37   
31 [0x1f]: line: 151 pushl 0   
32 [0x20]:           call @1776 // <std.io.task#job.cancel_future>   
33 [0x21]: line: 152 movl 0   
34 [0x22]:           movn #13   
36 [0x24]:           del   
37 [0x25]:           nop   
38 [0x26]: line: 155 pushl 2   
39 [0x27]:           movg @67 // @std#time_unit   
40 [0x28]:           movn #3   
42 [0x2a]:           pushobj   
43 [0x2b]:           call @1610 // <std#_enum_.operator==>   
44 [0x2c]:           loadval ebx   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 57   
47 [0x2f]: line: 156 ipushl #1   
48 [0x30]:           call @3021 // <std#time.nano_to_mills>   
49 [0x31]:           movl 0   
50 [0x32]:           movn #11   
52 [0x34]:           loadval ebx   
53 [0x35]:           movi #0, adx   
55 [0x37]:           rmov adx, ebx   
56 [0x38]:           jmp @116   
57 [0x39]:           pushl 2   
58 [0x3a]:           movg @67 // @std#time_unit   
59 [0x3b]:           movn #2   
61 [0x3d]:           pushobj   
62 [0x3e]:           call @1610 // <std#_enum_.operator==>   
63 [0x3f]:           loadval ebx   
64 [0x40]:           movr cmt, ebx   
65 [0x41]:           jne 78   
66 [0x42]: line: 158 ipushl #1   
67 [0x43]:           movi #1000, ebx   
69 [0x45]:           loadval ecx   
70 [0x46]:           div ecx, ebx -> ebx   
71 [0x47]:           movl 0   
72 [0x48]:           movn #11   
74 [0x4a]:           movi #0, adx   
76 [0x4c]:           rmov adx, ebx   
77 [0x4d]:           jmp @116   
78 [0x4e]:           pushl 2   
79 [0x4f]:           movg @67 // @std#time_unit   
80 [0x50]:           movn #1   
82 [0x52]:           pushobj   
83 [0x53]:           call @1610 // <std#_enum_.operator==>   
84 [0x54]:           loadval ebx   
85 [0x55]:           movr cmt, ebx   
86 [0x56]:           jne 96   
87 [0x57]: line: 160 ipushl #1   
88 [0x58]:           movl 0   
89 [0x59]:           movn #11   
91 [0x5b]:           loadval ebx   
92 [0x5c]:           movi #0, adx   
94 [0x5e]:           rmov adx, ebx   
95 [0x5f]:           jmp @116   
96 [0x60]:           pushl 2   
97 [0x61]:           movg @67 // @std#time_unit   
98 [0x62]:           movn #0   
100 [0x64]:           pushobj   
101 [0x65]:           call @1610 // <std#_enum_.operator==>   
102 [0x66]:           loadval ebx   
103 [0x67]:           movr cmt, ebx   
104 [0x68]:           jne 116   
105 [0x69]: line: 162 ipushl #1   
106 [0x6a]:           movi #1000, ebx   
108 [0x6c]:           loadval ecx   
109 [0x6d]:           mul ecx, ebx -> ebx   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #11   
113 [0x71]:           movi #0, adx   
115 [0x73]:           rmov adx, ebx   
116 [0x74]:           nop   
117 [0x75]: line: 165 movl 0   
118 [0x76]:           movn #18   
120 [0x78]:           pushobj   
121 [0x79]:           movg @26 // @std.io.task#job_state   
122 [0x7a]:           movn #1   
124 [0x7c]:           pushobj   
125 [0x7d]:           call @1610 // <std#_enum_.operator==>   
126 [0x7e]:           loadval ebx   
127 [0x7f]:           movr cmt, ebx   
128 [0x80]:           jne 131   
129 [0x81]: line: 166 pushl 0   
130 [0x82]:           call @1791 // <std.io.task#job.reschedule>   
131 [0x83]:           nop   
132 [0x84]:           ret   


function: std.io.task#job.reschedule[1791] params(0) in file: lib\support\0.2.805/io//task//job.sharp:169:18: note:  
		    protected def reschedule() {
		                 ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #22, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 171 movl 0   
5 [0x5]:           movn #10   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movl 0   
12 [0xc]:           movn #11   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           loadval ecx   
18 [0x12]:           add ecx, ebx -> ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @3023 // <std#time.mills_time>   
21 [0x15]:           loadval ebx   
22 [0x16]:           loadval ecx   
23 [0x17]:           sub ecx, ebx -> ebx   
24 [0x18]:           smovr_2 ebx, fp+1   
25 [0x19]: line: 172 call @1829 // <std.io.task#task.builder>   
26 [0x1a]:           movl 0   
27 [0x1b]:           movn #5   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @1797 // <std.io.task#job_builder.with_name>   
31 [0x1f]:           movl 0   
32 [0x20]:           movn #11   
34 [0x22]:           movi #0, adx   
36 [0x24]:           iaload ebx, adx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movg @67 // @std#time_unit   
39 [0x27]:           movn #1   
41 [0x29]:           pushobj   
42 [0x2a]:           call @1796 // <std.io.task#job_builder.recurring>   
43 [0x2b]:           popobj2    
44 [0x2c]:           smovr_3 fp+2   
45 [0x2d]: line: 176 movl 0   
46 [0x2e]:           movn #6   
48 [0x30]:           sizeof ebx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movi #1, ebx   
52 [0x34]:           loadval ecx   
53 [0x35]:           sub ecx, ebx -> ebx   
54 [0x36]:           newobj_arry ebx   
55 [0x37]:           popobj2    
56 [0x38]:           smovr_3 fp+3   
57 [0x39]: line: 177 istorel 0, fp+4   
59 [0x3b]: line: 178 istorel 1, fp+5   
61 [0x3d]:           ipushl #5   
62 [0x3e]:           movl 0   
63 [0x3f]:           movn #6   
65 [0x41]:           sizeof ebx   
66 [0x42]:           loadval ecx   
67 [0x43]:           lt ecx, ebx   
68 [0x44]:           movr ebx, cmt   
69 [0x45]:           movr cmt, ebx   
70 [0x46]:           jne 91   
71 [0x47]: line: 179 movl 0   
72 [0x48]:           movn #6   
74 [0x4a]:           pushobj   
75 [0x4b]:           loadl ebx, fp+5   
76 [0x4c]:           popobj2    
77 [0x4d]:           movr adx, ebx   
78 [0x4e]:           chklen adx   
79 [0x4f]:           movnd adx   
80 [0x50]:           pushobj   
81 [0x51]:           pushl 3   
82 [0x52]:           loadl ebx, fp+5   
83 [0x53]:           popobj2    
84 [0x54]:           movr adx, ebx   
85 [0x55]:           chklen adx   
86 [0x56]:           movnd adx   
87 [0x57]:           popobj   
88 [0x58]:           iaddl 1, fp@5   
90 [0x5a]:           jmp @61   
91 [0x5b]: line: 182 movl 0   
92 [0x5c]:           movn #17   
94 [0x5e]:           movi #0, adx   
96 [0x60]:           iaload ebx, adx   
97 [0x61]:           movr cmt, ebx   
98 [0x62]:           jne 102   
99 [0x63]: line: 183 pushl 2   
100 [0x64]:           call @1800 // <std.io.task#job_builder.long_term>   
101 [0x65]:           pop   
102 [0x66]:           nop   
103 [0x67]: line: 184 pushl 2   
104 [0x68]:           pushl 3   
105 [0x69]:           call @1798 // <std.io.task#job_builder.with_args>   
106 [0x6a]:           pop   
107 [0x6b]: line: 186 movl 0   
108 [0x6c]:           movn #0   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           iaload ebx, adx   
113 [0x71]:           movr cmt, ebx   
114 [0x72]:           jne 132   
115 [0x73]: line: 187 movl 0   
116 [0x74]:           movn #0   
118 [0x76]:           movi #0, adx   
120 [0x78]:           iaload ebx, adx   
121 [0x79]:           rstore ebx   
122 [0x7a]:           movl 2   
123 [0x7b]:           movn #1   
125 [0x7d]:           movn #0   
127 [0x7f]:           loadval ebx   
128 [0x80]:           movi #0, adx   
130 [0x82]:           rmov adx, ebx   
131 [0x83]:           jmp @206   
132 [0x84]:           movl 0   
133 [0x85]:           movn #1   
135 [0x87]:           movi #0, adx   
137 [0x89]:           iaload ebx, adx   
138 [0x8a]:           movr cmt, ebx   
139 [0x8b]:           jne 157   
140 [0x8c]: line: 188 movl 0   
141 [0x8d]:           movn #1   
143 [0x8f]:           movi #0, adx   
145 [0x91]:           iaload ebx, adx   
146 [0x92]:           rstore ebx   
147 [0x93]:           movl 2   
148 [0x94]:           movn #1   
150 [0x96]:           movn #1   
152 [0x98]:           loadval ebx   
153 [0x99]:           movi #0, adx   
155 [0x9b]:           rmov adx, ebx   
156 [0x9c]:           jmp @206   
157 [0x9d]:           movl 0   
158 [0x9e]:           movn #2   
160 [0xa0]:           movi #0, adx   
162 [0xa2]:           iaload ebx, adx   
163 [0xa3]:           movr cmt, ebx   
164 [0xa4]:           jne 182   
165 [0xa5]: line: 189 movl 0   
166 [0xa6]:           movn #2   
168 [0xa8]:           movi #0, adx   
170 [0xaa]:           iaload ebx, adx   
171 [0xab]:           rstore ebx   
172 [0xac]:           movl 2   
173 [0xad]:           movn #1   
175 [0xaf]:           movn #2   
177 [0xb1]:           loadval ebx   
178 [0xb2]:           movi #0, adx   
180 [0xb4]:           rmov adx, ebx   
181 [0xb5]:           jmp @206   
182 [0xb6]:           movl 0   
183 [0xb7]:           movn #3   
185 [0xb9]:           movi #0, adx   
187 [0xbb]:           iaload ebx, adx   
188 [0xbc]:           movr cmt, ebx   
189 [0xbd]:           jne 206   
190 [0xbe]: line: 190 movl 0   
191 [0xbf]:           movn #3   
193 [0xc1]:           movi #0, adx   
195 [0xc3]:           iaload ebx, adx   
196 [0xc4]:           rstore ebx   
197 [0xc5]:           movl 2   
198 [0xc6]:           movn #1   
200 [0xc8]:           movn #3   
202 [0xca]:           loadval ebx   
203 [0xcb]:           movi #0, adx   
205 [0xcd]:           rmov adx, ebx   
206 [0xce]:           nop   
207 [0xcf]: line: 193 ipushl #1   
208 [0xd0]:           movi #0, ebx   
210 [0xd2]:           loadval ecx   
211 [0xd3]:           gt ecx, ebx   
212 [0xd4]:           movr ebx, cmt   
213 [0xd5]:           movr cmt, ebx   
214 [0xd6]:           jne 219   
215 [0xd7]: line: 194 pushl 2   
216 [0xd8]:           ipushl #1   
217 [0xd9]:           call @1795 // <std.io.task#job_builder.schedule>   
218 [0xda]:           pop   
219 [0xdb]:           nop   
220 [0xdc]: line: 195 movl 0   
221 [0xdd]:           movn #8   
223 [0xdf]:           movi #0, adx   
225 [0xe1]:           iaload ebx, adx   
226 [0xe2]:           movr cmt, ebx   
227 [0xe3]:           jne 238   
228 [0xe4]: line: 196 pushl 2   
229 [0xe5]:           movl 0   
230 [0xe6]:           movn #9   
232 [0xe8]:           movi #0, adx   
234 [0xea]:           iaload ebx, adx   
235 [0xeb]:           rstore ebx   
236 [0xec]:           call @1794 // <std.io.task#job_builder.with_timeout>   
237 [0xed]:           pop   
238 [0xee]:           nop   
239 [0xef]: line: 198 movl 2   
240 [0xf0]:           movn #1   
242 [0xf2]:           pushobj   
243 [0xf3]:           movl 0   
244 [0xf4]:           movn #13   
246 [0xf6]:           popobj   
247 [0xf7]: line: 199 movl 2   
248 [0xf8]:           movn #0   
250 [0xfa]:           pushobj   
251 [0xfb]:           movl 2   
252 [0xfc]:           movn #1   
254 [0xfe]:           pushobj   
255 [0xff]:           call @1811 // <std.io.task#job_master.start_job>   
256 [0x100]:           ret   


constructor: std.io.task#job_builder.job_builder[1792] params(0) in file: lib\support\0.2.805/io//task//job_builder.sharp:6:21: note:  
			private job_builder() {}
		                    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ret   


constructor: std.io.task#job_builder.job_builder[1793] params(2) in file: lib\support\0.2.805/io//task//job_builder.sharp:8:23: note:  
			protected job_builder(scheduled_job : job, master : job_master) {
		                      ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 9 pushl 1   
6 [0x6]:         movl 0   
7 [0x7]:         movn #1   
9 [0x9]:         popobj   
10 [0xa]: line: 10 pushl 2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]: line: 12 movi #1, ebx   
17 [0x11]:          newobj_arry ebx   
18 [0x12]:          popobj2    
19 [0x13]:          smovr_3 fp+3   
20 [0x14]: line: 13 movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          pushl 3   
25 [0x19]:          movi #0, ebx   
27 [0x1b]:          popobj2    
28 [0x1c]:          movr adx, ebx   
29 [0x1d]:          chklen adx   
30 [0x1e]:          movnd adx   
31 [0x1f]:          popobj   
32 [0x20]: line: 14 pushl 3   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          movn #6   
38 [0x26]:          popobj   
39 [0x27]:          ret   


function: std.io.task#job_builder.with_timeout[1794] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:17:5: note:  
			def with_timeout(mills_time : var) : job_builder {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 18 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          movn #16   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 19   
14 [0xe]: line: 19 new_class @5 // std#illegal_state_exception   
15 [0xf]:          dup    
16 [0x10]:          newstr @21 // cannot set a timeout on a job that's blocking the calling thread   
17 [0x11]:          call @1626 // <std#illegal_state_exception.illegal_state_exception>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 22 ipushl #1   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          movn #9   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]: line: 23 istore 1   
32 [0x20]:          movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          movn #8   
37 [0x25]:          loadval ebx   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 24 movl 0   
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   


function: std.io.task#job_builder.schedule[1795] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:27:5: note:  
			def schedule(future : var) : job_builder {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 28 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          movn #12   
10 [0xa]:          loadval ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]: line: 29 movl 0   
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std.io.task#job_builder.recurring[1796] params(2) in file: lib\support\0.2.805/io//task//job_builder.sharp:32:5: note:  
			def recurring(tm : var, interval: time_unit) : job_builder {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 33 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          movn #16   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 19   
14 [0xe]: line: 34 new_class @5 // std#illegal_state_exception   
15 [0xf]:          dup    
16 [0x10]:          newstr @22 // cannot set a job recurring that's blocking the calling thread   
17 [0x11]:          call @1626 // <std#illegal_state_exception.illegal_state_exception>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 37 istore 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #1   
25 [0x19]:          movn #14   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 38 movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          pushobj   
35 [0x23]:          ipushl #1   
36 [0x24]:          pushl 2   
37 [0x25]:          call @1790 // <std.io.task#job.update_interval>   
38 [0x26]: line: 39 movl 0   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std.io.task#job_builder.with_name[1797] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:42:5: note:  
			def with_name(job_name : string) : job_builder {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 43 pushl 1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          movn #5   
10 [0xa]:          popobj   
11 [0xb]: line: 44 movl 0   
12 [0xc]:          returnobj   
13 [0xd]:          ret   


function: std.io.task#job_builder.with_args[1798] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:47:5: note:  
			def with_args(args : object[]) : job_builder {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 48 istore 1   
6 [0x6]:          movl 1   
7 [0x7]:          sizeof ebx   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          newobj_arry ebx   
11 [0xb]:          popobj2    
12 [0xc]:          smovr_3 fp+2   
13 [0xd]: line: 49 movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          pushobj   
17 [0x11]:          pushl 2   
18 [0x12]:          movi #0, ebx   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          popobj   
25 [0x19]: line: 51 istorel 0, fp+3   
27 [0x1b]: line: 52 istorel -1, fp+5   
29 [0x1d]:          pushl 1   
30 [0x1e]:          popl 6   
31 [0x1f]:          iaddl 1, fp@5   
33 [0x21]:          movl 6   
34 [0x22]:          sizeof ecx   
35 [0x23]:          loadl ebx, fp+5   
36 [0x24]:          lt ebx, ecx   
37 [0x25]:          jne 52   
38 [0x26]:          movnd ebx   
39 [0x27]:          pushobj   
40 [0x28]:          popl 4   
41 [0x29]: line: 53 pushl 4   
42 [0x2a]:          pushl 2   
43 [0x2b]:          loadl ebx, fp+3   
44 [0x2c]:          inc ebx   
45 [0x2d]:          smovr_2 ebx, fp+3   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          popobj   
51 [0x33]:          jmp @31   
52 [0x34]: line: 56 pushl 2   
53 [0x35]:          movl 0   
54 [0x36]:          movn #1   
56 [0x38]:          movn #6   
58 [0x3a]:          popobj   
59 [0x3b]: line: 57 movl 0   
60 [0x3c]:          returnobj   
61 [0x3d]:          ret   


function: std.io.task#job_builder.block[1799] params(0) in file: lib\support\0.2.805/io//task//job_builder.sharp:60:5: note:  
			def block() : job_builder {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 61 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          movn #8   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 19   
14 [0xe]: line: 62 new_class @5 // std#illegal_state_exception   
15 [0xf]:          dup    
16 [0x10]:          newstr @23 // cannot block calling thread on job that has a timeout   
17 [0x11]:          call @1626 // <std#illegal_state_exception.illegal_state_exception>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 65 movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          movn #14   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 35   
30 [0x1e]: line: 66 new_class @5 // std#illegal_state_exception   
31 [0x1f]:          dup    
32 [0x20]:          newstr @24 // cannot block calling thread on a recurring job   
33 [0x21]:          call @1626 // <std#illegal_state_exception.illegal_state_exception>   
34 [0x22]:          throw    
35 [0x23]:          nop   
36 [0x24]: line: 69 istore 1   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          movn #16   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]: line: 70 movl 0   
48 [0x30]:          returnobj   
49 [0x31]:          ret   


function: std.io.task#job_builder.long_term[1800] params(0) in file: lib\support\0.2.805/io//task//job_builder.sharp:73:5: note:  
			def long_term() : job_builder {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 74 istore 1   
6 [0x6]:          movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          movn #17   
11 [0xb]:          loadval ebx   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]: line: 75 movl 0   
16 [0x10]:          returnobj   
17 [0x11]:          ret   


overload function: std.io.task#job_builder.operator=[1801] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:78:12: note:  
			public def operator=(main: ()()) : job {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 79 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          ipushl #1   
9 [0x9]:          call @1781 // <std.io.task#job.operator=>   
10 [0xa]: line: 80 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          pushobj   
18 [0x12]:          call @1811 // <std.io.task#job_master.start_job>   
19 [0x13]: line: 81 movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          returnobj   
23 [0x17]:          ret   


overload function: std.io.task#job_builder.operator=[1802] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:84:12: note:  
			public def operator=(main: (args : object[])()) : job {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 85 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          ipushl #1   
9 [0x9]:          call @1782 // <std.io.task#job.operator=>   
10 [0xa]: line: 86 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          pushobj   
18 [0x12]:          call @1811 // <std.io.task#job_master.start_job>   
19 [0x13]: line: 87 movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          returnobj   
23 [0x17]:          ret   


overload function: std.io.task#job_builder.operator=[1803] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:90:18: note:  
		    protected def operator=(main: (deferred : object, args : object[])()) : job {
		                 ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 91 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          ipushl #1   
9 [0x9]:          call @1783 // <std.io.task#job.operator=>   
10 [0xa]: line: 92 movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          movn #14   
15 [0xf]:          movi #0, adx   
17 [0x11]:          iaload ebx, adx   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 25   
20 [0x14]: line: 93 new_class @5 // std#illegal_state_exception   
21 [0x15]:          dup    
22 [0x16]:          newstr @25 // recurring jobs cannot be deferred tasks   
23 [0x17]:          call @1626 // <std#illegal_state_exception.illegal_state_exception>   
24 [0x18]:          throw    
25 [0x19]:          nop   
26 [0x1a]: line: 96 movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          pushobj   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          call @1811 // <std.io.task#job_master.start_job>   
35 [0x23]: line: 97 movl 0   
36 [0x24]:          movn #1   
38 [0x26]:          returnobj   
39 [0x27]:          ret   


overload function: std.io.task#job_builder.operator=[1804] params(1) in file: lib\support\0.2.805/io//task//job_builder.sharp:100:18: note:  
		    protected def operator=(main: (deferred : object)()) : job {
		                 ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #23, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 101 movl 0   
5 [0x5]:           movn #1   
7 [0x7]:           pushobj   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @1784 // <std.io.task#job.operator=>   
10 [0xa]: line: 102 movl 0   
11 [0xb]:           movn #1   
13 [0xd]:           movn #14   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 25   
20 [0x14]: line: 103 new_class @5 // std#illegal_state_exception   
21 [0x15]:           dup    
22 [0x16]:           newstr @25 // recurring jobs cannot be deferred tasks   
23 [0x17]:           call @1626 // <std#illegal_state_exception.illegal_state_exception>   
24 [0x18]:           throw    
25 [0x19]:           nop   
26 [0x1a]: line: 106 movl 0   
27 [0x1b]:           movn #0   
29 [0x1d]:           pushobj   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #1   
33 [0x21]:           pushobj   
34 [0x22]:           call @1811 // <std.io.task#job_master.start_job>   
35 [0x23]: line: 107 movl 0   
36 [0x24]:           movn #1   
38 [0x26]:           returnobj   
39 [0x27]:           ret   


function: std.io.task#job_builder.get_job[1805] params(0) in file: lib\support\0.2.805/io//task//job_builder.sharp:110:12: note:  
			public def get_job() := scheduled_job;
		           ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


constructor: std.io.task#job_controller.job_controller[1806] params(0) in file: lib\support\0.2.805/io//task//job_controller.sharp:5:6: note:  
		class job_controller {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io.task#job_master.job_master[1807] params(0) in file: lib\support\0.2.805/io//task//job_master.sharp:7:12: note:  
			job_master() {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #25, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 8 new_class @29 // std.io#thread_group   
6 [0x6]:         dup    
7 [0x7]:         new_class @64 // std#string   
8 [0x8]:         dup    
9 [0x9]:         newstr @26 // Long term jobs   
10 [0xa]:         call @2923 // <std#string.string>   
11 [0xb]:         movg @30 // @std.io#thread_priority   
12 [0xc]:         movn #0   
14 [0xe]:         pushobj   
15 [0xf]:         call @1871 // <std.io#thread_group.thread_group>   
16 [0x10]:         movl 0   
17 [0x11]:         movn #2   
19 [0x13]:         popobj   
20 [0x14]: line: 9 new_class @29 // std.io#thread_group   
21 [0x15]:         dup    
22 [0x16]:         new_class @64 // std#string   
23 [0x17]:         dup    
24 [0x18]:         newstr @27 // Short term jobs   
25 [0x19]:         call @2923 // <std#string.string>   
26 [0x1a]:         movg @30 // @std.io#thread_priority   
27 [0x1b]:         movn #2   
29 [0x1d]:         pushobj   
30 [0x1e]:         call @1871 // <std.io#thread_group.thread_group>   
31 [0x1f]:         movl 0   
32 [0x20]:         movn #3   
34 [0x22]:         popobj   
35 [0x23]: line: 10 new_class @111 // std#synced_list<std.io.task#job>   
36 [0x24]:          dup    
37 [0x25]:          call @3175 // <std#synced_list<std.io.task#job>.synced_list>   
38 [0x26]:          movl 0   
39 [0x27]:          movn #0   
41 [0x29]:          popobj   
42 [0x2a]: line: 11 new_class @108 // std#hashtable<std.io#thread,std.io.task#job_controller>   
43 [0x2b]:          dup    
44 [0x2c]:          call @3132 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable>   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #1   
48 [0x30]:          popobj   
49 [0x31]:          ret   


overload function: std.io.task#job_master.operator=[1808] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:14:5: note:  
			def operator=(main: ()()) : job {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #25, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 15 pushl 0   
5 [0x5]:          call @1809 // <std.io.task#job_master.create_job>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+2   
8 [0x8]: line: 16 pushl 2   
9 [0x9]:          ipushl #1   
10 [0xa]:          call @1781 // <std.io.task#job.operator=>   
11 [0xb]: line: 17 pushl 0   
12 [0xc]:          pushl 2   
13 [0xd]:          call @1811 // <std.io.task#job_master.start_job>   
14 [0xe]: line: 18 movl 2   
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std.io.task#job_master.create_job[1809] params(0) in file: lib\support\0.2.805/io//task//job_master.sharp:21:15: note:  
			protected def create_job() := new job("job#${job.guid}");
		              ^

0 [0x0]: line: 21 new_class @22 // std.io.task#job   
1 [0x1]:          dup    
2 [0x2]:          new_class @64 // std#string   
3 [0x3]:          dup    
4 [0x4]:          newstr @0 // job#   
5 [0x5]:          call @2923 // <std#string.string>   
6 [0x6]:          movg @22 // @std.io.task#job   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2955 // <std#string.operator+>   
14 [0xe]:          call @1773 // <std.io.task#job.job>   
15 [0xf]:          popobj2    
16 [0x10]:          returnobj   
17 [0x11]:          ret   


function: std.io.task#job_master.create_job[1810] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:23:15: note:  
			protected def create_job(name : string) := new job(name);
		              ^

0 [0x0]: line: 23 new_class @22 // std.io.task#job   
1 [0x1]:          dup    
2 [0x2]:          pushl 1   
3 [0x3]:          call @1773 // <std.io.task#job.job>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std.io.task#job_master.start_job[1811] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:25:15: note:  
			protected def start_job(scheduled_job : job) {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #25, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 26 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 27 movl 0   
7 [0x7]:          movn #4   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          not ebx, ebx   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 24   
15 [0xf]: line: 28 call @1814 // <std.io.task#__srt_global.start_scheduler>   
16 [0x10]: line: 29 movi #1, ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #4   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          nop   
25 [0x19]:          movl 0   
26 [0x1a]:          _ulck   
27 [0x1b]: line: 33 movl 1   
28 [0x1c]:          movn #12   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          movr cmt, ebx   
34 [0x22]:          jne 52   
35 [0x23]: line: 34 movl 1   
36 [0x24]:          movn #12   
38 [0x26]:          movi #0, adx   
40 [0x28]:          iaload ebx, adx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          call @3023 // <std#time.mills_time>   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          add ecx, ebx -> ebx   
46 [0x2e]:          movl 1   
47 [0x2f]:          movn #12   
49 [0x31]:          movi #0, adx   
51 [0x33]:          rmov adx, ebx   
52 [0x34]:          nop   
53 [0x35]: line: 36 movl 1   
54 [0x36]:          movn #16   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          iaload ebx, adx   
59 [0x3b]:          movr cmt, ebx   
60 [0x3c]:          jne 64   
61 [0x3d]: line: 37 pushl 1   
62 [0x3e]:          call @1820 // <std.io.task#__srt_global.execute_synchronous>   
63 [0x3f]:          jmp @70   
64 [0x40]: line: 40 movl 0   
65 [0x41]:          movn #0   
67 [0x43]:          pushobj   
68 [0x44]:          pushl 1   
69 [0x45]:          call @3211 // <std#synced_list<std.io.task#job>.add>   
70 [0x46]:          nop   
71 [0x47]:          ret   


function: std.io.task#job_master.get_host_controller[1812] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:44:15: note:  
			protected def get_host_controller(host: thread) := controllers.at(host);
		              ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 1   
5 [0x5]:          call @3136 // <std#hashtable<std.io#thread,std.io.task#job_controller>.at>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std.io.task#job_master.cleanup_job[1813] params(1) in file: lib\support\0.2.805/io//task//job_master.sharp:46:15: note:  
			protected def cleanup_job(scheduled_job : job) {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #25, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 47 movl 1   
5 [0x5]:          movn #7   
7 [0x7]:          del   
8 [0x8]: line: 48 movl 1   
9 [0x9]:          movn #4   
11 [0xb]:          del   
12 [0xc]: line: 49 movl 1   
13 [0xd]:          movn #13   
15 [0xf]:          del   
16 [0x10]: line: 50 movl 1   
17 [0x11]:          movn #6   
19 [0x13]:          del   
20 [0x14]: line: 51 movl 1   
21 [0x15]:          movn #5   
23 [0x17]:          del   
24 [0x18]: line: 53 movl 1   
25 [0x19]: line: 54 _lck    
26 [0x1a]: line: 55 movl 1   
27 [0x1b]:          movn #20   
29 [0x1d]:          pushobj   
30 [0x1e]:          call @3151 // <std#list<std.io#thread>.empty>   
31 [0x1f]:          loadval ebx   
32 [0x20]:          not ebx, ebx   
33 [0x21]:          movr cmt, ebx   
34 [0x22]:          jne 58   
35 [0x23]: line: 56 istorel -1, fp+3   
37 [0x25]:          movl 1   
38 [0x26]:          movn #20   
40 [0x28]:          pushobj   
41 [0x29]:          invoke_delegate 16 { static=0, args=0 }   
43 [0x2b]:          popl 4   
44 [0x2c]:          iaddl 1, fp@3   
46 [0x2e]:          movl 4   
47 [0x2f]:          sizeof ecx   
48 [0x30]:          loadl ebx, fp+3   
49 [0x31]:          lt ebx, ecx   
50 [0x32]:          jne 58   
51 [0x33]:          movnd ebx   
52 [0x34]:          pushobj   
53 [0x35]:          popl 2   
54 [0x36]: line: 57 pushl 2   
55 [0x37]:          call @1843 // <std.io#thread.notify_and_wait>   
56 [0x38]:          pop   
57 [0x39]:          jmp @44   
58 [0x3a]:          nop   
59 [0x3b]: line: 61 movl 1   
60 [0x3c]:          movn #20   
62 [0x3e]:          pushobj   
63 [0x3f]:          call @3159 // <std#list<std.io#thread>.clear>   
64 [0x40]:          movl 1   
65 [0x41]:          _ulck   
66 [0x42]: line: 64 movl 1   
67 [0x43]:          _lck    
68 [0x44]: line: 65 movl 1   
69 [0x45]:          movn #20   
71 [0x47]:          pushobj   
72 [0x48]:          call @3151 // <std#list<std.io#thread>.empty>   
73 [0x49]:          loadval ebx   
74 [0x4a]:          not ebx, ebx   
75 [0x4b]:          movr cmt, ebx   
76 [0x4c]:          jne 80   
77 [0x4d]: line: 66 movl 1   
78 [0x4e]:          _ulck   
79 [0x4f]:          jmp @24   
80 [0x50]:          nop   
81 [0x51]:          movl 1   
82 [0x52]:          _ulck   
83 [0x53]: line: 70 movl 1   
84 [0x54]:          movn #20   
86 [0x56]:          del   
87 [0x57]: line: 71 movl 0   
88 [0x58]:          movn #0   
90 [0x5a]:          pushobj   
91 [0x5b]:          pushl 1   
92 [0x5c]:          istore 3303   
94 [0x5e]:          call @3218 // <std#synced_list<std.io.task#job>.remove>   
95 [0x5f]:          ret   


function: std.io.task#__srt_global.start_scheduler[1814] params(0) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:11:14: note:  
		protected def start_scheduler() {
		             ^

0 [0x0]: line: 12 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          _lck    
4 [0x4]: line: 13 movg @20 // @std.io.task#__srt_global   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 17   
16 [0x10]: line: 14 call @1815 // <std.io.task#__srt_global.calculate_max_threads>   
17 [0x11]:          nop   
18 [0x12]: line: 15 new_class @28 // std.io#thread   
19 [0x13]:          dup    
20 [0x14]:          new_class @64 // std#string   
21 [0x15]:          dup    
22 [0x16]:          newstr @28 // task_scheduler   
23 [0x17]:          call @2923 // <std#string.string>   
24 [0x18]:          istore 1818   
26 [0x1a]:          movg @20 // @std.io.task#__srt_global   
27 [0x1b]:          movn #3   
29 [0x1d]:          movn #2   
31 [0x1f]:          pushobj   
32 [0x20]:          call @1837 // <std.io#thread.thread>   
33 [0x21]:          movg @20 // @std.io.task#__srt_global   
34 [0x22]:          movn #2   
36 [0x24]:          popobj   
37 [0x25]: line: 16 movg @20 // @std.io.task#__srt_global   
38 [0x26]:          movn #2   
40 [0x28]:          pushobj   
41 [0x29]:          pushnull    
42 [0x2a]:          call @1839 // <std.io#thread.start>   
43 [0x2b]:          pop   
44 [0x2c]:          movg @20 // @std.io.task#__srt_global   
45 [0x2d]:          movn #3   
47 [0x2f]:          _ulck   
48 [0x30]:          ret   


function: std.io.task#__srt_global.calculate_max_threads[1815] params(0) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:20:12: note:  
		private def calculate_max_threads() {
		           ^

0 [0x0]: line: 21 call @1959 // <platform.kernel#vm.cores>   
1 [0x1]:          ipopl 0   
2 [0x2]: line: 22 movi #2, ebx   
4 [0x4]:          mull ebx, fp@0   
5 [0x5]: line: 23 movi #4, ebx   
7 [0x7]:          subl ebx, fp@0   
8 [0x8]: line: 25 ipushl #0   
9 [0x9]:          movi #2, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 42   
16 [0x10]: line: 26 ipushl #0   
17 [0x11]:          ldc ebx // 0.75   
18 [0x12]:          loadval ecx   
19 [0x13]:          mul ecx, ebx -> ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          call @1920 // <std.math#__srt_global.round>   
22 [0x16]:          movg @20 // @std.io.task#__srt_global   
23 [0x17]:          movn #0   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 27 ipushl #0   
30 [0x1e]:          ldc ebx // 0.25   
31 [0x1f]:          loadval ecx   
32 [0x20]:          mul ecx, ebx -> ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @1920 // <std.math#__srt_global.round>   
35 [0x23]:          movg @20 // @std.io.task#__srt_global   
36 [0x24]:          movn #1   
38 [0x26]:          loadval ebx   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          nop   
43 [0x2b]: line: 30 movg @20 // @std.io.task#__srt_global   
44 [0x2c]:          movn #0   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          iaload ebx, adx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movi #0, ebx   
52 [0x34]:          loadval ecx   
53 [0x35]:          test ecx, ebx   
54 [0x36]:          jne 64   
55 [0x37]: line: 31 istore 1   
57 [0x39]:          movg @20 // @std.io.task#__srt_global   
58 [0x3a]:          movn #0   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]:          nop   
65 [0x41]: line: 33 movg @20 // @std.io.task#__srt_global   
66 [0x42]:          movn #1   
68 [0x44]:          movi #0, adx   
70 [0x46]:          iaload ebx, adx   
71 [0x47]:          rstore ebx   
72 [0x48]:          movi #0, ebx   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          test ecx, ebx   
76 [0x4c]:          jne 86   
77 [0x4d]: line: 34 istore 1   
79 [0x4f]:          movg @20 // @std.io.task#__srt_global   
80 [0x50]:          movn #1   
82 [0x52]:          loadval ebx   
83 [0x53]:          movi #0, adx   
85 [0x55]:          rmov adx, ebx   
86 [0x56]:          nop   
87 [0x57]:          ret   


function: std.io.task#__srt_global.set_thread_max[1816] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:37:4: note:  
		def set_thread_max(max: var) {
		   ^

0 [0x0]: line: 38 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          _lck    
4 [0x4]: line: 39 movg @20 // @std.io.task#__srt_global   
5 [0x5]:          movn #2   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          not ebx, ebx   
11 [0xb]:          movr cmt, ebx   
12 [0xc]:          jne 18   
13 [0xd]: line: 40 new_class @4 // std#illegal_argument_exception   
14 [0xe]:          dup    
15 [0xf]:          newstr @31 // cannot modify max thread count after task library has started, try calling this before your first task   
16 [0x10]:          call @1623 // <std#illegal_argument_exception.illegal_argument_exception>   
17 [0x11]:          throw    
18 [0x12]:          nop   
19 [0x13]: line: 44 ipushl #0   
20 [0x14]:          movi #2, ebx   
22 [0x16]:          loadval ecx   
23 [0x17]:          gte ecx, ebx   
24 [0x18]:          movr ebx, cmt   
25 [0x19]:          movr cmt, ebx   
26 [0x1a]:          jne 98   
27 [0x1b]: line: 45 ipushl #0   
28 [0x1c]:          ldc ebx // 0.75   
29 [0x1d]:          loadval ecx   
30 [0x1e]:          mul ecx, ebx -> ebx   
31 [0x1f]:          rstore ebx   
32 [0x20]:          call @1920 // <std.math#__srt_global.round>   
33 [0x21]:          movg @20 // @std.io.task#__srt_global   
34 [0x22]:          movn #0   
36 [0x24]:          loadval ebx   
37 [0x25]:          movi #0, adx   
39 [0x27]:          rmov adx, ebx   
40 [0x28]: line: 46 ipushl #0   
41 [0x29]:          ldc ebx // 0.25   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          mul ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          call @1920 // <std.math#__srt_global.round>   
46 [0x2e]:          movg @20 // @std.io.task#__srt_global   
47 [0x2f]:          movn #1   
49 [0x31]:          loadval ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]: line: 48 movg @20 // @std.io.task#__srt_global   
54 [0x36]:          movn #0   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          iaload ebx, adx   
59 [0x3b]:          rstore ebx   
60 [0x3c]:          movi #0, ebx   
62 [0x3e]:          loadval ecx   
63 [0x3f]:          test ecx, ebx   
64 [0x40]:          jne 74   
65 [0x41]: line: 49 istore 1   
67 [0x43]:          movg @20 // @std.io.task#__srt_global   
68 [0x44]:          movn #0   
70 [0x46]:          loadval ebx   
71 [0x47]:          movi #0, adx   
73 [0x49]:          rmov adx, ebx   
74 [0x4a]:          nop   
75 [0x4b]: line: 51 movg @20 // @std.io.task#__srt_global   
76 [0x4c]:          movn #1   
78 [0x4e]:          movi #0, adx   
80 [0x50]:          iaload ebx, adx   
81 [0x51]:          rstore ebx   
82 [0x52]:          movi #0, ebx   
84 [0x54]:          loadval ecx   
85 [0x55]:          test ecx, ebx   
86 [0x56]:          jne 96   
87 [0x57]: line: 52 istore 1   
89 [0x59]:          movg @20 // @std.io.task#__srt_global   
90 [0x5a]:          movn #1   
92 [0x5c]:          loadval ebx   
93 [0x5d]:          movi #0, adx   
95 [0x5f]:          rmov adx, ebx   
96 [0x60]:          nop   
97 [0x61]:          jmp @103   
98 [0x62]: line: 54 new_class @4 // std#illegal_argument_exception   
99 [0x63]:          dup    
100 [0x64]:          newstr @32 // cannot have less than 2 max threads   
101 [0x65]:          call @1623 // <std#illegal_argument_exception.illegal_argument_exception>   
102 [0x66]:          throw    
103 [0x67]:          nop   
104 [0x68]:          movg @20 // @std.io.task#__srt_global   
105 [0x69]:          movn #3   
107 [0x6b]:          _ulck   
108 [0x6c]:          ret   


function: std.io.task#__srt_global.get_thread_max[1817] params(0) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:59:4: note:  
		def get_thread_max() : var {
		   ^

0 [0x0]: line: 60 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          _lck    
4 [0x4]: line: 61 movg @20 // @std.io.task#__srt_global   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 17   
16 [0x10]: line: 62 call @1815 // <std.io.task#__srt_global.calculate_max_threads>   
17 [0x11]:          nop   
18 [0x12]: line: 63 movg @20 // @std.io.task#__srt_global   
19 [0x13]:          movn #3   
21 [0x15]:          _ulck   
22 [0x16]:          movg @20 // @std.io.task#__srt_global   
23 [0x17]:          movn #0   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          rstore ebx   
29 [0x1d]:          movg @20 // @std.io.task#__srt_global   
30 [0x1e]:          movn #1   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          loadval ecx   
36 [0x24]:          add ecx, ebx -> ebx   
37 [0x25]:          return_val ebx   
38 [0x26]:          ret   
39 [0x27]:          movg @20 // @std.io.task#__srt_global   
40 [0x28]:          movn #3   
42 [0x2a]:          _ulck   


function: std.io.task#__srt_global.scheduler_main[1818] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:67:12: note:  
		private def scheduler_main(args : object[]) : var
		           ^

0 [0x0]: line: 69 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          movn #0   
5 [0x5]:          smovr_3 fp+1   
6 [0x6]: line: 70 movi #1, ebx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 183   
10 [0xa]: line: 72 call @1852 // <std.io#thread.yield>   
11 [0xb]: line: 73 new_class @64 // std#string   
12 [0xc]:          dup    
13 [0xd]:          newstr @33 // jobs    
14 [0xe]:          call @2923 // <std#string.string>   
15 [0xf]:          pushl 1   
16 [0x10]:          call @3214 // <std#synced_list<std.io.task#job>.size>   
17 [0x11]:          call @2955 // <std#string.operator+>   
18 [0x12]:          call @1583 // <std#__srt_global.println>   
19 [0x13]: line: 74 istorel 0, fp+2   
21 [0x15]:          ipushl #2   
22 [0x16]:          pushl 1   
23 [0x17]:          call @3214 // <std#synced_list<std.io.task#job>.size>   
24 [0x18]:          loadval ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          lt ecx, ebx   
27 [0x1b]:          movr ebx, cmt   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 179   
30 [0x1e]: line: 75 pushl 1   
31 [0x1f]:          ipushl #2   
32 [0x20]:          call @3180 // <std#synced_list<std.io.task#job>.at>   
33 [0x21]:          popobj2    
34 [0x22]:          smovr_3 fp+3   
35 [0x23]: line: 77 movl 3   
36 [0x24]:          movn #12   
38 [0x26]:          movi #0, adx   
40 [0x28]:          iaload ebx, adx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #0, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          tne ecx, ebx   
46 [0x2e]:          jne 91   
47 [0x2f]: line: 78 call @3023 // <std#time.mills_time>   
48 [0x30]:          loadval ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movl 3   
51 [0x33]:          movn #12   
53 [0x35]:          movi #0, adx   
55 [0x37]:          iaload ebx, adx   
56 [0x38]:          loadval ecx   
57 [0x39]:          gte ecx, ebx   
58 [0x3a]:          movr ebx, cmt   
59 [0x3b]:          movr cmt, ebx   
60 [0x3c]:          jne 89   
61 [0x3d]: line: 79 movi #0, ebx   
63 [0x3f]:          movl 3   
64 [0x40]:          movn #12   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]: line: 80 pushl 3   
70 [0x46]:          call @1821 // <std.io.task#__srt_global.execute_job>   
71 [0x47]:          ipopl 4   
72 [0x48]: line: 82 loadl ebx, fp+4   
73 [0x49]:          skne ebx // pc = 81   
74 [0x4a]:          movl 3   
75 [0x4b]:          movn #8   
77 [0x4d]:          movi #0, adx   
79 [0x4f]:          iaload ebx, adx   
80 [0x50]:          not ebx, ebx   
81 [0x51]:          movr cmt, ebx   
82 [0x52]:          jne 88   
83 [0x53]: line: 83 pushl 1   
84 [0x54]:          pushl 3   
85 [0x55]:          istore 3304   
87 [0x57]:          call @3218 // <std#synced_list<std.io.task#job>.remove>   
88 [0x58]:          nop   
89 [0x59]:          nop   
90 [0x5a]:          jmp @175   
91 [0x5b]:          movl 3   
92 [0x5c]:          movn #8   
94 [0x5e]:          movi #0, adx   
96 [0x60]:          iaload ebx, adx   
97 [0x61]:          movr cmt, ebx   
98 [0x62]:          jne 164   
99 [0x63]: line: 87 movl 3   
100 [0x64]:          movn #4   
102 [0x66]:          pushobj   
103 [0x67]:          pushnull    
104 [0x68]:          itest ebx   
105 [0x69]:          movr cmt, ebx   
106 [0x6a]:          jne 110   
107 [0x6b]: line: 88 pushl 3   
108 [0x6c]:          call @1821 // <std.io.task#__srt_global.execute_job>   
109 [0x6d]:          pop   
110 [0x6e]:          nop   
111 [0x6f]: line: 91 movl 3   
112 [0x70]:          movn #18   
114 [0x72]:          pushobj   
115 [0x73]:          movg @26 // @std.io.task#job_state   
116 [0x74]:          movn #1   
118 [0x76]:          pushobj   
119 [0x77]:          call @1610 // <std#_enum_.operator==>   
120 [0x78]:          loadval ebx   
121 [0x79]:          skne ebx // pc = 143   
122 [0x7a]:          call @3023 // <std#time.mills_time>   
123 [0x7b]:          loadval ebx   
124 [0x7c]:          rstore ebx   
125 [0x7d]:          movl 3   
126 [0x7e]:          movn #10   
128 [0x80]:          movi #0, adx   
130 [0x82]:          iaload ebx, adx   
131 [0x83]:          rstore ebx   
132 [0x84]:          movl 3   
133 [0x85]:          movn #9   
135 [0x87]:          movi #0, adx   
137 [0x89]:          iaload ebx, adx   
138 [0x8a]:          loadval ecx   
139 [0x8b]:          add ecx, ebx -> ebx   
140 [0x8c]:          loadval ecx   
141 [0x8d]:          gte ecx, ebx   
142 [0x8e]:          movr ebx, cmt   
143 [0x8f]:          movr cmt, ebx   
144 [0x90]:          jne 162   
145 [0x91]: line: 92 movl 3   
146 [0x92]:          movn #13   
148 [0x94]:          pushobj   
149 [0x95]:          pushnull    
150 [0x96]:          itest ebx   
151 [0x97]:          movr cmt, ebx   
152 [0x98]:          jne 154   
153 [0x99]:          jmp @145   
154 [0x9a]: line: 93 pushl 3   
155 [0x9b]:          call @1775 // <std.io.task#job.cancel>   
156 [0x9c]: line: 94 movg @20 // @std.io.task#__srt_global   
157 [0x9d]:          movn #3   
159 [0x9f]:          pushobj   
160 [0xa0]:          pushl 3   
161 [0xa1]:          call @1813 // <std.io.task#job_master.cleanup_job>   
162 [0xa2]:          nop   
163 [0xa3]:          jmp @175   
164 [0xa4]: line: 97 pushl 3   
165 [0xa5]:          call @1821 // <std.io.task#__srt_global.execute_job>   
166 [0xa6]:          loadval ebx   
167 [0xa7]:          movr cmt, ebx   
168 [0xa8]:          jne 174   
169 [0xa9]: line: 98 pushl 1   
170 [0xaa]:          pushl 3   
171 [0xab]:          istore 3305   
173 [0xad]:          call @3218 // <std#synced_list<std.io.task#job>.remove>   
174 [0xae]:          nop   
175 [0xaf]:          nop   
176 [0xb0]:          iaddl 1, fp@2   
178 [0xb2]:          jmp @21   
179 [0xb3]: line: 103 istore 5   
181 [0xb5]:           call @1847 // <std.io#thread.sleep>   
182 [0xb6]:           jmp @6   
183 [0xb7]: line: 105 istorel 0, fp+0   
185 [0xb9]:           ret   


function: std.io.task#__srt_global.get_host[1819] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:108:12: note:  
		private def get_host(long_running : var) : thread {
		           ^

0 [0x0]: line: 109 movl 1   
1 [0x1]:           del   
2 [0x2]: line: 110 loadl ebx, fp+0   
3 [0x3]:           movr cmt, ebx   
4 [0x4]:           jne 12   
5 [0x5]: line: 111 movg @20 // @std.io.task#__srt_global   
6 [0x6]:           movn #3   
8 [0x8]:           movn #2   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]:           jmp @18   
12 [0xc]: line: 113 movg @20 // @std.io.task#__srt_global   
13 [0xd]:           movn #3   
15 [0xf]:           movn #3   
17 [0x11]:           smovr_3 fp+1   
18 [0x12]:           nop   
19 [0x13]: line: 116 pushl 1   
20 [0x14]:           istore 3306   
22 [0x16]:           call @1879 // <std.io#thread_group.find>   
23 [0x17]:           popobj2    
24 [0x18]:           smovr_3 fp+2   
25 [0x19]: line: 124 movl 2   
26 [0x1a]:           checknull   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 160   
29 [0x1d]: line: 125 loadl ebx, fp+0   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 96   
32 [0x20]: line: 126 movg @20 // @std.io.task#__srt_global   
33 [0x21]:           movn #1   
35 [0x23]:           movi #0, adx   
37 [0x25]:           iaload ebx, adx   
38 [0x26]:           rstore ebx   
39 [0x27]:           movi #0, ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           gt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 94   
46 [0x2e]: line: 127 movg @20 // @std.io.task#__srt_global   
47 [0x2f]:           movn #1   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           movr egx, ebx   
53 [0x35]:           dec ebx   
54 [0x36]:           movi #0, adx   
56 [0x38]:           rmov adx, ebx   
57 [0x39]: line: 128 new_class @24 // std.io.task#job_controller   
58 [0x3a]:           dup    
59 [0x3b]:           call @1806 // <std.io.task#job_controller.job_controller>   
60 [0x3c]:           popobj2    
61 [0x3d]:           smovr_3 fp+3   
62 [0x3e]: line: 129 new_class @28 // std.io#thread   
63 [0x3f]:           dup    
64 [0x40]:           new_class @64 // std#string   
65 [0x41]:           dup    
66 [0x42]:           newstr @34 // long_term_worker_thread#   
67 [0x43]:           call @2923 // <std#string.string>   
68 [0x44]:           pushl 1   
69 [0x45]:           call @1874 // <std.io#thread_group.size>   
70 [0x46]:           loadval ebx   
71 [0x47]:           rstore ebx   
72 [0x48]:           movi #1, ebx   
74 [0x4a]:           loadval ecx   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           call @2955 // <std#string.operator+>   
78 [0x4e]:           istore 1785   
80 [0x50]:           pushl 1   
81 [0x51]:           call @1837 // <std.io#thread.thread>   
82 [0x52]:           popobj2    
83 [0x53]:           smovr_3 fp+2   
84 [0x54]: line: 130 movg @20 // @std.io.task#__srt_global   
85 [0x55]:           movn #3   
87 [0x57]:           movn #1   
89 [0x59]:           pushobj   
90 [0x5a]:           pushl 2   
91 [0x5b]:           pushl 3   
92 [0x5c]:           call @3137 // <std#hashtable<std.io#thread,std.io.task#job_controller>.put>   
93 [0x5d]:           pop   
94 [0x5e]:           nop   
95 [0x5f]:           jmp @159   
96 [0x60]: line: 133 movg @20 // @std.io.task#__srt_global   
97 [0x61]:           movn #0   
99 [0x63]:           movi #0, adx   
101 [0x65]:           iaload ebx, adx   
102 [0x66]:           rstore ebx   
103 [0x67]:           movi #0, ebx   
105 [0x69]:           loadval ecx   
106 [0x6a]:           gt ecx, ebx   
107 [0x6b]:           movr ebx, cmt   
108 [0x6c]:           movr cmt, ebx   
109 [0x6d]:           jne 158   
110 [0x6e]: line: 134 movg @20 // @std.io.task#__srt_global   
111 [0x6f]:           movn #0   
113 [0x71]:           movi #0, adx   
115 [0x73]:           iaload ebx, adx   
116 [0x74]:           movr egx, ebx   
117 [0x75]:           dec ebx   
118 [0x76]:           movi #0, adx   
120 [0x78]:           rmov adx, ebx   
121 [0x79]: line: 135 new_class @24 // std.io.task#job_controller   
122 [0x7a]:           dup    
123 [0x7b]:           call @1806 // <std.io.task#job_controller.job_controller>   
124 [0x7c]:           popobj2    
125 [0x7d]:           smovr_3 fp+4   
126 [0x7e]: line: 136 new_class @28 // std.io#thread   
127 [0x7f]:           dup    
128 [0x80]:           new_class @64 // std#string   
129 [0x81]:           dup    
130 [0x82]:           newstr @35 // worker_thread#   
131 [0x83]:           call @2923 // <std#string.string>   
132 [0x84]:           pushl 1   
133 [0x85]:           call @1874 // <std.io#thread_group.size>   
134 [0x86]:           loadval ebx   
135 [0x87]:           rstore ebx   
136 [0x88]:           movi #1, ebx   
138 [0x8a]:           loadval ecx   
139 [0x8b]:           add ecx, ebx -> ebx   
140 [0x8c]:           rstore ebx   
141 [0x8d]:           call @2955 // <std#string.operator+>   
142 [0x8e]:           istore 1785   
144 [0x90]:           pushl 1   
145 [0x91]:           call @1837 // <std.io#thread.thread>   
146 [0x92]:           popobj2    
147 [0x93]:           smovr_3 fp+2   
148 [0x94]: line: 137 movg @20 // @std.io.task#__srt_global   
149 [0x95]:           movn #3   
151 [0x97]:           movn #1   
153 [0x99]:           pushobj   
154 [0x9a]:           pushl 2   
155 [0x9b]:           pushl 4   
156 [0x9c]:           call @3137 // <std#hashtable<std.io#thread,std.io.task#job_controller>.put>   
157 [0x9d]:           pop   
158 [0x9e]:           nop   
159 [0x9f]:           nop   
160 [0xa0]:           nop   
161 [0xa1]: line: 142 movl 2   
162 [0xa2]:           returnobj   
163 [0xa3]:           ret   


function: std.io.task#__srt_global.execute_synchronous[1820] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:145:14: note:  
		protected def execute_synchronous(scheduled_job : job) {
		             ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 35   
12 [0xc]: line: 147 movl 0   
13 [0xd]:           movn #12   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @3023 // <std#time.mills_time>   
20 [0x14]:           loadval ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           sub ecx, ebx -> ebx   
23 [0x17]:           smovr_2 ebx, fp+1   
24 [0x18]: line: 148 ipushl #1   
25 [0x19]:           movi #0, ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           gt ecx, ebx   
29 [0x1d]:           movr ebx, cmt   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 34   
32 [0x20]:           ipushl #1   
33 [0x21]:           call @1847 // <std.io#thread.sleep>   
34 [0x22]:           nop   
35 [0x23]:           nop   
36 [0x24]: line: 150 pushl 0   
37 [0x25]:           call @1786 // <std.io.task#job.execute>   
38 [0x26]:           ret   


function: std.io.task#__srt_global.execute_job[1821] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:153:14: note:  
		protected def execute_job(scheduled_job : job) : var {
		             ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           movn #17   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @1819 // <std.io.task#__srt_global.get_host>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+1   
10 [0xa]: line: 156 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 37   
15 [0xf]: line: 157 pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #4   
19 [0x13]:           popobj   
20 [0x14]: line: 158 movg @20 // @std.io.task#__srt_global   
21 [0x15]:           movn #3   
23 [0x17]:           pushobj   
24 [0x18]:           pushl 1   
25 [0x19]:           call @1812 // <std.io.task#job_master.get_host_controller>   
26 [0x1a]:           movl 0   
27 [0x1b]:           movn #19   
29 [0x1d]:           popobj   
30 [0x1e]: line: 159 pushl 0   
31 [0x1f]:           call @1774 // <std.io.task#job.execute_async>   
32 [0x20]:           pop   
33 [0x21]: line: 160 istorel 1, fp+0   
35 [0x23]:           ret   
36 [0x24]:           jmp @40   
37 [0x25]: line: 161 istorel 0, fp+0   
39 [0x27]:           ret   
40 [0x28]:           nop   


function: std.io.task#__srt_global.finish[1822] params(0) in file: lib\support\0.2.805/io//task//task.sharp:5:4: note:  
		def finish() {
		   ^

0 [0x0]: line: 6 new_class @21 // std.io.task#cancellation_exception   
1 [0x1]:         dup    
2 [0x2]:         call @1771 // <std.io.task#cancellation_exception.cancellation_exception>   
3 [0x3]:         throw    
4 [0x4]:         ret   


function: std.io.task#task.with_timeout[1823] params(1) in file: lib\support\0.2.805/io//task//task.sharp:10:15: note:  
		    static def with_timeout(mills_time : var) : job_builder {
		              ^

0 [0x0]: line: 11 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          pushobj   
4 [0x4]:          call @1809 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 12 new_class @23 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          movg @20 // @std.io.task#__srt_global   
11 [0xb]:          movn #3   
13 [0xd]:          pushobj   
14 [0xe]:          call @1793 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          popobj2    
16 [0x10]:          smovr_3 fp+2   
17 [0x11]: line: 13 pushl 2   
18 [0x12]:          ipushl #0   
19 [0x13]:          call @1794 // <std.io.task#job_builder.with_timeout>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.schedule[1824] params(1) in file: lib\support\0.2.805/io//task//task.sharp:16:15: note:  
		    static def schedule(future : var) : job_builder {
		              ^

0 [0x0]: line: 17 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          pushobj   
4 [0x4]:          call @1809 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 18 new_class @23 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          movg @20 // @std.io.task#__srt_global   
11 [0xb]:          movn #3   
13 [0xd]:          pushobj   
14 [0xe]:          call @1793 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          popobj2    
16 [0x10]:          smovr_3 fp+2   
17 [0x11]: line: 19 pushl 2   
18 [0x12]:          ipushl #0   
19 [0x13]:          call @1795 // <std.io.task#job_builder.schedule>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.with_name[1825] params(1) in file: lib\support\0.2.805/io//task//task.sharp:22:15: note:  
		    static def with_name(job_name : string) : job_builder {
		              ^

0 [0x0]: line: 23 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @1810 // <std.io.task#job_master.create_job>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 24 new_class @23 // std.io.task#job_builder   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @20 // @std.io.task#__srt_global   
12 [0xc]:          movn #3   
14 [0xe]:          pushobj   
15 [0xf]:          call @1793 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 25 pushl 2   
19 [0x13]:          pushl 0   
20 [0x14]:          call @1797 // <std.io.task#job_builder.with_name>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: std.io.task#task.with_args[1826] params(1) in file: lib\support\0.2.805/io//task//task.sharp:28:15: note:  
		    static def with_args(args : object[]) : job_builder {
		              ^

0 [0x0]: line: 29 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          pushobj   
4 [0x4]:          call @1809 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 30 new_class @23 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          movg @20 // @std.io.task#__srt_global   
11 [0xb]:          movn #3   
13 [0xd]:          pushobj   
14 [0xe]:          call @1793 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          popobj2    
16 [0x10]:          smovr_3 fp+2   
17 [0x11]: line: 31 pushl 2   
18 [0x12]:          pushl 0   
19 [0x13]:          call @1798 // <std.io.task#job_builder.with_args>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.block[1827] params(0) in file: lib\support\0.2.805/io//task//task.sharp:34:12: note:  
			static def block() : job_builder {
		           ^

0 [0x0]: line: 35 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          pushobj   
4 [0x4]:          call @1809 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 36 new_class @23 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 0   
10 [0xa]:          movg @20 // @std.io.task#__srt_global   
11 [0xb]:          movn #3   
13 [0xd]:          pushobj   
14 [0xe]:          call @1793 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          popobj2    
16 [0x10]:          smovr_3 fp+1   
17 [0x11]: line: 37 pushl 1   
18 [0x12]:          call @1799 // <std.io.task#job_builder.block>   
19 [0x13]:          popobj2    
20 [0x14]:          returnobj   
21 [0x15]:          ret   


function: std.io.task#task.long_term[1828] params(0) in file: lib\support\0.2.805/io//task//task.sharp:40:12: note:  
			static def long_term() : job_builder {
		           ^

0 [0x0]: line: 41 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          pushobj   
4 [0x4]:          call @1809 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 42 new_class @23 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 0   
10 [0xa]:          movg @20 // @std.io.task#__srt_global   
11 [0xb]:          movn #3   
13 [0xd]:          pushobj   
14 [0xe]:          call @1793 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          popobj2    
16 [0x10]:          smovr_3 fp+1   
17 [0x11]: line: 43 pushl 1   
18 [0x12]:          call @1800 // <std.io.task#job_builder.long_term>   
19 [0x13]:          popobj2    
20 [0x14]:          returnobj   
21 [0x15]:          ret   


function: std.io.task#task.builder[1829] params(0) in file: lib\support\0.2.805/io//task//task.sharp:46:15: note:  
		    static def builder() : job_builder {
		              ^

0 [0x0]: line: 47 movg @20 // @std.io.task#__srt_global   
1 [0x1]:          movn #3   
3 [0x3]:          pushobj   
4 [0x4]:          call @1809 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 48 new_class @23 // std.io.task#job_builder   
8 [0x8]:          dup    
9 [0x9]:          pushl 0   
10 [0xa]:          movg @20 // @std.io.task#__srt_global   
11 [0xb]:          movn #3   
13 [0xd]:          pushobj   
14 [0xe]:          call @1793 // <std.io.task#job_builder.job_builder>   
15 [0xf]:          popobj2    
16 [0x10]:          smovr_3 fp+1   
17 [0x11]: line: 49 movl 1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


constructor: std.io.task#task.task[1830] params(0) in file: lib\support\0.2.805/io//task//task.sharp:9:6: note:  
		class task {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io#thread.thread[1831] params(0) in file: lib\support\0.2.805/io//thread.sharp:7:19: note:  
		    private thread() {} // the user must use standardized constructor
		                  ^

0 [0x0]:         new_class @64 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @15 //    
3 [0x3]:         call @2923 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         movl 0   
9 [0x9]:         movi #28, ebx   
11 [0xb]:         cast ebx   
12 [0xc]:         pushl 0   
13 [0xd]:         ret   


constructor: std.io#thread.thread[1832] params(2) in file: lib\support\0.2.805/io//thread.sharp:9:15: note:  
			public thread(name : string, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @64 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @15 //    
3 [0x3]:         call @2923 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         movl 0   
9 [0x9]:         movi #28, ebx   
11 [0xb]:         cast ebx   
12 [0xc]:         pushl 0   
13 [0xd]: line: 10 ipushl #2   
14 [0xe]:          movl 0   
15 [0xf]:          movn #12   
17 [0x11]:          loadval ebx   
18 [0x12]:          movi #0, adx   
20 [0x14]:          rmov adx, ebx   
21 [0x15]: line: 11 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #7   
25 [0x19]:          popobj   
26 [0x1a]: line: 12 movg @29 // @std.io#thread_group   
27 [0x1b]:          movn #0   
29 [0x1d]:          pushobj   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #8   
33 [0x21]:          popobj   
34 [0x22]: line: 13 movl 0   
35 [0x23]:          movn #8   
37 [0x25]:          pushobj   
38 [0x26]:          call @1876 // <std.io#thread_group.get_priority>   
39 [0x27]:          movl 0   
40 [0x28]:          movn #3   
42 [0x2a]:          popobj   
43 [0x2b]: line: 14 movi #-1, ebx   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #1   
48 [0x30]:          movi #0, adx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 15 movg @28 // @std.io#thread   
52 [0x34]:          movn #0   
54 [0x36]:          movi #0, adx   
56 [0x38]:          iaload ebx, adx   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          rmov adx, ebx   
62 [0x3e]:          rstore egx   
63 [0x3f]:          movl 0   
64 [0x40]:          movn #2   
66 [0x42]:          loadval ebx   
67 [0x43]:          movi #0, adx   
69 [0x45]:          rmov adx, ebx   
70 [0x46]: line: 17 movl 0   
71 [0x47]:          movn #8   
73 [0x49]:          pushobj   
74 [0x4a]:          pushl 0   
75 [0x4b]:          call @1873 // <std.io#thread_group.add>   
76 [0x4c]:          ret   


constructor: std.io#thread.thread[1833] params(3) in file: lib\support\0.2.805/io//thread.sharp:20:15: note:  
			public thread(name : string, daemon: var, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @64 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @15 //    
3 [0x3]:         call @2923 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         movl 0   
9 [0x9]:         movi #28, ebx   
11 [0xb]:         cast ebx   
12 [0xc]:         pushl 0   
13 [0xd]: line: 21 ipushl #3   
14 [0xe]:          movl 0   
15 [0xf]:          movn #12   
17 [0x11]:          loadval ebx   
18 [0x12]:          movi #0, adx   
20 [0x14]:          rmov adx, ebx   
21 [0x15]: line: 22 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #7   
25 [0x19]:          popobj   
26 [0x1a]: line: 23 ipushl #2   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #4   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]: line: 24 movg @29 // @std.io#thread_group   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          movl 0   
39 [0x27]:          movn #8   
41 [0x29]:          popobj   
42 [0x2a]: line: 25 movl 0   
43 [0x2b]:          movn #8   
45 [0x2d]:          pushobj   
46 [0x2e]:          call @1876 // <std.io#thread_group.get_priority>   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #3   
50 [0x32]:          popobj   
51 [0x33]: line: 26 movi #-1, ebx   
53 [0x35]:          movl 0   
54 [0x36]:          movn #1   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          rmov adx, ebx   
59 [0x3b]: line: 27 movg @28 // @std.io#thread   
60 [0x3c]:          movn #0   
62 [0x3e]:          movi #0, adx   
64 [0x40]:          iaload ebx, adx   
65 [0x41]:          movr egx, ebx   
66 [0x42]:          inc ebx   
67 [0x43]:          movi #0, adx   
69 [0x45]:          rmov adx, ebx   
70 [0x46]:          rstore egx   
71 [0x47]:          movl 0   
72 [0x48]:          movn #2   
74 [0x4a]:          loadval ebx   
75 [0x4b]:          movi #0, adx   
77 [0x4d]:          rmov adx, ebx   
78 [0x4e]: line: 29 movl 0   
79 [0x4f]:          movn #8   
81 [0x51]:          pushobj   
82 [0x52]:          pushl 0   
83 [0x53]:          call @1873 // <std.io#thread_group.add>   
84 [0x54]:          ret   


constructor: std.io#thread.thread[1834] params(3) in file: lib\support\0.2.805/io//thread.sharp:32:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @64 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @15 //    
3 [0x3]:         call @2923 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         movl 0   
9 [0x9]:         movi #28, ebx   
11 [0xb]:         cast ebx   
12 [0xc]:         pushl 0   
13 [0xd]: line: 33 ipushl #2   
14 [0xe]:          movl 0   
15 [0xf]:          movn #12   
17 [0x11]:          loadval ebx   
18 [0x12]:          movi #0, adx   
20 [0x14]:          rmov adx, ebx   
21 [0x15]: line: 34 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #7   
25 [0x19]:          popobj   
26 [0x1a]: line: 35 ipushl #3   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #11   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]: line: 36 movg @29 // @std.io#thread_group   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          movl 0   
39 [0x27]:          movn #8   
41 [0x29]:          popobj   
42 [0x2a]: line: 37 movl 0   
43 [0x2b]:          movn #8   
45 [0x2d]:          pushobj   
46 [0x2e]:          call @1876 // <std.io#thread_group.get_priority>   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #3   
50 [0x32]:          popobj   
51 [0x33]: line: 38 movi #-1, ebx   
53 [0x35]:          movl 0   
54 [0x36]:          movn #1   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          rmov adx, ebx   
59 [0x3b]: line: 39 movg @28 // @std.io#thread   
60 [0x3c]:          movn #0   
62 [0x3e]:          movi #0, adx   
64 [0x40]:          iaload ebx, adx   
65 [0x41]:          movr egx, ebx   
66 [0x42]:          inc ebx   
67 [0x43]:          movi #0, adx   
69 [0x45]:          rmov adx, ebx   
70 [0x46]:          rstore egx   
71 [0x47]:          movl 0   
72 [0x48]:          movn #2   
74 [0x4a]:          loadval ebx   
75 [0x4b]:          movi #0, adx   
77 [0x4d]:          rmov adx, ebx   
78 [0x4e]: line: 41 movl 0   
79 [0x4f]:          movn #8   
81 [0x51]:          pushobj   
82 [0x52]:          pushl 0   
83 [0x53]:          call @1873 // <std.io#thread_group.add>   
84 [0x54]:          ret   


constructor: std.io#thread.thread[1835] params(4) in file: lib\support\0.2.805/io//thread.sharp:44:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @64 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @15 //    
3 [0x3]:         call @2923 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         movl 0   
9 [0x9]:         movi #28, ebx   
11 [0xb]:         cast ebx   
12 [0xc]:         pushl 0   
13 [0xd]: line: 45 ipushl #3   
14 [0xe]:          movl 0   
15 [0xf]:          movn #12   
17 [0x11]:          loadval ebx   
18 [0x12]:          movi #0, adx   
20 [0x14]:          rmov adx, ebx   
21 [0x15]: line: 46 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #7   
25 [0x19]:          popobj   
26 [0x1a]: line: 47 ipushl #4   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #11   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]: line: 48 ipushl #2   
35 [0x23]:          movl 0   
36 [0x24]:          movn #4   
38 [0x26]:          loadval ebx   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 49 movg @29 // @std.io#thread_group   
43 [0x2b]:          movn #0   
45 [0x2d]:          pushobj   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #8   
49 [0x31]:          popobj   
50 [0x32]: line: 50 movl 0   
51 [0x33]:          movn #8   
53 [0x35]:          pushobj   
54 [0x36]:          call @1876 // <std.io#thread_group.get_priority>   
55 [0x37]:          movl 0   
56 [0x38]:          movn #3   
58 [0x3a]:          popobj   
59 [0x3b]: line: 51 movi #-1, ebx   
61 [0x3d]:          movl 0   
62 [0x3e]:          movn #1   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]: line: 52 movg @28 // @std.io#thread   
68 [0x44]:          movn #0   
70 [0x46]:          movi #0, adx   
72 [0x48]:          iaload ebx, adx   
73 [0x49]:          movr egx, ebx   
74 [0x4a]:          inc ebx   
75 [0x4b]:          movi #0, adx   
77 [0x4d]:          rmov adx, ebx   
78 [0x4e]:          rstore egx   
79 [0x4f]:          movl 0   
80 [0x50]:          movn #2   
82 [0x52]:          loadval ebx   
83 [0x53]:          movi #0, adx   
85 [0x55]:          rmov adx, ebx   
86 [0x56]: line: 54 movl 0   
87 [0x57]:          movn #8   
89 [0x59]:          pushobj   
90 [0x5a]:          pushl 0   
91 [0x5b]:          call @1873 // <std.io#thread_group.add>   
92 [0x5c]:          ret   


constructor: std.io#thread.thread[1836] params(4) in file: lib\support\0.2.805/io//thread.sharp:57:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @64 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @15 //    
3 [0x3]:         call @2923 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         movl 0   
9 [0x9]:         movi #28, ebx   
11 [0xb]:         cast ebx   
12 [0xc]:         pushl 0   
13 [0xd]: line: 58 ipushl #2   
14 [0xe]:          movl 0   
15 [0xf]:          movn #12   
17 [0x11]:          loadval ebx   
18 [0x12]:          movi #0, adx   
20 [0x14]:          rmov adx, ebx   
21 [0x15]: line: 59 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #7   
25 [0x19]:          popobj   
26 [0x1a]: line: 60 ipushl #3   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #11   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]: line: 61 pushl 4   
35 [0x23]:          movl 0   
36 [0x24]:          movn #8   
38 [0x26]:          popobj   
39 [0x27]: line: 62 pushl 4   
40 [0x28]:          call @1876 // <std.io#thread_group.get_priority>   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          popobj   
45 [0x2d]: line: 63 movi #-1, ebx   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #1   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]: line: 64 movg @28 // @std.io#thread   
54 [0x36]:          movn #0   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          iaload ebx, adx   
59 [0x3b]:          movr egx, ebx   
60 [0x3c]:          inc ebx   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]:          rstore egx   
65 [0x41]:          movl 0   
66 [0x42]:          movn #2   
68 [0x44]:          loadval ebx   
69 [0x45]:          movi #0, adx   
71 [0x47]:          rmov adx, ebx   
72 [0x48]: line: 66 movl 0   
73 [0x49]:          movn #8   
75 [0x4b]:          pushobj   
76 [0x4c]:          pushl 0   
77 [0x4d]:          call @1873 // <std.io#thread_group.add>   
78 [0x4e]:          ret   


constructor: std.io#thread.thread[1837] params(3) in file: lib\support\0.2.805/io//thread.sharp:69:18: note:  
		    public thread(name : string, main: (object[])(var), group : thread_group) {
		                 ^

0 [0x0]:         new_class @64 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @15 //    
3 [0x3]:         call @2923 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         movl 0   
9 [0x9]:         movi #28, ebx   
11 [0xb]:         cast ebx   
12 [0xc]:         pushl 0   
13 [0xd]: line: 70 ipushl #2   
14 [0xe]:          movl 0   
15 [0xf]:          movn #12   
17 [0x11]:          loadval ebx   
18 [0x12]:          movi #0, adx   
20 [0x14]:          rmov adx, ebx   
21 [0x15]: line: 71 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #7   
25 [0x19]:          popobj   
26 [0x1a]: line: 72 pushl 3   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #8   
30 [0x1e]:          popobj   
31 [0x1f]: line: 73 pushl 3   
32 [0x20]:          call @1876 // <std.io#thread_group.get_priority>   
33 [0x21]:          movl 0   
34 [0x22]:          movn #3   
36 [0x24]:          popobj   
37 [0x25]: line: 74 movi #-1, ebx   
39 [0x27]:          movl 0   
40 [0x28]:          movn #1   
42 [0x2a]:          movi #0, adx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]: line: 75 movg @28 // @std.io#thread   
46 [0x2e]:          movn #0   
48 [0x30]:          movi #0, adx   
50 [0x32]:          iaload ebx, adx   
51 [0x33]:          movr egx, ebx   
52 [0x34]:          inc ebx   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]:          rstore egx   
57 [0x39]:          movl 0   
58 [0x3a]:          movn #2   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]: line: 77 movl 0   
65 [0x41]:          movn #8   
67 [0x43]:          pushobj   
68 [0x44]:          pushl 0   
69 [0x45]:          call @1873 // <std.io#thread_group.add>   
70 [0x46]:          ret   


constructor: std.io#thread.thread[1838] params(5) in file: lib\support\0.2.805/io//thread.sharp:80:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @64 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @15 //    
3 [0x3]:         call @2923 // <std#string.string>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #7   
7 [0x7]:         popobj   
8 [0x8]:         movl 0   
9 [0x9]:         movi #28, ebx   
11 [0xb]:         cast ebx   
12 [0xc]:         pushl 0   
13 [0xd]: line: 81 ipushl #3   
14 [0xe]:          movl 0   
15 [0xf]:          movn #12   
17 [0x11]:          loadval ebx   
18 [0x12]:          movi #0, adx   
20 [0x14]:          rmov adx, ebx   
21 [0x15]: line: 82 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #7   
25 [0x19]:          popobj   
26 [0x1a]: line: 83 ipushl #2   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #4   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]: line: 84 ipushl #4   
35 [0x23]:          movl 0   
36 [0x24]:          movn #11   
38 [0x26]:          loadval ebx   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 85 pushl 5   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #8   
46 [0x2e]:          popobj   
47 [0x2f]: line: 86 pushl 5   
48 [0x30]:          call @1876 // <std.io#thread_group.get_priority>   
49 [0x31]:          movl 0   
50 [0x32]:          movn #3   
52 [0x34]:          popobj   
53 [0x35]: line: 87 movi #-1, ebx   
55 [0x37]:          movl 0   
56 [0x38]:          movn #1   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 88 movg @28 // @std.io#thread   
62 [0x3e]:          movn #0   
64 [0x40]:          movi #0, adx   
66 [0x42]:          iaload ebx, adx   
67 [0x43]:          movr egx, ebx   
68 [0x44]:          inc ebx   
69 [0x45]:          movi #0, adx   
71 [0x47]:          rmov adx, ebx   
72 [0x48]:          rstore egx   
73 [0x49]:          movl 0   
74 [0x4a]:          movn #2   
76 [0x4c]:          loadval ebx   
77 [0x4d]:          movi #0, adx   
79 [0x4f]:          rmov adx, ebx   
80 [0x50]: line: 90 movl 0   
81 [0x51]:          movn #8   
83 [0x53]:          pushobj   
84 [0x54]:          pushl 0   
85 [0x55]:          call @1873 // <std.io#thread_group.add>   
86 [0x56]:          ret   


function: std.io#thread.start[1839] params(1) in file: lib\support\0.2.805/io//thread.sharp:93:15: note:  
		    public def start(args : object[]) : thread_result {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #28, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 94 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #-1, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 31   
16 [0x10]: line: 95 movl 0   
17 [0x11]:          movn #4   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @1947 // <platform.kernel#vm.thread_create>   
24 [0x18]:          movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]:          nop   
32 [0x20]: line: 96 pushl 0   
33 [0x21]:          pushl 1   
34 [0x22]:          call @1955 // <platform.kernel#vm.thread_start>   
35 [0x23]:          popobj2    
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std.io#thread.start[1840] params(0) in file: lib\support\0.2.805/io//thread.sharp:99:15: note:  
		    public def start() : thread_result {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #28, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 100 pushl 0   
5 [0x5]:           pushnull    
6 [0x6]:           call @1839 // <std.io#thread.start>   
7 [0x7]:           popobj2    
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std.io#thread.suspend[1841] params(0) in file: lib\support\0.2.805/io//thread.sharp:103:12: note:  
			public def suspend() : thread_result {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #28, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 104 pushl 0   
5 [0x5]:           call @1948 // <platform.kernel#vm.suspend>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 105 pushl 1   
9 [0x9]:           movg @31 // @std.io#thread_result   
10 [0xa]:           movn #0   
12 [0xc]:           pushobj   
13 [0xd]:           call @1610 // <std#_enum_.operator==>   
14 [0xe]:           loadval ebx   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 25   
17 [0x11]: line: 106 movi #1, ebx   
19 [0x13]:           movl 0   
20 [0x14]:           movn #10   
22 [0x16]:           movi #0, adx   
24 [0x18]:           rmov adx, ebx   
25 [0x19]:           nop   
26 [0x1a]: line: 107 movl 1   
27 [0x1b]:           returnobj   
28 [0x1c]:           ret   


function: std.io#thread.notify[1842] params(0) in file: lib\support\0.2.805/io//thread.sharp:110:12: note:  
			public def notify() : thread_result {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #28, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 111 pushl 0   
5 [0x5]:           istore 0   
7 [0x7]:           call @1949 // <platform.kernel#vm.unsuspend>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+1   
10 [0xa]: line: 112 pushl 1   
11 [0xb]:           movg @31 // @std.io#thread_result   
12 [0xc]:           movn #0   
14 [0xe]:           pushobj   
15 [0xf]:           call @1610 // <std#_enum_.operator==>   
16 [0x10]:           loadval ebx   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 27   
19 [0x13]: line: 113 movi #0, ebx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #10   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           rmov adx, ebx   
27 [0x1b]:           nop   
28 [0x1c]: line: 114 movl 1   
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   


function: std.io#thread.notify_and_wait[1843] params(0) in file: lib\support\0.2.805/io//thread.sharp:117:12: note:  
			public def notify_and_wait() : thread_result {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #28, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 118 pushl 0   
5 [0x5]:           istore 1   
7 [0x7]:           call @1949 // <platform.kernel#vm.unsuspend>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+1   
10 [0xa]: line: 119 pushl 1   
11 [0xb]:           movg @31 // @std.io#thread_result   
12 [0xc]:           movn #0   
14 [0xe]:           pushobj   
15 [0xf]:           call @1610 // <std#_enum_.operator==>   
16 [0x10]:           loadval ebx   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 27   
19 [0x13]: line: 120 movi #0, ebx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #10   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           rmov adx, ebx   
27 [0x1b]:           nop   
28 [0x1c]: line: 121 movl 1   
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   


function: std.io#thread.join[1844] params(0) in file: lib\support\0.2.805/io//thread.sharp:124:15: note:  
		    public def join() := vm.thread_join(self);
		              ^

0 [0x0]: line: 124 pushl 0   
1 [0x1]:           call @1950 // <platform.kernel#vm.thread_join>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.interrupt[1845] params(0) in file: lib\support\0.2.805/io//thread.sharp:126:15: note:  
		    public def interrupt() := vm.kill(self);
		              ^

0 [0x0]: line: 126 pushl 0   
1 [0x1]:           call @1951 // <platform.kernel#vm.kill>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.current[1846] params(0) in file: lib\support\0.2.805/io//thread.sharp:128:22: note:  
		    public static def current() := vm.current_thread();
		                     ^

0 [0x0]: line: 128 call @1952 // <platform.kernel#vm.current_thread>   
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#thread.sleep[1847] params(1) in file: lib\support\0.2.805/io//thread.sharp:130:22: note:  
		    public static def sleep(mills_time : var) := time.sleep(milliseconds, mills_time);
		                     ^

0 [0x0]: line: 130 movg @67 // @std#time_unit   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           ipushl #0   
5 [0x5]:           call @3025 // <std#time.sleep>   
6 [0x6]:           ret   


function: std.io#thread.wait[1848] params(0) in file: lib\support\0.2.805/io//thread.sharp:132:22: note:  
		    public static def wait() {
		                     ^

0 [0x0]: line: 133 movg @66 // @std#time   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @1849 // <std.io#thread.wait>   
8 [0x8]:           ret   


function: std.io#thread.wait[1849] params(1) in file: lib\support\0.2.805/io//thread.sharp:136:22: note:  
		    public static def wait(mills_time : var) {
		                     ^

0 [0x0]: line: 137 istore 1   
2 [0x2]:           call @1952 // <platform.kernel#vm.current_thread>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #10   
6 [0x6]:           loadval ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]: line: 138 movg @67 // @std#time_unit   
11 [0xb]:           movn #1   
13 [0xd]:           pushobj   
14 [0xe]:           ipushl #0   
15 [0xf]:           call @3026 // <std#time.wait>   
16 [0x10]: line: 139 istore 0   
18 [0x12]:           call @1952 // <platform.kernel#vm.current_thread>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #10   
22 [0x16]:           loadval ebx   
23 [0x17]:           movi #0, adx   
25 [0x19]:           rmov adx, ebx   
26 [0x1a]:           ret   


function: std.io#thread.exit[1850] params(1) in file: lib\support\0.2.805/io//thread.sharp:142:22: note:  
		    public static def exit(code : var) {
		                     ^

0 [0x0]: line: 143 call @1846 // <std.io#thread.current>   
1 [0x1]:           ipushl #0   
2 [0x2]:           call @1953 // <platform.kernel#vm.exit_thread>   
3 [0x3]: line: 144 hlt   : protected asm start
4 [0x4]:           ret   : protected asm end


function: std.io#thread.hash[1851] params(0) in file: lib\support\0.2.805/io//thread.sharp:147:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #28, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 148 new_class @45 // std#long   
5 [0x5]:           dup    
6 [0x6]:           movl 0   
7 [0x7]:           movn #2   
9 [0x9]:           movi #0, adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           rstore ebx   
13 [0xd]:           call @2065 // <std#long.long>   
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   


function: std.io#thread.yield[1852] params(0) in file: lib\support\0.2.805/io//thread.sharp:151:22: note:  
		    public static def yield() := vm.thread_yield();
		                     ^

0 [0x0]: line: 151 call @1954 // <platform.kernel#vm.thread_yield>   
1 [0x1]:           ret   


function: std.io#thread.set_exception_handler[1853] params(1) in file: lib\support\0.2.805/io//thread.sharp:153:15: note:  
		    public def set_exception_handler(error_handler: uncaught_exception_handler) {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #28, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 154 pushl 1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #13   
8 [0x8]:           popobj   
9 [0x9]:           ret   


function: std.io#thread.set_priority[1854] params(1) in file: lib\support\0.2.805/io//thread.sharp:157:15: note:  
		    public def set_priority(priority : thread_priority) : thread_result {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #28, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 158 movl 0   
5 [0x5]:           _lck    
6 [0x6]: line: 159 pushl 1   
7 [0x7]:           movg @30 // @std.io#thread_priority   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @1610 // <std#_enum_.operator==>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           je 33   
15 [0xf]:           pushl 1   
16 [0x10]:           movg @30 // @std.io#thread_priority   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           call @1610 // <std#_enum_.operator==>   
21 [0x15]:           loadval ebx   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           je 33   
24 [0x18]:           pushl 1   
25 [0x19]:           movg @30 // @std.io#thread_priority   
26 [0x1a]:           movn #2   
28 [0x1c]:           pushobj   
29 [0x1d]:           call @1610 // <std#_enum_.operator==>   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 43   
33 [0x21]: line: 163 movl 0   
34 [0x22]:           _ulck   
35 [0x23]:           pushl 0   
36 [0x24]:           pushl 1   
37 [0x25]:           call @1613 // <std#_enum_.get_ordinal>   
38 [0x26]:           call @1956 // <platform.kernel#vm.set_thread_priority>   
39 [0x27]:           popobj2    
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           jmp @53   
43 [0x2b]: line: 166 new_class @4 // std#illegal_argument_exception   
44 [0x2c]:           dup    
45 [0x2d]:           new_class @64 // std#string   
46 [0x2e]:           dup    
47 [0x2f]:           newstr @36 // invalid thread priority    
48 [0x30]:           call @2923 // <std#string.string>   
49 [0x31]:           pushl 1   
50 [0x32]:           call @2937 // <std#string.operator+>   
51 [0x33]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
52 [0x34]:           throw    
53 [0x35]:           nop   
54 [0x36]:           movl 0   
55 [0x37]:           _ulck   


function: std.io#thread.remove_thread[1855] params(1) in file: lib\support\0.2.805/io//thread.sharp:172:16: note:  
		    private def remove_thread(t : thread) {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #28, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 173 movl 0   
5 [0x5]:           movn #8   
7 [0x7]:           pushobj   
8 [0x8]:           movl 1   
9 [0x9]:           movn #1   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @1877 // <std.io#thread_group.remove>   
16 [0x10]:           pop   
17 [0x11]:           ret   


function: std.io#thread.get_id[1856] params(0) in file: lib\support\0.2.805/io//thread.sharp:176:15: note:  
		    public def get_id() := id;
		              ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_native_handle[1857] params(0) in file: lib\support\0.2.805/io//thread.sharp:177:15: note:  
		    public def get_native_handle() := native_handle;
		              ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_stack_size[1858] params(0) in file: lib\support\0.2.805/io//thread.sharp:178:15: note:  
		    public def get_stack_size() := stack_size;
		              ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #11   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_name[1859] params(0) in file: lib\support\0.2.805/io//thread.sharp:179:15: note:  
		    public def get_name() := name;
		              ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #7   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.is_exited[1860] params(0) in file: lib\support\0.2.805/io//thread.sharp:180:15: note:  
		    public def is_exited() := exited;
		              ^

0 [0x0]: line: 180 movl 0   
1 [0x1]:           movn #6   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_daemon[1861] params(0) in file: lib\support\0.2.805/io//thread.sharp:181:15: note:  
		    public def is_daemon() := daemon;
		              ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_started[1862] params(0) in file: lib\support\0.2.805/io//thread.sharp:182:15: note:  
		    public def is_started() := started;
		              ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #9   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_suspended[1863] params(0) in file: lib\support\0.2.805/io//thread.sharp:183:15: note:  
		    public def is_suspended() := suspended;
		              ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_terminated[1864] params(0) in file: lib\support\0.2.805/io//thread.sharp:184:15: note:  
		    public def is_terminated() := terminated;
		              ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #5   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.set_main[1865] params(1) in file: lib\support\0.2.805/io//thread.sharp:185:12: note:  
			public def set_main(main: (object[])(var)) := self->main = main;
		           ^

0 [0x0]: line: 185 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #12   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std.io#thread.is_active[1866] params(0) in file: lib\support\0.2.805/io//thread.sharp:186:12: note:  
			public def is_active() := started && !exited && !terminated;
		           ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #9   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           skne ebx // pc = 22   
7 [0x7]:           movl 0   
8 [0x8]:           movn #6   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           skne ebx // pc = 22   
15 [0xf]:           movl 0   
16 [0x10]:           movn #5   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           not ebx, ebx   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   


function: std.io#thread.get_exit_code[1867] params(0) in file: lib\support\0.2.805/io//thread.sharp:187:12: note:  
			public def get_exit_code() := exit_code;
		           ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_exception_handler[1868] params(0) in file: lib\support\0.2.805/io//thread.sharp:188:12: note:  
			public def get_exception_handler() := error_handler;
		           ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #13   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std.io#thread.operator==[1869] params(1) in file: lib\support\0.2.805/io//thread.sharp:190:15: note:  
		    public def operator==(t : thread) : var = native_handle==t.native_handle;
		              ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #1   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


constructor: std.io#thread_group.thread_group[1870] params(1) in file: lib\support\0.2.805/io//thread_group.sharp:5:21: note:  
			public thread_group(name : string) {
		                    ^

0 [0x0]:         new_class @109 // std#hashmap<std#int,std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @3140 // <std#hashmap<std#int,std.io#thread>.hashmap>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         new_class @114 // std#list<var>   
8 [0x8]:         dup    
9 [0x9]:         call @3225 // <std#list<var>.list>   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]:         movi #0, ebx   
16 [0x10]:         movl 0   
17 [0x11]:         movn #4   
19 [0x13]:         movi #0, adx   
21 [0x15]:         rmov adx, ebx   
22 [0x16]:         movl 0   
23 [0x17]:         movi #29, ebx   
25 [0x19]:         cast ebx   
26 [0x1a]:         pushl 0   
27 [0x1b]: line: 6 pushl 1   
28 [0x1c]:         movl 0   
29 [0x1d]:         movn #2   
31 [0x1f]:         popobj   
32 [0x20]: line: 7 movg @30 // @std.io#thread_priority   
33 [0x21]:         movn #1   
35 [0x23]:         pushobj   
36 [0x24]:         movl 0   
37 [0x25]:         movn #3   
39 [0x27]:         popobj   
40 [0x28]:         ret   


constructor: std.io#thread_group.thread_group[1871] params(2) in file: lib\support\0.2.805/io//thread_group.sharp:10:21: note:  
			public thread_group(name : string, priority : thread_priority) {
		                    ^

0 [0x0]:         new_class @109 // std#hashmap<std#int,std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @3140 // <std#hashmap<std#int,std.io#thread>.hashmap>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         new_class @114 // std#list<var>   
8 [0x8]:         dup    
9 [0x9]:         call @3225 // <std#list<var>.list>   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]:         movi #0, ebx   
16 [0x10]:         movl 0   
17 [0x11]:         movn #4   
19 [0x13]:         movi #0, adx   
21 [0x15]:         rmov adx, ebx   
22 [0x16]:         movl 0   
23 [0x17]:         movi #29, ebx   
25 [0x19]:         cast ebx   
26 [0x1a]:         pushl 0   
27 [0x1b]: line: 11 pushl 1   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #2   
31 [0x1f]:          popobj   
32 [0x20]: line: 12 pushl 2   
33 [0x21]:          movl 0   
34 [0x22]:          movn #3   
36 [0x24]:          popobj   
37 [0x25]:          ret   


function: std.io#thread_group.at[1872] params(1) in file: lib\support\0.2.805/io//thread_group.sharp:15:5: note:  
			def at(id : var) := handles.at(id);
		    ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          new_class @47 // std#int   
5 [0x5]:          dup    
6 [0x6]:          ipushl #1   
7 [0x7]:          call @2253 // <std#int.int>   
8 [0x8]:          call @3144 // <std#hashmap<std#int,std.io#thread>.at>   
9 [0x9]:          popobj2    
10 [0xa]:          returnobj   
11 [0xb]:          ret   


function: std.io#thread_group.add[1873] params(1) in file: lib\support\0.2.805/io//thread_group.sharp:17:5: note:  
			def add(t : thread) {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #29, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 18 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 19 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          new_class @47 // std#int   
11 [0xb]:          dup    
12 [0xc]:          pushl 1   
13 [0xd]:          call @1856 // <std.io#thread.get_id>   
14 [0xe]:          call @2253 // <std#int.int>   
15 [0xf]:          pushl 1   
16 [0x10]:          call @3145 // <std#hashmap<std#int,std.io#thread>.put>   
17 [0x11]:          loadval ebx   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 27   
20 [0x14]: line: 20 movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          pushl 1   
25 [0x19]:          call @1856 // <std.io#thread.get_id>   
26 [0x1a]:          call @3239 // <std#list<var>.add>   
27 [0x1b]:          nop   
28 [0x1c]: line: 22 movl 0   
29 [0x1d]:          movn #4   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          dec ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          ret   


function: std.io#thread_group.size[1874] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:26:5: note:  
			def size() := n_threads;
		    ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #4   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#thread_group.get_name[1875] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:27:5: note:  
			def get_name() := name;
		    ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#thread_group.get_priority[1876] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:28:5: note:  
			def get_priority() := default_priority;
		    ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#thread_group.remove[1877] params(1) in file: lib\support\0.2.805/io//thread_group.sharp:29:5: note:  
			def remove(id : var) : var {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #29, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 30 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 31 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          new_class @47 // std#int   
11 [0xb]:          dup    
12 [0xc]:          ipushl #1   
13 [0xd]:          call @2253 // <std#int.int>   
14 [0xe]:          call @3146 // <std#hashmap<std#int,std.io#thread>.remove>   
15 [0xf]:          loadval ebx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 40   
18 [0x12]: line: 32 movl 0   
19 [0x13]:          movn #4   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          movr egx, ebx   
25 [0x19]:          dec ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 33 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          ipushl #1   
34 [0x22]:          call @3244 // <std#list<var>.remove>   
35 [0x23]: line: 34 movl 0   
36 [0x24]:          _ulck   
37 [0x25]:          istorel 1, fp+0   
39 [0x27]:          ret   
40 [0x28]:          nop   
41 [0x29]: line: 37 movl 0   
42 [0x2a]:          _ulck   
43 [0x2b]:          istorel 0, fp+0   
45 [0x2d]:          ret   
46 [0x2e]:          movl 0   
47 [0x2f]:          _ulck   


function: std.io#thread_group.get_elements[1878] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:41:8: note:  
		    def get_elements() : thread[] {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #29, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 42 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          call @3242 // <std#list<var>.size>   
9 [0x9]:          loadval ebx   
10 [0xa]:          new_classarray ebx  // std.io#thread[]   
11 [0xb]:          popobj2    
12 [0xc]:          smovr_3 fp+1   
13 [0xd]: line: 43 istorel 0, fp+2   
15 [0xf]: line: 45 istorel -1, fp+4   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          invoke_delegate 3223 { static=0, args=0 }   
23 [0x17]:          popl 5   
24 [0x18]:          iaddl 1, fp@4   
26 [0x1a]:          movl 5   
27 [0x1b]:          sizeof ecx   
28 [0x1c]:          loadl ebx, fp+4   
29 [0x1d]:          lt ebx, ecx   
30 [0x1e]:          jne 54   
31 [0x1f]:          iaload ecx, ebx   
32 [0x20]:          smovr_2 ecx, fp+3   
33 [0x21]: line: 46 movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          new_class @47 // std#int   
38 [0x26]:          dup    
39 [0x27]:          ipushl #3   
40 [0x28]:          call @2253 // <std#int.int>   
41 [0x29]:          call @3144 // <std#hashmap<std#int,std.io#thread>.at>   
42 [0x2a]:          pushl 1   
43 [0x2b]:          loadl ebx, fp+2   
44 [0x2c]:          movr egx, ebx   
45 [0x2d]:          inc ebx   
46 [0x2e]:          smovr_2 ebx, fp+2   
47 [0x2f]:          movr ebx, egx   
48 [0x30]:          popobj2    
49 [0x31]:          movr adx, ebx   
50 [0x32]:          chklen adx   
51 [0x33]:          movnd adx   
52 [0x34]:          popobj   
53 [0x35]:          jmp @24   
54 [0x36]: line: 49 movl 1   
55 [0x37]:          returnobj   
56 [0x38]:          ret   


function: std.io#thread_group.find[1879] params(1) in file: lib\support\0.2.805/io//thread_group.sharp:52:8: note:  
		    def find(find_func: (thread)(var)) : thread {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #29, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 53 istorel 0, fp+2   
6 [0x6]:          ipushl #2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          pushobj   
11 [0xb]:          call @3242 // <std#list<var>.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 52   
18 [0x12]: line: 54 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          new_class @47 // std#int   
23 [0x17]:          dup    
24 [0x18]:          movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          ipushl #2   
29 [0x1d]:          call @3232 // <std#list<var>.at>   
30 [0x1e]:          call @2253 // <std#int.int>   
31 [0x1f]:          call @3144 // <std#hashmap<std#int,std.io#thread>.at>   
32 [0x20]:          popobj2    
33 [0x21]:          smovr_3 fp+3   
34 [0x22]: line: 55 movl 3   
35 [0x23]:          checknull   
36 [0x24]:          not ebx, ebx   
37 [0x25]:          skne ebx // pc = 43   
38 [0x26]:          ipushl #1   
39 [0x27]:          pushl 3   
40 [0x28]:          smov ebx, sp+[-1]   
41 [0x29]:          calld ebx   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          movr cmt, ebx   
44 [0x2c]:          jne 48   
45 [0x2d]: line: 56 movl 3   
46 [0x2e]:          returnobj   
47 [0x2f]:          ret   
48 [0x30]:          nop   
49 [0x31]:          iaddl 1, fp@2   
51 [0x33]:          jmp @6   
52 [0x34]: line: 60 pushnull    
53 [0x35]:          popobj2    
54 [0x36]:          returnobj   
55 [0x37]:          ret   


function: std.io#thread_group.kill_all[1880] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:63:5: note:  
			def kill_all() {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #29, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 64 istorel -1, fp+2   
6 [0x6]:          movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          pushobj   
10 [0xa]:          invoke_delegate 3223 { static=0, args=0 }   
12 [0xc]:          popl 3   
13 [0xd]:          iaddl 1, fp@2   
15 [0xf]:          movl 3   
16 [0x10]:          sizeof ecx   
17 [0x11]:          loadl ebx, fp+2   
18 [0x12]:          lt ebx, ecx   
19 [0x13]:          jne 34   
20 [0x14]:          iaload ecx, ebx   
21 [0x15]:          smovr_2 ecx, fp+1   
22 [0x16]: line: 65 movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          new_class @47 // std#int   
27 [0x1b]:          dup    
28 [0x1c]:          ipushl #1   
29 [0x1d]:          call @2253 // <std#int.int>   
30 [0x1e]:          call @3144 // <std#hashmap<std#int,std.io#thread>.at>   
31 [0x1f]:          call @1845 // <std.io#thread.interrupt>   
32 [0x20]:          pop   
33 [0x21]:          jmp @13   
34 [0x22]:          ret   


constructor: std.io#thread_group.thread_group[1881] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @109 // std#hashmap<std#int,std.io#thread>   
1 [0x1]:         dup    
2 [0x2]:         call @3140 // <std#hashmap<std#int,std.io#thread>.hashmap>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         new_class @114 // std#list<var>   
8 [0x8]:         dup    
9 [0x9]:         call @3225 // <std#list<var>.list>   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]:         movi #0, ebx   
16 [0x10]:         movl 0   
17 [0x11]:         movn #4   
19 [0x13]:         movi #0, adx   
21 [0x15]:         rmov adx, ebx   
22 [0x16]:         ret   


function: std.io#__srt_global._srt_thread_start[1882] params(0) in file: lib\support\0.2.805/io//thread_kernel.sharp:5:4: note:  
		def _srt_thread_start() {
		   ^

0 [0x0]: line: 6 call @1952 // <platform.kernel#vm.current_thread>   
1 [0x1]:         popobj2    
2 [0x2]:         smovr_3 fp+0   
3 [0x3]: line: 8 movi #1, ebx   : protected asm start
5 [0x5]:         movi #0, egx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #6   
12 [0xc]:         rmov adx, egx   
13 [0xd]:         movl 0   
14 [0xe]:         movn #9   
16 [0x10]:         rmov adx, ebx   : protected asm end
17 [0x11]: line: 21 istorel 1, fp+1   
19 [0x13]: line: 22 movl 0   : try start: try block start
20 [0x14]: line: 24 movn #12   
22 [0x16]: line: 25 movi #0, adx   
24 [0x18]:          iaload ebx, adx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          call @1958 // <platform.kernel#vm.thread_args>   
27 [0x1b]:          smov ebx, sp+[-1]   
28 [0x1c]:          calld ebx   
29 [0x1d]:          ipopl 1   
30 [0x1e]:          jmp @51   : try block end
31 [0x1f]: line: 27 pushl 0   : catch(std#exception)
32 [0x20]:          call @1868 // <std.io#thread.get_exception_handler>   
33 [0x21]:          pushnull    
34 [0x22]:          itest ebx   
35 [0x23]:          not ebx, ebx   
36 [0x24]:          movr cmt, ebx   
37 [0x25]:          jne 44   
38 [0x26]: line: 28 pushl 0   
39 [0x27]:          call @1868 // <std.io#thread.get_exception_handler>   
40 [0x28]:          pushl 2   
41 [0x29]:          invoke_delegate 1885 { static=0, args=1 }   
43 [0x2b]:          jmp @49   
44 [0x2c]: line: 30 pushl 0   
45 [0x2d]:          ipushl #1   
46 [0x2e]:          call @1953 // <platform.kernel#vm.exit_thread>   
47 [0x2f]: line: 31 pushl 2   
48 [0x30]:          throw    
49 [0x31]:          nop   
50 [0x32]:          jmp @51   
51 [0x33]:          nop   : try end
52 [0x34]: line: 35 pushl 0   
53 [0x35]:          ipushl #1   
54 [0x36]:          call @1953 // <platform.kernel#vm.exit_thread>   
55 [0x37]:          ret   


function: std.io#thread_result.at[1883] params(1) in file: lib\support\0.2.805/io//thread_kernel.sharp:63:15: note:  
		    static def at(index: var) : thread_result {
		              ^

0 [0x0]: line: 64 ipushl #0   
1 [0x1]:          movg @31 // @std.io#thread_result   
2 [0x2]:          movn #16   
4 [0x4]:          pushobj   
5 [0x5]:          call @1613 // <std#_enum_.get_ordinal>   
6 [0x6]:          loadval ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          jne 29   
10 [0xa]: line: 65 movg @31 // @std.io#thread_result   
11 [0xb]:          movn #17   
13 [0xd]:          pushobj   
14 [0xe]:          movg @31 // @std.io#thread_result   
15 [0xf]:          movn #17   
17 [0x11]:          sizeof ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #1, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          sub ecx, ebx -> ebx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   
29 [0x1d]:          nop   
30 [0x1e]: line: 67 movg @31 // @std.io#thread_result   
31 [0x1f]:          movn #17   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+0   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


constructor: std.io#thread_result.thread_result[1884] params(0) in file: lib\support\0.2.805/io//thread_kernel.sharp:38:7: note:  
		mutate thread_result {
		      ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1615 // <std#_enum_._enum_>   
2 [0x2]:         ret   


std.io#uncaught_exception_handler.uncaught_exception[1885] params(1) in file: lib\support\0.2.805/io//uncaught_exception_handler.sharp:4:8: note:  
		    def uncaught_exception(err: throwable);
		       ^



constructor: std.io#uncaught_exception_handler.uncaught_exception_handler[1886] params(0) in file: lib\support\0.2.805/io//uncaught_exception_handler.sharp:3:10: note:  
		interface uncaught_exception_handler {
		         ^

0 [0x0]:         ret   


function: std.io#unix_fs.path_separator[1887] params(0) in file: lib\support\0.2.805/io//unix_fs.sharp:12:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #33, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 13 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std.io#unix_fs.normalize[1888] params(1) in file: lib\support\0.2.805/io//unix_fs.sharp:20:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #33, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 21 pushl 1   
5 [0x5]:          call @2956 // <std#string.size>   
6 [0x6]:          ipopl 2   
7 [0x7]: line: 22 istorel 0, fp+3   
9 [0x9]: line: 23 istorel 0, fp+4   
11 [0xb]:          ipushl #4   
12 [0xc]:          loadl ebx, fp+2   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 267   
18 [0x12]: line: 25 pushl 1   
19 [0x13]:          ipushl #4   
20 [0x14]:          call @2946 // <std#string.operator[>   
21 [0x15]:          loadval ebx   
22 [0x16]:          rstore ebx   
23 [0x17]:          movi #92, ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          test ecx, ebx   
27 [0x1b]:          jne 115   
28 [0x1c]: line: 26 ipushl #3   
29 [0x1d]:          movi #0, ebx   
31 [0x1f]:          loadval ecx   
32 [0x20]:          gt ecx, ebx   
33 [0x21]:          movr ebx, cmt   
34 [0x22]:          skne ebx // pc = 52   
35 [0x23]:          movl 0   
36 [0x24]:          movn #1   
38 [0x26]:          pushobj   
39 [0x27]:          ipushl #3   
40 [0x28]:          movi #1, ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          sub ecx, ebx -> ebx   
44 [0x2c]:          popobj2    
45 [0x2d]:          movr adx, ebx   
46 [0x2e]:          chklen adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          rstore ebx   
49 [0x31]:          movi #47, ebx   
51 [0x33]:          loadval ecx   
52 [0x34]:          tne ecx, ebx   
53 [0x35]:          jne 70   
54 [0x36]: line: 27 istore 47   
56 [0x38]:          movl 0   
57 [0x39]:          movn #1   
59 [0x3b]:          pushobj   
60 [0x3c]:          loadl ebx, fp+3   
61 [0x3d]:          movr egx, ebx   
62 [0x3e]:          inc ebx   
63 [0x3f]:          smovr_2 ebx, fp+3   
64 [0x40]:          movr ebx, egx   
65 [0x41]:          popobj2    
66 [0x42]:          movr adx, ebx   
67 [0x43]:          chklen adx   
68 [0x44]:          loadval ebx   
69 [0x45]:          rmov adx, ebx   
70 [0x46]:          nop   
71 [0x47]: line: 29 ipushl #4   
72 [0x48]:          movi #1, ebx   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          add ecx, ebx -> ebx   
76 [0x4c]:          rstore ebx   
77 [0x4d]:          loadl ebx, fp+2   
78 [0x4e]:          loadval ecx   
79 [0x4f]:          lt ecx, ebx   
80 [0x50]:          movr ebx, cmt   
81 [0x51]:          skne ebx // pc = 95   
82 [0x52]:          pushl 1   
83 [0x53]:          ipushl #4   
84 [0x54]:          movi #1, ebx   
86 [0x56]:          loadval ecx   
87 [0x57]:          add ecx, ebx -> ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          call @2946 // <std#string.operator[>   
90 [0x5a]:          loadval ebx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          movi #92, ebx   
94 [0x5e]:          loadval ecx   
95 [0x5f]:          test ecx, ebx   
96 [0x60]:          jne 113   
97 [0x61]: line: 30 iaddl 1, fp@4   
99 [0x63]: line: 31 pushl 1   
100 [0x64]:          ipushl #4   
101 [0x65]:          call @2946 // <std#string.operator[>   
102 [0x66]:          loadval ebx   
103 [0x67]:          rstore ebx   
104 [0x68]:          movi #92, ebx   
106 [0x6a]:          loadval ecx   
107 [0x6b]:          test ecx, ebx   
108 [0x6c]:          je 97   
109 [0x6d]: line: 33 loadl ebx, fp+4   
110 [0x6e]:          movr egx, ebx   
111 [0x6f]:          dec ebx   
112 [0x70]:          smovr_2 ebx, fp+4   
113 [0x71]:          nop   
114 [0x72]:          jmp @263   
115 [0x73]:          pushl 1   
116 [0x74]:          ipushl #4   
117 [0x75]:          call @2946 // <std#string.operator[>   
118 [0x76]:          loadval ebx   
119 [0x77]:          rstore ebx   
120 [0x78]:          movi #47, ebx   
122 [0x7a]:          loadval ecx   
123 [0x7b]:          test ecx, ebx   
124 [0x7c]:          jne 246   
125 [0x7d]: line: 37 ipushl #4   
126 [0x7e]:          movi #1, ebx   
128 [0x80]:          loadval ecx   
129 [0x81]:          add ecx, ebx -> ebx   
130 [0x82]:          rstore ebx   
131 [0x83]:          loadl ebx, fp+2   
132 [0x84]:          loadval ecx   
133 [0x85]:          lt ecx, ebx   
134 [0x86]:          movr ebx, cmt   
135 [0x87]:          skne ebx // pc = 149   
136 [0x88]:          pushl 1   
137 [0x89]:          ipushl #4   
138 [0x8a]:          movi #1, ebx   
140 [0x8c]:          loadval ecx   
141 [0x8d]:          add ecx, ebx -> ebx   
142 [0x8e]:          rstore ebx   
143 [0x8f]:          call @2946 // <std#string.operator[>   
144 [0x90]:          loadval ebx   
145 [0x91]:          rstore ebx   
146 [0x92]:          movi #47, ebx   
148 [0x94]:          loadval ecx   
149 [0x95]:          test ecx, ebx   
150 [0x96]:          jne 194   
151 [0x97]: line: 38 iaddl 1, fp@4   
153 [0x99]: line: 39 pushl 1   
154 [0x9a]:          ipushl #4   
155 [0x9b]:          call @2946 // <std#string.operator[>   
156 [0x9c]:          loadval ebx   
157 [0x9d]:          rstore ebx   
158 [0x9e]:          movi #47, ebx   
160 [0xa0]:          loadval ecx   
161 [0xa1]:          test ecx, ebx   
162 [0xa2]:          je 151   
163 [0xa3]: line: 42 ipushl #3   
164 [0xa4]:          movi #0, ebx   
166 [0xa6]:          loadval ecx   
167 [0xa7]:          gt ecx, ebx   
168 [0xa8]:          movr ebx, cmt   
169 [0xa9]:          skne ebx // pc = 187   
170 [0xaa]:          movl 0   
171 [0xab]:          movn #1   
173 [0xad]:          pushobj   
174 [0xae]:          ipushl #3   
175 [0xaf]:          movi #1, ebx   
177 [0xb1]:          loadval ecx   
178 [0xb2]:          sub ecx, ebx -> ebx   
179 [0xb3]:          popobj2    
180 [0xb4]:          movr adx, ebx   
181 [0xb5]:          chklen adx   
182 [0xb6]:          iaload ebx, adx   
183 [0xb7]:          rstore ebx   
184 [0xb8]:          movi #47, ebx   
186 [0xba]:          loadval ecx   
187 [0xbb]:          tne ecx, ebx   
188 [0xbc]:          jne 193   
189 [0xbd]: line: 43 loadl ebx, fp+4   
190 [0xbe]:          movr egx, ebx   
191 [0xbf]:          dec ebx   
192 [0xc0]:          smovr_2 ebx, fp+4   
193 [0xc1]:          nop   
194 [0xc2]:          nop   
195 [0xc3]: line: 46 ipushl #3   
196 [0xc4]:          movi #0, ebx   
198 [0xc6]:          loadval ecx   
199 [0xc7]:          test ecx, ebx   
200 [0xc8]:          movr ebx, cmt   
201 [0xc9]:          skpe ebx // pc = 226   
202 [0xca]:          ipushl #3   
203 [0xcb]:          movi #0, ebx   
205 [0xcd]:          loadval ecx   
206 [0xce]:          gt ecx, ebx   
207 [0xcf]:          movr ebx, cmt   
208 [0xd0]:          skne ebx // pc = 226   
209 [0xd1]:          movl 0   
210 [0xd2]:          movn #1   
212 [0xd4]:          pushobj   
213 [0xd5]:          ipushl #3   
214 [0xd6]:          movi #1, ebx   
216 [0xd8]:          loadval ecx   
217 [0xd9]:          sub ecx, ebx -> ebx   
218 [0xda]:          popobj2    
219 [0xdb]:          movr adx, ebx   
220 [0xdc]:          chklen adx   
221 [0xdd]:          iaload ebx, adx   
222 [0xde]:          rstore ebx   
223 [0xdf]:          movi #47, ebx   
225 [0xe1]:          loadval ecx   
226 [0xe2]:          tne ecx, ebx   
227 [0xe3]:          jne 244   
228 [0xe4]: line: 47 istore 47   
230 [0xe6]:          movl 0   
231 [0xe7]:          movn #1   
233 [0xe9]:          pushobj   
234 [0xea]:          loadl ebx, fp+3   
235 [0xeb]:          movr egx, ebx   
236 [0xec]:          inc ebx   
237 [0xed]:          smovr_2 ebx, fp+3   
238 [0xee]:          movr ebx, egx   
239 [0xef]:          popobj2    
240 [0xf0]:          movr adx, ebx   
241 [0xf1]:          chklen adx   
242 [0xf2]:          loadval ebx   
243 [0xf3]:          rmov adx, ebx   
244 [0xf4]:          nop   
245 [0xf5]:          jmp @263   
246 [0xf6]: line: 50 pushl 1   
247 [0xf7]:          ipushl #4   
248 [0xf8]:          call @2946 // <std#string.operator[>   
249 [0xf9]:          movl 0   
250 [0xfa]:          movn #1   
252 [0xfc]:          pushobj   
253 [0xfd]:          loadl ebx, fp+3   
254 [0xfe]:          movr egx, ebx   
255 [0xff]:          inc ebx   
256 [0x100]:          smovr_2 ebx, fp+3   
257 [0x101]:          movr ebx, egx   
258 [0x102]:          popobj2    
259 [0x103]:          movr adx, ebx   
260 [0x104]:          chklen adx   
261 [0x105]:          loadval ebx   
262 [0x106]:          rmov adx, ebx   
263 [0x107]:          nop   
264 [0x108]:          iaddl 1, fp@4   
266 [0x10a]:          jmp @11   
267 [0x10b]: line: 53 new_class @64 // std#string   
268 [0x10c]:          dup    
269 [0x10d]:          movl 0   
270 [0x10e]:          movn #1   
272 [0x110]:          pushobj   
273 [0x111]:          istore 0   
275 [0x113]:          ipushl #3   
276 [0x114]:          call @2928 // <std#string.string>   
277 [0x115]:          popobj2    
278 [0x116]:          returnobj   
279 [0x117]:          ret   


function: std.io#unix_fs.get_attributes[1889] params(1) in file: lib\support\0.2.805/io//unix_fs.sharp:61:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #33, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 62 movl 1   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @2949 // <std#string.get_data>   
9 [0x9]:          popobj2    
10 [0xa]:          smovr_3 fp+2   
11 [0xb]: line: 63 istorel 0, fp+3   
13 [0xd]: line: 69 pushl 2   : protected asm start
14 [0xe]:          int 0x25   
15 [0xf]:          smovr_2 ebx, fp+3   
16 [0x10]: line: 75 loadl ebx, fp+3   : protected asm end
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


function: std.io#unix_fs.check_access[1890] params(2) in file: lib\support\0.2.805/io//unix_fs.sharp:85:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #33, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 86 movl 1   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @2949 // <std#string.get_data>   
9 [0x9]:          popobj2    
10 [0xa]:          smovr_3 fp+3   
11 [0xb]: line: 87 istorel 0, fp+4   
13 [0xd]: line: 93 pushl 3   : protected asm start
14 [0xe]:          loadl ebx, fp+2   
15 [0xf]:          int 0x24   
16 [0x10]:          smovr_2 ebx, fp+4   
17 [0x11]: line: 100 loadl ebx, fp+4   : protected asm end
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   


constructor: std.io#unix_fs.unix_fs[1891] params(0) in file: lib\support\0.2.805/io//unix_fs.sharp:8:16: note:  
		protected class unix_fs base file_system {
		               ^

0 [0x0]:         movi #47, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         mov8 ebx, ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #512, ebx   
11 [0xb]:         newarry ebx   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


function: std.io#win_fs.path_separator[1892] params(0) in file: lib\support\0.2.805/io//win_fs.sharp:15:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #34, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 16 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std.io#win_fs.normalize[1893] params(1) in file: lib\support\0.2.805/io//win_fs.sharp:23:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #34, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 24 pushl 1   
5 [0x5]:          call @2956 // <std#string.size>   
6 [0x6]:          ipopl 2   
7 [0x7]: line: 25 istorel 0, fp+3   
9 [0x9]: line: 26 istorel 0, fp+4   
11 [0xb]:          ipushl #4   
12 [0xc]:          loadl ebx, fp+2   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 260   
18 [0x12]: line: 28 pushl 1   
19 [0x13]:          ipushl #4   
20 [0x14]:          call @2946 // <std#string.operator[>   
21 [0x15]:          loadval ebx   
22 [0x16]:          rstore ebx   
23 [0x17]:          movi #47, ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          test ecx, ebx   
27 [0x1b]:          jne 115   
28 [0x1c]: line: 29 ipushl #3   
29 [0x1d]:          movi #0, ebx   
31 [0x1f]:          loadval ecx   
32 [0x20]:          gt ecx, ebx   
33 [0x21]:          movr ebx, cmt   
34 [0x22]:          skne ebx // pc = 52   
35 [0x23]:          movl 0   
36 [0x24]:          movn #1   
38 [0x26]:          pushobj   
39 [0x27]:          ipushl #3   
40 [0x28]:          movi #1, ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          sub ecx, ebx -> ebx   
44 [0x2c]:          popobj2    
45 [0x2d]:          movr adx, ebx   
46 [0x2e]:          chklen adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          rstore ebx   
49 [0x31]:          movi #92, ebx   
51 [0x33]:          loadval ecx   
52 [0x34]:          tne ecx, ebx   
53 [0x35]:          jne 70   
54 [0x36]: line: 30 istore 92   
56 [0x38]:          movl 0   
57 [0x39]:          movn #1   
59 [0x3b]:          pushobj   
60 [0x3c]:          loadl ebx, fp+3   
61 [0x3d]:          movr egx, ebx   
62 [0x3e]:          inc ebx   
63 [0x3f]:          smovr_2 ebx, fp+3   
64 [0x40]:          movr ebx, egx   
65 [0x41]:          popobj2    
66 [0x42]:          movr adx, ebx   
67 [0x43]:          chklen adx   
68 [0x44]:          loadval ebx   
69 [0x45]:          rmov adx, ebx   
70 [0x46]:          nop   
71 [0x47]: line: 32 ipushl #4   
72 [0x48]:          movi #1, ebx   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          add ecx, ebx -> ebx   
76 [0x4c]:          rstore ebx   
77 [0x4d]:          loadl ebx, fp+2   
78 [0x4e]:          loadval ecx   
79 [0x4f]:          lt ecx, ebx   
80 [0x50]:          movr ebx, cmt   
81 [0x51]:          skne ebx // pc = 95   
82 [0x52]:          pushl 1   
83 [0x53]:          ipushl #4   
84 [0x54]:          movi #1, ebx   
86 [0x56]:          loadval ecx   
87 [0x57]:          add ecx, ebx -> ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          call @2946 // <std#string.operator[>   
90 [0x5a]:          loadval ebx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          movi #47, ebx   
94 [0x5e]:          loadval ecx   
95 [0x5f]:          test ecx, ebx   
96 [0x60]:          jne 113   
97 [0x61]: line: 33 iaddl 1, fp@4   
99 [0x63]: line: 34 pushl 1   
100 [0x64]:          ipushl #4   
101 [0x65]:          call @2946 // <std#string.operator[>   
102 [0x66]:          loadval ebx   
103 [0x67]:          rstore ebx   
104 [0x68]:          movi #47, ebx   
106 [0x6a]:          loadval ecx   
107 [0x6b]:          test ecx, ebx   
108 [0x6c]:          je 97   
109 [0x6d]: line: 36 loadl ebx, fp+4   
110 [0x6e]:          movr egx, ebx   
111 [0x6f]:          dec ebx   
112 [0x70]:          smovr_2 ebx, fp+4   
113 [0x71]:          nop   
114 [0x72]:          jmp @256   
115 [0x73]:          pushl 1   
116 [0x74]:          ipushl #4   
117 [0x75]:          call @2946 // <std#string.operator[>   
118 [0x76]:          loadval ebx   
119 [0x77]:          rstore ebx   
120 [0x78]:          movi #92, ebx   
122 [0x7a]:          loadval ecx   
123 [0x7b]:          test ecx, ebx   
124 [0x7c]:          jne 239   
125 [0x7d]: line: 40 ipushl #4   
126 [0x7e]:          movi #1, ebx   
128 [0x80]:          loadval ecx   
129 [0x81]:          add ecx, ebx -> ebx   
130 [0x82]:          rstore ebx   
131 [0x83]:          loadl ebx, fp+2   
132 [0x84]:          loadval ecx   
133 [0x85]:          lt ecx, ebx   
134 [0x86]:          movr ebx, cmt   
135 [0x87]:          skne ebx // pc = 149   
136 [0x88]:          pushl 1   
137 [0x89]:          ipushl #4   
138 [0x8a]:          movi #1, ebx   
140 [0x8c]:          loadval ecx   
141 [0x8d]:          add ecx, ebx -> ebx   
142 [0x8e]:          rstore ebx   
143 [0x8f]:          call @2946 // <std#string.operator[>   
144 [0x90]:          loadval ebx   
145 [0x91]:          rstore ebx   
146 [0x92]:          movi #92, ebx   
148 [0x94]:          loadval ecx   
149 [0x95]:          test ecx, ebx   
150 [0x96]:          jne 194   
151 [0x97]: line: 41 iaddl 1, fp@4   
153 [0x99]: line: 42 pushl 1   
154 [0x9a]:          ipushl #4   
155 [0x9b]:          call @2946 // <std#string.operator[>   
156 [0x9c]:          loadval ebx   
157 [0x9d]:          rstore ebx   
158 [0x9e]:          movi #92, ebx   
160 [0xa0]:          loadval ecx   
161 [0xa1]:          test ecx, ebx   
162 [0xa2]:          je 151   
163 [0xa3]: line: 45 ipushl #3   
164 [0xa4]:          movi #0, ebx   
166 [0xa6]:          loadval ecx   
167 [0xa7]:          gt ecx, ebx   
168 [0xa8]:          movr ebx, cmt   
169 [0xa9]:          skne ebx // pc = 187   
170 [0xaa]:          movl 0   
171 [0xab]:          movn #1   
173 [0xad]:          pushobj   
174 [0xae]:          ipushl #3   
175 [0xaf]:          movi #1, ebx   
177 [0xb1]:          loadval ecx   
178 [0xb2]:          sub ecx, ebx -> ebx   
179 [0xb3]:          popobj2    
180 [0xb4]:          movr adx, ebx   
181 [0xb5]:          chklen adx   
182 [0xb6]:          iaload ebx, adx   
183 [0xb7]:          rstore ebx   
184 [0xb8]:          movi #92, ebx   
186 [0xba]:          loadval ecx   
187 [0xbb]:          tne ecx, ebx   
188 [0xbc]:          jne 193   
189 [0xbd]: line: 46 loadl ebx, fp+4   
190 [0xbe]:          movr egx, ebx   
191 [0xbf]:          dec ebx   
192 [0xc0]:          smovr_2 ebx, fp+4   
193 [0xc1]:          nop   
194 [0xc2]:          nop   
195 [0xc3]: line: 49 ipushl #3   
196 [0xc4]:          movi #0, ebx   
198 [0xc6]:          loadval ecx   
199 [0xc7]:          gt ecx, ebx   
200 [0xc8]:          movr ebx, cmt   
201 [0xc9]:          skne ebx // pc = 219   
202 [0xca]:          movl 0   
203 [0xcb]:          movn #1   
205 [0xcd]:          pushobj   
206 [0xce]:          ipushl #3   
207 [0xcf]:          movi #1, ebx   
209 [0xd1]:          loadval ecx   
210 [0xd2]:          sub ecx, ebx -> ebx   
211 [0xd3]:          popobj2    
212 [0xd4]:          movr adx, ebx   
213 [0xd5]:          chklen adx   
214 [0xd6]:          iaload ebx, adx   
215 [0xd7]:          rstore ebx   
216 [0xd8]:          movi #92, ebx   
218 [0xda]:          loadval ecx   
219 [0xdb]:          tne ecx, ebx   
220 [0xdc]:          jne 237   
221 [0xdd]: line: 50 istore 92   
223 [0xdf]:          movl 0   
224 [0xe0]:          movn #1   
226 [0xe2]:          pushobj   
227 [0xe3]:          loadl ebx, fp+3   
228 [0xe4]:          movr egx, ebx   
229 [0xe5]:          inc ebx   
230 [0xe6]:          smovr_2 ebx, fp+3   
231 [0xe7]:          movr ebx, egx   
232 [0xe8]:          popobj2    
233 [0xe9]:          movr adx, ebx   
234 [0xea]:          chklen adx   
235 [0xeb]:          loadval ebx   
236 [0xec]:          rmov adx, ebx   
237 [0xed]:          nop   
238 [0xee]:          jmp @256   
239 [0xef]: line: 53 pushl 1   
240 [0xf0]:          ipushl #4   
241 [0xf1]:          call @2946 // <std#string.operator[>   
242 [0xf2]:          movl 0   
243 [0xf3]:          movn #1   
245 [0xf5]:          pushobj   
246 [0xf6]:          loadl ebx, fp+3   
247 [0xf7]:          movr egx, ebx   
248 [0xf8]:          inc ebx   
249 [0xf9]:          smovr_2 ebx, fp+3   
250 [0xfa]:          movr ebx, egx   
251 [0xfb]:          popobj2    
252 [0xfc]:          movr adx, ebx   
253 [0xfd]:          chklen adx   
254 [0xfe]:          loadval ebx   
255 [0xff]:          rmov adx, ebx   
256 [0x100]:          nop   
257 [0x101]:          iaddl 1, fp@4   
259 [0x103]:          jmp @11   
260 [0x104]: line: 56 new_class @64 // std#string   
261 [0x105]:          dup    
262 [0x106]:          movl 0   
263 [0x107]:          movn #1   
265 [0x109]:          pushobj   
266 [0x10a]:          istore 0   
268 [0x10c]:          ipushl #3   
269 [0x10d]:          call @2928 // <std#string.string>   
270 [0x10e]:          popobj2    
271 [0x10f]:          returnobj   
272 [0x110]:          ret   


function: std.io#win_fs.get_attributes[1894] params(1) in file: lib\support\0.2.805/io//win_fs.sharp:64:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #34, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 65 movl 1   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @2949 // <std#string.get_data>   
9 [0x9]:          popobj2    
10 [0xa]:          smovr_3 fp+2   
11 [0xb]: line: 66 istorel 0, fp+3   
13 [0xd]: line: 72 pushl 2   : protected asm start
14 [0xe]:          int 0x25   
15 [0xf]:          smovr_2 ebx, fp+3   
16 [0x10]: line: 78 loadl ebx, fp+3   : protected asm end
17 [0x11]:          return_val ebx   
18 [0x12]:          ret   


function: std.io#win_fs.check_access[1895] params(2) in file: lib\support\0.2.805/io//win_fs.sharp:88:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #34, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 89 movl 1   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @2949 // <std#string.get_data>   
9 [0x9]:          popobj2    
10 [0xa]:          smovr_3 fp+3   
11 [0xb]: line: 90 istorel 0, fp+4   
13 [0xd]: line: 93 ipushl #2   
14 [0xe]:          ldc ebx // 1   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          jne 21   
18 [0x12]: line: 94 istorel -1, fp+0   
20 [0x14]:          ret   
21 [0x15]:          nop   
22 [0x16]: line: 100 pushl 3   : protected asm start
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           int 0x24   
25 [0x19]:           smovr_2 ebx, fp+4   
26 [0x1a]: line: 107 loadl ebx, fp+4   : protected asm end
27 [0x1b]:           return_val ebx   
28 [0x1c]:           ret   


constructor: std.io#win_fs.win_fs[1896] params(0) in file: lib\support\0.2.805/io//win_fs.sharp:11:16: note:  
		protected class win_fs base file_system {
		               ^

0 [0x0]:         movi #92, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         mov8 ebx, ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #512, ebx   
11 [0xb]:         newarry ebx   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


function: std.math#__srt_global.is_nan[1897] params(1) in file: lib\support\0.2.805/math//math.sharp:44:18: note:  
		public static def is_nan(v: var): var {
		                 ^

0 [0x0]: line: 45 ipushl #0   
1 [0x1]:          loadl ebx, fp+0   
2 [0x2]:          loadval ecx   
3 [0x3]:          tne ecx, ebx   
4 [0x4]:          return_val cmt   
5 [0x5]:          ret   


function: std.math#__srt_global.is_infinite[1898] params(1) in file: lib\support\0.2.805/math//math.sharp:56:18: note:  
		public static def is_infinite(v: var): var {
		                 ^

0 [0x0]: line: 57 ipushl #0   
1 [0x1]:          ldc ebx // inf   
2 [0x2]:          loadval ecx   
3 [0x3]:          test ecx, ebx   
4 [0x4]:          movr ebx, cmt   
5 [0x5]:          skpe ebx // pc = 11   
6 [0x6]:          ipushl #0   
7 [0x7]:          movi #-2147483648, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std.math#__srt_global.sin[1899] params(1) in file: lib\support\0.2.805/math//math.sharp:60:4: note:  
		def sin(num: var) : var {
		   ^

0 [0x0]: line: 61 ipushl #0   
1 [0x1]:          istore 0   
3 [0x3]:          call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.cos[1900] params(1) in file: lib\support\0.2.805/math//math.sharp:64:4: note:  
		def cos(num: var) : var {
		   ^

0 [0x0]: line: 65 ipushl #0   
1 [0x1]:          istore 1   
3 [0x3]:          call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.tan[1901] params(1) in file: lib\support\0.2.805/math//math.sharp:68:4: note:  
		def tan(num: var) : var {
		   ^

0 [0x0]: line: 69 ipushl #0   
1 [0x1]:          istore 2   
3 [0x3]:          call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.sinh[1902] params(1) in file: lib\support\0.2.805/math//math.sharp:72:4: note:  
		def sinh(num: var) : var {
		   ^

0 [0x0]: line: 73 ipushl #0   
1 [0x1]:          istore 3   
3 [0x3]:          call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.cosh[1903] params(1) in file: lib\support\0.2.805/math//math.sharp:76:4: note:  
		def cosh(num: var) : var {
		   ^

0 [0x0]: line: 77 ipushl #0   
1 [0x1]:          istore 4   
3 [0x3]:          call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.tanh[1904] params(1) in file: lib\support\0.2.805/math//math.sharp:80:4: note:  
		def tanh(num: var) : var {
		   ^

0 [0x0]: line: 81 ipushl #0   
1 [0x1]:          istore 5   
3 [0x3]:          call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.asin[1905] params(1) in file: lib\support\0.2.805/math//math.sharp:84:4: note:  
		def asin(num: var) : var {
		   ^

0 [0x0]: line: 85 ipushl #0   
1 [0x1]:          istore 6   
3 [0x3]:          call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.acos[1906] params(1) in file: lib\support\0.2.805/math//math.sharp:88:4: note:  
		def acos(num: var) : var {
		   ^

0 [0x0]: line: 89 ipushl #0   
1 [0x1]:          istore 7   
3 [0x3]:          call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.atan[1907] params(1) in file: lib\support\0.2.805/math//math.sharp:92:4: note:  
		def atan(num: var) : var {
		   ^

0 [0x0]: line: 93 ipushl #0   
1 [0x1]:          istore 8   
3 [0x3]:          call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.atan[1908] params(2) in file: lib\support\0.2.805/math//math.sharp:96:4: note:  
		def atan(num1: var, num2: var) : var {
		   ^

0 [0x0]: line: 97 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          istore 9   
4 [0x4]:          call @1922 // <std.math#__srt_global.math_proc>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.math#__srt_global.exp[1909] params(1) in file: lib\support\0.2.805/math//math.sharp:100:4: note:  
		def exp(num: var) : var {
		   ^

0 [0x0]: line: 101 ipushl #0   
1 [0x1]:           istore 10   
3 [0x3]:           call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.log[1910] params(1) in file: lib\support\0.2.805/math//math.sharp:104:4: note:  
		def log(num: var) : var {
		   ^

0 [0x0]: line: 105 ipushl #0   
1 [0x1]:           istore 11   
3 [0x3]:           call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.log10[1911] params(1) in file: lib\support\0.2.805/math//math.sharp:108:4: note:  
		def log10(num: var) : var {
		   ^

0 [0x0]: line: 109 ipushl #0   
1 [0x1]:           istore 12   
3 [0x3]:           call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.pow[1912] params(2) in file: lib\support\0.2.805/math//math.sharp:112:4: note:  
		def pow(num: var, exp: var) : var {
		   ^

0 [0x0]: line: 113 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 13   
4 [0x4]:           call @1922 // <std.math#__srt_global.math_proc>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.math#__srt_global.sqrt[1913] params(1) in file: lib\support\0.2.805/math//math.sharp:116:4: note:  
		def sqrt(num: var) : var {
		   ^

0 [0x0]: line: 117 ipushl #0   
1 [0x1]:           istore 14   
3 [0x3]:           call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.ceil[1914] params(1) in file: lib\support\0.2.805/math//math.sharp:120:4: note:  
		def ceil(num: var) : var {
		   ^

0 [0x0]: line: 121 ipushl #0   
1 [0x1]:           istore 15   
3 [0x3]:           call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.floor[1915] params(1) in file: lib\support\0.2.805/math//math.sharp:124:4: note:  
		def floor(num: var) : var {
		   ^

0 [0x0]: line: 125 ipushl #0   
1 [0x1]:           istore 16   
3 [0x3]:           call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.abs[1916] params(1) in file: lib\support\0.2.805/math//math.sharp:128:4: note:  
		def abs(num: var) : var {
		   ^

0 [0x0]: line: 129 ipushl #0   
1 [0x1]:           call @1917 // <std.math#__srt_global.fabs>   
2 [0x2]:           loadval ebx   
3 [0x3]:           return_val ebx   
4 [0x4]:           ret   


function: std.math#__srt_global.fabs[1917] params(1) in file: lib\support\0.2.805/math//math.sharp:132:12: note:  
		private def fabs(num: var) : var {
		           ^

0 [0x0]: line: 133 ipushl #0   
1 [0x1]:           istore 17   
3 [0x3]:           call @1921 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.ldexp[1918] params(2) in file: lib\support\0.2.805/math//math.sharp:136:4: note:  
		def ldexp(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 137 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 18   
4 [0x4]:           call @1922 // <std.math#__srt_global.math_proc>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.math#__srt_global.fmod[1919] params(2) in file: lib\support\0.2.805/math//math.sharp:140:4: note:  
		def fmod(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 141 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 19   
4 [0x4]:           call @1922 // <std.math#__srt_global.math_proc>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.math#__srt_global.round[1920] params(1) in file: lib\support\0.2.805/math//math.sharp:144:4: note:  
		def round(num: var) : var {
		   ^

0 [0x0]: line: 145 loadl ebx, fp+0   
1 [0x1]:           mov64 ebx, ebx   
2 [0x2]:           mov64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 146 loadl ebx, fp+1   
5 [0x5]:           subl ebx, fp@0   
6 [0x6]: line: 148 ipushl #0   
7 [0x7]:           ldc ebx // 0.5   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           movr ebx, cmt   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 21   
13 [0xd]:           ipushl #1   
14 [0xe]:           movi #1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           add ecx, ebx -> ebx   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   
20 [0x14]:           jmp @24   
21 [0x15]: line: 149 loadl ebx, fp+1   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   
24 [0x18]:           nop   


function: std.math#__srt_global.math_proc[1921] params(2) in file: lib\support\0.2.805/math//math.sharp:152:10: note:  
		local def math_proc(num: var, proc: var) : var {
		         ^

0 [0x0]: line: 153 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl ecx, fp+1   
2 [0x2]:           int 0x18   
3 [0x3]:           return_val cmt   
4 [0x4]:           ret   
5 [0x5]: line: 161 istorel 0, fp+0   : protected asm end
7 [0x7]:           ret   


function: std.math#__srt_global.math_proc[1922] params(3) in file: lib\support\0.2.805/math//math.sharp:164:10: note:  
		local def math_proc(num:var, num2: var, proc: var) : var {
		         ^

0 [0x0]: line: 165 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl egx, fp+1   
2 [0x2]:           loadl ecx, fp+2   
3 [0x3]:           int 0x18   
4 [0x4]:           return_val cmt   
5 [0x5]:           ret   
6 [0x6]: line: 174 istorel 0, fp+0   : protected asm end
8 [0x8]:           ret   


function: std#_nil_.to_string[1923] params(0) in file: lib\support\0.2.805/nil.sharp:14:15: note:  
		    public def to_string() := new string("nil");
		              ^

0 [0x0]: line: 14 new_class @64 // std#string   
1 [0x1]:          dup    
2 [0x2]:          newstr @1 // nil   
3 [0x3]:          call @2923 // <std#string.string>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


constructor: std#_nil_._nil_[1924] params(0) in file: lib\support\0.2.805/nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#_object_.to_string[1925] params(0) in file: lib\support\0.2.805/object.sharp:13:15: note:  
		    public def to_string() := new string();
		              ^

0 [0x0]: line: 13 new_class @64 // std#string   
1 [0x1]:          dup    
2 [0x2]:          call @2973 // <std#string.string>   
3 [0x3]:          popobj2    
4 [0x4]:          returnobj   
5 [0x5]:          ret   


function: std#_object_.hash[1926] params(0) in file: lib\support\0.2.805/object.sharp:15:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #37, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 17 new_class @45 // std#long   
5 [0x5]:          dup    
6 [0x6]:          istore 0   
8 [0x8]:          call @2065 // <std#long.long>   
9 [0x9]:          popobj2    
10 [0xa]:          returnobj   
11 [0xb]:          ret   


function: std#_object_.guid[1927] params(0) in file: lib\support\0.2.805/object.sharp:20:8: note:  
		    def guid() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #37, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 22 new_class @45 // std#long   
5 [0x5]:          dup    
6 [0x6]:          movg @0 // @std#__srt_global   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          movr egx, ebx   
13 [0xd]:          inc ebx   
14 [0xe]:          movi #0, adx   
16 [0x10]:          rmov adx, ebx   
17 [0x11]:          rstore egx   
18 [0x12]:          call @2065 // <std#long.long>   
19 [0x13]:          popobj2    
20 [0x14]:          returnobj   
21 [0x15]:          ret   


constructor: std#_object_._object_[1928] params(0) in file: lib\support\0.2.805/object.sharp:11:13: note:  
		stable class _object_ : printable, unique {
		            ^

0 [0x0]:         ret   


function: platform#build.is_windows[1929] params(0) in file: lib\support\0.2.805/platform//build.sharp:9:15: note:  
		    static def is_windows() : var {
		              ^

0 [0x0]: line: 10 movg @39 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @37 // win   
5 [0x5]:          call @2940 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: platform#build.is_linux[1930] params(0) in file: lib\support\0.2.805/platform//build.sharp:13:15: note:  
		    static def is_linux() : var {
		              ^

0 [0x0]: line: 14 movg @39 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @38 // posix   
5 [0x5]:          call @2940 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: platform#build.build[1931] params(0) in file: lib\support\0.2.805/platform//build.sharp:3:6: note:  
		class build {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform#__srt_global.load_library[1932] params(1) in file: lib\support\0.2.805/platform//dl.sharp:5:4: note:  
		def load_library(name: string) {
		   ^

0 [0x0]: line: 6 pushl 0   
1 [0x1]:         call @1939 // <platform.kernel#platform.load_library>   
2 [0x2]:         ret   


function: platform#__srt_global.free_library[1933] params(1) in file: lib\support\0.2.805/platform//dl.sharp:9:4: note:  
		def free_library(name: string): var {
		   ^

0 [0x0]: line: 10 pushl 0   
1 [0x1]:          call @1940 // <platform.kernel#platform.free_library>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: platform#__srt_global.link[1934] params(2) in file: lib\support\0.2.805/platform//dl.sharp:13:4: note:  
		def link(name: string, library: string): var {
		   ^

0 [0x0]: line: 14 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @1941 // <platform.kernel#platform.link_func>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: platform.kernel#platform.tls_init[1935] params(0) in file: lib\support\0.2.805/platform//kernel//platform.sharp:13:15: note:  
		    static def tls_init() {}
		              ^

0 [0x0]: line: 13 ret   


function: platform.kernel#platform.static_init[1936] params(0) in file: lib\support\0.2.805/platform//kernel//platform.sharp:14:23: note:  
		    private static def static_init() {}
		                      ^

0 [0x0]: line: 14 new_class @26 // std.io.task#job_state   
1 [0x1]:          movg @26 // @std.io.task#job_state   
2 [0x2]:          movn #0   
4 [0x4]:          popobj   
5 [0x5]:          newstr @57 // created   
6 [0x6]:          movg @26 // @std.io.task#job_state   
7 [0x7]:          movn #0   
9 [0x9]:          movn #0   
11 [0xb]:          popobj   
12 [0xc]:          movi #-1, ebx   
14 [0xe]:          movg @26 // @std.io.task#job_state   
15 [0xf]:          movn #0   
17 [0x11]:          movn #1   
19 [0x13]:          movi #0, adx   
21 [0x15]:          rmov adx, ebx   
22 [0x16]:          new_class @26 // std.io.task#job_state   
23 [0x17]:          movg @26 // @std.io.task#job_state   
24 [0x18]:          movn #1   
26 [0x1a]:          popobj   
27 [0x1b]:          newstr @58 // active   
28 [0x1c]:          movg @26 // @std.io.task#job_state   
29 [0x1d]:          movn #1   
31 [0x1f]:          movn #0   
33 [0x21]:          popobj   
34 [0x22]:          movi #0, ebx   
36 [0x24]:          movg @26 // @std.io.task#job_state   
37 [0x25]:          movn #1   
39 [0x27]:          movn #1   
41 [0x29]:          movi #0, adx   
43 [0x2b]:          rmov adx, ebx   
44 [0x2c]:          new_class @26 // std.io.task#job_state   
45 [0x2d]:          movg @26 // @std.io.task#job_state   
46 [0x2e]:          movn #2   
48 [0x30]:          popobj   
49 [0x31]:          newstr @59 // completed   
50 [0x32]:          movg @26 // @std.io.task#job_state   
51 [0x33]:          movn #2   
53 [0x35]:          movn #0   
55 [0x37]:          popobj   
56 [0x38]:          movi #1, ebx   
58 [0x3a]:          movg @26 // @std.io.task#job_state   
59 [0x3b]:          movn #2   
61 [0x3d]:          movn #1   
63 [0x3f]:          movi #0, adx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          new_class @26 // std.io.task#job_state   
67 [0x43]:          movg @26 // @std.io.task#job_state   
68 [0x44]:          movn #3   
70 [0x46]:          popobj   
71 [0x47]:          newstr @60 // cancelled   
72 [0x48]:          movg @26 // @std.io.task#job_state   
73 [0x49]:          movn #3   
75 [0x4b]:          movn #0   
77 [0x4d]:          popobj   
78 [0x4e]:          movi #2, ebx   
80 [0x50]:          movg @26 // @std.io.task#job_state   
81 [0x51]:          movn #3   
83 [0x53]:          movn #1   
85 [0x55]:          movi #0, adx   
87 [0x57]:          rmov adx, ebx   
88 [0x58]:          new_class @30 // std.io#thread_priority   
89 [0x59]:          movg @30 // @std.io#thread_priority   
90 [0x5a]:          movn #0   
92 [0x5c]:          popobj   
93 [0x5d]:          newstr @61 // min_priority   
94 [0x5e]:          movg @30 // @std.io#thread_priority   
95 [0x5f]:          movn #0   
97 [0x61]:          movn #0   
99 [0x63]:          popobj   
100 [0x64]:          movi #1, ebx   
102 [0x66]:          movg @30 // @std.io#thread_priority   
103 [0x67]:          movn #0   
105 [0x69]:          movn #1   
107 [0x6b]:          movi #0, adx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          new_class @30 // std.io#thread_priority   
111 [0x6f]:          movg @30 // @std.io#thread_priority   
112 [0x70]:          movn #1   
114 [0x72]:          popobj   
115 [0x73]:          newstr @62 // norm_priority   
116 [0x74]:          movg @30 // @std.io#thread_priority   
117 [0x75]:          movn #1   
119 [0x77]:          movn #0   
121 [0x79]:          popobj   
122 [0x7a]:          movi #4, ebx   
124 [0x7c]:          movg @30 // @std.io#thread_priority   
125 [0x7d]:          movn #1   
127 [0x7f]:          movn #1   
129 [0x81]:          movi #0, adx   
131 [0x83]:          rmov adx, ebx   
132 [0x84]:          new_class @30 // std.io#thread_priority   
133 [0x85]:          movg @30 // @std.io#thread_priority   
134 [0x86]:          movn #2   
136 [0x88]:          popobj   
137 [0x89]:          newstr @63 // max_priority   
138 [0x8a]:          movg @30 // @std.io#thread_priority   
139 [0x8b]:          movn #2   
141 [0x8d]:          movn #0   
143 [0x8f]:          popobj   
144 [0x90]:          movi #6, ebx   
146 [0x92]:          movg @30 // @std.io#thread_priority   
147 [0x93]:          movn #2   
149 [0x95]:          movn #1   
151 [0x97]:          movi #0, adx   
153 [0x99]:          rmov adx, ebx   
154 [0x9a]:          new_class @31 // std.io#thread_result   
155 [0x9b]:          movg @31 // @std.io#thread_result   
156 [0x9c]:          movn #0   
158 [0x9e]:          popobj   
159 [0x9f]:          newstr @64 // result_ok   
160 [0xa0]:          movg @31 // @std.io#thread_result   
161 [0xa1]:          movn #0   
163 [0xa3]:          movn #0   
165 [0xa5]:          popobj   
166 [0xa6]:          movi #0, ebx   
168 [0xa8]:          movg @31 // @std.io#thread_result   
169 [0xa9]:          movn #0   
171 [0xab]:          movn #1   
173 [0xad]:          movi #0, adx   
175 [0xaf]:          rmov adx, ebx   
176 [0xb0]:          new_class @31 // std.io#thread_result   
177 [0xb1]:          movg @31 // @std.io#thread_result   
178 [0xb2]:          movn #1   
180 [0xb4]:          popobj   
181 [0xb5]:          newstr @65 // result_ill_thread_start   
182 [0xb6]:          movg @31 // @std.io#thread_result   
183 [0xb7]:          movn #1   
185 [0xb9]:          movn #0   
187 [0xbb]:          popobj   
188 [0xbc]:          movi #1, ebx   
190 [0xbe]:          movg @31 // @std.io#thread_result   
191 [0xbf]:          movn #1   
193 [0xc1]:          movn #1   
195 [0xc3]:          movi #0, adx   
197 [0xc5]:          rmov adx, ebx   
198 [0xc6]:          new_class @31 // std.io#thread_result   
199 [0xc7]:          movg @31 // @std.io#thread_result   
200 [0xc8]:          movn #2   
202 [0xca]:          popobj   
203 [0xcb]:          newstr @66 // result_thread_running   
204 [0xcc]:          movg @31 // @std.io#thread_result   
205 [0xcd]:          movn #2   
207 [0xcf]:          movn #0   
209 [0xd1]:          popobj   
210 [0xd2]:          movi #2, ebx   
212 [0xd4]:          movg @31 // @std.io#thread_result   
213 [0xd5]:          movn #2   
215 [0xd7]:          movn #1   
217 [0xd9]:          movi #0, adx   
219 [0xdb]:          rmov adx, ebx   
220 [0xdc]:          new_class @31 // std.io#thread_result   
221 [0xdd]:          movg @31 // @std.io#thread_result   
222 [0xde]:          movn #3   
224 [0xe0]:          popobj   
225 [0xe1]:          newstr @67 // result_thread_terminated   
226 [0xe2]:          movg @31 // @std.io#thread_result   
227 [0xe3]:          movn #3   
229 [0xe5]:          movn #0   
231 [0xe7]:          popobj   
232 [0xe8]:          movi #3, ebx   
234 [0xea]:          movg @31 // @std.io#thread_result   
235 [0xeb]:          movn #3   
237 [0xed]:          movn #1   
239 [0xef]:          movi #0, adx   
241 [0xf1]:          rmov adx, ebx   
242 [0xf2]:          new_class @31 // std.io#thread_result   
243 [0xf3]:          movg @31 // @std.io#thread_result   
244 [0xf4]:          movn #4   
246 [0xf6]:          popobj   
247 [0xf7]:          newstr @68 // result_invalid_stack_size   
248 [0xf8]:          movg @31 // @std.io#thread_result   
249 [0xf9]:          movn #4   
251 [0xfb]:          movn #0   
253 [0xfd]:          popobj   
254 [0xfe]:          movi #4, ebx   
256 [0x100]:          movg @31 // @std.io#thread_result   
257 [0x101]:          movn #4   
259 [0x103]:          movn #1   
261 [0x105]:          movi #0, adx   
263 [0x107]:          rmov adx, ebx   
264 [0x108]:          new_class @31 // std.io#thread_result   
265 [0x109]:          movg @31 // @std.io#thread_result   
266 [0x10a]:          movn #5   
268 [0x10c]:          popobj   
269 [0x10d]:          newstr @69 // result_thread_not_started   
270 [0x10e]:          movg @31 // @std.io#thread_result   
271 [0x10f]:          movn #5   
273 [0x111]:          movn #0   
275 [0x113]:          popobj   
276 [0x114]:          movi #5, ebx   
278 [0x116]:          movg @31 // @std.io#thread_result   
279 [0x117]:          movn #5   
281 [0x119]:          movn #1   
283 [0x11b]:          movi #0, adx   
285 [0x11d]:          rmov adx, ebx   
286 [0x11e]:          new_class @31 // std.io#thread_result   
287 [0x11f]:          movg @31 // @std.io#thread_result   
288 [0x120]:          movn #6   
290 [0x122]:          popobj   
291 [0x123]:          newstr @70 // result_ill_thread_join   
292 [0x124]:          movg @31 // @std.io#thread_result   
293 [0x125]:          movn #6   
295 [0x127]:          movn #0   
297 [0x129]:          popobj   
298 [0x12a]:          movi #6, ebx   
300 [0x12c]:          movg @31 // @std.io#thread_result   
301 [0x12d]:          movn #6   
303 [0x12f]:          movn #1   
305 [0x131]:          movi #0, adx   
307 [0x133]:          rmov adx, ebx   
308 [0x134]:          new_class @31 // std.io#thread_result   
309 [0x135]:          movg @31 // @std.io#thread_result   
310 [0x136]:          movn #7   
312 [0x138]:          popobj   
313 [0x139]:          newstr @71 // result_thread_join_failed   
314 [0x13a]:          movg @31 // @std.io#thread_result   
315 [0x13b]:          movn #7   
317 [0x13d]:          movn #0   
319 [0x13f]:          popobj   
320 [0x140]:          movi #7, ebx   
322 [0x142]:          movg @31 // @std.io#thread_result   
323 [0x143]:          movn #7   
325 [0x145]:          movn #1   
327 [0x147]:          movi #0, adx   
329 [0x149]:          rmov adx, ebx   
330 [0x14a]:          new_class @31 // std.io#thread_result   
331 [0x14b]:          movg @31 // @std.io#thread_result   
332 [0x14c]:          movn #8   
334 [0x14e]:          popobj   
335 [0x14f]:          newstr @72 // result_ill_thread_interrupt   
336 [0x150]:          movg @31 // @std.io#thread_result   
337 [0x151]:          movn #8   
339 [0x153]:          movn #0   
341 [0x155]:          popobj   
342 [0x156]:          movi #8, ebx   
344 [0x158]:          movg @31 // @std.io#thread_result   
345 [0x159]:          movn #8   
347 [0x15b]:          movn #1   
349 [0x15d]:          movi #0, adx   
351 [0x15f]:          rmov adx, ebx   
352 [0x160]:          new_class @31 // std.io#thread_result   
353 [0x161]:          movg @31 // @std.io#thread_result   
354 [0x162]:          movn #9   
356 [0x164]:          popobj   
357 [0x165]:          newstr @73 // result_thread_interrupt_failed   
358 [0x166]:          movg @31 // @std.io#thread_result   
359 [0x167]:          movn #9   
361 [0x169]:          movn #0   
363 [0x16b]:          popobj   
364 [0x16c]:          movi #9, ebx   
366 [0x16e]:          movg @31 // @std.io#thread_result   
367 [0x16f]:          movn #9   
369 [0x171]:          movn #1   
371 [0x173]:          movi #0, adx   
373 [0x175]:          rmov adx, ebx   
374 [0x176]:          new_class @31 // std.io#thread_result   
375 [0x177]:          movg @31 // @std.io#thread_result   
376 [0x178]:          movn #10   
378 [0x17a]:          popobj   
379 [0x17b]:          newstr @74 // result_ill_thread_destroy   
380 [0x17c]:          movg @31 // @std.io#thread_result   
381 [0x17d]:          movn #10   
383 [0x17f]:          movn #0   
385 [0x181]:          popobj   
386 [0x182]:          movi #10, ebx   
388 [0x184]:          movg @31 // @std.io#thread_result   
389 [0x185]:          movn #10   
391 [0x187]:          movn #1   
393 [0x189]:          movi #0, adx   
395 [0x18b]:          rmov adx, ebx   
396 [0x18c]:          new_class @31 // std.io#thread_result   
397 [0x18d]:          movg @31 // @std.io#thread_result   
398 [0x18e]:          movn #11   
400 [0x190]:          popobj   
401 [0x191]:          newstr @75 // result_thread_create_failed   
402 [0x192]:          movg @31 // @std.io#thread_result   
403 [0x193]:          movn #11   
405 [0x195]:          movn #0   
407 [0x197]:          popobj   
408 [0x198]:          movi #11, ebx   
410 [0x19a]:          movg @31 // @std.io#thread_result   
411 [0x19b]:          movn #11   
413 [0x19d]:          movn #1   
415 [0x19f]:          movi #0, adx   
417 [0x1a1]:          rmov adx, ebx   
418 [0x1a2]:          new_class @31 // std.io#thread_result   
419 [0x1a3]:          movg @31 // @std.io#thread_result   
420 [0x1a4]:          movn #12   
422 [0x1a6]:          popobj   
423 [0x1a7]:          newstr @76 // result_no_thread_id   
424 [0x1a8]:          movg @31 // @std.io#thread_result   
425 [0x1a9]:          movn #12   
427 [0x1ab]:          movn #0   
429 [0x1ad]:          popobj   
430 [0x1ae]:          movi #12, ebx   
432 [0x1b0]:          movg @31 // @std.io#thread_result   
433 [0x1b1]:          movn #12   
435 [0x1b3]:          movn #1   
437 [0x1b5]:          movi #0, adx   
439 [0x1b7]:          rmov adx, ebx   
440 [0x1b8]:          new_class @31 // std.io#thread_result   
441 [0x1b9]:          movg @31 // @std.io#thread_result   
442 [0x1ba]:          movn #13   
444 [0x1bc]:          popobj   
445 [0x1bd]:          newstr @77 // result_thread_destroy_failed   
446 [0x1be]:          movg @31 // @std.io#thread_result   
447 [0x1bf]:          movn #13   
449 [0x1c1]:          movn #0   
451 [0x1c3]:          popobj   
452 [0x1c4]:          movi #13, ebx   
454 [0x1c6]:          movg @31 // @std.io#thread_result   
455 [0x1c7]:          movn #13   
457 [0x1c9]:          movn #1   
459 [0x1cb]:          movi #0, adx   
461 [0x1cd]:          rmov adx, ebx   
462 [0x1ce]:          new_class @31 // std.io#thread_result   
463 [0x1cf]:          movg @31 // @std.io#thread_result   
464 [0x1d0]:          movn #14   
466 [0x1d2]:          popobj   
467 [0x1d3]:          newstr @78 // result_ill_priority_set   
468 [0x1d4]:          movg @31 // @std.io#thread_result   
469 [0x1d5]:          movn #14   
471 [0x1d7]:          movn #0   
473 [0x1d9]:          popobj   
474 [0x1da]:          movi #14, ebx   
476 [0x1dc]:          movg @31 // @std.io#thread_result   
477 [0x1dd]:          movn #14   
479 [0x1df]:          movn #1   
481 [0x1e1]:          movi #0, adx   
483 [0x1e3]:          rmov adx, ebx   
484 [0x1e4]:          new_class @31 // std.io#thread_result   
485 [0x1e5]:          movg @31 // @std.io#thread_result   
486 [0x1e6]:          movn #15   
488 [0x1e8]:          popobj   
489 [0x1e9]:          newstr @79 // result_ill_thread_suspend   
490 [0x1ea]:          movg @31 // @std.io#thread_result   
491 [0x1eb]:          movn #15   
493 [0x1ed]:          movn #0   
495 [0x1ef]:          popobj   
496 [0x1f0]:          movi #15, ebx   
498 [0x1f2]:          movg @31 // @std.io#thread_result   
499 [0x1f3]:          movn #15   
501 [0x1f5]:          movn #1   
503 [0x1f7]:          movi #0, adx   
505 [0x1f9]:          rmov adx, ebx   
506 [0x1fa]:          new_class @31 // std.io#thread_result   
507 [0x1fb]:          movg @31 // @std.io#thread_result   
508 [0x1fc]:          movn #16   
510 [0x1fe]:          popobj   
511 [0x1ff]:          newstr @80 // result_max_spin   
512 [0x200]:          movg @31 // @std.io#thread_result   
513 [0x201]:          movn #16   
515 [0x203]:          movn #0   
517 [0x205]:          popobj   
518 [0x206]:          movi #255, ebx   
520 [0x208]:          movg @31 // @std.io#thread_result   
521 [0x209]:          movn #16   
523 [0x20b]:          movn #1   
525 [0x20d]:          movi #0, adx   
527 [0x20f]:          rmov adx, ebx   
528 [0x210]:          new_class @31 // std.io#thread_result   
529 [0x211]:          movg @31 // @std.io#thread_result   
530 [0x212]:          movn #17   
532 [0x214]:          popobj   
533 [0x215]:          newstr @81 // enums   
534 [0x216]:          movg @31 // @std.io#thread_result   
535 [0x217]:          movn #17   
537 [0x219]:          movn #0   
539 [0x21b]:          popobj   
540 [0x21c]:          movi #256, ebx   
542 [0x21e]:          movg @31 // @std.io#thread_result   
543 [0x21f]:          movn #17   
545 [0x221]:          movn #1   
547 [0x223]:          movi #0, adx   
549 [0x225]:          rmov adx, ebx   
550 [0x226]:          new_class @58 // std.reflect#data_type   
551 [0x227]:          movg @58 // @std.reflect#data_type   
552 [0x228]:          movn #0   
554 [0x22a]:          popobj   
555 [0x22b]:          newstr @82 // int8   
556 [0x22c]:          movg @58 // @std.reflect#data_type   
557 [0x22d]:          movn #0   
559 [0x22f]:          movn #0   
561 [0x231]:          popobj   
562 [0x232]:          movi #0, ebx   
564 [0x234]:          movg @58 // @std.reflect#data_type   
565 [0x235]:          movn #0   
567 [0x237]:          movn #1   
569 [0x239]:          movi #0, adx   
571 [0x23b]:          rmov adx, ebx   
572 [0x23c]:          new_class @58 // std.reflect#data_type   
573 [0x23d]:          movg @58 // @std.reflect#data_type   
574 [0x23e]:          movn #1   
576 [0x240]:          popobj   
577 [0x241]:          newstr @83 // int16   
578 [0x242]:          movg @58 // @std.reflect#data_type   
579 [0x243]:          movn #1   
581 [0x245]:          movn #0   
583 [0x247]:          popobj   
584 [0x248]:          movi #1, ebx   
586 [0x24a]:          movg @58 // @std.reflect#data_type   
587 [0x24b]:          movn #1   
589 [0x24d]:          movn #1   
591 [0x24f]:          movi #0, adx   
593 [0x251]:          rmov adx, ebx   
594 [0x252]:          new_class @58 // std.reflect#data_type   
595 [0x253]:          movg @58 // @std.reflect#data_type   
596 [0x254]:          movn #2   
598 [0x256]:          popobj   
599 [0x257]:          newstr @84 // int32   
600 [0x258]:          movg @58 // @std.reflect#data_type   
601 [0x259]:          movn #2   
603 [0x25b]:          movn #0   
605 [0x25d]:          popobj   
606 [0x25e]:          movi #2, ebx   
608 [0x260]:          movg @58 // @std.reflect#data_type   
609 [0x261]:          movn #2   
611 [0x263]:          movn #1   
613 [0x265]:          movi #0, adx   
615 [0x267]:          rmov adx, ebx   
616 [0x268]:          new_class @58 // std.reflect#data_type   
617 [0x269]:          movg @58 // @std.reflect#data_type   
618 [0x26a]:          movn #3   
620 [0x26c]:          popobj   
621 [0x26d]:          newstr @85 // int64   
622 [0x26e]:          movg @58 // @std.reflect#data_type   
623 [0x26f]:          movn #3   
625 [0x271]:          movn #0   
627 [0x273]:          popobj   
628 [0x274]:          movi #3, ebx   
630 [0x276]:          movg @58 // @std.reflect#data_type   
631 [0x277]:          movn #3   
633 [0x279]:          movn #1   
635 [0x27b]:          movi #0, adx   
637 [0x27d]:          rmov adx, ebx   
638 [0x27e]:          new_class @58 // std.reflect#data_type   
639 [0x27f]:          movg @58 // @std.reflect#data_type   
640 [0x280]:          movn #4   
642 [0x282]:          popobj   
643 [0x283]:          newstr @86 // uint8   
644 [0x284]:          movg @58 // @std.reflect#data_type   
645 [0x285]:          movn #4   
647 [0x287]:          movn #0   
649 [0x289]:          popobj   
650 [0x28a]:          movi #4, ebx   
652 [0x28c]:          movg @58 // @std.reflect#data_type   
653 [0x28d]:          movn #4   
655 [0x28f]:          movn #1   
657 [0x291]:          movi #0, adx   
659 [0x293]:          rmov adx, ebx   
660 [0x294]:          new_class @58 // std.reflect#data_type   
661 [0x295]:          movg @58 // @std.reflect#data_type   
662 [0x296]:          movn #5   
664 [0x298]:          popobj   
665 [0x299]:          newstr @87 // uint16   
666 [0x29a]:          movg @58 // @std.reflect#data_type   
667 [0x29b]:          movn #5   
669 [0x29d]:          movn #0   
671 [0x29f]:          popobj   
672 [0x2a0]:          movi #5, ebx   
674 [0x2a2]:          movg @58 // @std.reflect#data_type   
675 [0x2a3]:          movn #5   
677 [0x2a5]:          movn #1   
679 [0x2a7]:          movi #0, adx   
681 [0x2a9]:          rmov adx, ebx   
682 [0x2aa]:          new_class @58 // std.reflect#data_type   
683 [0x2ab]:          movg @58 // @std.reflect#data_type   
684 [0x2ac]:          movn #6   
686 [0x2ae]:          popobj   
687 [0x2af]:          newstr @88 // uint32   
688 [0x2b0]:          movg @58 // @std.reflect#data_type   
689 [0x2b1]:          movn #6   
691 [0x2b3]:          movn #0   
693 [0x2b5]:          popobj   
694 [0x2b6]:          movi #6, ebx   
696 [0x2b8]:          movg @58 // @std.reflect#data_type   
697 [0x2b9]:          movn #6   
699 [0x2bb]:          movn #1   
701 [0x2bd]:          movi #0, adx   
703 [0x2bf]:          rmov adx, ebx   
704 [0x2c0]:          new_class @58 // std.reflect#data_type   
705 [0x2c1]:          movg @58 // @std.reflect#data_type   
706 [0x2c2]:          movn #7   
708 [0x2c4]:          popobj   
709 [0x2c5]:          newstr @89 // uint64   
710 [0x2c6]:          movg @58 // @std.reflect#data_type   
711 [0x2c7]:          movn #7   
713 [0x2c9]:          movn #0   
715 [0x2cb]:          popobj   
716 [0x2cc]:          movi #7, ebx   
718 [0x2ce]:          movg @58 // @std.reflect#data_type   
719 [0x2cf]:          movn #7   
721 [0x2d1]:          movn #1   
723 [0x2d3]:          movi #0, adx   
725 [0x2d5]:          rmov adx, ebx   
726 [0x2d6]:          new_class @58 // std.reflect#data_type   
727 [0x2d7]:          movg @58 // @std.reflect#data_type   
728 [0x2d8]:          movn #8   
730 [0x2da]:          popobj   
731 [0x2db]:          newstr @90 // fnptr   
732 [0x2dc]:          movg @58 // @std.reflect#data_type   
733 [0x2dd]:          movn #8   
735 [0x2df]:          movn #0   
737 [0x2e1]:          popobj   
738 [0x2e2]:          movi #8, ebx   
740 [0x2e4]:          movg @58 // @std.reflect#data_type   
741 [0x2e5]:          movn #8   
743 [0x2e7]:          movn #1   
745 [0x2e9]:          movi #0, adx   
747 [0x2eb]:          rmov adx, ebx   
748 [0x2ec]:          new_class @58 // std.reflect#data_type   
749 [0x2ed]:          movg @58 // @std.reflect#data_type   
750 [0x2ee]:          movn #9   
752 [0x2f0]:          popobj   
753 [0x2f1]:          newstr @91 // _var   
754 [0x2f2]:          movg @58 // @std.reflect#data_type   
755 [0x2f3]:          movn #9   
757 [0x2f5]:          movn #0   
759 [0x2f7]:          popobj   
760 [0x2f8]:          movi #9, ebx   
762 [0x2fa]:          movg @58 // @std.reflect#data_type   
763 [0x2fb]:          movn #9   
765 [0x2fd]:          movn #1   
767 [0x2ff]:          movi #0, adx   
769 [0x301]:          rmov adx, ebx   
770 [0x302]:          new_class @58 // std.reflect#data_type   
771 [0x303]:          movg @58 // @std.reflect#data_type   
772 [0x304]:          movn #10   
774 [0x306]:          popobj   
775 [0x307]:          newstr @92 // _object   
776 [0x308]:          movg @58 // @std.reflect#data_type   
777 [0x309]:          movn #10   
779 [0x30b]:          movn #0   
781 [0x30d]:          popobj   
782 [0x30e]:          movi #10, ebx   
784 [0x310]:          movg @58 // @std.reflect#data_type   
785 [0x311]:          movn #10   
787 [0x313]:          movn #1   
789 [0x315]:          movi #0, adx   
791 [0x317]:          rmov adx, ebx   
792 [0x318]:          new_class @58 // std.reflect#data_type   
793 [0x319]:          movg @58 // @std.reflect#data_type   
794 [0x31a]:          movn #11   
796 [0x31c]:          popobj   
797 [0x31d]:          newstr @93 // _class   
798 [0x31e]:          movg @58 // @std.reflect#data_type   
799 [0x31f]:          movn #11   
801 [0x321]:          movn #0   
803 [0x323]:          popobj   
804 [0x324]:          movi #11, ebx   
806 [0x326]:          movg @58 // @std.reflect#data_type   
807 [0x327]:          movn #11   
809 [0x329]:          movn #1   
811 [0x32b]:          movi #0, adx   
813 [0x32d]:          rmov adx, ebx   
814 [0x32e]:          new_class @58 // std.reflect#data_type   
815 [0x32f]:          movg @58 // @std.reflect#data_type   
816 [0x330]:          movn #12   
818 [0x332]:          popobj   
819 [0x333]:          newstr @94 // method   
820 [0x334]:          movg @58 // @std.reflect#data_type   
821 [0x335]:          movn #12   
823 [0x337]:          movn #0   
825 [0x339]:          popobj   
826 [0x33a]:          movi #12, ebx   
828 [0x33c]:          movg @58 // @std.reflect#data_type   
829 [0x33d]:          movn #12   
831 [0x33f]:          movn #1   
833 [0x341]:          movi #0, adx   
835 [0x343]:          rmov adx, ebx   
836 [0x344]:          new_class @58 // std.reflect#data_type   
837 [0x345]:          movg @58 // @std.reflect#data_type   
838 [0x346]:          movn #13   
840 [0x348]:          popobj   
841 [0x349]:          newstr @95 // _nil   
842 [0x34a]:          movg @58 // @std.reflect#data_type   
843 [0x34b]:          movn #13   
845 [0x34d]:          movn #0   
847 [0x34f]:          popobj   
848 [0x350]:          movi #13, ebx   
850 [0x352]:          movg @58 // @std.reflect#data_type   
851 [0x353]:          movn #13   
853 [0x355]:          movn #1   
855 [0x357]:          movi #0, adx   
857 [0x359]:          rmov adx, ebx   
858 [0x35a]:          new_class @58 // std.reflect#data_type   
859 [0x35b]:          movg @58 // @std.reflect#data_type   
860 [0x35c]:          movn #14   
862 [0x35e]:          popobj   
863 [0x35f]:          newstr @96 // any   
864 [0x360]:          movg @58 // @std.reflect#data_type   
865 [0x361]:          movn #14   
867 [0x363]:          movn #0   
869 [0x365]:          popobj   
870 [0x366]:          movi #14, ebx   
872 [0x368]:          movg @58 // @std.reflect#data_type   
873 [0x369]:          movn #14   
875 [0x36b]:          movn #1   
877 [0x36d]:          movi #0, adx   
879 [0x36f]:          rmov adx, ebx   
880 [0x370]:          new_class @58 // std.reflect#data_type   
881 [0x371]:          movg @58 // @std.reflect#data_type   
882 [0x372]:          movn #15   
884 [0x374]:          popobj   
885 [0x375]:          newstr @97 // untyped   
886 [0x376]:          movg @58 // @std.reflect#data_type   
887 [0x377]:          movn #15   
889 [0x379]:          movn #0   
891 [0x37b]:          popobj   
892 [0x37c]:          movi #15, ebx   
894 [0x37e]:          movg @58 // @std.reflect#data_type   
895 [0x37f]:          movn #15   
897 [0x381]:          movn #1   
899 [0x383]:          movi #0, adx   
901 [0x385]:          rmov adx, ebx   
902 [0x386]:          new_class @58 // std.reflect#data_type   
903 [0x387]:          movg @58 // @std.reflect#data_type   
904 [0x388]:          movn #16   
906 [0x38a]:          popobj   
907 [0x38b]:          newstr @98 // undefined   
908 [0x38c]:          movg @58 // @std.reflect#data_type   
909 [0x38d]:          movn #16   
911 [0x38f]:          movn #0   
913 [0x391]:          popobj   
914 [0x392]:          movi #16, ebx   
916 [0x394]:          movg @58 // @std.reflect#data_type   
917 [0x395]:          movn #16   
919 [0x397]:          movn #1   
921 [0x399]:          movi #0, adx   
923 [0x39b]:          rmov adx, ebx   
924 [0x39c]:          new_class @59 // std.reflect#property_type   
925 [0x39d]:          movg @59 // @std.reflect#property_type   
926 [0x39e]:          movn #0   
928 [0x3a0]:          popobj   
929 [0x3a1]:          newstr @99 // class_property   
930 [0x3a2]:          movg @59 // @std.reflect#property_type   
931 [0x3a3]:          movn #0   
933 [0x3a5]:          movn #0   
935 [0x3a7]:          popobj   
936 [0x3a8]:          movi #96813, ebx   
938 [0x3aa]:          movg @59 // @std.reflect#property_type   
939 [0x3ab]:          movn #0   
941 [0x3ad]:          movn #1   
943 [0x3af]:          movi #0, adx   
945 [0x3b1]:          rmov adx, ebx   
946 [0x3b2]:          new_class @59 // std.reflect#property_type   
947 [0x3b3]:          movg @59 // @std.reflect#property_type   
948 [0x3b4]:          movn #1   
950 [0x3b6]:          popobj   
951 [0x3b7]:          newstr @100 // field_property   
952 [0x3b8]:          movg @59 // @std.reflect#property_type   
953 [0x3b9]:          movn #1   
955 [0x3bb]:          movn #0   
957 [0x3bd]:          popobj   
958 [0x3be]:          movi #96814, ebx   
960 [0x3c0]:          movg @59 // @std.reflect#property_type   
961 [0x3c1]:          movn #1   
963 [0x3c3]:          movn #1   
965 [0x3c5]:          movi #0, adx   
967 [0x3c7]:          rmov adx, ebx   
968 [0x3c8]:          new_class @59 // std.reflect#property_type   
969 [0x3c9]:          movg @59 // @std.reflect#property_type   
970 [0x3ca]:          movn #2   
972 [0x3cc]:          popobj   
973 [0x3cd]:          newstr @101 // function_property   
974 [0x3ce]:          movg @59 // @std.reflect#property_type   
975 [0x3cf]:          movn #2   
977 [0x3d1]:          movn #0   
979 [0x3d3]:          popobj   
980 [0x3d4]:          movi #96815, ebx   
982 [0x3d6]:          movg @59 // @std.reflect#property_type   
983 [0x3d7]:          movn #2   
985 [0x3d9]:          movn #1   
987 [0x3db]:          movi #0, adx   
989 [0x3dd]:          rmov adx, ebx   
990 [0x3de]:          new_class @67 // std#time_unit   
991 [0x3df]:          movg @67 // @std#time_unit   
992 [0x3e0]:          movn #0   
994 [0x3e2]:          popobj   
995 [0x3e3]:          newstr @102 // seconds   
996 [0x3e4]:          movg @67 // @std#time_unit   
997 [0x3e5]:          movn #0   
999 [0x3e7]:          movn #0   
1001 [0x3e9]:          popobj   
1002 [0x3ea]:          movi #0, ebx   
1004 [0x3ec]:          movg @67 // @std#time_unit   
1005 [0x3ed]:          movn #0   
1007 [0x3ef]:          movn #1   
1009 [0x3f1]:          movi #0, adx   
1011 [0x3f3]:          rmov adx, ebx   
1012 [0x3f4]:          new_class @67 // std#time_unit   
1013 [0x3f5]:          movg @67 // @std#time_unit   
1014 [0x3f6]:          movn #1   
1016 [0x3f8]:          popobj   
1017 [0x3f9]:          newstr @103 // milliseconds   
1018 [0x3fa]:          movg @67 // @std#time_unit   
1019 [0x3fb]:          movn #1   
1021 [0x3fd]:          movn #0   
1023 [0x3ff]:          popobj   
1024 [0x400]:          movi #1, ebx   
1026 [0x402]:          movg @67 // @std#time_unit   
1027 [0x403]:          movn #1   
1029 [0x405]:          movn #1   
1031 [0x407]:          movi #0, adx   
1033 [0x409]:          rmov adx, ebx   
1034 [0x40a]:          new_class @67 // std#time_unit   
1035 [0x40b]:          movg @67 // @std#time_unit   
1036 [0x40c]:          movn #2   
1038 [0x40e]:          popobj   
1039 [0x40f]:          newstr @104 // microseconds   
1040 [0x410]:          movg @67 // @std#time_unit   
1041 [0x411]:          movn #2   
1043 [0x413]:          movn #0   
1045 [0x415]:          popobj   
1046 [0x416]:          movi #2, ebx   
1048 [0x418]:          movg @67 // @std#time_unit   
1049 [0x419]:          movn #2   
1051 [0x41b]:          movn #1   
1053 [0x41d]:          movi #0, adx   
1055 [0x41f]:          rmov adx, ebx   
1056 [0x420]:          new_class @67 // std#time_unit   
1057 [0x421]:          movg @67 // @std#time_unit   
1058 [0x422]:          movn #3   
1060 [0x424]:          popobj   
1061 [0x425]:          newstr @105 // nanoseconds   
1062 [0x426]:          movg @67 // @std#time_unit   
1063 [0x427]:          movn #3   
1065 [0x429]:          movn #0   
1067 [0x42b]:          popobj   
1068 [0x42c]:          movi #3, ebx   
1070 [0x42e]:          movg @67 // @std#time_unit   
1071 [0x42f]:          movn #3   
1073 [0x431]:          movn #1   
1075 [0x433]:          movi #0, adx   
1077 [0x435]:          rmov adx, ebx   
1078 [0x436]:          movg @41 // @platform.kernel#platform   
1079 [0x437]:          movn #1   
1081 [0x439]:          movi #0, adx   
1083 [0x43b]:          movi #3103, ebx   
1085 [0x43d]:          rmov adx, ebx   
1086 [0x43e]:          call @3287 // <std.io#__srt_global.$03internal_static_init>   
1087 [0x43f]:          call @3288 // <std.io#file.$03internal_static_init>   
1088 [0x440]:          call @3289 // <std.io.task#job.$03internal_static_init>   
1089 [0x441]:          call @3290 // <std.io.task#__srt_global.$03internal_static_init>   
1090 [0x442]:          call @3291 // <std.io#thread_group.$03internal_static_init>   
1091 [0x443]:          call @3292 // <std#_nil_.$03internal_static_init>   
1092 [0x444]:          call @3293 // <std#__srt_global.$03internal_static_init>   
1093 [0x445]:          call @3294 // <std#string.$03internal_static_init>   
1094 [0x446]:          call @3295 // <std#string_builder.$03internal_static_init>   
1095 [0x447]:          call @3296 // <std#time.$03internal_static_init>   
1096 [0x448]:          call @3297 // <common#constants.$03internal_static_init>   
1097 [0x449]:          call @3298 // <common#constants.strings.$03internal_static_init>   
1098 [0x44a]:          call @3299 // <common.network.core#request.$03internal_static_init>   
1099 [0x44b]:          call @3301 // <main#__srt_global.$03internal_static_init>   
1100 [0x44c]:          call @3302 // <std.io#thread_result.$03internal_static_init>   
1101 [0x44d]:          ret   


function: platform.kernel#platform.exit[1937] params(1) in file: lib\support\0.2.805/platform//kernel//platform.sharp:16:15: note:  
		    static def exit(value: var) {
		              ^

0 [0x0]: line: 17 ipushl #0   : protected asm start
1 [0x1]:          int 0x1d   
2 [0x2]:          ret   : protected asm end


function: platform.kernel#platform.get_lib_path[1938] params(1) in file: lib\support\0.2.805/platform//kernel//platform.sharp:23:23: note:  
		    private static def get_lib_path(name: string) : _int8[] {
		                      ^

0 [0x0]: line: 24 call @1929 // <platform#build.is_windows>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 9   
4 [0x4]: line: 25 pushl 0   
5 [0x5]:          newstr @39 // .dll   
6 [0x6]:          call @2969 // <std#string.operator+=>   
7 [0x7]:          pop   
8 [0x8]:          jmp @13   
9 [0x9]: line: 27 pushl 0   
10 [0xa]:          newstr @40 // .so   
11 [0xb]:          call @2969 // <std#string.operator+=>   
12 [0xc]:          pop   
13 [0xd]:          nop   
14 [0xe]: line: 30 new_class @18 // std.io#file   
15 [0xf]:          dup    
16 [0x10]:          pushl 0   
17 [0x11]:          call @1667 // <std.io#file.file>   
18 [0x12]:          call @1674 // <std.io#file.get_absolute_path>   
19 [0x13]:          call @2949 // <std#string.get_data>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: platform.kernel#platform.load_library[1939] params(1) in file: lib\support\0.2.805/platform//kernel//platform.sharp:33:15: note:  
		    static def load_library(name: string) {
		              ^

0 [0x0]: line: 34 pushl 0   
1 [0x1]:          call @1938 // <platform.kernel#platform.get_lib_path>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 35 pushl 1   : protected asm start
5 [0x5]:          int 0x39   
6 [0x6]:          ret   : protected asm end


function: platform.kernel#platform.free_library[1940] params(1) in file: lib\support\0.2.805/platform//kernel//platform.sharp:41:15: note:  
		    static def free_library(name: string): var {
		              ^

0 [0x0]: line: 42 pushl 0   
1 [0x1]:          call @1938 // <platform.kernel#platform.get_lib_path>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 43 istorel 0, fp+2   
6 [0x6]: line: 44 pushl 1   : protected asm start
7 [0x7]:          int 0x3a   
8 [0x8]:          smovr_2 ebx, fp+2   
9 [0x9]: line: 50 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: platform.kernel#platform.link_func[1941] params(2) in file: lib\support\0.2.805/platform//kernel//platform.sharp:53:15: note:  
		    static def link_func(name: string, library: string): var {
		              ^

0 [0x0]: line: 54 pushl 0   
1 [0x1]:          call @1938 // <platform.kernel#platform.get_lib_path>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 55 pushl 0   
5 [0x5]:          call @2949 // <std#string.get_data>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+3   
8 [0x8]: line: 56 istorel 0, fp+4   
10 [0xa]: line: 57 pushl 3   : protected asm start
11 [0xb]:          pushl 2   
12 [0xc]:          int 0x3b   
13 [0xd]:          smovr_2 ebx, fp+4   
14 [0xe]: line: 64 loadl ebx, fp+4   : protected asm end
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


function: platform.kernel#platform.srt_init[1942] params(1) in file: lib\support\0.2.805/platform//kernel//platform.sharp:67:23: note:  
		    private static def srt_init(args: object[]) : var {
		                      ^

0 [0x0]: line: 68 new_class @64 // std#string   
1 [0x1]:          dup    
2 [0x2]:          newstr @15 //    
3 [0x3]:          call @2923 // <std#string.string>   
4 [0x4]:          pushl 0   
5 [0x5]:          movi #0, ebx   
7 [0x7]:          popobj2    
8 [0x8]:          movr adx, ebx   
9 [0x9]:          chklen adx   
10 [0xa]:          movnd adx   
11 [0xb]:          vcast 0 -> []   
12 [0xc]:          pushobj   
13 [0xd]:          call @2935 // <std#string.operator+>   
14 [0xe]:          movg @39 // @platform#build   
15 [0xf]:          movn #1   
17 [0x11]:          popobj   
18 [0x12]: line: 69 new_class @64 // std#string   
19 [0x13]:          dup    
20 [0x14]:          newstr @15 //    
21 [0x15]:          call @2923 // <std#string.string>   
22 [0x16]:          pushl 0   
23 [0x17]:          movi #1, ebx   
25 [0x19]:          popobj2    
26 [0x1a]:          movr adx, ebx   
27 [0x1b]:          chklen adx   
28 [0x1c]:          movnd adx   
29 [0x1d]:          vcast 0 -> []   
30 [0x1e]:          pushobj   
31 [0x1f]:          call @2935 // <std#string.operator+>   
32 [0x20]:          movg @39 // @platform#build   
33 [0x21]:          movn #3   
35 [0x23]:          popobj   
36 [0x24]: line: 70 new_class @64 // std#string   
37 [0x25]:          dup    
38 [0x26]:          newstr @15 //    
39 [0x27]:          call @2923 // <std#string.string>   
40 [0x28]:          pushl 0   
41 [0x29]:          movi #2, ebx   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          vcast 0 -> []   
48 [0x30]:          pushobj   
49 [0x31]:          call @2935 // <std#string.operator+>   
50 [0x32]:          movg @39 // @platform#build   
51 [0x33]:          movn #2   
53 [0x35]:          popobj   
54 [0x36]: line: 71 new_class @64 // std#string   
55 [0x37]:          dup    
56 [0x38]:          newstr @15 //    
57 [0x39]:          call @2923 // <std#string.string>   
58 [0x3a]:          pushl 0   
59 [0x3b]:          movi #3, ebx   
61 [0x3d]:          popobj2    
62 [0x3e]:          movr adx, ebx   
63 [0x3f]:          chklen adx   
64 [0x40]:          movnd adx   
65 [0x41]:          vcast 0 -> []   
66 [0x42]:          pushobj   
67 [0x43]:          call @2935 // <std#string.operator+>   
68 [0x44]:          movg @39 // @platform#build   
69 [0x45]:          movn #0   
71 [0x47]:          popobj   
72 [0x48]: line: 73 call @1936 // <platform.kernel#platform.static_init>   
73 [0x49]: line: 74 pushl 0   
74 [0x4a]: line: 76 movi #4, ebx   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          movi #28, cmt   
82 [0x52]:          cast cmt   
83 [0x53]:          smovr_3 fp+1   
84 [0x54]: line: 77 pushl 1   
85 [0x55]:          call @1957 // <platform.kernel#vm.set_thread>   
86 [0x56]: line: 79 movg @30 // @std.io#thread_priority   
87 [0x57]:          movn #2   
89 [0x59]:          smovr_3 fp+2   
90 [0x5a]: line: 80 movg @29 // @std.io#thread_group   
91 [0x5b]:          movn #0   
93 [0x5d]:          pushobj   
94 [0x5e]:          pushl 1   
95 [0x5f]:          call @1873 // <std.io#thread_group.add>   
96 [0x60]: line: 82 movg @29 // @std.io#thread_group   : protected asm start
97 [0x61]:          movn #0   
99 [0x63]:          pushobj   
100 [0x64]:          movl 1   
101 [0x65]:          movn #8   
103 [0x67]:          popobj   
104 [0x68]:          movl 2   
105 [0x69]:          pushobj   
106 [0x6a]:          movl 1   
107 [0x6b]:          movn #3   
109 [0x6d]:          popobj   
110 [0x6e]: line: 99 movl 0   : protected asm end
111 [0x6f]: line: 100 sizeof ebx   
112 [0x70]:           rstore ebx   
113 [0x71]:           movi #5, ebx   
115 [0x73]:           loadval ecx   
116 [0x74]:           sub ecx, ebx -> ebx   
117 [0x75]:           new_classarray ebx  // std#string[]   
118 [0x76]:           popobj2    
119 [0x77]:           smovr_3 fp+3   
120 [0x78]: line: 101 istorel 0, fp+4   
122 [0x7a]: line: 103 istorel 5, fp+5   
124 [0x7c]:           ipushl #5   
125 [0x7d]:           movl 0   
126 [0x7e]:           sizeof ebx   
127 [0x7f]:           loadval ecx   
128 [0x80]:           lt ecx, ebx   
129 [0x81]:           movr ebx, cmt   
130 [0x82]:           movr cmt, ebx   
131 [0x83]:           jne 157   
132 [0x84]: line: 104 new_class @64 // std#string   
133 [0x85]:           dup    
134 [0x86]:           pushl 0   
135 [0x87]:           loadl ebx, fp+5   
136 [0x88]:           popobj2    
137 [0x89]:           movr adx, ebx   
138 [0x8a]:           chklen adx   
139 [0x8b]:           movnd adx   
140 [0x8c]:           vcast 0 -> []   
141 [0x8d]:           pushobj   
142 [0x8e]:           call @2923 // <std#string.string>   
143 [0x8f]:           pushl 3   
144 [0x90]:           loadl ebx, fp+4   
145 [0x91]:           movr egx, ebx   
146 [0x92]:           inc ebx   
147 [0x93]:           smovr_2 ebx, fp+4   
148 [0x94]:           movr ebx, egx   
149 [0x95]:           popobj2    
150 [0x96]:           movr adx, ebx   
151 [0x97]:           chklen adx   
152 [0x98]:           movnd adx   
153 [0x99]:           popobj   
154 [0x9a]:           iaddl 1, fp@5   
156 [0x9c]:           jmp @124   
157 [0x9d]: line: 107 istorel 0, fp+6   
159 [0x9f]: line: 108 movg @41 // @platform.kernel#platform   
160 [0xa0]:           movn #0   
162 [0xa2]:           movi #0, adx   
164 [0xa4]:           iaload ebx, adx   
165 [0xa5]:           rstore ebx   
166 [0xa6]:           movi #0, ebx   
168 [0xa8]:           loadval ecx   
169 [0xa9]:           tne ecx, ebx   
170 [0xaa]:           jne 183   
171 [0xab]: line: 109 movg @41 // @platform.kernel#platform   
172 [0xac]:           movn #0   
174 [0xae]:           movi #0, adx   
176 [0xb0]:           iaload ebx, adx   
177 [0xb1]:           rstore ebx   
178 [0xb2]:           pushl 3   
179 [0xb3]:           smov ebx, sp+[-1]   
180 [0xb4]:           calld ebx   
181 [0xb5]:           ipopl 6   
182 [0xb6]:           jmp @250   
183 [0xb7]:           movg @41 // @platform.kernel#platform   
184 [0xb8]:           movn #1   
186 [0xba]:           movi #0, adx   
188 [0xbc]:           iaload ebx, adx   
189 [0xbd]:           rstore ebx   
190 [0xbe]:           movi #0, ebx   
192 [0xc0]:           loadval ecx   
193 [0xc1]:           tne ecx, ebx   
194 [0xc2]:           jne 206   
195 [0xc3]: line: 110 movg @41 // @platform.kernel#platform   
196 [0xc4]:           movn #1   
198 [0xc6]:           movi #0, adx   
200 [0xc8]:           iaload ebx, adx   
201 [0xc9]:           rstore ebx   
202 [0xca]:           pushl 3   
203 [0xcb]:           smov ebx, sp+[-1]   
204 [0xcc]:           calld ebx   
205 [0xcd]:           jmp @250   
206 [0xce]:           movg @41 // @platform.kernel#platform   
207 [0xcf]:           movn #2   
209 [0xd1]:           movi #0, adx   
211 [0xd3]:           iaload ebx, adx   
212 [0xd4]:           rstore ebx   
213 [0xd5]:           movi #0, ebx   
215 [0xd7]:           loadval ecx   
216 [0xd8]:           tne ecx, ebx   
217 [0xd9]:           jne 228   
218 [0xda]: line: 111 movg @41 // @platform.kernel#platform   
219 [0xdb]:           movn #2   
221 [0xdd]:           movi #0, adx   
223 [0xdf]:           iaload ebx, adx   
224 [0xe0]:           rstore ebx   
225 [0xe1]:           loadval ebx   
226 [0xe2]:           calld ebx   
227 [0xe3]:           jmp @250   
228 [0xe4]:           movg @41 // @platform.kernel#platform   
229 [0xe5]:           movn #3   
231 [0xe7]:           movi #0, adx   
233 [0xe9]:           iaload ebx, adx   
234 [0xea]:           rstore ebx   
235 [0xeb]:           movi #0, ebx   
237 [0xed]:           loadval ecx   
238 [0xee]:           tne ecx, ebx   
239 [0xef]:           jne 250   
240 [0xf0]: line: 112 movg @41 // @platform.kernel#platform   
241 [0xf1]:           movn #3   
243 [0xf3]:           movi #0, adx   
245 [0xf5]:           iaload ebx, adx   
246 [0xf6]:           rstore ebx   
247 [0xf7]:           loadval ebx   
248 [0xf8]:           calld ebx   
249 [0xf9]:           ipopl 6   
250 [0xfa]:           nop   
251 [0xfb]: line: 115 loadl ebx, fp+6   
252 [0xfc]:           return_val ebx   
253 [0xfd]:           ret   


constructor: platform.kernel#platform.platform[1943] params(0) in file: lib\support\0.2.805/platform//kernel//platform.sharp:6:6: note:  
		class platform
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: platform.kernel#stack_state.stack_state[1944] params(0) in file: lib\support\0.2.805/platform//kernel//stack_state.sharp:3:6: note:  
		class stack_state {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform.kernel#vm.get_frame_info[1945] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:6:15: note:  
		    static def get_frame_info() : stack_state {
		              ^

0 [0x0]: line: 7 int 0x35   : protected asm start
1 [0x1]:         popobj2    
2 [0x2]:         returnobj   
3 [0x3]:         ret   
4 [0x4]: line: 13 pushnull    : protected asm end
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: platform.kernel#vm.get_stack_trace[1946] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:16:15: note:  
		    static def get_stack_trace(info : stack_state) : string {
		              ^

0 [0x0]: line: 17 pushl 0   : protected asm start
1 [0x1]:          int 0x36   
2 [0x2]:          popobj2    
3 [0x3]:          returnobj   
4 [0x4]:          ret   
5 [0x5]: line: 24 pushnull    : protected asm end
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: platform.kernel#vm.thread_create[1947] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:27:15: note:  
		    static def thread_create(daemon: var) : var {
		              ^

0 [0x0]: line: 28 istorel 0, fp+1   
2 [0x2]: line: 29 movi #1882, adx   : protected asm start
4 [0x4]:          loadl ebx, fp+0   
5 [0x5]:          int 0x10   
6 [0x6]:          smovr_2 ebx, fp+1   
7 [0x7]: line: 36 loadl ebx, fp+1   : protected asm end
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: platform.kernel#vm.suspend[1948] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:39:15: note:  
		    static def suspend(t: thread) : thread_result {
		              ^

0 [0x0]: line: 40 pushl 0   
1 [0x1]:          call @1857 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 41 istorel 0, fp+2   
5 [0x5]: line: 43 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0x12   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 49 ipushl #2   : protected asm end
9 [0x9]:          call @1883 // <std.io#thread_result.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#vm.unsuspend[1949] params(2) in file: lib\support\0.2.805/platform//kernel//vm.sharp:52:15: note:  
		    static def unsuspend(t: thread, wait: var) : thread_result {
		              ^

0 [0x0]: line: 53 pushl 0   
1 [0x1]:          call @1857 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 54 istorel 0, fp+3   
5 [0x5]: line: 56 loadl adx, fp+2   : protected asm start
6 [0x6]:          loadl ebx, fp+1   
7 [0x7]:          int 0x13   
8 [0x8]:          smovr_2 cmt, fp+3   
9 [0x9]: line: 63 ipushl #3   : protected asm end
10 [0xa]:          call @1883 // <std.io#thread_result.at>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


function: platform.kernel#vm.thread_join[1950] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:66:15: note:  
		    static def thread_join(t: thread) : thread_result {
		              ^

0 [0x0]: line: 67 pushl 0   
1 [0x1]:          call @1857 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 68 istorel 0, fp+2   
5 [0x5]: line: 70 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xd   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 76 ipushl #2   : protected asm end
9 [0x9]:          call @1883 // <std.io#thread_result.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#vm.kill[1951] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:79:15: note:  
		    static def kill(t: thread) : thread_result {
		              ^

0 [0x0]: line: 80 pushl 0   
1 [0x1]:          call @1857 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 81 istorel 0, fp+2   
5 [0x5]: line: 83 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xe   
7 [0x7]:          smovr_2 cmt, fp+2   : protected asm end
8 [0x8]: line: 89 pushl 0   
9 [0x9]:          istore 1   
11 [0xb]:          call @1953 // <platform.kernel#vm.exit_thread>   
12 [0xc]: line: 90 ipushl #2   
13 [0xd]:          call @1883 // <std.io#thread_result.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: platform.kernel#vm.current_thread[1952] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:93:15: note:  
		    static def current_thread() : thread {
		              ^

0 [0x0]: line: 94 int 0x15   : protected asm start
1 [0x1]:          popobj2    
2 [0x2]:          returnobj   
3 [0x3]:          ret   
4 [0x4]: line: 101 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#vm.exit_thread[1953] params(2) in file: lib\support\0.2.805/platform//kernel//vm.sharp:104:15: note:  
		    static def exit_thread(t: thread, code: var) {
		              ^

0 [0x0]: line: 105 movi #1, ebx   : protected asm start
2 [0x2]:           movi #0, egx   
4 [0x4]:           movi #-1, ecx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #6   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movl 0   
13 [0xd]:           movn #9   
15 [0xf]:           rmov adx, egx   
16 [0x10]:           loadl egx, fp+1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           rmov adx, egx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           rmov adx, ecx   
25 [0x19]:           ret   : protected asm end


function: platform.kernel#vm.thread_yield[1954] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:129:15: note:  
		    static def thread_yield() {
		              ^

0 [0x0]: line: 130 int 0x1c   : protected asm start
1 [0x1]:           ret   : protected asm end


function: platform.kernel#vm.thread_start[1955] params(2) in file: lib\support\0.2.805/platform//kernel//vm.sharp:135:15: note:  
		    static def thread_start(t: thread, args: object[]) : thread_result {
		              ^

0 [0x0]: line: 136 pushl 0   
1 [0x1]:           call @1857 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 137 pushl 0   
4 [0x4]:           call @1858 // <std.io#thread.get_stack_size>   
5 [0x5]:           ipopl 3   
6 [0x6]: line: 138 istorel 0, fp+4   
8 [0x8]: line: 140 loadl ebx, fp+3   : protected asm start
9 [0x9]:           loadl adx, fp+2   
10 [0xa]:           pushl 1   
11 [0xb]:           pushl 0   
12 [0xc]:           int 0xc   
13 [0xd]:           smovr_2 cmt, fp+4   
14 [0xe]: line: 149 ipushl #4   : protected asm end
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           test ecx, ebx   
19 [0x13]:           jne 31   
20 [0x14]: line: 150 pushl 0   
21 [0x15]:           call @1862 // <std.io#thread.is_started>   
22 [0x16]:           loadval ebx   
23 [0x17]:           not ebx, ebx   
24 [0x18]:           movr cmt, ebx   
25 [0x19]:           jne 31   
26 [0x1a]: line: 151 call @1852 // <std.io#thread.yield>   
27 [0x1b]: line: 152 istore 1   
29 [0x1d]:           call @1847 // <std.io#thread.sleep>   
30 [0x1e]:           jmp @20   
31 [0x1f]:           nop   
32 [0x20]: line: 156 ipushl #4   
33 [0x21]:           call @1883 // <std.io#thread_result.at>   
34 [0x22]:           popobj2    
35 [0x23]:           returnobj   
36 [0x24]:           ret   


function: platform.kernel#vm.set_thread_priority[1956] params(2) in file: lib\support\0.2.805/platform//kernel//vm.sharp:159:15: note:  
		    static def set_thread_priority(t: thread, priority: var) : thread_result {
		              ^

0 [0x0]: line: 160 pushl 0   
1 [0x1]:           call @1857 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 161 istorel 0, fp+3   
5 [0x5]: line: 163 loadl adx, fp+2   : protected asm start
6 [0x6]:           loadl egx, fp+1   
7 [0x7]:           int 0x11   
8 [0x8]:           smovr_2 cmt, fp+3   
9 [0x9]: line: 170 ipushl #3   : protected asm end
10 [0xa]:           call @1883 // <std.io#thread_result.at>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: platform.kernel#vm.set_thread[1957] params(1) in file: lib\support\0.2.805/platform//kernel//vm.sharp:173:15: note:  
		    static def set_thread(t: thread) {
		              ^

0 [0x0]: line: 174 pushl 0   : protected asm start
1 [0x1]:           int 0x17   
2 [0x2]:           ret   : protected asm end


function: platform.kernel#vm.thread_args[1958] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:180:15: note:  
		    static def thread_args() : object[] {
		              ^

0 [0x0]: line: 181 int 0x16   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 188 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#vm.cores[1959] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:191:15: note:  
		    static def cores() : var {
		              ^

0 [0x0]: line: 192 istorel 0, fp+0   
2 [0x2]: line: 194 int 0x38   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 199 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


constructor: platform.kernel#vm.vm[1960] params(0) in file: lib\support\0.2.805/platform//kernel//vm.sharp:5:6: note:  
		class vm {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#ulong.ulong[1961] params(1) in file: lib\support\0.2.805/primitives.sharp:254:10: note:  
		    ulong(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @18 // <std#integer<_uint64>.integer>   
13 [0xd]:         ret   


constructor: std#ulong.ulong[1962] params(1) in file: lib\support\0.2.805/primitives.sharp:255:10: note:  
		    ulong(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @18 // <std#integer<_uint64>.integer>   
13 [0xd]:         ret   


constructor: std#ulong.ulong[1963] params(1) in file: lib\support\0.2.805/primitives.sharp:256:10: note:  
		    ulong(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @18 // <std#integer<_uint64>.integer>   
13 [0xd]:         ret   


constructor: std#ulong.ulong[1964] params(1) in file: lib\support\0.2.805/primitives.sharp:257:10: note:  
		    ulong(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @18 // <std#integer<_uint64>.integer>   
13 [0xd]:         ret   


constructor: std#ulong.ulong[1965] params(1) in file: lib\support\0.2.805/primitives.sharp:258:10: note:  
		    ulong(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @18 // <std#integer<_uint64>.integer>   
13 [0xd]:         ret   


constructor: std#ulong.ulong[1966] params(1) in file: lib\support\0.2.805/primitives.sharp:259:10: note:  
		    ulong(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @18 // <std#integer<_uint64>.integer>   
13 [0xd]:         ret   


constructor: std#ulong.ulong[1967] params(1) in file: lib\support\0.2.805/primitives.sharp:260:10: note:  
		    ulong(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @18 // <std#integer<_uint64>.integer>   
13 [0xd]:         ret   


constructor: std#ulong.ulong[1968] params(1) in file: lib\support\0.2.805/primitives.sharp:261:10: note:  
		    ulong(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @18 // <std#integer<_uint64>.integer>   
13 [0xd]:         ret   


constructor: std#ulong.ulong[1969] params(1) in file: lib\support\0.2.805/primitives.sharp:262:10: note:  
		    ulong(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @18 // <std#integer<_uint64>.integer>   
13 [0xd]:         ret   


constructor: std#ulong.ulong[1970] params(1) in file: lib\support\0.2.805/primitives.sharp:263:10: note:  
		    ulong(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @18 // <std#integer<_uint64>.integer>   
13 [0xd]:         ret   


constructor: std#ulong.ulong[1971] params(1) in file: lib\support\0.2.805/primitives.sharp:264:10: note:  
		    ulong(i : var) -> base(i) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #44, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ipushl #1   
6 [0x6]:         call @18 // <std#integer<_uint64>.integer>   
7 [0x7]:         ret   


overload function: std#ulong.operator![1972] params(0) in file: lib\support\0.2.805/primitives.sharp:266:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 266 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#ulong.operator++[1973] params(0) in file: lib\support\0.2.805/primitives.sharp:267:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 267 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ulong.operator++[1974] params(1) in file: lib\support\0.2.805/primitives.sharp:268:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 268 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ulong.operator--[1975] params(0) in file: lib\support\0.2.805/primitives.sharp:269:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 269 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ulong.operator--[1976] params(1) in file: lib\support\0.2.805/primitives.sharp:270:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ulong.operator+=[1977] params(1) in file: lib\support\0.2.805/primitives.sharp:272:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 272 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1978] params(1) in file: lib\support\0.2.805/primitives.sharp:273:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 273 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1979] params(1) in file: lib\support\0.2.805/primitives.sharp:274:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 274 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1980] params(1) in file: lib\support\0.2.805/primitives.sharp:275:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 275 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1981] params(1) in file: lib\support\0.2.805/primitives.sharp:276:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 276 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1982] params(1) in file: lib\support\0.2.805/primitives.sharp:277:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 277 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1983] params(1) in file: lib\support\0.2.805/primitives.sharp:278:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 278 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1984] params(1) in file: lib\support\0.2.805/primitives.sharp:279:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 279 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1985] params(1) in file: lib\support\0.2.805/primitives.sharp:280:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 280 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1986] params(1) in file: lib\support\0.2.805/primitives.sharp:281:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 281 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[1987] params(1) in file: lib\support\0.2.805/primitives.sharp:282:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 282 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator-=[1988] params(1) in file: lib\support\0.2.805/primitives.sharp:284:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 284 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1989] params(1) in file: lib\support\0.2.805/primitives.sharp:285:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 285 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1990] params(1) in file: lib\support\0.2.805/primitives.sharp:286:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 286 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1991] params(1) in file: lib\support\0.2.805/primitives.sharp:287:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 287 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1992] params(1) in file: lib\support\0.2.805/primitives.sharp:288:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 288 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1993] params(1) in file: lib\support\0.2.805/primitives.sharp:289:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 289 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1994] params(1) in file: lib\support\0.2.805/primitives.sharp:290:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 290 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1995] params(1) in file: lib\support\0.2.805/primitives.sharp:291:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 291 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1996] params(1) in file: lib\support\0.2.805/primitives.sharp:292:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 292 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1997] params(1) in file: lib\support\0.2.805/primitives.sharp:293:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 293 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[1998] params(1) in file: lib\support\0.2.805/primitives.sharp:294:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 294 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator*=[1999] params(1) in file: lib\support\0.2.805/primitives.sharp:296:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 296 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2000] params(1) in file: lib\support\0.2.805/primitives.sharp:297:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 297 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2001] params(1) in file: lib\support\0.2.805/primitives.sharp:298:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 298 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2002] params(1) in file: lib\support\0.2.805/primitives.sharp:299:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 299 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2003] params(1) in file: lib\support\0.2.805/primitives.sharp:300:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 300 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2004] params(1) in file: lib\support\0.2.805/primitives.sharp:301:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 301 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2005] params(1) in file: lib\support\0.2.805/primitives.sharp:302:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 302 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2006] params(1) in file: lib\support\0.2.805/primitives.sharp:303:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 303 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2007] params(1) in file: lib\support\0.2.805/primitives.sharp:304:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 304 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2008] params(1) in file: lib\support\0.2.805/primitives.sharp:305:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 305 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2009] params(1) in file: lib\support\0.2.805/primitives.sharp:306:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 306 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator/=[2010] params(1) in file: lib\support\0.2.805/primitives.sharp:308:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 308 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2011] params(1) in file: lib\support\0.2.805/primitives.sharp:309:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 309 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2012] params(1) in file: lib\support\0.2.805/primitives.sharp:310:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 310 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2013] params(1) in file: lib\support\0.2.805/primitives.sharp:311:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 311 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2014] params(1) in file: lib\support\0.2.805/primitives.sharp:312:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 312 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2015] params(1) in file: lib\support\0.2.805/primitives.sharp:313:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 313 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2016] params(1) in file: lib\support\0.2.805/primitives.sharp:314:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 314 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2017] params(1) in file: lib\support\0.2.805/primitives.sharp:315:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 315 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2018] params(1) in file: lib\support\0.2.805/primitives.sharp:316:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 316 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2019] params(1) in file: lib\support\0.2.805/primitives.sharp:317:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 317 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2020] params(1) in file: lib\support\0.2.805/primitives.sharp:318:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 318 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator%=[2021] params(1) in file: lib\support\0.2.805/primitives.sharp:320:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 320 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2022] params(1) in file: lib\support\0.2.805/primitives.sharp:321:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 321 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2023] params(1) in file: lib\support\0.2.805/primitives.sharp:322:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 322 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2024] params(1) in file: lib\support\0.2.805/primitives.sharp:323:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 323 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2025] params(1) in file: lib\support\0.2.805/primitives.sharp:324:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 324 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2026] params(1) in file: lib\support\0.2.805/primitives.sharp:325:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 325 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2027] params(1) in file: lib\support\0.2.805/primitives.sharp:326:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 326 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2028] params(1) in file: lib\support\0.2.805/primitives.sharp:327:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 327 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2029] params(1) in file: lib\support\0.2.805/primitives.sharp:328:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 328 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2030] params(1) in file: lib\support\0.2.805/primitives.sharp:329:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 329 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2031] params(1) in file: lib\support\0.2.805/primitives.sharp:330:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 330 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator&=[2032] params(1) in file: lib\support\0.2.805/primitives.sharp:332:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 332 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2033] params(1) in file: lib\support\0.2.805/primitives.sharp:333:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 333 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2034] params(1) in file: lib\support\0.2.805/primitives.sharp:334:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 334 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2035] params(1) in file: lib\support\0.2.805/primitives.sharp:335:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 335 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2036] params(1) in file: lib\support\0.2.805/primitives.sharp:336:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 336 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2037] params(1) in file: lib\support\0.2.805/primitives.sharp:337:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 337 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2038] params(1) in file: lib\support\0.2.805/primitives.sharp:338:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 338 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2039] params(1) in file: lib\support\0.2.805/primitives.sharp:339:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 339 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2040] params(1) in file: lib\support\0.2.805/primitives.sharp:340:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 340 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2041] params(1) in file: lib\support\0.2.805/primitives.sharp:341:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 341 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2042] params(1) in file: lib\support\0.2.805/primitives.sharp:342:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 342 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#ulong.operator|=[2043] params(1) in file: lib\support\0.2.805/primitives.sharp:344:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 344 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2044] params(1) in file: lib\support\0.2.805/primitives.sharp:345:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 345 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2045] params(1) in file: lib\support\0.2.805/primitives.sharp:346:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 346 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2046] params(1) in file: lib\support\0.2.805/primitives.sharp:347:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 347 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2047] params(1) in file: lib\support\0.2.805/primitives.sharp:348:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 348 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2048] params(1) in file: lib\support\0.2.805/primitives.sharp:349:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 349 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2049] params(1) in file: lib\support\0.2.805/primitives.sharp:350:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 350 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2050] params(1) in file: lib\support\0.2.805/primitives.sharp:351:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 351 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2051] params(1) in file: lib\support\0.2.805/primitives.sharp:352:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 352 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2052] params(1) in file: lib\support\0.2.805/primitives.sharp:353:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 353 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2053] params(1) in file: lib\support\0.2.805/primitives.sharp:354:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 354 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#ulong.ulong[2054] params(0) in file: lib\support\0.2.805/primitives.sharp:253:6: note:  
		class ulong base integer<_uint64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @210 // <std#integer<_uint64>.integer>   
2 [0x2]:         ret   


constructor: std#long.long[2055] params(1) in file: lib\support\0.2.805/primitives.sharp:357:9: note:  
		    long(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @211 // <std#integer<_int64>.integer>   
13 [0xd]:         ret   


constructor: std#long.long[2056] params(1) in file: lib\support\0.2.805/primitives.sharp:358:9: note:  
		    long(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @211 // <std#integer<_int64>.integer>   
13 [0xd]:         ret   


constructor: std#long.long[2057] params(1) in file: lib\support\0.2.805/primitives.sharp:359:9: note:  
		    long(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @211 // <std#integer<_int64>.integer>   
13 [0xd]:         ret   


constructor: std#long.long[2058] params(1) in file: lib\support\0.2.805/primitives.sharp:360:9: note:  
		    long(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @211 // <std#integer<_int64>.integer>   
13 [0xd]:         ret   


constructor: std#long.long[2059] params(1) in file: lib\support\0.2.805/primitives.sharp:361:9: note:  
		    long(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @211 // <std#integer<_int64>.integer>   
13 [0xd]:         ret   


constructor: std#long.long[2060] params(1) in file: lib\support\0.2.805/primitives.sharp:362:9: note:  
		    long(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @211 // <std#integer<_int64>.integer>   
13 [0xd]:         ret   


constructor: std#long.long[2061] params(1) in file: lib\support\0.2.805/primitives.sharp:363:9: note:  
		    long(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @211 // <std#integer<_int64>.integer>   
13 [0xd]:         ret   


constructor: std#long.long[2062] params(1) in file: lib\support\0.2.805/primitives.sharp:364:9: note:  
		    long(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @211 // <std#integer<_int64>.integer>   
13 [0xd]:         ret   


constructor: std#long.long[2063] params(1) in file: lib\support\0.2.805/primitives.sharp:365:9: note:  
		    long(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @211 // <std#integer<_int64>.integer>   
13 [0xd]:         ret   


constructor: std#long.long[2064] params(1) in file: lib\support\0.2.805/primitives.sharp:366:9: note:  
		    long(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @211 // <std#integer<_int64>.integer>   
13 [0xd]:         ret   


constructor: std#long.long[2065] params(1) in file: lib\support\0.2.805/primitives.sharp:367:9: note:  
		    long(i : var) -> base(i) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #45, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ipushl #1   
6 [0x6]:         call @211 // <std#integer<_int64>.integer>   
7 [0x7]:         ret   


overload function: std#long.operator![2066] params(0) in file: lib\support\0.2.805/primitives.sharp:369:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 369 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#long.operator++[2067] params(0) in file: lib\support\0.2.805/primitives.sharp:370:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 370 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#long.operator++[2068] params(1) in file: lib\support\0.2.805/primitives.sharp:371:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 371 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#long.operator--[2069] params(0) in file: lib\support\0.2.805/primitives.sharp:372:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 372 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#long.operator--[2070] params(1) in file: lib\support\0.2.805/primitives.sharp:373:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 373 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#long.operator+=[2071] params(1) in file: lib\support\0.2.805/primitives.sharp:375:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 375 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2072] params(1) in file: lib\support\0.2.805/primitives.sharp:376:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 376 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2073] params(1) in file: lib\support\0.2.805/primitives.sharp:377:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 377 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2074] params(1) in file: lib\support\0.2.805/primitives.sharp:378:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 378 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2075] params(1) in file: lib\support\0.2.805/primitives.sharp:379:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 379 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2076] params(1) in file: lib\support\0.2.805/primitives.sharp:380:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 380 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2077] params(1) in file: lib\support\0.2.805/primitives.sharp:381:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 381 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2078] params(1) in file: lib\support\0.2.805/primitives.sharp:382:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 382 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2079] params(1) in file: lib\support\0.2.805/primitives.sharp:383:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 383 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2080] params(1) in file: lib\support\0.2.805/primitives.sharp:384:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 384 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2081] params(1) in file: lib\support\0.2.805/primitives.sharp:385:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 385 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator-=[2082] params(1) in file: lib\support\0.2.805/primitives.sharp:387:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 387 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2083] params(1) in file: lib\support\0.2.805/primitives.sharp:388:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 388 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2084] params(1) in file: lib\support\0.2.805/primitives.sharp:389:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 389 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2085] params(1) in file: lib\support\0.2.805/primitives.sharp:390:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 390 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2086] params(1) in file: lib\support\0.2.805/primitives.sharp:391:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 391 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2087] params(1) in file: lib\support\0.2.805/primitives.sharp:392:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 392 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2088] params(1) in file: lib\support\0.2.805/primitives.sharp:393:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 393 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2089] params(1) in file: lib\support\0.2.805/primitives.sharp:394:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 394 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2090] params(1) in file: lib\support\0.2.805/primitives.sharp:395:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 395 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2091] params(1) in file: lib\support\0.2.805/primitives.sharp:396:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 396 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2092] params(1) in file: lib\support\0.2.805/primitives.sharp:397:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 397 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator*=[2093] params(1) in file: lib\support\0.2.805/primitives.sharp:399:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 399 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2094] params(1) in file: lib\support\0.2.805/primitives.sharp:400:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 400 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2095] params(1) in file: lib\support\0.2.805/primitives.sharp:401:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 401 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2096] params(1) in file: lib\support\0.2.805/primitives.sharp:402:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 402 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2097] params(1) in file: lib\support\0.2.805/primitives.sharp:403:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 403 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2098] params(1) in file: lib\support\0.2.805/primitives.sharp:404:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 404 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2099] params(1) in file: lib\support\0.2.805/primitives.sharp:405:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 405 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2100] params(1) in file: lib\support\0.2.805/primitives.sharp:406:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 406 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2101] params(1) in file: lib\support\0.2.805/primitives.sharp:407:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 407 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2102] params(1) in file: lib\support\0.2.805/primitives.sharp:408:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 408 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2103] params(1) in file: lib\support\0.2.805/primitives.sharp:409:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 409 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator/=[2104] params(1) in file: lib\support\0.2.805/primitives.sharp:411:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 411 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2105] params(1) in file: lib\support\0.2.805/primitives.sharp:412:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 412 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2106] params(1) in file: lib\support\0.2.805/primitives.sharp:413:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 413 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2107] params(1) in file: lib\support\0.2.805/primitives.sharp:414:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 414 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2108] params(1) in file: lib\support\0.2.805/primitives.sharp:415:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 415 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2109] params(1) in file: lib\support\0.2.805/primitives.sharp:416:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 416 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2110] params(1) in file: lib\support\0.2.805/primitives.sharp:417:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 417 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2111] params(1) in file: lib\support\0.2.805/primitives.sharp:418:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 418 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2112] params(1) in file: lib\support\0.2.805/primitives.sharp:419:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 419 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2113] params(1) in file: lib\support\0.2.805/primitives.sharp:420:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 420 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2114] params(1) in file: lib\support\0.2.805/primitives.sharp:421:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 421 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator%=[2115] params(1) in file: lib\support\0.2.805/primitives.sharp:423:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 423 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2116] params(1) in file: lib\support\0.2.805/primitives.sharp:424:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 424 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2117] params(1) in file: lib\support\0.2.805/primitives.sharp:425:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 425 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2118] params(1) in file: lib\support\0.2.805/primitives.sharp:426:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 426 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2119] params(1) in file: lib\support\0.2.805/primitives.sharp:427:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 427 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2120] params(1) in file: lib\support\0.2.805/primitives.sharp:428:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 428 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2121] params(1) in file: lib\support\0.2.805/primitives.sharp:429:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 429 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2122] params(1) in file: lib\support\0.2.805/primitives.sharp:430:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 430 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2123] params(1) in file: lib\support\0.2.805/primitives.sharp:431:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 431 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2124] params(1) in file: lib\support\0.2.805/primitives.sharp:432:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 432 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2125] params(1) in file: lib\support\0.2.805/primitives.sharp:433:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 433 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator&=[2126] params(1) in file: lib\support\0.2.805/primitives.sharp:435:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 435 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2127] params(1) in file: lib\support\0.2.805/primitives.sharp:436:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 436 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2128] params(1) in file: lib\support\0.2.805/primitives.sharp:437:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 437 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2129] params(1) in file: lib\support\0.2.805/primitives.sharp:438:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 438 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2130] params(1) in file: lib\support\0.2.805/primitives.sharp:439:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 439 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2131] params(1) in file: lib\support\0.2.805/primitives.sharp:440:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 440 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2132] params(1) in file: lib\support\0.2.805/primitives.sharp:441:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 441 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2133] params(1) in file: lib\support\0.2.805/primitives.sharp:442:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 442 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2134] params(1) in file: lib\support\0.2.805/primitives.sharp:443:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 443 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2135] params(1) in file: lib\support\0.2.805/primitives.sharp:444:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 444 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2136] params(1) in file: lib\support\0.2.805/primitives.sharp:445:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 445 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#long.operator|=[2137] params(1) in file: lib\support\0.2.805/primitives.sharp:447:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 447 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2138] params(1) in file: lib\support\0.2.805/primitives.sharp:448:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 448 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2139] params(1) in file: lib\support\0.2.805/primitives.sharp:449:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 449 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2140] params(1) in file: lib\support\0.2.805/primitives.sharp:450:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 450 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2141] params(1) in file: lib\support\0.2.805/primitives.sharp:451:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 451 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2142] params(1) in file: lib\support\0.2.805/primitives.sharp:452:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 452 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2143] params(1) in file: lib\support\0.2.805/primitives.sharp:453:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 453 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2144] params(1) in file: lib\support\0.2.805/primitives.sharp:454:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 454 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2145] params(1) in file: lib\support\0.2.805/primitives.sharp:455:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 455 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2146] params(1) in file: lib\support\0.2.805/primitives.sharp:456:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 456 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2147] params(1) in file: lib\support\0.2.805/primitives.sharp:457:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 457 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#long.long[2148] params(0) in file: lib\support\0.2.805/primitives.sharp:356:6: note:  
		class long base integer<_int64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @403 // <std#integer<_int64>.integer>   
2 [0x2]:         ret   


constructor: std#uint.uint[2149] params(1) in file: lib\support\0.2.805/primitives.sharp:460:9: note:  
		    uint(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @404 // <std#integer<_uint32>.integer>   
13 [0xd]:         ret   


constructor: std#uint.uint[2150] params(1) in file: lib\support\0.2.805/primitives.sharp:461:9: note:  
		    uint(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @404 // <std#integer<_uint32>.integer>   
13 [0xd]:         ret   


constructor: std#uint.uint[2151] params(1) in file: lib\support\0.2.805/primitives.sharp:462:9: note:  
		    uint(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @404 // <std#integer<_uint32>.integer>   
13 [0xd]:         ret   


constructor: std#uint.uint[2152] params(1) in file: lib\support\0.2.805/primitives.sharp:463:9: note:  
		    uint(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @404 // <std#integer<_uint32>.integer>   
13 [0xd]:         ret   


constructor: std#uint.uint[2153] params(1) in file: lib\support\0.2.805/primitives.sharp:464:9: note:  
		    uint(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @404 // <std#integer<_uint32>.integer>   
13 [0xd]:         ret   


constructor: std#uint.uint[2154] params(1) in file: lib\support\0.2.805/primitives.sharp:465:9: note:  
		    uint(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @404 // <std#integer<_uint32>.integer>   
13 [0xd]:         ret   


constructor: std#uint.uint[2155] params(1) in file: lib\support\0.2.805/primitives.sharp:466:9: note:  
		    uint(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @404 // <std#integer<_uint32>.integer>   
13 [0xd]:         ret   


constructor: std#uint.uint[2156] params(1) in file: lib\support\0.2.805/primitives.sharp:467:9: note:  
		    uint(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @404 // <std#integer<_uint32>.integer>   
13 [0xd]:         ret   


constructor: std#uint.uint[2157] params(1) in file: lib\support\0.2.805/primitives.sharp:468:9: note:  
		    uint(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @404 // <std#integer<_uint32>.integer>   
13 [0xd]:         ret   


constructor: std#uint.uint[2158] params(1) in file: lib\support\0.2.805/primitives.sharp:469:9: note:  
		    uint(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @404 // <std#integer<_uint32>.integer>   
13 [0xd]:         ret   


constructor: std#uint.uint[2159] params(1) in file: lib\support\0.2.805/primitives.sharp:470:9: note:  
		    uint(i : var) -> base(i) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #46, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ipushl #1   
6 [0x6]:         call @404 // <std#integer<_uint32>.integer>   
7 [0x7]:         ret   


overload function: std#uint.operator![2160] params(0) in file: lib\support\0.2.805/primitives.sharp:472:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 472 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#uint.operator++[2161] params(0) in file: lib\support\0.2.805/primitives.sharp:473:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 473 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uint.operator++[2162] params(1) in file: lib\support\0.2.805/primitives.sharp:474:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 474 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uint.operator--[2163] params(0) in file: lib\support\0.2.805/primitives.sharp:475:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 475 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uint.operator--[2164] params(1) in file: lib\support\0.2.805/primitives.sharp:476:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 476 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uint.operator+=[2165] params(1) in file: lib\support\0.2.805/primitives.sharp:478:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 478 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2166] params(1) in file: lib\support\0.2.805/primitives.sharp:479:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 479 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2167] params(1) in file: lib\support\0.2.805/primitives.sharp:480:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 480 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2168] params(1) in file: lib\support\0.2.805/primitives.sharp:481:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 481 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2169] params(1) in file: lib\support\0.2.805/primitives.sharp:482:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 482 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2170] params(1) in file: lib\support\0.2.805/primitives.sharp:483:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 483 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2171] params(1) in file: lib\support\0.2.805/primitives.sharp:484:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 484 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2172] params(1) in file: lib\support\0.2.805/primitives.sharp:485:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 485 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2173] params(1) in file: lib\support\0.2.805/primitives.sharp:486:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 486 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2174] params(1) in file: lib\support\0.2.805/primitives.sharp:487:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 487 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2175] params(1) in file: lib\support\0.2.805/primitives.sharp:488:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 488 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator-=[2176] params(1) in file: lib\support\0.2.805/primitives.sharp:490:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 490 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2177] params(1) in file: lib\support\0.2.805/primitives.sharp:491:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 491 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2178] params(1) in file: lib\support\0.2.805/primitives.sharp:492:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 492 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2179] params(1) in file: lib\support\0.2.805/primitives.sharp:493:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 493 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2180] params(1) in file: lib\support\0.2.805/primitives.sharp:494:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 494 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2181] params(1) in file: lib\support\0.2.805/primitives.sharp:495:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 495 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2182] params(1) in file: lib\support\0.2.805/primitives.sharp:496:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 496 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2183] params(1) in file: lib\support\0.2.805/primitives.sharp:497:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 497 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2184] params(1) in file: lib\support\0.2.805/primitives.sharp:498:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 498 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2185] params(1) in file: lib\support\0.2.805/primitives.sharp:499:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 499 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2186] params(1) in file: lib\support\0.2.805/primitives.sharp:500:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 500 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator*=[2187] params(1) in file: lib\support\0.2.805/primitives.sharp:502:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 502 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2188] params(1) in file: lib\support\0.2.805/primitives.sharp:503:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 503 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2189] params(1) in file: lib\support\0.2.805/primitives.sharp:504:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 504 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2190] params(1) in file: lib\support\0.2.805/primitives.sharp:505:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 505 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2191] params(1) in file: lib\support\0.2.805/primitives.sharp:506:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 506 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2192] params(1) in file: lib\support\0.2.805/primitives.sharp:507:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 507 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2193] params(1) in file: lib\support\0.2.805/primitives.sharp:508:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 508 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2194] params(1) in file: lib\support\0.2.805/primitives.sharp:509:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 509 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2195] params(1) in file: lib\support\0.2.805/primitives.sharp:510:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 510 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2196] params(1) in file: lib\support\0.2.805/primitives.sharp:511:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 511 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2197] params(1) in file: lib\support\0.2.805/primitives.sharp:512:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 512 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator/=[2198] params(1) in file: lib\support\0.2.805/primitives.sharp:514:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 514 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2199] params(1) in file: lib\support\0.2.805/primitives.sharp:515:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 515 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2200] params(1) in file: lib\support\0.2.805/primitives.sharp:516:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 516 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2201] params(1) in file: lib\support\0.2.805/primitives.sharp:517:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 517 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2202] params(1) in file: lib\support\0.2.805/primitives.sharp:518:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 518 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2203] params(1) in file: lib\support\0.2.805/primitives.sharp:519:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 519 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2204] params(1) in file: lib\support\0.2.805/primitives.sharp:520:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 520 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2205] params(1) in file: lib\support\0.2.805/primitives.sharp:521:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 521 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2206] params(1) in file: lib\support\0.2.805/primitives.sharp:522:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 522 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2207] params(1) in file: lib\support\0.2.805/primitives.sharp:523:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 523 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2208] params(1) in file: lib\support\0.2.805/primitives.sharp:524:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 524 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator%=[2209] params(1) in file: lib\support\0.2.805/primitives.sharp:526:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 526 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2210] params(1) in file: lib\support\0.2.805/primitives.sharp:527:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 527 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2211] params(1) in file: lib\support\0.2.805/primitives.sharp:528:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 528 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2212] params(1) in file: lib\support\0.2.805/primitives.sharp:529:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 529 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2213] params(1) in file: lib\support\0.2.805/primitives.sharp:530:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 530 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2214] params(1) in file: lib\support\0.2.805/primitives.sharp:531:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 531 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2215] params(1) in file: lib\support\0.2.805/primitives.sharp:532:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 532 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2216] params(1) in file: lib\support\0.2.805/primitives.sharp:533:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 533 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2217] params(1) in file: lib\support\0.2.805/primitives.sharp:534:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 534 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2218] params(1) in file: lib\support\0.2.805/primitives.sharp:535:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 535 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2219] params(1) in file: lib\support\0.2.805/primitives.sharp:536:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 536 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator&=[2220] params(1) in file: lib\support\0.2.805/primitives.sharp:538:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 538 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2221] params(1) in file: lib\support\0.2.805/primitives.sharp:539:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 539 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2222] params(1) in file: lib\support\0.2.805/primitives.sharp:540:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 540 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2223] params(1) in file: lib\support\0.2.805/primitives.sharp:541:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 541 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2224] params(1) in file: lib\support\0.2.805/primitives.sharp:542:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 542 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2225] params(1) in file: lib\support\0.2.805/primitives.sharp:543:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 543 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2226] params(1) in file: lib\support\0.2.805/primitives.sharp:544:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 544 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2227] params(1) in file: lib\support\0.2.805/primitives.sharp:545:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 545 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2228] params(1) in file: lib\support\0.2.805/primitives.sharp:546:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 546 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2229] params(1) in file: lib\support\0.2.805/primitives.sharp:547:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 547 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2230] params(1) in file: lib\support\0.2.805/primitives.sharp:548:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 548 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#uint.operator|=[2231] params(1) in file: lib\support\0.2.805/primitives.sharp:550:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 550 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2232] params(1) in file: lib\support\0.2.805/primitives.sharp:551:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 551 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2233] params(1) in file: lib\support\0.2.805/primitives.sharp:552:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 552 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2234] params(1) in file: lib\support\0.2.805/primitives.sharp:553:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 553 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2235] params(1) in file: lib\support\0.2.805/primitives.sharp:554:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 554 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2236] params(1) in file: lib\support\0.2.805/primitives.sharp:555:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 555 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2237] params(1) in file: lib\support\0.2.805/primitives.sharp:556:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 556 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2238] params(1) in file: lib\support\0.2.805/primitives.sharp:557:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 557 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2239] params(1) in file: lib\support\0.2.805/primitives.sharp:558:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 558 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2240] params(1) in file: lib\support\0.2.805/primitives.sharp:559:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 559 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2241] params(1) in file: lib\support\0.2.805/primitives.sharp:560:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 560 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#uint.uint[2242] params(0) in file: lib\support\0.2.805/primitives.sharp:459:6: note:  
		class uint base integer<_uint32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @596 // <std#integer<_uint32>.integer>   
2 [0x2]:         ret   


constructor: std#int.int[2243] params(1) in file: lib\support\0.2.805/primitives.sharp:563:8: note:  
		    int(i : long) -> base(i.value) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @597 // <std#integer<_int32>.integer>   
13 [0xd]:         ret   


constructor: std#int.int[2244] params(1) in file: lib\support\0.2.805/primitives.sharp:564:8: note:  
		    int(i : int) -> base(i.value) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @597 // <std#integer<_int32>.integer>   
13 [0xd]:         ret   


constructor: std#int.int[2245] params(1) in file: lib\support\0.2.805/primitives.sharp:565:8: note:  
		    int(i : short) -> base(i.value) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @597 // <std#integer<_int32>.integer>   
13 [0xd]:         ret   


constructor: std#int.int[2246] params(1) in file: lib\support\0.2.805/primitives.sharp:566:8: note:  
		    int(i : char) -> base(i.value) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @597 // <std#integer<_int32>.integer>   
13 [0xd]:         ret   


constructor: std#int.int[2247] params(1) in file: lib\support\0.2.805/primitives.sharp:567:8: note:  
		    int(i : byte) -> base(i.value) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @597 // <std#integer<_int32>.integer>   
13 [0xd]:         ret   


constructor: std#int.int[2248] params(1) in file: lib\support\0.2.805/primitives.sharp:568:8: note:  
		    int(i : bool) -> base(i.value) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @597 // <std#integer<_int32>.integer>   
13 [0xd]:         ret   


constructor: std#int.int[2249] params(1) in file: lib\support\0.2.805/primitives.sharp:569:8: note:  
		    int(i : ulong) -> base(i.value) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @597 // <std#integer<_int32>.integer>   
13 [0xd]:         ret   


constructor: std#int.int[2250] params(1) in file: lib\support\0.2.805/primitives.sharp:570:8: note:  
		    int(i : uint) -> base(i.value) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @597 // <std#integer<_int32>.integer>   
13 [0xd]:         ret   


constructor: std#int.int[2251] params(1) in file: lib\support\0.2.805/primitives.sharp:571:8: note:  
		    int(i : ushort) -> base(i.value) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @597 // <std#integer<_int32>.integer>   
13 [0xd]:         ret   


constructor: std#int.int[2252] params(1) in file: lib\support\0.2.805/primitives.sharp:572:8: note:  
		    int(i : uchar) -> base(i.value) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @597 // <std#integer<_int32>.integer>   
13 [0xd]:         ret   


constructor: std#int.int[2253] params(1) in file: lib\support\0.2.805/primitives.sharp:573:8: note:  
		    int(i : var) -> base(i) {}
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #47, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ipushl #1   
6 [0x6]:         call @597 // <std#integer<_int32>.integer>   
7 [0x7]:         ret   


overload function: std#int.operator![2254] params(0) in file: lib\support\0.2.805/primitives.sharp:575:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 575 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#int.operator++[2255] params(0) in file: lib\support\0.2.805/primitives.sharp:576:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 576 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#int.operator++[2256] params(1) in file: lib\support\0.2.805/primitives.sharp:577:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 577 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#int.operator--[2257] params(0) in file: lib\support\0.2.805/primitives.sharp:578:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 578 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#int.operator--[2258] params(1) in file: lib\support\0.2.805/primitives.sharp:579:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 579 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#int.operator+=[2259] params(1) in file: lib\support\0.2.805/primitives.sharp:581:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 581 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2260] params(1) in file: lib\support\0.2.805/primitives.sharp:582:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 582 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2261] params(1) in file: lib\support\0.2.805/primitives.sharp:583:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 583 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2262] params(1) in file: lib\support\0.2.805/primitives.sharp:584:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 584 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2263] params(1) in file: lib\support\0.2.805/primitives.sharp:585:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 585 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2264] params(1) in file: lib\support\0.2.805/primitives.sharp:586:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 586 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2265] params(1) in file: lib\support\0.2.805/primitives.sharp:587:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 587 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2266] params(1) in file: lib\support\0.2.805/primitives.sharp:588:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 588 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2267] params(1) in file: lib\support\0.2.805/primitives.sharp:589:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 589 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2268] params(1) in file: lib\support\0.2.805/primitives.sharp:590:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 590 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2269] params(1) in file: lib\support\0.2.805/primitives.sharp:591:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 591 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator-=[2270] params(1) in file: lib\support\0.2.805/primitives.sharp:593:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 593 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2271] params(1) in file: lib\support\0.2.805/primitives.sharp:594:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 594 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2272] params(1) in file: lib\support\0.2.805/primitives.sharp:595:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 595 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2273] params(1) in file: lib\support\0.2.805/primitives.sharp:596:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 596 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2274] params(1) in file: lib\support\0.2.805/primitives.sharp:597:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 597 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2275] params(1) in file: lib\support\0.2.805/primitives.sharp:598:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 598 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2276] params(1) in file: lib\support\0.2.805/primitives.sharp:599:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 599 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2277] params(1) in file: lib\support\0.2.805/primitives.sharp:600:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 600 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2278] params(1) in file: lib\support\0.2.805/primitives.sharp:601:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 601 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2279] params(1) in file: lib\support\0.2.805/primitives.sharp:602:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 602 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2280] params(1) in file: lib\support\0.2.805/primitives.sharp:603:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 603 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator*=[2281] params(1) in file: lib\support\0.2.805/primitives.sharp:605:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 605 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2282] params(1) in file: lib\support\0.2.805/primitives.sharp:606:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 606 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2283] params(1) in file: lib\support\0.2.805/primitives.sharp:607:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 607 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2284] params(1) in file: lib\support\0.2.805/primitives.sharp:608:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 608 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2285] params(1) in file: lib\support\0.2.805/primitives.sharp:609:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 609 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2286] params(1) in file: lib\support\0.2.805/primitives.sharp:610:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 610 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2287] params(1) in file: lib\support\0.2.805/primitives.sharp:611:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 611 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2288] params(1) in file: lib\support\0.2.805/primitives.sharp:612:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 612 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2289] params(1) in file: lib\support\0.2.805/primitives.sharp:613:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 613 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2290] params(1) in file: lib\support\0.2.805/primitives.sharp:614:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 614 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2291] params(1) in file: lib\support\0.2.805/primitives.sharp:615:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 615 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator/=[2292] params(1) in file: lib\support\0.2.805/primitives.sharp:617:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 617 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2293] params(1) in file: lib\support\0.2.805/primitives.sharp:618:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 618 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2294] params(1) in file: lib\support\0.2.805/primitives.sharp:619:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 619 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2295] params(1) in file: lib\support\0.2.805/primitives.sharp:620:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 620 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2296] params(1) in file: lib\support\0.2.805/primitives.sharp:621:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 621 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2297] params(1) in file: lib\support\0.2.805/primitives.sharp:622:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 622 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2298] params(1) in file: lib\support\0.2.805/primitives.sharp:623:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 623 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2299] params(1) in file: lib\support\0.2.805/primitives.sharp:624:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 624 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2300] params(1) in file: lib\support\0.2.805/primitives.sharp:625:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 625 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2301] params(1) in file: lib\support\0.2.805/primitives.sharp:626:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 626 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2302] params(1) in file: lib\support\0.2.805/primitives.sharp:627:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 627 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator%=[2303] params(1) in file: lib\support\0.2.805/primitives.sharp:629:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 629 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2304] params(1) in file: lib\support\0.2.805/primitives.sharp:630:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 630 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2305] params(1) in file: lib\support\0.2.805/primitives.sharp:631:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 631 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2306] params(1) in file: lib\support\0.2.805/primitives.sharp:632:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 632 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2307] params(1) in file: lib\support\0.2.805/primitives.sharp:633:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 633 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2308] params(1) in file: lib\support\0.2.805/primitives.sharp:634:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 634 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2309] params(1) in file: lib\support\0.2.805/primitives.sharp:635:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 635 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2310] params(1) in file: lib\support\0.2.805/primitives.sharp:636:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 636 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2311] params(1) in file: lib\support\0.2.805/primitives.sharp:637:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 637 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2312] params(1) in file: lib\support\0.2.805/primitives.sharp:638:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 638 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2313] params(1) in file: lib\support\0.2.805/primitives.sharp:639:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 639 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator&=[2314] params(1) in file: lib\support\0.2.805/primitives.sharp:641:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 641 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2315] params(1) in file: lib\support\0.2.805/primitives.sharp:642:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 642 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2316] params(1) in file: lib\support\0.2.805/primitives.sharp:643:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 643 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2317] params(1) in file: lib\support\0.2.805/primitives.sharp:644:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 644 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2318] params(1) in file: lib\support\0.2.805/primitives.sharp:645:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 645 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2319] params(1) in file: lib\support\0.2.805/primitives.sharp:646:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 646 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2320] params(1) in file: lib\support\0.2.805/primitives.sharp:647:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 647 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2321] params(1) in file: lib\support\0.2.805/primitives.sharp:648:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 648 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2322] params(1) in file: lib\support\0.2.805/primitives.sharp:649:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 649 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2323] params(1) in file: lib\support\0.2.805/primitives.sharp:650:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 650 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2324] params(1) in file: lib\support\0.2.805/primitives.sharp:651:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 651 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#int.operator|=[2325] params(1) in file: lib\support\0.2.805/primitives.sharp:653:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 653 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2326] params(1) in file: lib\support\0.2.805/primitives.sharp:654:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 654 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2327] params(1) in file: lib\support\0.2.805/primitives.sharp:655:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 655 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2328] params(1) in file: lib\support\0.2.805/primitives.sharp:656:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 656 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2329] params(1) in file: lib\support\0.2.805/primitives.sharp:657:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 657 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2330] params(1) in file: lib\support\0.2.805/primitives.sharp:658:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 658 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2331] params(1) in file: lib\support\0.2.805/primitives.sharp:659:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 659 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2332] params(1) in file: lib\support\0.2.805/primitives.sharp:660:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 660 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2333] params(1) in file: lib\support\0.2.805/primitives.sharp:661:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 661 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2334] params(1) in file: lib\support\0.2.805/primitives.sharp:662:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 662 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2335] params(1) in file: lib\support\0.2.805/primitives.sharp:663:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 663 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#int.int[2336] params(0) in file: lib\support\0.2.805/primitives.sharp:562:6: note:  
		class int base integer<_int32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @789 // <std#integer<_int32>.integer>   
2 [0x2]:         ret   


constructor: std#ushort.ushort[2337] params(1) in file: lib\support\0.2.805/primitives.sharp:666:11: note:  
		    ushort(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @790 // <std#integer<_uint16>.integer>   
13 [0xd]:         ret   


constructor: std#ushort.ushort[2338] params(1) in file: lib\support\0.2.805/primitives.sharp:667:11: note:  
		    ushort(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @790 // <std#integer<_uint16>.integer>   
13 [0xd]:         ret   


constructor: std#ushort.ushort[2339] params(1) in file: lib\support\0.2.805/primitives.sharp:668:11: note:  
		    ushort(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @790 // <std#integer<_uint16>.integer>   
13 [0xd]:         ret   


constructor: std#ushort.ushort[2340] params(1) in file: lib\support\0.2.805/primitives.sharp:669:11: note:  
		    ushort(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @790 // <std#integer<_uint16>.integer>   
13 [0xd]:         ret   


constructor: std#ushort.ushort[2341] params(1) in file: lib\support\0.2.805/primitives.sharp:670:11: note:  
		    ushort(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @790 // <std#integer<_uint16>.integer>   
13 [0xd]:         ret   


constructor: std#ushort.ushort[2342] params(1) in file: lib\support\0.2.805/primitives.sharp:671:11: note:  
		    ushort(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @790 // <std#integer<_uint16>.integer>   
13 [0xd]:         ret   


constructor: std#ushort.ushort[2343] params(1) in file: lib\support\0.2.805/primitives.sharp:672:11: note:  
		    ushort(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @790 // <std#integer<_uint16>.integer>   
13 [0xd]:         ret   


constructor: std#ushort.ushort[2344] params(1) in file: lib\support\0.2.805/primitives.sharp:673:11: note:  
		    ushort(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @790 // <std#integer<_uint16>.integer>   
13 [0xd]:         ret   


constructor: std#ushort.ushort[2345] params(1) in file: lib\support\0.2.805/primitives.sharp:674:11: note:  
		    ushort(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @790 // <std#integer<_uint16>.integer>   
13 [0xd]:         ret   


constructor: std#ushort.ushort[2346] params(1) in file: lib\support\0.2.805/primitives.sharp:675:11: note:  
		    ushort(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @790 // <std#integer<_uint16>.integer>   
13 [0xd]:         ret   


constructor: std#ushort.ushort[2347] params(1) in file: lib\support\0.2.805/primitives.sharp:676:11: note:  
		    ushort(i : var) -> base(i) {}
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #48, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ipushl #1   
6 [0x6]:         call @790 // <std#integer<_uint16>.integer>   
7 [0x7]:         ret   


overload function: std#ushort.operator![2348] params(0) in file: lib\support\0.2.805/primitives.sharp:678:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 678 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#ushort.operator++[2349] params(0) in file: lib\support\0.2.805/primitives.sharp:679:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 679 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ushort.operator++[2350] params(1) in file: lib\support\0.2.805/primitives.sharp:680:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 680 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ushort.operator--[2351] params(0) in file: lib\support\0.2.805/primitives.sharp:681:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 681 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ushort.operator--[2352] params(1) in file: lib\support\0.2.805/primitives.sharp:682:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 682 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ushort.operator+=[2353] params(1) in file: lib\support\0.2.805/primitives.sharp:684:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 684 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2354] params(1) in file: lib\support\0.2.805/primitives.sharp:685:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 685 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2355] params(1) in file: lib\support\0.2.805/primitives.sharp:686:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 686 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2356] params(1) in file: lib\support\0.2.805/primitives.sharp:687:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 687 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2357] params(1) in file: lib\support\0.2.805/primitives.sharp:688:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 688 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2358] params(1) in file: lib\support\0.2.805/primitives.sharp:689:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 689 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2359] params(1) in file: lib\support\0.2.805/primitives.sharp:690:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 690 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2360] params(1) in file: lib\support\0.2.805/primitives.sharp:691:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 691 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2361] params(1) in file: lib\support\0.2.805/primitives.sharp:692:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 692 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2362] params(1) in file: lib\support\0.2.805/primitives.sharp:693:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 693 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2363] params(1) in file: lib\support\0.2.805/primitives.sharp:694:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 694 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator-=[2364] params(1) in file: lib\support\0.2.805/primitives.sharp:696:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 696 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2365] params(1) in file: lib\support\0.2.805/primitives.sharp:697:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 697 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2366] params(1) in file: lib\support\0.2.805/primitives.sharp:698:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 698 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2367] params(1) in file: lib\support\0.2.805/primitives.sharp:699:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 699 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2368] params(1) in file: lib\support\0.2.805/primitives.sharp:700:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 700 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2369] params(1) in file: lib\support\0.2.805/primitives.sharp:701:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 701 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2370] params(1) in file: lib\support\0.2.805/primitives.sharp:702:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 702 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2371] params(1) in file: lib\support\0.2.805/primitives.sharp:703:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 703 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2372] params(1) in file: lib\support\0.2.805/primitives.sharp:704:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 704 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2373] params(1) in file: lib\support\0.2.805/primitives.sharp:705:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 705 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2374] params(1) in file: lib\support\0.2.805/primitives.sharp:706:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 706 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator*=[2375] params(1) in file: lib\support\0.2.805/primitives.sharp:708:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 708 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2376] params(1) in file: lib\support\0.2.805/primitives.sharp:709:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 709 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2377] params(1) in file: lib\support\0.2.805/primitives.sharp:710:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 710 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2378] params(1) in file: lib\support\0.2.805/primitives.sharp:711:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 711 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2379] params(1) in file: lib\support\0.2.805/primitives.sharp:712:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 712 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2380] params(1) in file: lib\support\0.2.805/primitives.sharp:713:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 713 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2381] params(1) in file: lib\support\0.2.805/primitives.sharp:714:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 714 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2382] params(1) in file: lib\support\0.2.805/primitives.sharp:715:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 715 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2383] params(1) in file: lib\support\0.2.805/primitives.sharp:716:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 716 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2384] params(1) in file: lib\support\0.2.805/primitives.sharp:717:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 717 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2385] params(1) in file: lib\support\0.2.805/primitives.sharp:718:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 718 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator/=[2386] params(1) in file: lib\support\0.2.805/primitives.sharp:720:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 720 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2387] params(1) in file: lib\support\0.2.805/primitives.sharp:721:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 721 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2388] params(1) in file: lib\support\0.2.805/primitives.sharp:722:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 722 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2389] params(1) in file: lib\support\0.2.805/primitives.sharp:723:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 723 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2390] params(1) in file: lib\support\0.2.805/primitives.sharp:724:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 724 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2391] params(1) in file: lib\support\0.2.805/primitives.sharp:725:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 725 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2392] params(1) in file: lib\support\0.2.805/primitives.sharp:726:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 726 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2393] params(1) in file: lib\support\0.2.805/primitives.sharp:727:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 727 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2394] params(1) in file: lib\support\0.2.805/primitives.sharp:728:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 728 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2395] params(1) in file: lib\support\0.2.805/primitives.sharp:729:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 729 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2396] params(1) in file: lib\support\0.2.805/primitives.sharp:730:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 730 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator%=[2397] params(1) in file: lib\support\0.2.805/primitives.sharp:732:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 732 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2398] params(1) in file: lib\support\0.2.805/primitives.sharp:733:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 733 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2399] params(1) in file: lib\support\0.2.805/primitives.sharp:734:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 734 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2400] params(1) in file: lib\support\0.2.805/primitives.sharp:735:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 735 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2401] params(1) in file: lib\support\0.2.805/primitives.sharp:736:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 736 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2402] params(1) in file: lib\support\0.2.805/primitives.sharp:737:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 737 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2403] params(1) in file: lib\support\0.2.805/primitives.sharp:738:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 738 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2404] params(1) in file: lib\support\0.2.805/primitives.sharp:739:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 739 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2405] params(1) in file: lib\support\0.2.805/primitives.sharp:740:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 740 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2406] params(1) in file: lib\support\0.2.805/primitives.sharp:741:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 741 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2407] params(1) in file: lib\support\0.2.805/primitives.sharp:742:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 742 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator&=[2408] params(1) in file: lib\support\0.2.805/primitives.sharp:744:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 744 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2409] params(1) in file: lib\support\0.2.805/primitives.sharp:745:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 745 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2410] params(1) in file: lib\support\0.2.805/primitives.sharp:746:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 746 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2411] params(1) in file: lib\support\0.2.805/primitives.sharp:747:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 747 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2412] params(1) in file: lib\support\0.2.805/primitives.sharp:748:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 748 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2413] params(1) in file: lib\support\0.2.805/primitives.sharp:749:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 749 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2414] params(1) in file: lib\support\0.2.805/primitives.sharp:750:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 750 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2415] params(1) in file: lib\support\0.2.805/primitives.sharp:751:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 751 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2416] params(1) in file: lib\support\0.2.805/primitives.sharp:752:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 752 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2417] params(1) in file: lib\support\0.2.805/primitives.sharp:753:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 753 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2418] params(1) in file: lib\support\0.2.805/primitives.sharp:754:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 754 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#ushort.operator|=[2419] params(1) in file: lib\support\0.2.805/primitives.sharp:756:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 756 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2420] params(1) in file: lib\support\0.2.805/primitives.sharp:757:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 757 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2421] params(1) in file: lib\support\0.2.805/primitives.sharp:758:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 758 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2422] params(1) in file: lib\support\0.2.805/primitives.sharp:759:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 759 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2423] params(1) in file: lib\support\0.2.805/primitives.sharp:760:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 760 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2424] params(1) in file: lib\support\0.2.805/primitives.sharp:761:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 761 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2425] params(1) in file: lib\support\0.2.805/primitives.sharp:762:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 762 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2426] params(1) in file: lib\support\0.2.805/primitives.sharp:763:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 763 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2427] params(1) in file: lib\support\0.2.805/primitives.sharp:764:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 764 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2428] params(1) in file: lib\support\0.2.805/primitives.sharp:765:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 765 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2429] params(1) in file: lib\support\0.2.805/primitives.sharp:766:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 766 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#ushort.ushort[2430] params(0) in file: lib\support\0.2.805/primitives.sharp:665:6: note:  
		class ushort base integer<_uint16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @982 // <std#integer<_uint16>.integer>   
2 [0x2]:         ret   


constructor: std#short.short[2431] params(1) in file: lib\support\0.2.805/primitives.sharp:769:10: note:  
		    short(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @983 // <std#integer<_int16>.integer>   
13 [0xd]:         ret   


constructor: std#short.short[2432] params(1) in file: lib\support\0.2.805/primitives.sharp:770:10: note:  
		    short(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @983 // <std#integer<_int16>.integer>   
13 [0xd]:         ret   


constructor: std#short.short[2433] params(1) in file: lib\support\0.2.805/primitives.sharp:771:10: note:  
		    short(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @983 // <std#integer<_int16>.integer>   
13 [0xd]:         ret   


constructor: std#short.short[2434] params(1) in file: lib\support\0.2.805/primitives.sharp:772:10: note:  
		    short(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @983 // <std#integer<_int16>.integer>   
13 [0xd]:         ret   


constructor: std#short.short[2435] params(1) in file: lib\support\0.2.805/primitives.sharp:773:10: note:  
		    short(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @983 // <std#integer<_int16>.integer>   
13 [0xd]:         ret   


constructor: std#short.short[2436] params(1) in file: lib\support\0.2.805/primitives.sharp:774:10: note:  
		    short(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @983 // <std#integer<_int16>.integer>   
13 [0xd]:         ret   


constructor: std#short.short[2437] params(1) in file: lib\support\0.2.805/primitives.sharp:775:10: note:  
		    short(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @983 // <std#integer<_int16>.integer>   
13 [0xd]:         ret   


constructor: std#short.short[2438] params(1) in file: lib\support\0.2.805/primitives.sharp:776:10: note:  
		    short(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @983 // <std#integer<_int16>.integer>   
13 [0xd]:         ret   


constructor: std#short.short[2439] params(1) in file: lib\support\0.2.805/primitives.sharp:777:10: note:  
		    short(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @983 // <std#integer<_int16>.integer>   
13 [0xd]:         ret   


constructor: std#short.short[2440] params(1) in file: lib\support\0.2.805/primitives.sharp:778:10: note:  
		    short(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @983 // <std#integer<_int16>.integer>   
13 [0xd]:         ret   


constructor: std#short.short[2441] params(1) in file: lib\support\0.2.805/primitives.sharp:779:10: note:  
		    short(i : var) -> base(i) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #49, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ipushl #1   
6 [0x6]:         call @983 // <std#integer<_int16>.integer>   
7 [0x7]:         ret   


overload function: std#short.operator![2442] params(0) in file: lib\support\0.2.805/primitives.sharp:781:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 781 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#short.operator++[2443] params(0) in file: lib\support\0.2.805/primitives.sharp:782:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 782 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#short.operator++[2444] params(1) in file: lib\support\0.2.805/primitives.sharp:783:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 783 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#short.operator--[2445] params(0) in file: lib\support\0.2.805/primitives.sharp:784:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 784 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#short.operator--[2446] params(1) in file: lib\support\0.2.805/primitives.sharp:785:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 785 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#short.operator+=[2447] params(1) in file: lib\support\0.2.805/primitives.sharp:787:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 787 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2448] params(1) in file: lib\support\0.2.805/primitives.sharp:788:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 788 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2449] params(1) in file: lib\support\0.2.805/primitives.sharp:789:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 789 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2450] params(1) in file: lib\support\0.2.805/primitives.sharp:790:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 790 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2451] params(1) in file: lib\support\0.2.805/primitives.sharp:791:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 791 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2452] params(1) in file: lib\support\0.2.805/primitives.sharp:792:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 792 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2453] params(1) in file: lib\support\0.2.805/primitives.sharp:793:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 793 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2454] params(1) in file: lib\support\0.2.805/primitives.sharp:794:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 794 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2455] params(1) in file: lib\support\0.2.805/primitives.sharp:795:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 795 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2456] params(1) in file: lib\support\0.2.805/primitives.sharp:796:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 796 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2457] params(1) in file: lib\support\0.2.805/primitives.sharp:797:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 797 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator-=[2458] params(1) in file: lib\support\0.2.805/primitives.sharp:799:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 799 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2459] params(1) in file: lib\support\0.2.805/primitives.sharp:800:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 800 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2460] params(1) in file: lib\support\0.2.805/primitives.sharp:801:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 801 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2461] params(1) in file: lib\support\0.2.805/primitives.sharp:802:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 802 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2462] params(1) in file: lib\support\0.2.805/primitives.sharp:803:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 803 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2463] params(1) in file: lib\support\0.2.805/primitives.sharp:804:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 804 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2464] params(1) in file: lib\support\0.2.805/primitives.sharp:805:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 805 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2465] params(1) in file: lib\support\0.2.805/primitives.sharp:806:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 806 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2466] params(1) in file: lib\support\0.2.805/primitives.sharp:807:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 807 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2467] params(1) in file: lib\support\0.2.805/primitives.sharp:808:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 808 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2468] params(1) in file: lib\support\0.2.805/primitives.sharp:809:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 809 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator*=[2469] params(1) in file: lib\support\0.2.805/primitives.sharp:811:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 811 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2470] params(1) in file: lib\support\0.2.805/primitives.sharp:812:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 812 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2471] params(1) in file: lib\support\0.2.805/primitives.sharp:813:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 813 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2472] params(1) in file: lib\support\0.2.805/primitives.sharp:814:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 814 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2473] params(1) in file: lib\support\0.2.805/primitives.sharp:815:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 815 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2474] params(1) in file: lib\support\0.2.805/primitives.sharp:816:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 816 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2475] params(1) in file: lib\support\0.2.805/primitives.sharp:817:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 817 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2476] params(1) in file: lib\support\0.2.805/primitives.sharp:818:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 818 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2477] params(1) in file: lib\support\0.2.805/primitives.sharp:819:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 819 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2478] params(1) in file: lib\support\0.2.805/primitives.sharp:820:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 820 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2479] params(1) in file: lib\support\0.2.805/primitives.sharp:821:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 821 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator/=[2480] params(1) in file: lib\support\0.2.805/primitives.sharp:823:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 823 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2481] params(1) in file: lib\support\0.2.805/primitives.sharp:824:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 824 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2482] params(1) in file: lib\support\0.2.805/primitives.sharp:825:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 825 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2483] params(1) in file: lib\support\0.2.805/primitives.sharp:826:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 826 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2484] params(1) in file: lib\support\0.2.805/primitives.sharp:827:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 827 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2485] params(1) in file: lib\support\0.2.805/primitives.sharp:828:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 828 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2486] params(1) in file: lib\support\0.2.805/primitives.sharp:829:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 829 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2487] params(1) in file: lib\support\0.2.805/primitives.sharp:830:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 830 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2488] params(1) in file: lib\support\0.2.805/primitives.sharp:831:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 831 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2489] params(1) in file: lib\support\0.2.805/primitives.sharp:832:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 832 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2490] params(1) in file: lib\support\0.2.805/primitives.sharp:833:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 833 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator%=[2491] params(1) in file: lib\support\0.2.805/primitives.sharp:835:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 835 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2492] params(1) in file: lib\support\0.2.805/primitives.sharp:836:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 836 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2493] params(1) in file: lib\support\0.2.805/primitives.sharp:837:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 837 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2494] params(1) in file: lib\support\0.2.805/primitives.sharp:838:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 838 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2495] params(1) in file: lib\support\0.2.805/primitives.sharp:839:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 839 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2496] params(1) in file: lib\support\0.2.805/primitives.sharp:840:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 840 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2497] params(1) in file: lib\support\0.2.805/primitives.sharp:841:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 841 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2498] params(1) in file: lib\support\0.2.805/primitives.sharp:842:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 842 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2499] params(1) in file: lib\support\0.2.805/primitives.sharp:843:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 843 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2500] params(1) in file: lib\support\0.2.805/primitives.sharp:844:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 844 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2501] params(1) in file: lib\support\0.2.805/primitives.sharp:845:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 845 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator&=[2502] params(1) in file: lib\support\0.2.805/primitives.sharp:847:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 847 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2503] params(1) in file: lib\support\0.2.805/primitives.sharp:848:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 848 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2504] params(1) in file: lib\support\0.2.805/primitives.sharp:849:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 849 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2505] params(1) in file: lib\support\0.2.805/primitives.sharp:850:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 850 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2506] params(1) in file: lib\support\0.2.805/primitives.sharp:851:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 851 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2507] params(1) in file: lib\support\0.2.805/primitives.sharp:852:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 852 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2508] params(1) in file: lib\support\0.2.805/primitives.sharp:853:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 853 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2509] params(1) in file: lib\support\0.2.805/primitives.sharp:854:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 854 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2510] params(1) in file: lib\support\0.2.805/primitives.sharp:855:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 855 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2511] params(1) in file: lib\support\0.2.805/primitives.sharp:856:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 856 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2512] params(1) in file: lib\support\0.2.805/primitives.sharp:857:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 857 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#short.operator|=[2513] params(1) in file: lib\support\0.2.805/primitives.sharp:859:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 859 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2514] params(1) in file: lib\support\0.2.805/primitives.sharp:860:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 860 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2515] params(1) in file: lib\support\0.2.805/primitives.sharp:861:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 861 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2516] params(1) in file: lib\support\0.2.805/primitives.sharp:862:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 862 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2517] params(1) in file: lib\support\0.2.805/primitives.sharp:863:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 863 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2518] params(1) in file: lib\support\0.2.805/primitives.sharp:864:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 864 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2519] params(1) in file: lib\support\0.2.805/primitives.sharp:865:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 865 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2520] params(1) in file: lib\support\0.2.805/primitives.sharp:866:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 866 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2521] params(1) in file: lib\support\0.2.805/primitives.sharp:867:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 867 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2522] params(1) in file: lib\support\0.2.805/primitives.sharp:868:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 868 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2523] params(1) in file: lib\support\0.2.805/primitives.sharp:869:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 869 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#short.short[2524] params(0) in file: lib\support\0.2.805/primitives.sharp:768:6: note:  
		class short base integer<_int16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1175 // <std#integer<_int16>.integer>   
2 [0x2]:         ret   


constructor: std#uchar.uchar[2525] params(1) in file: lib\support\0.2.805/primitives.sharp:872:10: note:  
		    uchar(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1176 // <std#integer<_uint8>.integer>   
13 [0xd]:         ret   


constructor: std#uchar.uchar[2526] params(1) in file: lib\support\0.2.805/primitives.sharp:873:10: note:  
		    uchar(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1176 // <std#integer<_uint8>.integer>   
13 [0xd]:         ret   


constructor: std#uchar.uchar[2527] params(1) in file: lib\support\0.2.805/primitives.sharp:874:10: note:  
		    uchar(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1176 // <std#integer<_uint8>.integer>   
13 [0xd]:         ret   


constructor: std#uchar.uchar[2528] params(1) in file: lib\support\0.2.805/primitives.sharp:875:10: note:  
		    uchar(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1176 // <std#integer<_uint8>.integer>   
13 [0xd]:         ret   


constructor: std#uchar.uchar[2529] params(1) in file: lib\support\0.2.805/primitives.sharp:876:10: note:  
		    uchar(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1176 // <std#integer<_uint8>.integer>   
13 [0xd]:         ret   


constructor: std#uchar.uchar[2530] params(1) in file: lib\support\0.2.805/primitives.sharp:877:10: note:  
		    uchar(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1176 // <std#integer<_uint8>.integer>   
13 [0xd]:         ret   


constructor: std#uchar.uchar[2531] params(1) in file: lib\support\0.2.805/primitives.sharp:878:10: note:  
		    uchar(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1176 // <std#integer<_uint8>.integer>   
13 [0xd]:         ret   


constructor: std#uchar.uchar[2532] params(1) in file: lib\support\0.2.805/primitives.sharp:879:10: note:  
		    uchar(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1176 // <std#integer<_uint8>.integer>   
13 [0xd]:         ret   


constructor: std#uchar.uchar[2533] params(1) in file: lib\support\0.2.805/primitives.sharp:880:10: note:  
		    uchar(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1176 // <std#integer<_uint8>.integer>   
13 [0xd]:         ret   


constructor: std#uchar.uchar[2534] params(1) in file: lib\support\0.2.805/primitives.sharp:881:10: note:  
		    uchar(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1176 // <std#integer<_uint8>.integer>   
13 [0xd]:         ret   


constructor: std#uchar.uchar[2535] params(1) in file: lib\support\0.2.805/primitives.sharp:882:10: note:  
		    uchar(i : var) -> base(i) {}
		         ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #50, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ipushl #1   
6 [0x6]:         call @1176 // <std#integer<_uint8>.integer>   
7 [0x7]:         ret   


overload function: std#uchar.operator![2536] params(0) in file: lib\support\0.2.805/primitives.sharp:884:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 884 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#uchar.operator++[2537] params(0) in file: lib\support\0.2.805/primitives.sharp:885:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 885 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uchar.operator++[2538] params(1) in file: lib\support\0.2.805/primitives.sharp:886:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 886 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uchar.operator--[2539] params(0) in file: lib\support\0.2.805/primitives.sharp:887:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 887 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uchar.operator--[2540] params(1) in file: lib\support\0.2.805/primitives.sharp:888:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 888 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uchar.operator+=[2541] params(1) in file: lib\support\0.2.805/primitives.sharp:890:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 890 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2542] params(1) in file: lib\support\0.2.805/primitives.sharp:891:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 891 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2543] params(1) in file: lib\support\0.2.805/primitives.sharp:892:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 892 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2544] params(1) in file: lib\support\0.2.805/primitives.sharp:893:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 893 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2545] params(1) in file: lib\support\0.2.805/primitives.sharp:894:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 894 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2546] params(1) in file: lib\support\0.2.805/primitives.sharp:895:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 895 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2547] params(1) in file: lib\support\0.2.805/primitives.sharp:896:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 896 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2548] params(1) in file: lib\support\0.2.805/primitives.sharp:897:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 897 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2549] params(1) in file: lib\support\0.2.805/primitives.sharp:898:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 898 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2550] params(1) in file: lib\support\0.2.805/primitives.sharp:899:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 899 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2551] params(1) in file: lib\support\0.2.805/primitives.sharp:900:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 900 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator-=[2552] params(1) in file: lib\support\0.2.805/primitives.sharp:902:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 902 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2553] params(1) in file: lib\support\0.2.805/primitives.sharp:903:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 903 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2554] params(1) in file: lib\support\0.2.805/primitives.sharp:904:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 904 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2555] params(1) in file: lib\support\0.2.805/primitives.sharp:905:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 905 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2556] params(1) in file: lib\support\0.2.805/primitives.sharp:906:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 906 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2557] params(1) in file: lib\support\0.2.805/primitives.sharp:907:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 907 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2558] params(1) in file: lib\support\0.2.805/primitives.sharp:908:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 908 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2559] params(1) in file: lib\support\0.2.805/primitives.sharp:909:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 909 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2560] params(1) in file: lib\support\0.2.805/primitives.sharp:910:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 910 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2561] params(1) in file: lib\support\0.2.805/primitives.sharp:911:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 911 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2562] params(1) in file: lib\support\0.2.805/primitives.sharp:912:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 912 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator*=[2563] params(1) in file: lib\support\0.2.805/primitives.sharp:914:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 914 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2564] params(1) in file: lib\support\0.2.805/primitives.sharp:915:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 915 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2565] params(1) in file: lib\support\0.2.805/primitives.sharp:916:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 916 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2566] params(1) in file: lib\support\0.2.805/primitives.sharp:917:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 917 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2567] params(1) in file: lib\support\0.2.805/primitives.sharp:918:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 918 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2568] params(1) in file: lib\support\0.2.805/primitives.sharp:919:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 919 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2569] params(1) in file: lib\support\0.2.805/primitives.sharp:920:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 920 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2570] params(1) in file: lib\support\0.2.805/primitives.sharp:921:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 921 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2571] params(1) in file: lib\support\0.2.805/primitives.sharp:922:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 922 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2572] params(1) in file: lib\support\0.2.805/primitives.sharp:923:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 923 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2573] params(1) in file: lib\support\0.2.805/primitives.sharp:924:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 924 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator/=[2574] params(1) in file: lib\support\0.2.805/primitives.sharp:926:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 926 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2575] params(1) in file: lib\support\0.2.805/primitives.sharp:927:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 927 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2576] params(1) in file: lib\support\0.2.805/primitives.sharp:928:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 928 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2577] params(1) in file: lib\support\0.2.805/primitives.sharp:929:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 929 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2578] params(1) in file: lib\support\0.2.805/primitives.sharp:930:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 930 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2579] params(1) in file: lib\support\0.2.805/primitives.sharp:931:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 931 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2580] params(1) in file: lib\support\0.2.805/primitives.sharp:932:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 932 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2581] params(1) in file: lib\support\0.2.805/primitives.sharp:933:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 933 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2582] params(1) in file: lib\support\0.2.805/primitives.sharp:934:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 934 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2583] params(1) in file: lib\support\0.2.805/primitives.sharp:935:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 935 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2584] params(1) in file: lib\support\0.2.805/primitives.sharp:936:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 936 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator%=[2585] params(1) in file: lib\support\0.2.805/primitives.sharp:938:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 938 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2586] params(1) in file: lib\support\0.2.805/primitives.sharp:939:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 939 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2587] params(1) in file: lib\support\0.2.805/primitives.sharp:940:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 940 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2588] params(1) in file: lib\support\0.2.805/primitives.sharp:941:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 941 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2589] params(1) in file: lib\support\0.2.805/primitives.sharp:942:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 942 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2590] params(1) in file: lib\support\0.2.805/primitives.sharp:943:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 943 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2591] params(1) in file: lib\support\0.2.805/primitives.sharp:944:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 944 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2592] params(1) in file: lib\support\0.2.805/primitives.sharp:945:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 945 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2593] params(1) in file: lib\support\0.2.805/primitives.sharp:946:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 946 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2594] params(1) in file: lib\support\0.2.805/primitives.sharp:947:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 947 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator%=[2595] params(1) in file: lib\support\0.2.805/primitives.sharp:948:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 948 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator&=[2596] params(1) in file: lib\support\0.2.805/primitives.sharp:950:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 950 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2597] params(1) in file: lib\support\0.2.805/primitives.sharp:951:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 951 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2598] params(1) in file: lib\support\0.2.805/primitives.sharp:952:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 952 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2599] params(1) in file: lib\support\0.2.805/primitives.sharp:953:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 953 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2600] params(1) in file: lib\support\0.2.805/primitives.sharp:954:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 954 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2601] params(1) in file: lib\support\0.2.805/primitives.sharp:955:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 955 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2602] params(1) in file: lib\support\0.2.805/primitives.sharp:956:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 956 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2603] params(1) in file: lib\support\0.2.805/primitives.sharp:957:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 957 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2604] params(1) in file: lib\support\0.2.805/primitives.sharp:958:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 958 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2605] params(1) in file: lib\support\0.2.805/primitives.sharp:959:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 959 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uchar.operator&=[2606] params(1) in file: lib\support\0.2.805/primitives.sharp:960:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 960 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#uchar.operator|=[2607] params(1) in file: lib\support\0.2.805/primitives.sharp:962:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 962 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2608] params(1) in file: lib\support\0.2.805/primitives.sharp:963:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 963 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2609] params(1) in file: lib\support\0.2.805/primitives.sharp:964:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 964 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2610] params(1) in file: lib\support\0.2.805/primitives.sharp:965:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 965 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2611] params(1) in file: lib\support\0.2.805/primitives.sharp:966:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 966 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2612] params(1) in file: lib\support\0.2.805/primitives.sharp:967:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 967 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2613] params(1) in file: lib\support\0.2.805/primitives.sharp:968:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 968 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2614] params(1) in file: lib\support\0.2.805/primitives.sharp:969:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 969 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2615] params(1) in file: lib\support\0.2.805/primitives.sharp:970:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 970 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2616] params(1) in file: lib\support\0.2.805/primitives.sharp:971:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 971 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu8 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator|=[2617] params(1) in file: lib\support\0.2.805/primitives.sharp:972:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 972 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu8 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#uchar.uchar[2618] params(0) in file: lib\support\0.2.805/primitives.sharp:871:6: note:  
		class uchar base integer<_uint8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1368 // <std#integer<_uint8>.integer>   
2 [0x2]:         ret   


constructor: std#char.char[2619] params(1) in file: lib\support\0.2.805/primitives.sharp:975:9: note:  
		    char(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#char.char[2620] params(1) in file: lib\support\0.2.805/primitives.sharp:976:9: note:  
		    char(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#char.char[2621] params(1) in file: lib\support\0.2.805/primitives.sharp:977:9: note:  
		    char(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#char.char[2622] params(1) in file: lib\support\0.2.805/primitives.sharp:978:9: note:  
		    char(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#char.char[2623] params(1) in file: lib\support\0.2.805/primitives.sharp:979:9: note:  
		    char(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#char.char[2624] params(1) in file: lib\support\0.2.805/primitives.sharp:980:9: note:  
		    char(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#char.char[2625] params(1) in file: lib\support\0.2.805/primitives.sharp:981:9: note:  
		    char(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#char.char[2626] params(1) in file: lib\support\0.2.805/primitives.sharp:982:9: note:  
		    char(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#char.char[2627] params(1) in file: lib\support\0.2.805/primitives.sharp:983:9: note:  
		    char(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#char.char[2628] params(1) in file: lib\support\0.2.805/primitives.sharp:984:9: note:  
		    char(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#char.char[2629] params(1) in file: lib\support\0.2.805/primitives.sharp:985:9: note:  
		    char(i : var) -> base(i) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #51, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ipushl #1   
6 [0x6]:         call @1369 // <std#integer<_int8>.integer>   
7 [0x7]:         ret   


overload function: std#char.operator![2630] params(0) in file: lib\support\0.2.805/primitives.sharp:987:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 987 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#char.operator++[2631] params(0) in file: lib\support\0.2.805/primitives.sharp:988:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 988 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#char.operator++[2632] params(1) in file: lib\support\0.2.805/primitives.sharp:989:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 989 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#char.operator--[2633] params(0) in file: lib\support\0.2.805/primitives.sharp:990:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 990 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#char.operator--[2634] params(1) in file: lib\support\0.2.805/primitives.sharp:991:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 991 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#char.operator+=[2635] params(1) in file: lib\support\0.2.805/primitives.sharp:993:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 993 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2636] params(1) in file: lib\support\0.2.805/primitives.sharp:994:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 994 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2637] params(1) in file: lib\support\0.2.805/primitives.sharp:995:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 995 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2638] params(1) in file: lib\support\0.2.805/primitives.sharp:996:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 996 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2639] params(1) in file: lib\support\0.2.805/primitives.sharp:997:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 997 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2640] params(1) in file: lib\support\0.2.805/primitives.sharp:998:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 998 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2641] params(1) in file: lib\support\0.2.805/primitives.sharp:999:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 999 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#char.operator+=[2642] params(1) in file: lib\support\0.2.805/primitives.sharp:1000:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1000 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[2643] params(1) in file: lib\support\0.2.805/primitives.sharp:1001:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1001 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[2644] params(1) in file: lib\support\0.2.805/primitives.sharp:1002:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1002 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[2645] params(1) in file: lib\support\0.2.805/primitives.sharp:1003:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1003 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator-=[2646] params(1) in file: lib\support\0.2.805/primitives.sharp:1005:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1005 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2647] params(1) in file: lib\support\0.2.805/primitives.sharp:1006:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1006 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2648] params(1) in file: lib\support\0.2.805/primitives.sharp:1007:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1007 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2649] params(1) in file: lib\support\0.2.805/primitives.sharp:1008:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1008 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2650] params(1) in file: lib\support\0.2.805/primitives.sharp:1009:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1009 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2651] params(1) in file: lib\support\0.2.805/primitives.sharp:1010:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1010 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2652] params(1) in file: lib\support\0.2.805/primitives.sharp:1011:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1011 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2653] params(1) in file: lib\support\0.2.805/primitives.sharp:1012:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1012 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2654] params(1) in file: lib\support\0.2.805/primitives.sharp:1013:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1013 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2655] params(1) in file: lib\support\0.2.805/primitives.sharp:1014:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1014 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[2656] params(1) in file: lib\support\0.2.805/primitives.sharp:1015:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1015 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator*=[2657] params(1) in file: lib\support\0.2.805/primitives.sharp:1017:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1017 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2658] params(1) in file: lib\support\0.2.805/primitives.sharp:1018:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1018 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2659] params(1) in file: lib\support\0.2.805/primitives.sharp:1019:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1019 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2660] params(1) in file: lib\support\0.2.805/primitives.sharp:1020:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1020 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2661] params(1) in file: lib\support\0.2.805/primitives.sharp:1021:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1021 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2662] params(1) in file: lib\support\0.2.805/primitives.sharp:1022:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1022 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2663] params(1) in file: lib\support\0.2.805/primitives.sharp:1023:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1023 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2664] params(1) in file: lib\support\0.2.805/primitives.sharp:1024:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1024 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2665] params(1) in file: lib\support\0.2.805/primitives.sharp:1025:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1025 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2666] params(1) in file: lib\support\0.2.805/primitives.sharp:1026:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1026 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[2667] params(1) in file: lib\support\0.2.805/primitives.sharp:1027:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1027 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator/=[2668] params(1) in file: lib\support\0.2.805/primitives.sharp:1029:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1029 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2669] params(1) in file: lib\support\0.2.805/primitives.sharp:1030:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1030 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2670] params(1) in file: lib\support\0.2.805/primitives.sharp:1031:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1031 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2671] params(1) in file: lib\support\0.2.805/primitives.sharp:1032:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1032 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2672] params(1) in file: lib\support\0.2.805/primitives.sharp:1033:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1033 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2673] params(1) in file: lib\support\0.2.805/primitives.sharp:1034:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1034 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2674] params(1) in file: lib\support\0.2.805/primitives.sharp:1035:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1035 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2675] params(1) in file: lib\support\0.2.805/primitives.sharp:1036:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1036 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2676] params(1) in file: lib\support\0.2.805/primitives.sharp:1037:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1037 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2677] params(1) in file: lib\support\0.2.805/primitives.sharp:1038:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1038 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[2678] params(1) in file: lib\support\0.2.805/primitives.sharp:1039:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1039 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator%=[2679] params(1) in file: lib\support\0.2.805/primitives.sharp:1041:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1041 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2680] params(1) in file: lib\support\0.2.805/primitives.sharp:1042:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1042 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2681] params(1) in file: lib\support\0.2.805/primitives.sharp:1043:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1043 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2682] params(1) in file: lib\support\0.2.805/primitives.sharp:1044:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1044 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2683] params(1) in file: lib\support\0.2.805/primitives.sharp:1045:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1045 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2684] params(1) in file: lib\support\0.2.805/primitives.sharp:1046:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1046 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2685] params(1) in file: lib\support\0.2.805/primitives.sharp:1047:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1047 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2686] params(1) in file: lib\support\0.2.805/primitives.sharp:1048:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1048 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2687] params(1) in file: lib\support\0.2.805/primitives.sharp:1049:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1049 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2688] params(1) in file: lib\support\0.2.805/primitives.sharp:1050:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1050 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[2689] params(1) in file: lib\support\0.2.805/primitives.sharp:1051:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1051 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator&=[2690] params(1) in file: lib\support\0.2.805/primitives.sharp:1053:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1053 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2691] params(1) in file: lib\support\0.2.805/primitives.sharp:1054:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1054 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2692] params(1) in file: lib\support\0.2.805/primitives.sharp:1055:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1055 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2693] params(1) in file: lib\support\0.2.805/primitives.sharp:1056:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1056 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2694] params(1) in file: lib\support\0.2.805/primitives.sharp:1057:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1057 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2695] params(1) in file: lib\support\0.2.805/primitives.sharp:1058:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1058 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2696] params(1) in file: lib\support\0.2.805/primitives.sharp:1059:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1059 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2697] params(1) in file: lib\support\0.2.805/primitives.sharp:1060:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1060 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2698] params(1) in file: lib\support\0.2.805/primitives.sharp:1061:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1061 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2699] params(1) in file: lib\support\0.2.805/primitives.sharp:1062:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1062 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[2700] params(1) in file: lib\support\0.2.805/primitives.sharp:1063:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1063 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#char.operator|=[2701] params(1) in file: lib\support\0.2.805/primitives.sharp:1065:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1065 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2702] params(1) in file: lib\support\0.2.805/primitives.sharp:1066:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1066 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2703] params(1) in file: lib\support\0.2.805/primitives.sharp:1067:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1067 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2704] params(1) in file: lib\support\0.2.805/primitives.sharp:1068:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1068 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2705] params(1) in file: lib\support\0.2.805/primitives.sharp:1069:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1069 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2706] params(1) in file: lib\support\0.2.805/primitives.sharp:1070:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1070 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2707] params(1) in file: lib\support\0.2.805/primitives.sharp:1071:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1071 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2708] params(1) in file: lib\support\0.2.805/primitives.sharp:1072:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1072 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2709] params(1) in file: lib\support\0.2.805/primitives.sharp:1073:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1073 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2710] params(1) in file: lib\support\0.2.805/primitives.sharp:1074:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1074 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[2711] params(1) in file: lib\support\0.2.805/primitives.sharp:1075:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1075 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            mov8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#char.is_digit[2712] params(1) in file: lib\support\0.2.805/primitives.sharp:1077:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1078 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#char.is_newline[2713] params(1) in file: lib\support\0.2.805/primitives.sharp:1081:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1082 call @1929 // <platform#build.is_windows>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1083 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#char.is_alpha[2714] params(1) in file: lib\support\0.2.805/primitives.sharp:1086:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1087 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#char.is_alpha_num[2715] params(1) in file: lib\support\0.2.805/primitives.sharp:1091:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1092 ipushl #0   
1 [0x1]:            call @2714 // <std#char.is_alpha>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @2712 // <std#char.is_digit>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#char.to_lower[2716] params(1) in file: lib\support\0.2.805/primitives.sharp:1095:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1096 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1097 istore 97   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #65, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1099 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


function: std#char.to_upper[2717] params(1) in file: lib\support\0.2.805/primitives.sharp:1102:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1103 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1104 istore 65   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1106 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


constructor: std#char.char[2718] params(0) in file: lib\support\0.2.805/primitives.sharp:974:6: note:  
		class char base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1561 // <std#integer<_int8>.integer>   
2 [0x2]:         ret   


constructor: std#byte.byte[2719] params(1) in file: lib\support\0.2.805/primitives.sharp:1110:9: note:  
		    byte(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @2535 // <std#uchar.uchar>   
13 [0xd]:         ret   


constructor: std#byte.byte[2720] params(1) in file: lib\support\0.2.805/primitives.sharp:1111:9: note:  
		    byte(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @2535 // <std#uchar.uchar>   
13 [0xd]:         ret   


constructor: std#byte.byte[2721] params(1) in file: lib\support\0.2.805/primitives.sharp:1112:9: note:  
		    byte(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @2535 // <std#uchar.uchar>   
13 [0xd]:         ret   


constructor: std#byte.byte[2722] params(1) in file: lib\support\0.2.805/primitives.sharp:1113:9: note:  
		    byte(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @2535 // <std#uchar.uchar>   
13 [0xd]:         ret   


constructor: std#byte.byte[2723] params(1) in file: lib\support\0.2.805/primitives.sharp:1114:9: note:  
		    byte(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @2535 // <std#uchar.uchar>   
13 [0xd]:         ret   


constructor: std#byte.byte[2724] params(1) in file: lib\support\0.2.805/primitives.sharp:1115:9: note:  
		    byte(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @2535 // <std#uchar.uchar>   
13 [0xd]:         ret   


constructor: std#byte.byte[2725] params(1) in file: lib\support\0.2.805/primitives.sharp:1116:9: note:  
		    byte(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @2535 // <std#uchar.uchar>   
13 [0xd]:         ret   


constructor: std#byte.byte[2726] params(1) in file: lib\support\0.2.805/primitives.sharp:1117:9: note:  
		    byte(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @2535 // <std#uchar.uchar>   
13 [0xd]:         ret   


constructor: std#byte.byte[2727] params(1) in file: lib\support\0.2.805/primitives.sharp:1118:9: note:  
		    byte(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @2535 // <std#uchar.uchar>   
13 [0xd]:         ret   


constructor: std#byte.byte[2728] params(1) in file: lib\support\0.2.805/primitives.sharp:1119:9: note:  
		    byte(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @2535 // <std#uchar.uchar>   
13 [0xd]:         ret   


constructor: std#byte.byte[2729] params(1) in file: lib\support\0.2.805/primitives.sharp:1120:9: note:  
		    byte(i : var) -> base(i) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #52, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ipushl #1   
6 [0x6]:         call @2535 // <std#uchar.uchar>   
7 [0x7]:         ret   


overload function: std#byte.operator![2730] params(0) in file: lib\support\0.2.805/primitives.sharp:1122:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1122 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#byte.operator++[2731] params(0) in file: lib\support\0.2.805/primitives.sharp:1123:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1123 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#byte.operator++[2732] params(1) in file: lib\support\0.2.805/primitives.sharp:1124:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1124 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#byte.operator--[2733] params(0) in file: lib\support\0.2.805/primitives.sharp:1125:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1125 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#byte.operator--[2734] params(1) in file: lib\support\0.2.805/primitives.sharp:1126:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1126 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#byte.operator+=[2735] params(1) in file: lib\support\0.2.805/primitives.sharp:1128:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1128 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2736] params(1) in file: lib\support\0.2.805/primitives.sharp:1129:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1129 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2737] params(1) in file: lib\support\0.2.805/primitives.sharp:1130:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1130 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2738] params(1) in file: lib\support\0.2.805/primitives.sharp:1131:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1131 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2739] params(1) in file: lib\support\0.2.805/primitives.sharp:1132:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1132 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2740] params(1) in file: lib\support\0.2.805/primitives.sharp:1133:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1133 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2741] params(1) in file: lib\support\0.2.805/primitives.sharp:1134:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1134 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2742] params(1) in file: lib\support\0.2.805/primitives.sharp:1135:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1135 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2743] params(1) in file: lib\support\0.2.805/primitives.sharp:1136:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1136 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2744] params(1) in file: lib\support\0.2.805/primitives.sharp:1137:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1137 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[2745] params(1) in file: lib\support\0.2.805/primitives.sharp:1138:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1138 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator-=[2746] params(1) in file: lib\support\0.2.805/primitives.sharp:1140:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1140 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2747] params(1) in file: lib\support\0.2.805/primitives.sharp:1141:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1141 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2748] params(1) in file: lib\support\0.2.805/primitives.sharp:1142:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1142 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2749] params(1) in file: lib\support\0.2.805/primitives.sharp:1143:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1143 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2750] params(1) in file: lib\support\0.2.805/primitives.sharp:1144:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1144 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2751] params(1) in file: lib\support\0.2.805/primitives.sharp:1145:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1145 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2752] params(1) in file: lib\support\0.2.805/primitives.sharp:1146:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1146 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2753] params(1) in file: lib\support\0.2.805/primitives.sharp:1147:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1147 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2754] params(1) in file: lib\support\0.2.805/primitives.sharp:1148:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1148 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2755] params(1) in file: lib\support\0.2.805/primitives.sharp:1149:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1149 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[2756] params(1) in file: lib\support\0.2.805/primitives.sharp:1150:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1150 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator*=[2757] params(1) in file: lib\support\0.2.805/primitives.sharp:1152:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1152 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2758] params(1) in file: lib\support\0.2.805/primitives.sharp:1153:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1153 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2759] params(1) in file: lib\support\0.2.805/primitives.sharp:1154:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1154 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2760] params(1) in file: lib\support\0.2.805/primitives.sharp:1155:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1155 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2761] params(1) in file: lib\support\0.2.805/primitives.sharp:1156:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1156 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2762] params(1) in file: lib\support\0.2.805/primitives.sharp:1157:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1157 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2763] params(1) in file: lib\support\0.2.805/primitives.sharp:1158:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1158 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2764] params(1) in file: lib\support\0.2.805/primitives.sharp:1159:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1159 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2765] params(1) in file: lib\support\0.2.805/primitives.sharp:1160:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1160 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2766] params(1) in file: lib\support\0.2.805/primitives.sharp:1161:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1161 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[2767] params(1) in file: lib\support\0.2.805/primitives.sharp:1162:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1162 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator/=[2768] params(1) in file: lib\support\0.2.805/primitives.sharp:1164:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1164 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2769] params(1) in file: lib\support\0.2.805/primitives.sharp:1165:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1165 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2770] params(1) in file: lib\support\0.2.805/primitives.sharp:1166:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1166 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2771] params(1) in file: lib\support\0.2.805/primitives.sharp:1167:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1167 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2772] params(1) in file: lib\support\0.2.805/primitives.sharp:1168:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1168 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2773] params(1) in file: lib\support\0.2.805/primitives.sharp:1169:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1169 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2774] params(1) in file: lib\support\0.2.805/primitives.sharp:1170:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1170 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2775] params(1) in file: lib\support\0.2.805/primitives.sharp:1171:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1171 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2776] params(1) in file: lib\support\0.2.805/primitives.sharp:1172:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1172 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2777] params(1) in file: lib\support\0.2.805/primitives.sharp:1173:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1173 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[2778] params(1) in file: lib\support\0.2.805/primitives.sharp:1174:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1174 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator%=[2779] params(1) in file: lib\support\0.2.805/primitives.sharp:1176:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1176 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2780] params(1) in file: lib\support\0.2.805/primitives.sharp:1177:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1177 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2781] params(1) in file: lib\support\0.2.805/primitives.sharp:1178:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1178 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2782] params(1) in file: lib\support\0.2.805/primitives.sharp:1179:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1179 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2783] params(1) in file: lib\support\0.2.805/primitives.sharp:1180:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1180 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2784] params(1) in file: lib\support\0.2.805/primitives.sharp:1181:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1181 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2785] params(1) in file: lib\support\0.2.805/primitives.sharp:1182:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1182 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2786] params(1) in file: lib\support\0.2.805/primitives.sharp:1183:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1183 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2787] params(1) in file: lib\support\0.2.805/primitives.sharp:1184:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1184 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2788] params(1) in file: lib\support\0.2.805/primitives.sharp:1185:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1185 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[2789] params(1) in file: lib\support\0.2.805/primitives.sharp:1186:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1186 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator&=[2790] params(1) in file: lib\support\0.2.805/primitives.sharp:1188:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1188 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2791] params(1) in file: lib\support\0.2.805/primitives.sharp:1189:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1189 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2792] params(1) in file: lib\support\0.2.805/primitives.sharp:1190:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1190 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2793] params(1) in file: lib\support\0.2.805/primitives.sharp:1191:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1191 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2794] params(1) in file: lib\support\0.2.805/primitives.sharp:1192:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1192 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2795] params(1) in file: lib\support\0.2.805/primitives.sharp:1193:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1193 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2796] params(1) in file: lib\support\0.2.805/primitives.sharp:1194:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1194 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2797] params(1) in file: lib\support\0.2.805/primitives.sharp:1195:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1195 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2798] params(1) in file: lib\support\0.2.805/primitives.sharp:1196:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1196 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2799] params(1) in file: lib\support\0.2.805/primitives.sharp:1197:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1197 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[2800] params(1) in file: lib\support\0.2.805/primitives.sharp:1198:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1198 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#byte.operator|=[2801] params(1) in file: lib\support\0.2.805/primitives.sharp:1200:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1200 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2802] params(1) in file: lib\support\0.2.805/primitives.sharp:1201:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1201 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2803] params(1) in file: lib\support\0.2.805/primitives.sharp:1202:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1202 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2804] params(1) in file: lib\support\0.2.805/primitives.sharp:1203:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1203 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2805] params(1) in file: lib\support\0.2.805/primitives.sharp:1204:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1204 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2806] params(1) in file: lib\support\0.2.805/primitives.sharp:1205:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1205 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2807] params(1) in file: lib\support\0.2.805/primitives.sharp:1206:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1206 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2808] params(1) in file: lib\support\0.2.805/primitives.sharp:1207:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1207 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2809] params(1) in file: lib\support\0.2.805/primitives.sharp:1208:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1208 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2810] params(1) in file: lib\support\0.2.805/primitives.sharp:1209:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1209 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[2811] params(1) in file: lib\support\0.2.805/primitives.sharp:1210:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1210 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            movu8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#byte.is_digit[2812] params(1) in file: lib\support\0.2.805/primitives.sharp:1212:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1213 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#byte.is_newline[2813] params(1) in file: lib\support\0.2.805/primitives.sharp:1216:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1217 call @1929 // <platform#build.is_windows>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1218 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#byte.is_alpha[2814] params(1) in file: lib\support\0.2.805/primitives.sharp:1221:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1222 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#byte.is_alpha_num[2815] params(1) in file: lib\support\0.2.805/primitives.sharp:1226:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1227 ipushl #0   
1 [0x1]:            call @2814 // <std#byte.is_alpha>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @2812 // <std#byte.is_digit>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#byte.to_lower[2816] params(1) in file: lib\support\0.2.805/primitives.sharp:1230:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1231 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1232 istore 97   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #65, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1234 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


function: std#byte.to_upper[2817] params(1) in file: lib\support\0.2.805/primitives.sharp:1237:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1238 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1239 istore 65   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1241 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


constructor: std#byte.byte[2818] params(0) in file: lib\support\0.2.805/primitives.sharp:1109:6: note:  
		class byte base uchar {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2618 // <std#uchar.uchar>   
2 [0x2]:         ret   


constructor: std#bool.bool[2819] params(1) in file: lib\support\0.2.805/primitives.sharp:1245:9: note:  
		    bool(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#bool.bool[2820] params(1) in file: lib\support\0.2.805/primitives.sharp:1246:9: note:  
		    bool(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#bool.bool[2821] params(1) in file: lib\support\0.2.805/primitives.sharp:1247:9: note:  
		    bool(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#bool.bool[2822] params(1) in file: lib\support\0.2.805/primitives.sharp:1248:9: note:  
		    bool(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#bool.bool[2823] params(1) in file: lib\support\0.2.805/primitives.sharp:1249:9: note:  
		    bool(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#bool.bool[2824] params(1) in file: lib\support\0.2.805/primitives.sharp:1250:9: note:  
		    bool(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#bool.bool[2825] params(1) in file: lib\support\0.2.805/primitives.sharp:1251:9: note:  
		    bool(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#bool.bool[2826] params(1) in file: lib\support\0.2.805/primitives.sharp:1252:9: note:  
		    bool(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#bool.bool[2827] params(1) in file: lib\support\0.2.805/primitives.sharp:1253:9: note:  
		    bool(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#bool.bool[2828] params(1) in file: lib\support\0.2.805/primitives.sharp:1254:9: note:  
		    bool(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         movl 1   
6 [0x6]:         movn #0   
8 [0x8]:         movi #0, adx   
10 [0xa]:         iaload ebx, adx   
11 [0xb]:         rstore ebx   
12 [0xc]:         call @1369 // <std#integer<_int8>.integer>   
13 [0xd]:         ret   


constructor: std#bool.bool[2829] params(1) in file: lib\support\0.2.805/primitives.sharp:1255:9: note:  
		    bool(i : var) -> base(i) {}
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         ipushl #1   
6 [0x6]:         call @1369 // <std#integer<_int8>.integer>   
7 [0x7]:         ret   


overload function: std#bool.operator![2830] params(0) in file: lib\support\0.2.805/primitives.sharp:1257:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1257 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#bool.operator++[2831] params(0) in file: lib\support\0.2.805/primitives.sharp:1258:8: note:  
		    def operator++() := (value = !value);
		       ^

0 [0x0]: line: 1258 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator++[2832] params(1) in file: lib\support\0.2.805/primitives.sharp:1259:8: note:  
		    def operator++(num : var) := (!value);
		       ^

0 [0x0]: line: 1259 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#bool.operator--[2833] params(0) in file: lib\support\0.2.805/primitives.sharp:1260:8: note:  
		    def operator--() := (value = !value);
		       ^

0 [0x0]: line: 1260 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator--[2834] params(1) in file: lib\support\0.2.805/primitives.sharp:1261:8: note:  
		    def operator--(num : var) := (value = !value);
		       ^

0 [0x0]: line: 1261 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator+=[2835] params(1) in file: lib\support\0.2.805/primitives.sharp:1263:8: note:  
		    def operator+=(num : ulong)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1263 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2836] params(1) in file: lib\support\0.2.805/primitives.sharp:1264:8: note:  
		    def operator+=(num : long)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1264 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2837] params(1) in file: lib\support\0.2.805/primitives.sharp:1265:8: note:  
		    def operator+=(num : uint)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1265 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2838] params(1) in file: lib\support\0.2.805/primitives.sharp:1266:8: note:  
		    def operator+=(num : int)    := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1266 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2839] params(1) in file: lib\support\0.2.805/primitives.sharp:1267:8: note:  
		    def operator+=(num : ushort) := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1267 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2840] params(1) in file: lib\support\0.2.805/primitives.sharp:1268:8: note:  
		    def operator+=(num : short)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1268 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2841] params(1) in file: lib\support\0.2.805/primitives.sharp:1269:8: note:  
		    def operator+=(num : uchar)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1269 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2842] params(1) in file: lib\support\0.2.805/primitives.sharp:1270:8: note:  
		    def operator+=(num : char)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1270 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2843] params(1) in file: lib\support\0.2.805/primitives.sharp:1271:8: note:  
		    def operator+=(num : byte)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1271 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2844] params(1) in file: lib\support\0.2.805/primitives.sharp:1272:8: note:  
		    def operator+=(num : bool)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1272 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[2845] params(1) in file: lib\support\0.2.805/primitives.sharp:1273:8: note:  
		    def operator+=(num : var)    := check_value(value+=num);
		       ^

0 [0x0]: line: 1273 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            add ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2912 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator-=[2846] params(1) in file: lib\support\0.2.805/primitives.sharp:1275:8: note:  
		    def operator-=(num : ulong)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1275 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2847] params(1) in file: lib\support\0.2.805/primitives.sharp:1276:8: note:  
		    def operator-=(num : long)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1276 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2848] params(1) in file: lib\support\0.2.805/primitives.sharp:1277:8: note:  
		    def operator-=(num : uint)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1277 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2849] params(1) in file: lib\support\0.2.805/primitives.sharp:1278:8: note:  
		    def operator-=(num : int)    := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1278 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2850] params(1) in file: lib\support\0.2.805/primitives.sharp:1279:8: note:  
		    def operator-=(num : ushort) := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1279 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2851] params(1) in file: lib\support\0.2.805/primitives.sharp:1280:8: note:  
		    def operator-=(num : short)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1280 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2852] params(1) in file: lib\support\0.2.805/primitives.sharp:1281:8: note:  
		    def operator-=(num : uchar)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1281 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2853] params(1) in file: lib\support\0.2.805/primitives.sharp:1282:8: note:  
		    def operator-=(num : char)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1282 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2854] params(1) in file: lib\support\0.2.805/primitives.sharp:1283:8: note:  
		    def operator-=(num : byte)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1283 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2855] params(1) in file: lib\support\0.2.805/primitives.sharp:1284:8: note:  
		    def operator-=(num : bool)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1284 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[2856] params(1) in file: lib\support\0.2.805/primitives.sharp:1285:8: note:  
		    def operator-=(num : var)    := check_value(value-=num);
		       ^

0 [0x0]: line: 1285 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            sub ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2912 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator*=[2857] params(1) in file: lib\support\0.2.805/primitives.sharp:1287:8: note:  
		    def operator*=(num : ulong)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1287 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2858] params(1) in file: lib\support\0.2.805/primitives.sharp:1288:8: note:  
		    def operator*=(num : long)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1288 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2859] params(1) in file: lib\support\0.2.805/primitives.sharp:1289:8: note:  
		    def operator*=(num : uint)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1289 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2860] params(1) in file: lib\support\0.2.805/primitives.sharp:1290:8: note:  
		    def operator*=(num : int)    := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1290 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2861] params(1) in file: lib\support\0.2.805/primitives.sharp:1291:8: note:  
		    def operator*=(num : ushort) := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1291 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2862] params(1) in file: lib\support\0.2.805/primitives.sharp:1292:8: note:  
		    def operator*=(num : short)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1292 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2863] params(1) in file: lib\support\0.2.805/primitives.sharp:1293:8: note:  
		    def operator*=(num : uchar)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1293 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2864] params(1) in file: lib\support\0.2.805/primitives.sharp:1294:8: note:  
		    def operator*=(num : char)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1294 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2865] params(1) in file: lib\support\0.2.805/primitives.sharp:1295:8: note:  
		    def operator*=(num : byte)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1295 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2866] params(1) in file: lib\support\0.2.805/primitives.sharp:1296:8: note:  
		    def operator*=(num : bool)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1296 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[2867] params(1) in file: lib\support\0.2.805/primitives.sharp:1297:8: note:  
		    def operator*=(num : var)    := check_value(value*=num);
		       ^

0 [0x0]: line: 1297 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mul ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2912 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator/=[2868] params(1) in file: lib\support\0.2.805/primitives.sharp:1299:8: note:  
		    def operator/=(num : ulong)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1299 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2869] params(1) in file: lib\support\0.2.805/primitives.sharp:1300:8: note:  
		    def operator/=(num : long)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1300 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2870] params(1) in file: lib\support\0.2.805/primitives.sharp:1301:8: note:  
		    def operator/=(num : uint)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1301 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2871] params(1) in file: lib\support\0.2.805/primitives.sharp:1302:8: note:  
		    def operator/=(num : int)    := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1302 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2872] params(1) in file: lib\support\0.2.805/primitives.sharp:1303:8: note:  
		    def operator/=(num : ushort) := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1303 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2873] params(1) in file: lib\support\0.2.805/primitives.sharp:1304:8: note:  
		    def operator/=(num : short)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1304 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2874] params(1) in file: lib\support\0.2.805/primitives.sharp:1305:8: note:  
		    def operator/=(num : uchar)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1305 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2875] params(1) in file: lib\support\0.2.805/primitives.sharp:1306:8: note:  
		    def operator/=(num : char)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1306 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2876] params(1) in file: lib\support\0.2.805/primitives.sharp:1307:8: note:  
		    def operator/=(num : byte)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1307 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2877] params(1) in file: lib\support\0.2.805/primitives.sharp:1308:8: note:  
		    def operator/=(num : bool)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1308 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[2878] params(1) in file: lib\support\0.2.805/primitives.sharp:1309:8: note:  
		    def operator/=(num : var)    := check_value(value/=num);
		       ^

0 [0x0]: line: 1309 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            div ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2912 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator%=[2879] params(1) in file: lib\support\0.2.805/primitives.sharp:1311:8: note:  
		    def operator%=(num : ulong)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1311 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2880] params(1) in file: lib\support\0.2.805/primitives.sharp:1312:8: note:  
		    def operator%=(num : long)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1312 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2881] params(1) in file: lib\support\0.2.805/primitives.sharp:1313:8: note:  
		    def operator%=(num : uint)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1313 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2882] params(1) in file: lib\support\0.2.805/primitives.sharp:1314:8: note:  
		    def operator%=(num : int)    := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1314 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2883] params(1) in file: lib\support\0.2.805/primitives.sharp:1315:8: note:  
		    def operator%=(num : ushort) := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1315 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2884] params(1) in file: lib\support\0.2.805/primitives.sharp:1316:8: note:  
		    def operator%=(num : short)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1316 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2885] params(1) in file: lib\support\0.2.805/primitives.sharp:1317:8: note:  
		    def operator%=(num : uchar)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1317 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2886] params(1) in file: lib\support\0.2.805/primitives.sharp:1318:8: note:  
		    def operator%=(num : char)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1318 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2887] params(1) in file: lib\support\0.2.805/primitives.sharp:1319:8: note:  
		    def operator%=(num : byte)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1319 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2888] params(1) in file: lib\support\0.2.805/primitives.sharp:1320:8: note:  
		    def operator%=(num : bool)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1320 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[2889] params(1) in file: lib\support\0.2.805/primitives.sharp:1321:8: note:  
		    def operator%=(num : var)    := check_value(value%=num);
		       ^

0 [0x0]: line: 1321 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mod ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @2912 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator&=[2890] params(1) in file: lib\support\0.2.805/primitives.sharp:1323:8: note:  
		    def operator&=(num : ulong)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1323 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2912 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2891] params(1) in file: lib\support\0.2.805/primitives.sharp:1324:8: note:  
		    def operator&=(num : long)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1324 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2912 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2892] params(1) in file: lib\support\0.2.805/primitives.sharp:1325:8: note:  
		    def operator&=(num : uint)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1325 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2912 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2893] params(1) in file: lib\support\0.2.805/primitives.sharp:1326:8: note:  
		    def operator&=(num : int)    := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1326 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2912 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2894] params(1) in file: lib\support\0.2.805/primitives.sharp:1327:8: note:  
		    def operator&=(num : ushort) := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1327 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2912 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2895] params(1) in file: lib\support\0.2.805/primitives.sharp:1328:8: note:  
		    def operator&=(num : short)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1328 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2912 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2896] params(1) in file: lib\support\0.2.805/primitives.sharp:1329:8: note:  
		    def operator&=(num : uchar)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1329 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2912 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2897] params(1) in file: lib\support\0.2.805/primitives.sharp:1330:8: note:  
		    def operator&=(num : char)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1330 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2912 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2898] params(1) in file: lib\support\0.2.805/primitives.sharp:1331:8: note:  
		    def operator&=(num : byte)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1331 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2912 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2899] params(1) in file: lib\support\0.2.805/primitives.sharp:1332:8: note:  
		    def operator&=(num : bool)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1332 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @2912 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[2900] params(1) in file: lib\support\0.2.805/primitives.sharp:1333:8: note:  
		    def operator&=(num : var)    := check_value(value&=num);
		       ^

0 [0x0]: line: 1333 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            and ecx, ebx   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            rstore cmt   
12 [0xc]:            call @2912 // <std#bool.check_value>   
13 [0xd]:            loadval ebx   
14 [0xe]:            return_val ebx   
15 [0xf]:            ret   


overload function: std#bool.operator|=[2901] params(1) in file: lib\support\0.2.805/primitives.sharp:1335:8: note:  
		    def operator|=(num : ulong)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1335 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2902] params(1) in file: lib\support\0.2.805/primitives.sharp:1336:8: note:  
		    def operator|=(num : long)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1336 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2903] params(1) in file: lib\support\0.2.805/primitives.sharp:1337:8: note:  
		    def operator|=(num : uint)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1337 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2904] params(1) in file: lib\support\0.2.805/primitives.sharp:1338:8: note:  
		    def operator|=(num : int)    := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1338 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2905] params(1) in file: lib\support\0.2.805/primitives.sharp:1339:8: note:  
		    def operator|=(num : ushort) := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1339 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2906] params(1) in file: lib\support\0.2.805/primitives.sharp:1340:8: note:  
		    def operator|=(num : short)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1340 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2907] params(1) in file: lib\support\0.2.805/primitives.sharp:1341:8: note:  
		    def operator|=(num : uchar)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1341 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2908] params(1) in file: lib\support\0.2.805/primitives.sharp:1342:8: note:  
		    def operator|=(num : char)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1342 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2909] params(1) in file: lib\support\0.2.805/primitives.sharp:1343:8: note:  
		    def operator|=(num : byte)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1343 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2910] params(1) in file: lib\support\0.2.805/primitives.sharp:1344:8: note:  
		    def operator|=(num : bool)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1344 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @2912 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[2911] params(1) in file: lib\support\0.2.805/primitives.sharp:1345:8: note:  
		    def operator|=(num : var)    := check_value(value|=num);
		       ^

0 [0x0]: line: 1345 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            or ecx, ebx   
10 [0xa]:            mov8 cmt, cmt   
11 [0xb]:            rmov adx, cmt   
12 [0xc]:            rstore cmt   
13 [0xd]:            call @2912 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


function: std#bool.check_value[2912] params(1) in file: lib\support\0.2.805/primitives.sharp:1347:8: note:  
		    def check_value(new_val: var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #53, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 1348 ret   


constructor: std#bool.bool[2913] params(0) in file: lib\support\0.2.805/primitives.sharp:1244:6: note:  
		class bool base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1561 // <std#integer<_int8>.integer>   
2 [0x2]:         ret   


std#printable.to_string[2914] params(0) in file: lib\support\0.2.805/printable.sharp:11:8: note:  
		    def to_string() : string;
		       ^



constructor: std#printable.printable[2915] params(0) in file: lib\support\0.2.805/printable.sharp:10:10: note:  
		interface printable {
		         ^

0 [0x0]:         ret   


constructor: std.reflect#_class_._class_[2916] params(0) in file: lib\support\0.2.805/reflect//class.sharp:4:6: note:  
		class _class_ base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2917 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#data_entity.data_entity[2917] params(0) in file: lib\support\0.2.805/reflect//data_entity.sharp:4:6: note:  
		class data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.reflect#data_property.data_property[2918] params(0) in file: lib\support\0.2.805/reflect//data_property.sharp:11:6: note:  
		class data_property base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2917 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#field.field[2919] params(0) in file: lib\support\0.2.805/reflect//field.sharp:4:6: note:  
		class field {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.reflect#function.function[2920] params(0) in file: lib\support\0.2.805/reflect//function.sharp:4:6: note:  
		class function base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2917 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#reflect.reflect[2921] params(1) in file: lib\support\0.2.805/reflect//reflection.sharp:16:12: note:  
		    reflect(ref_obj : object) {
		           ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #63, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 17 pushl 0   
6 [0x6]:          pushl 1   
7 [0x7]:          call @3251 // <std.reflect#reflect.set_reflect_obj>   
8 [0x8]:          ret   


constructor: std.reflect#reflect.reflect[2922] params(0) in file: lib\support\0.2.805/reflect//reflection.sharp:3:6: note:  
		class reflect {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#string.string[2923] params(1) in file: lib\support\0.2.805/string.sharp:10:11: note:  
		    string(str : _int8[]) {
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 11 movl 1   
6 [0x6]:          checknull   
7 [0x7]:          not ebx, ebx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 14   
10 [0xa]: line: 12 pushl 0   
11 [0xb]:          pushl 1   
12 [0xc]:          call @2933 // <std#string.append>   
13 [0xd]:          pop   
14 [0xe]:          nop   
15 [0xf]:          ret   


constructor: std#string.string[2924] params(1) in file: lib\support\0.2.805/string.sharp:16:11: note:  
		    string(ch: var) {
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 17 pushl 0   
6 [0x6]:          ipushl #1   
7 [0x7]:          call @2930 // <std#string.append>   
8 [0x8]:          pop   
9 [0x9]:          ret   


constructor: std#string.string[2925] params(1) in file: lib\support\0.2.805/string.sharp:20:11: note:  
		    string(str : char[]) {
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 21 movl 1   
6 [0x6]:          checknull   
7 [0x7]:          not ebx, ebx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 50   
10 [0xa]: line: 22 movl 1   
11 [0xb]:          sizeof ebx   
12 [0xc]:          newarry ebx   
13 [0xd]:          movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          popobj   
17 [0x11]: line: 23 istorel 0, fp+2   
19 [0x13]: line: 24 istorel -1, fp+4   
21 [0x15]:          pushl 1   
22 [0x16]:          popl 5   
23 [0x17]:          iaddl 1, fp@4   
25 [0x19]:          movl 5   
26 [0x1a]:          sizeof ecx   
27 [0x1b]:          loadl ebx, fp+4   
28 [0x1c]:          lt ebx, ecx   
29 [0x1d]:          jne 50   
30 [0x1e]:          movnd ebx   
31 [0x1f]:          pushobj   
32 [0x20]:          popl 3   
33 [0x21]: line: 25 pushl 3   
34 [0x22]:          call @1560 // <std#integer<_int8>.get_value>   
35 [0x23]:          movl 0   
36 [0x24]:          movn #0   
38 [0x26]:          pushobj   
39 [0x27]:          loadl ebx, fp+2   
40 [0x28]:          movr egx, ebx   
41 [0x29]:          inc ebx   
42 [0x2a]:          smovr_2 ebx, fp+2   
43 [0x2b]:          movr ebx, egx   
44 [0x2c]:          popobj2    
45 [0x2d]:          movr adx, ebx   
46 [0x2e]:          chklen adx   
47 [0x2f]:          loadval ebx   
48 [0x30]:          rmov adx, ebx   
49 [0x31]:          jmp @23   
50 [0x32]:          nop   
51 [0x33]:          ret   


constructor: std#string.string[2926] params(1) in file: lib\support\0.2.805/string.sharp:30:11: note:  
		    string(str: string) {
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 31 movl 1   
6 [0x6]:          checknull   
7 [0x7]:          not ebx, ebx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 17   
10 [0xa]: line: 32 pushl 0   
11 [0xb]:          movl 1   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @2933 // <std#string.append>   
16 [0x10]:          pop   
17 [0x11]:          nop   
18 [0x12]:          ret   


constructor: std#string.string[2927] params(2) in file: lib\support\0.2.805/string.sharp:36:11: note:  
		    string(str : _int8[], offset: var) {
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 37 movl 1   
6 [0x6]:          checknull   
7 [0x7]:          not ebx, ebx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 20   
10 [0xa]: line: 38 pushl 1   
11 [0xb]:          ipushl #2   
12 [0xc]:          movl 1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @1751 // <std.io#__srt_global.copy>   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          popobj   
20 [0x14]:          nop   
21 [0x15]:          ret   


constructor: std#string.string[2928] params(3) in file: lib\support\0.2.805/string.sharp:42:11: note:  
		    string(str : _int8[], start: var, end: var) {
		          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 43 movl 1   
6 [0x6]:          checknull   
7 [0x7]:          not ebx, ebx   
8 [0x8]:          skne ebx // pc = 19   
9 [0x9]:          ipushl #3   
10 [0xa]:          loadl ebx, fp+2   
11 [0xb]:          loadval ecx   
12 [0xc]:          sub ecx, ebx -> ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          gt ecx, ebx   
18 [0x12]:          movr ebx, cmt   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 40   
21 [0x15]: line: 44 ipushl #3   
22 [0x16]:          loadl ebx, fp+2   
23 [0x17]:          loadval ecx   
24 [0x18]:          sub ecx, ebx -> ebx   
25 [0x19]:          newarry ebx   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          popobj   
30 [0x1e]: line: 45 pushl 1   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          istore 0   
37 [0x25]:          ipushl #2   
38 [0x26]:          ipushl #3   
39 [0x27]:          call @1741 // <std.io#__srt_global.memcopy>   
40 [0x28]:          nop   
41 [0x29]:          ret   


function: std#string.replace[2929] params(2) in file: lib\support\0.2.805/string.sharp:49:8: note:  
		    def replace(pos : var, ch: _int8) : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 50 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          sizeof ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 18   
14 [0xe]: line: 51 pushl 0   
15 [0xf]:          ipushl #1   
16 [0x10]:          call @2971 // <std#string.bounds_error>   
17 [0x11]:          throw    
18 [0x12]:          nop   
19 [0x13]: line: 54 ipushl #2   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          loadl ebx, fp+1   
25 [0x19]:          popobj2    
26 [0x1a]:          movr adx, ebx   
27 [0x1b]:          chklen adx   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]: line: 55 movl 0   
31 [0x1f]:          returnobj   
32 [0x20]:          ret   


function: std#string.append[2930] params(1) in file: lib\support\0.2.805/string.sharp:58:8: note:  
		    def append(ch: var) : string
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 60 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 20   
12 [0xc]: line: 61 movi #1, ebx   
14 [0xe]:          newarry ebx   
15 [0xf]:          movl 0   
16 [0x10]:          movn #0   
18 [0x12]:          popobj   
19 [0x13]:          jmp @35   
20 [0x14]: line: 63 movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          sizeof ebx   
28 [0x1c]:          rstore ebx   
29 [0x1d]:          movi #1, ebx   
31 [0x1f]:          loadval ecx   
32 [0x20]:          add ecx, ebx -> ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @1731 // <std.io#__srt_global.realloc>   
35 [0x23]:          nop   
36 [0x24]: line: 65 ipushl #1   
37 [0x25]:          movl 0   
38 [0x26]:          movn #0   
40 [0x28]:          pushobj   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #0   
44 [0x2c]:          sizeof ebx   
45 [0x2d]:          rstore ebx   
46 [0x2e]:          movi #1, ebx   
48 [0x30]:          loadval ecx   
49 [0x31]:          sub ecx, ebx -> ebx   
50 [0x32]:          popobj2    
51 [0x33]:          movr adx, ebx   
52 [0x34]:          chklen adx   
53 [0x35]:          loadval ebx   
54 [0x36]:          rmov adx, ebx   
55 [0x37]: line: 66 movl 0   
56 [0x38]:          returnobj   
57 [0x39]:          ret   


function: std#string.empty[2931] params(0) in file: lib\support\0.2.805/string.sharp:69:8: note:  
		    def empty() := sizeof(data)==0;
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          sizeof ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          movi #0, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          return_val cmt   
10 [0xa]:          ret   


function: std#string.append[2932] params(1) in file: lib\support\0.2.805/string.sharp:71:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 71 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @1560 // <std#integer<_int8>.get_value>   
3 [0x3]:          call @2930 // <std#string.append>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#string.append[2933] params(1) in file: lib\support\0.2.805/string.sharp:73:8: note:  
		    def append(immstr: _int8[]) : string
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 75 movl 1   
5 [0x5]:          checknull   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 11   
8 [0x8]:          movl 0   
9 [0x9]:          returnobj   
10 [0xa]:          ret   
11 [0xb]:          nop   
12 [0xc]: line: 77 movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          sizeof ebx   
16 [0x10]:          smovr_2 ebx, fp+2   
17 [0x11]: line: 79 movl 0   
18 [0x12]:          movn #0   
20 [0x14]:          pushobj   
21 [0x15]:          pushnull    
22 [0x16]:          itest ebx   
23 [0x17]:          movr cmt, ebx   
24 [0x18]:          jne 33   
25 [0x19]: line: 80 movl 1   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          newarry ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          popobj   
32 [0x20]:          jmp @48   
33 [0x21]: line: 82 movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          movl 0   
38 [0x26]:          movn #0   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movl 1   
43 [0x2b]:          sizeof ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          add ecx, ebx -> ebx   
46 [0x2e]:          rstore ebx   
47 [0x2f]:          call @1731 // <std.io#__srt_global.realloc>   
48 [0x30]:          nop   
49 [0x31]: line: 84 pushl 1   
50 [0x32]:          movl 0   
51 [0x33]:          movn #0   
53 [0x35]:          pushobj   
54 [0x36]:          ipushl #2   
55 [0x37]:          istore 0   
57 [0x39]:          movl 1   
58 [0x3a]:          sizeof ebx   
59 [0x3b]:          rstore ebx   
60 [0x3c]:          call @1741 // <std.io#__srt_global.memcopy>   
61 [0x3d]: line: 85 movl 0   
62 [0x3e]:          returnobj   
63 [0x3f]:          ret   


function: std#string.append[2934] params(2) in file: lib\support\0.2.805/string.sharp:88:8: note:  
		    def append(immstr: _int8[], len: var) : string
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 90 movl 1   
5 [0x5]:          checknull   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 11   
8 [0x8]:          movl 0   
9 [0x9]:          returnobj   
10 [0xa]:          ret   
11 [0xb]:          nop   
12 [0xc]: line: 91 loadl ecx, fp+2   
13 [0xd]:          movi #0, ebx   
15 [0xf]:          lt ecx, ebx   
16 [0x10]:          movr ebx, cmt   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 24   
19 [0x13]: line: 92 new_class @3 // std#exception   
20 [0x14]:          dup    
21 [0x15]:          newstr @41 // length cannot be less than zero   
22 [0x16]:          call @1620 // <std#exception.exception>   
23 [0x17]:          throw    
24 [0x18]:          nop   
25 [0x19]: line: 94 ipushl #2   
26 [0x1a]:          movl 1   
27 [0x1b]:          sizeof ebx   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          gt ecx, ebx   
30 [0x1e]:          movr ebx, cmt   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 49   
33 [0x21]: line: 95 new_class @3 // std#exception   
34 [0x22]:          dup    
35 [0x23]:          new_class @64 // std#string   
36 [0x24]:          dup    
37 [0x25]:          newstr @42 // length of:    
38 [0x26]:          call @2923 // <std#string.string>   
39 [0x27]:          ipushl #2   
40 [0x28]:          call @2955 // <std#string.operator+>   
41 [0x29]:          newstr @43 //  is greater than the string:    
42 [0x2a]:          call @2935 // <std#string.operator+>   
43 [0x2b]:          movl 1   
44 [0x2c]:          sizeof ebx   
45 [0x2d]:          rstore ebx   
46 [0x2e]:          call @2955 // <std#string.operator+>   
47 [0x2f]:          call @1621 // <std#exception.exception>   
48 [0x30]:          throw    
49 [0x31]:          nop   
50 [0x32]: line: 97 movl 0   
51 [0x33]:          movn #0   
53 [0x35]:          sizeof ebx   
54 [0x36]:          smovr_2 ebx, fp+3   
55 [0x37]: line: 99 movl 0   
56 [0x38]:          movn #0   
58 [0x3a]:          pushobj   
59 [0x3b]:          pushnull    
60 [0x3c]:          itest ebx   
61 [0x3d]:          movr cmt, ebx   
62 [0x3e]:          jne 70   
63 [0x3f]: line: 100 loadl ebx, fp+2   
64 [0x40]:           newarry ebx   
65 [0x41]:           movl 0   
66 [0x42]:           movn #0   
68 [0x44]:           popobj   
69 [0x45]:           jmp @84   
70 [0x46]: line: 102 movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           pushobj   
74 [0x4a]:           movl 0   
75 [0x4b]:           movn #0   
77 [0x4d]:           sizeof ebx   
78 [0x4e]:           rstore ebx   
79 [0x4f]:           loadl ebx, fp+2   
80 [0x50]:           loadval ecx   
81 [0x51]:           add ecx, ebx -> ebx   
82 [0x52]:           rstore ebx   
83 [0x53]:           call @1731 // <std.io#__srt_global.realloc>   
84 [0x54]:           nop   
85 [0x55]: line: 104 pushl 1   
86 [0x56]:           movl 0   
87 [0x57]:           movn #0   
89 [0x59]:           pushobj   
90 [0x5a]:           ipushl #3   
91 [0x5b]:           istore 0   
93 [0x5d]:           ipushl #2   
94 [0x5e]:           call @1741 // <std.io#__srt_global.memcopy>   
95 [0x5f]: line: 105 movl 0   
96 [0x60]:           returnobj   
97 [0x61]:           ret   


overload function: std#string.operator+[2935] params(1) in file: lib\support\0.2.805/string.sharp:108:8: note:  
		    def operator+(immstr : _int8[]) : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 109 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           call @2923 // <std#string.string>   
11 [0xb]:           popobj2    
12 [0xc]:           smovr_3 fp+2   
13 [0xd]: line: 110 movl 1   
14 [0xe]:           checknull   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 25   
18 [0x12]: line: 111 pushl 2   
19 [0x13]:           pushl 1   
20 [0x14]:           call @2933 // <std#string.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 113 pushl 2   
26 [0x1a]:           newstr @44 // null   
27 [0x1b]:           call @2933 // <std#string.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


function: std#string.to_lower[2936] params(0) in file: lib\support\0.2.805/string.sharp:116:8: note:  
		    def to_lower() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 117 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           call @2973 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 118 movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           pushobj   
13 [0xd]:           pushnull    
14 [0xe]:           itest ebx   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 91   
18 [0x12]: line: 119 movl 0   
19 [0x13]:           movn #0   
21 [0x15]:           pushobj   
22 [0x16]:           istore 0   
24 [0x18]:           movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           sizeof ebx   
28 [0x1c]:           rstore ebx   
29 [0x1d]:           call @1751 // <std.io#__srt_global.copy>   
30 [0x1e]:           movl 1   
31 [0x1f]:           movn #0   
33 [0x21]:           popobj   
34 [0x22]: line: 121 istorel 0, fp+2   
36 [0x24]: line: 122 istorel -1, fp+4   
38 [0x26]:           movl 0   
39 [0x27]:           movn #0   
41 [0x29]:           pushobj   
42 [0x2a]:           popl 5   
43 [0x2b]:           iaddl 1, fp@4   
45 [0x2d]:           movl 5   
46 [0x2e]:           sizeof ecx   
47 [0x2f]:           loadl ebx, fp+4   
48 [0x30]:           lt ebx, ecx   
49 [0x31]:           jne 91   
50 [0x32]:           iaload ecx, ebx   
51 [0x33]:           smovr_2 ecx, fp+3   
52 [0x34]: line: 123 istore 65   
54 [0x36]:           loadl ebx, fp+3   
55 [0x37]:           loadval ecx   
56 [0x38]:           lte ecx, ebx   
57 [0x39]:           movr ebx, cmt   
58 [0x3a]:           skne ebx // pc = 65   
59 [0x3b]:           ipushl #3   
60 [0x3c]:           movi #90, ebx   
62 [0x3e]:           loadval ecx   
63 [0x3f]:           lte ecx, ebx   
64 [0x40]:           movr ebx, cmt   
65 [0x41]:           movr cmt, ebx   
66 [0x42]:           jne 87   
67 [0x43]: line: 124 istore 97   
69 [0x45]:           ipushl #3   
70 [0x46]:           movi #65, ebx   
72 [0x48]:           loadval ecx   
73 [0x49]:           sub ecx, ebx -> ebx   
74 [0x4a]:           loadval ecx   
75 [0x4b]:           add ecx, ebx -> ebx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           movl 1   
78 [0x4e]:           movn #0   
80 [0x50]:           pushobj   
81 [0x51]:           loadl ebx, fp+2   
82 [0x52]:           popobj2    
83 [0x53]:           movr adx, ebx   
84 [0x54]:           chklen adx   
85 [0x55]:           loadval ebx   
86 [0x56]:           rmov adx, ebx   
87 [0x57]:           nop   
88 [0x58]: line: 125 iaddl 1, fp@2   
90 [0x5a]:           jmp @43   
91 [0x5b]:           nop   
92 [0x5c]: line: 129 movl 1   
93 [0x5d]:           returnobj   
94 [0x5e]:           ret   


overload function: std#string.operator+[2937] params(1) in file: lib\support\0.2.805/string.sharp:132:8: note:  
		    def operator+(obj : printable) : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 133 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           call @2923 // <std#string.string>   
11 [0xb]:           popobj2    
12 [0xc]:           smovr_3 fp+2   
13 [0xd]: line: 134 movl 1   
14 [0xe]:           checknull   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 46   
18 [0x12]: line: 135 pushl 1   
19 [0x13]:           invoke_delegate 2914 { static=0, args=0 }   
21 [0x15]:           popobj2    
22 [0x16]:           smovr_3 fp+3   
23 [0x17]: line: 136 movl 3   
24 [0x18]:           checknull   
25 [0x19]:           not ebx, ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 38   
28 [0x1c]: line: 137 pushl 2   
29 [0x1d]:           movl 3   
30 [0x1e]:           movn #0   
32 [0x20]:           pushobj   
33 [0x21]:           call @2933 // <std#string.append>   
34 [0x22]:           popobj2    
35 [0x23]:           returnobj   
36 [0x24]:           ret   
37 [0x25]:           jmp @44   
38 [0x26]: line: 139 pushl 2   
39 [0x27]:           newstr @44 // null   
40 [0x28]:           call @2933 // <std#string.append>   
41 [0x29]:           popobj2    
42 [0x2a]:           returnobj   
43 [0x2b]:           ret   
44 [0x2c]:           nop   
45 [0x2d]:           jmp @52   
46 [0x2e]: line: 142 pushl 2   
47 [0x2f]:           newstr @44 // null   
48 [0x30]:           call @2933 // <std#string.append>   
49 [0x31]:           popobj2    
50 [0x32]:           returnobj   
51 [0x33]:           ret   
52 [0x34]:           nop   


overload function: std#string.operator+[2938] params(1) in file: lib\support\0.2.805/string.sharp:145:7: note:  
		   def operator+(str : string) : string {
		      ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 146 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           call @2923 // <std#string.string>   
11 [0xb]:           popobj2    
12 [0xc]:           smovr_3 fp+2   
13 [0xd]: line: 147 movl 1   
14 [0xe]:           checknull   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 28   
18 [0x12]: line: 148 pushl 2   
19 [0x13]:           movl 1   
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           call @2933 // <std#string.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           jmp @34   
28 [0x1c]: line: 150 pushl 2   
29 [0x1d]:           newstr @44 // null   
30 [0x1e]:           call @2933 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           nop   


function: std#string.to_string[2939] params(0) in file: lib\support\0.2.805/string.sharp:153:8: note:  
		    def to_string() := new string(data);
		       ^

0 [0x0]: line: 153 new_class @64 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           call @2923 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           returnobj   
9 [0x9]:           ret   


overload function: std#string.operator==[2940] params(1) in file: lib\support\0.2.805/string.sharp:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 156 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           sizeof ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movl 1   
10 [0xa]:           sizeof ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           tne ecx, ebx   
13 [0xd]:           jne 17   
14 [0xe]: line: 157 istorel 0, fp+0   
16 [0x10]:           ret   
17 [0x11]:           nop   
18 [0x12]: line: 159 istorel 0, fp+2   
20 [0x14]: line: 160 istorel -1, fp+4   
22 [0x16]:           pushl 1   
23 [0x17]:           popl 5   
24 [0x18]:           iaddl 1, fp@4   
26 [0x1a]:           movl 5   
27 [0x1b]:           sizeof ecx   
28 [0x1c]:           loadl ebx, fp+4   
29 [0x1d]:           lt ebx, ecx   
30 [0x1e]:           jne 55   
31 [0x1f]:           iaload ecx, ebx   
32 [0x20]:           smovr_2 ecx, fp+3   
33 [0x21]: line: 161 ipushl #3   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           pushobj   
38 [0x26]:           loadl ebx, fp+2   
39 [0x27]:           movr egx, ebx   
40 [0x28]:           inc ebx   
41 [0x29]:           smovr_2 ebx, fp+2   
42 [0x2a]:           movr ebx, egx   
43 [0x2b]:           popobj2    
44 [0x2c]:           movr adx, ebx   
45 [0x2d]:           chklen adx   
46 [0x2e]:           iaload ebx, adx   
47 [0x2f]:           loadval ecx   
48 [0x30]:           tne ecx, ebx   
49 [0x31]:           jne 53   
50 [0x32]: line: 162 istorel 0, fp+0   
52 [0x34]:           ret   
53 [0x35]:           nop   
54 [0x36]:           jmp @24   
55 [0x37]: line: 165 istorel 1, fp+0   
57 [0x39]:           ret   


overload function: std#string.operator==[2941] params(1) in file: lib\support\0.2.805/string.sharp:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 169 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           sizeof ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movl 1   
10 [0xa]:           movn #0   
12 [0xc]:           sizeof ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           tne ecx, ebx   
15 [0xf]:           jne 19   
16 [0x10]: line: 170 istorel 0, fp+0   
18 [0x12]:           ret   
19 [0x13]:           nop   
20 [0x14]: line: 172 istorel 0, fp+2   
22 [0x16]: line: 173 istorel -1, fp+4   
24 [0x18]:           movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           popl 5   
29 [0x1d]:           iaddl 1, fp@4   
31 [0x1f]:           movl 5   
32 [0x20]:           sizeof ecx   
33 [0x21]:           loadl ebx, fp+4   
34 [0x22]:           lt ebx, ecx   
35 [0x23]:           jne 60   
36 [0x24]:           iaload ecx, ebx   
37 [0x25]:           smovr_2 ecx, fp+3   
38 [0x26]: line: 174 ipushl #3   
39 [0x27]:           movl 0   
40 [0x28]:           movn #0   
42 [0x2a]:           pushobj   
43 [0x2b]:           loadl ebx, fp+2   
44 [0x2c]:           movr egx, ebx   
45 [0x2d]:           inc ebx   
46 [0x2e]:           smovr_2 ebx, fp+2   
47 [0x2f]:           movr ebx, egx   
48 [0x30]:           popobj2    
49 [0x31]:           movr adx, ebx   
50 [0x32]:           chklen adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           loadval ecx   
53 [0x35]:           tne ecx, ebx   
54 [0x36]:           jne 58   
55 [0x37]: line: 175 istorel 0, fp+0   
57 [0x39]:           ret   
58 [0x3a]:           nop   
59 [0x3b]:           jmp @29   
60 [0x3c]: line: 178 istorel 1, fp+0   
62 [0x3e]:           ret   


overload function: std#string.operator!=[2942] params(1) in file: lib\support\0.2.805/string.sharp:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2940 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator!=[2943] params(1) in file: lib\support\0.2.805/string.sharp:183:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 183 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2941 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator=[2944] params(1) in file: lib\support\0.2.805/string.sharp:185:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 187 movl 1   
5 [0x5]:           checknull   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 13   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           del   
12 [0xc]:           jmp @24   
13 [0xd]: line: 189 pushl 1   
14 [0xe]:           istore 0   
16 [0x10]:           movl 1   
17 [0x11]:           sizeof ebx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @1751 // <std.io#__srt_global.copy>   
20 [0x14]:           movl 0   
21 [0x15]:           movn #0   
23 [0x17]:           popobj   
24 [0x18]:           nop   
25 [0x19]:           ret   


function: std#string.at[2945] params(1) in file: lib\support\0.2.805/string.sharp:192:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 193 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 18   
14 [0xe]: line: 194 pushl 0   
15 [0xf]:           ipushl #1   
16 [0x10]:           call @2971 // <std#string.bounds_error>   
17 [0x11]:           throw    
18 [0x12]:           nop   
19 [0x13]: line: 195 movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+1   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           iaload ebx, adx   
28 [0x1c]:           return_val ebx   
29 [0x1d]:           ret   


overload function: std#string.operator[[2946] params(1) in file: lib\support\0.2.805/string.sharp:198:8: note:  
		    def operator[](pos: var) := at(pos);
		       ^

0 [0x0]: line: 198 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2945 // <std#string.at>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.fmt[2947] params(1) in file: lib\support\0.2.805/string.sharp:200:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 201 ipushl #0   
1 [0x1]:           movg @64 // @std#string   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           ret   


function: std#string.set_precision[2948] params(1) in file: lib\support\0.2.805/string.sharp:204:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 205 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 12   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 24   
14 [0xe]: line: 206 new_class @4 // std#illegal_argument_exception   
15 [0xf]:           dup    
16 [0x10]:           new_class @64 // std#string   
17 [0x11]:           dup    
18 [0x12]:           newstr @45 // invalid precision:    
19 [0x13]:           call @2923 // <std#string.string>   
20 [0x14]:           ipushl #0   
21 [0x15]:           call @2955 // <std#string.operator+>   
22 [0x16]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
23 [0x17]:           throw    
24 [0x18]:           nop   
25 [0x19]: line: 207 ipushl #0   
26 [0x1a]:           movg @64 // @std#string   
27 [0x1b]:           movn #1   
29 [0x1d]:           loadval ebx   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           rmov adx, ebx   
33 [0x21]:           ret   


function: std#string.get_data[2949] params(0) in file: lib\support\0.2.805/string.sharp:210:8: note:  
		    def get_data() := data;
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.get_elements[2950] params(0) in file: lib\support\0.2.805/string.sharp:212:8: note:  
		    def get_elements() := data;
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.to_array[2951] params(0) in file: lib\support\0.2.805/string.sharp:214:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 216 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushnull    
9 [0x9]:           itest ebx   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           jne 16   
12 [0xc]:           pushnull    
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   
16 [0x10]:           nop   
17 [0x11]: line: 217 movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           pushobj   
21 [0x15]:           istore 0   
23 [0x17]:           movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           sizeof ebx   
27 [0x1b]:           rstore ebx   
28 [0x1c]:           call @1751 // <std.io#__srt_global.copy>   
29 [0x1d]:           popobj2    
30 [0x1e]:           returnobj   
31 [0x1f]:           ret   


function: std#string.starts_with[2952] params(1) in file: lib\support\0.2.805/string.sharp:221:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 222 movl 1   
5 [0x5]:           checknull   
6 [0x6]:           skpe ebx // pc = 19   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           sizeof ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           sizeof ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gt ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           movr cmt, ebx   
20 [0x14]:           jne 24   
21 [0x15]: line: 223 istorel 0, fp+0   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 226 istorel 0, fp+2   
27 [0x1b]:           ipushl #2   
28 [0x1c]:           movl 1   
29 [0x1d]:           movn #0   
31 [0x1f]:           sizeof ebx   
32 [0x20]:           loadval ecx   
33 [0x21]:           lt ecx, ebx   
34 [0x22]:           movr ebx, cmt   
35 [0x23]:           movr cmt, ebx   
36 [0x24]:           jne 66   
37 [0x25]: line: 228 movl 0   
38 [0x26]:           movn #0   
40 [0x28]:           pushobj   
41 [0x29]:           loadl ebx, fp+2   
42 [0x2a]:           popobj2    
43 [0x2b]:           movr adx, ebx   
44 [0x2c]:           chklen adx   
45 [0x2d]:           iaload ebx, adx   
46 [0x2e]:           rstore ebx   
47 [0x2f]:           movl 1   
48 [0x30]:           movn #0   
50 [0x32]:           pushobj   
51 [0x33]:           loadl ebx, fp+2   
52 [0x34]:           popobj2    
53 [0x35]:           movr adx, ebx   
54 [0x36]:           chklen adx   
55 [0x37]:           iaload ebx, adx   
56 [0x38]:           loadval ecx   
57 [0x39]:           tne ecx, ebx   
58 [0x3a]:           jne 62   
59 [0x3b]: line: 229 istorel 0, fp+0   
61 [0x3d]:           ret   
62 [0x3e]:           nop   
63 [0x3f]:           iaddl 1, fp@2   
65 [0x41]:           jmp @27   
66 [0x42]: line: 231 istorel 1, fp+0   
68 [0x44]:           ret   


function: std#string.find[2953] params(1) in file: lib\support\0.2.805/string.sharp:235:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 236 movl 1   
5 [0x5]:           movn #0   
7 [0x7]:           sizeof ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           sizeof ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 21   
18 [0x12]: line: 237 istorel 0, fp+0   
20 [0x14]:           ret   
21 [0x15]:           nop   
22 [0x16]: line: 240 istorel 0, fp+2   
24 [0x18]: line: 241 istorel 0, fp+3   
26 [0x1a]:           ipushl #3   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           sizeof ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           lt ecx, ebx   
33 [0x21]:           movr ebx, cmt   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 103   
36 [0x24]: line: 242 ipushl #3   
37 [0x25]:           movl 1   
38 [0x26]:           movn #0   
40 [0x28]:           sizeof ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           add ecx, ebx -> ebx   
43 [0x2b]:           rstore ebx   
44 [0x2c]:           movl 0   
45 [0x2d]:           movn #0   
47 [0x2f]:           sizeof ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           lt ecx, ebx   
50 [0x32]:           movr ebx, cmt   
51 [0x33]:           movr cmt, ebx   
52 [0x34]:           jne 96   
53 [0x35]: line: 243 istorel 0, fp+4   
55 [0x37]:           ipushl #4   
56 [0x38]:           movl 1   
57 [0x39]:           movn #0   
59 [0x3b]:           sizeof ebx   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           lt ecx, ebx   
62 [0x3e]:           movr ebx, cmt   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 92   
65 [0x41]: line: 244 movl 1   
66 [0x42]:           movn #0   
68 [0x44]:           pushobj   
69 [0x45]:           loadl ebx, fp+4   
70 [0x46]:           popobj2    
71 [0x47]:           movr adx, ebx   
72 [0x48]:           chklen adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movl 0   
76 [0x4c]:           movn #0   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+4   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           loadval ecx   
85 [0x55]:           tne ecx, ebx   
86 [0x56]:           jne 88   
87 [0x57]: line: 245 jmp @92   
88 [0x58]:           nop   
89 [0x59]:           iaddl 1, fp@4   
91 [0x5b]:           jmp @55   
92 [0x5c]: line: 248 istorel 1, fp+0   
94 [0x5e]:           ret   
95 [0x5f]:           jmp @99   
96 [0x60]: line: 249 istorel 0, fp+0   
98 [0x62]:           ret   
99 [0x63]:           nop   
100 [0x64]:           iaddl 1, fp@3   
102 [0x66]:           jmp @26   
103 [0x67]: line: 252 istorel 0, fp+0   
105 [0x69]:           ret   


function: std#string.ends_with[2954] params(1) in file: lib\support\0.2.805/string.sharp:255:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 256 movl 1   
5 [0x5]:           movn #0   
7 [0x7]:           sizeof ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           sizeof ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 21   
18 [0x12]: line: 257 istorel 0, fp+0   
20 [0x14]:           ret   
21 [0x15]:           nop   
22 [0x16]: line: 259 istorel 0, fp+2   
24 [0x18]: line: 260 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           sizeof ebx   
28 [0x1c]:           rstore ebx   
29 [0x1d]:           movl 1   
30 [0x1e]:           movn #0   
32 [0x20]:           sizeof ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           sub ecx, ebx -> ebx   
35 [0x23]:           smovr_2 ebx, fp+3   
36 [0x24]:           ipushl #3   
37 [0x25]:           movl 0   
38 [0x26]:           movn #0   
40 [0x28]:           sizeof ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           lt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 79   
46 [0x2e]: line: 261 movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           rstore ebx   
56 [0x38]:           movl 1   
57 [0x39]:           movn #0   
59 [0x3b]:           pushobj   
60 [0x3c]:           loadl ebx, fp+2   
61 [0x3d]:           movr egx, ebx   
62 [0x3e]:           inc ebx   
63 [0x3f]:           smovr_2 ebx, fp+2   
64 [0x40]:           movr ebx, egx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           iaload ebx, adx   
69 [0x45]:           loadval ecx   
70 [0x46]:           tne ecx, ebx   
71 [0x47]:           jne 75   
72 [0x48]: line: 262 istorel 0, fp+0   
74 [0x4a]:           ret   
75 [0x4b]:           nop   
76 [0x4c]:           iaddl 1, fp@3   
78 [0x4e]:           jmp @36   
79 [0x4f]: line: 265 istorel 1, fp+0   
81 [0x51]:           ret   


overload function: std#string.operator+[2955] params(1) in file: lib\support\0.2.805/string.sharp:268:8: note:  
		    def operator+(num : var) : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 269 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           call @2923 // <std#string.string>   
11 [0xb]:           popobj2    
12 [0xc]:           smovr_3 fp+2   
13 [0xd]: line: 270 pushl 2   
14 [0xe]:           ipushl #1   
15 [0xf]:           call @2957 // <std#string.parse>   
16 [0x10]:           popobj2    
17 [0x11]:           movn #0   
19 [0x13]:           pushobj   
20 [0x14]:           call @2933 // <std#string.append>   
21 [0x15]:           pop   
22 [0x16]: line: 271 movl 2   
23 [0x17]:           returnobj   
24 [0x18]:           ret   


function: std#string.size[2956] params(0) in file: lib\support\0.2.805/string.sharp:274:8: note:  
		    def size() := sizeof(data);
		       ^

0 [0x0]: line: 274 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.parse[2957] params(1) in file: lib\support\0.2.805/string.sharp:276:15: note:  
		    static def parse( number : var ) := new string(snprintf(currentFormat, number, precision));
		              ^

0 [0x0]: line: 276 new_class @64 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movg @64 // @std#string   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           rstore ebx   
9 [0x9]:           ipushl #0   
10 [0xa]:           movg @64 // @std#string   
11 [0xb]:           movn #1   
13 [0xd]:           movi #0, adx   
15 [0xf]:           iaload ebx, adx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @1564 // <std#__srt_global.snprintf>   
18 [0x12]:           call @2923 // <std#string.string>   
19 [0x13]:           popobj2    
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+=[2958] params(1) in file: lib\support\0.2.805/string.sharp:278:8: note:  
		    def operator+=( num: var ) := append(parse(num).data);
		       ^

0 [0x0]: line: 278 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2957 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2933 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2959] params(1) in file: lib\support\0.2.805/string.sharp:279:8: note:  
		    def operator+=( num: _int8 ) := append(num);
		       ^

0 [0x0]: line: 279 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2930 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


overload function: std#string.operator+=[2960] params(1) in file: lib\support\0.2.805/string.sharp:280:8: note:  
		    def operator+=( num: _uint8 ) := append(num);
		       ^

0 [0x0]: line: 280 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2930 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


overload function: std#string.operator+=[2961] params(1) in file: lib\support\0.2.805/string.sharp:281:8: note:  
		    def operator+=( num: _int16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 281 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2957 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2933 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2962] params(1) in file: lib\support\0.2.805/string.sharp:282:8: note:  
		    def operator+=( num: _uint16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 282 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2957 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2933 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2963] params(1) in file: lib\support\0.2.805/string.sharp:283:8: note:  
		    def operator+=( num: _int32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 283 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2957 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2933 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2964] params(1) in file: lib\support\0.2.805/string.sharp:284:8: note:  
		    def operator+=( num: _uint32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 284 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2957 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2933 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2965] params(1) in file: lib\support\0.2.805/string.sharp:285:8: note:  
		    def operator+=( num: _int64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 285 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2957 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2933 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2966] params(1) in file: lib\support\0.2.805/string.sharp:286:8: note:  
		    def operator+=( num: _uint64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 286 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2957 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2933 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2967] params(1) in file: lib\support\0.2.805/string.sharp:288:8: note:  
		    def operator+=( obj: printable ) : string
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 290 pushl 1   
5 [0x5]:           invoke_delegate 2914 { static=0, args=0 }   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 291 movl 2   
10 [0xa]:           checknull   
11 [0xb]:           not ebx, ebx   
12 [0xc]:           skne ebx // pc = 20   
13 [0xd]:           movl 2   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           pushnull    
18 [0x12]:           itest ebx   
19 [0x13]:           not ebx, ebx   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 32   
22 [0x16]: line: 292 pushl 0   
23 [0x17]:           movl 2   
24 [0x18]:           movn #0   
26 [0x1a]:           pushobj   
27 [0x1b]:           call @2933 // <std#string.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           jmp @38   
32 [0x20]: line: 294 pushl 0   
33 [0x21]:           newstr @44 // null   
34 [0x22]:           call @2933 // <std#string.append>   
35 [0x23]:           popobj2    
36 [0x24]:           returnobj   
37 [0x25]:           ret   
38 [0x26]:           nop   


overload function: std#string.operator+=[2968] params(1) in file: lib\support\0.2.805/string.sharp:297:8: note:  
		    def operator+=( str: string ) := append(str.data);
		       ^

0 [0x0]: line: 297 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @2933 // <std#string.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string.operator+=[2969] params(1) in file: lib\support\0.2.805/string.sharp:299:8: note:  
		    def operator+=( str: _int8[] ) := append(str);
		       ^

0 [0x0]: line: 299 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2933 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#string.substring[2970] params(2) in file: lib\support\0.2.805/string.sharp:301:8: note:  
		    def substring(start_pos: var, end_pos: var) : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 302 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 24   
20 [0x14]: line: 303 pushl 0   
21 [0x15]:           ipushl #1   
22 [0x16]:           call @2971 // <std#string.bounds_error>   
23 [0x17]:           throw    
24 [0x18]:           nop   
25 [0x19]: line: 304 ipushl #2   
26 [0x1a]:           loadl ebx, fp+1   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           lt ecx, ebx   
29 [0x1d]:           movr ebx, cmt   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 46   
32 [0x20]: line: 305 new_class @4 // std#illegal_argument_exception   
33 [0x21]:           dup    
34 [0x22]:           new_class @64 // std#string   
35 [0x23]:           dup    
36 [0x24]:           newstr @46 // end_pos:    
37 [0x25]:           call @2923 // <std#string.string>   
38 [0x26]:           ipushl #2   
39 [0x27]:           call @2955 // <std#string.operator+>   
40 [0x28]:           newstr @47 //  cannot be less than the start_pos:    
41 [0x29]:           call @2935 // <std#string.operator+>   
42 [0x2a]:           ipushl #1   
43 [0x2b]:           call @2955 // <std#string.operator+>   
44 [0x2c]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
45 [0x2d]:           throw    
46 [0x2e]:           nop   
47 [0x2f]: line: 309 new_class @64 // std#string   
48 [0x30]:           dup    
49 [0x31]:           call @2973 // <std#string.string>   
50 [0x32]:           popobj2    
51 [0x33]:           smovr_3 fp+3   
52 [0x34]: line: 310 movl 0   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           ipushl #1   
57 [0x39]:           ipushl #2   
58 [0x3a]:           call @1751 // <std.io#__srt_global.copy>   
59 [0x3b]:           movl 3   
60 [0x3c]:           movn #0   
62 [0x3e]:           popobj   
63 [0x3f]: line: 311 movl 3   
64 [0x40]:           returnobj   
65 [0x41]:           ret   


function: std#string.bounds_error[2971] params(1) in file: lib\support\0.2.805/string.sharp:314:16: note:  
		    private def bounds_error(pos : var) : error {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 315 new_class @6 // std#out_of_bounds_exception   
5 [0x5]:           dup    
6 [0x6]:           new_class @64 // std#string   
7 [0x7]:           dup    
8 [0x8]:           newstr @48 // Index out of bounds exception at:    
9 [0x9]:           call @2923 // <std#string.string>   
10 [0xa]:           ipushl #1   
11 [0xb]:           call @2955 // <std#string.operator+>   
12 [0xc]:           newstr @49 //  with size of:    
13 [0xd]:           call @2935 // <std#string.operator+>   
14 [0xe]:           movl 0   
15 [0xf]:           movn #0   
17 [0x11]:           sizeof ebx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @2955 // <std#string.operator+>   
20 [0x14]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   


function: std#string.hash[2972] params(0) in file: lib\support\0.2.805/string.sharp:318:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #64, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 319 istorel 0, fp+1   
6 [0x6]: line: 320 istorel 1, fp+2   
8 [0x8]: line: 321 istorel -1, fp+4   
10 [0xa]: line: 322 movl 0   
11 [0xb]: line: 323 movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           popl 5   
15 [0xf]:           iaddl 1, fp@4   
17 [0x11]:           movl 5   
18 [0x12]:           sizeof ecx   
19 [0x13]:           loadl ebx, fp+4   
20 [0x14]:           lt ebx, ecx   
21 [0x15]:           jne 59   
22 [0x16]:           iaload ecx, ebx   
23 [0x17]:           smovr_2 ecx, fp+3   
24 [0x18]: line: 324 ipushl #1   
25 [0x19]:           ipushl #3   
26 [0x1a]:           movi #97, ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           sub ecx, ebx -> ebx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movi #1, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           add ecx, ebx -> ebx   
35 [0x23]:           rstore ebx   
36 [0x24]:           loadl ebx, fp+2   
37 [0x25]:           loadval ecx   
38 [0x26]:           mul ecx, ebx -> ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           movi #1000000009, ebx   
44 [0x2c]:           loadval ecx   
45 [0x2d]:           mod ecx, ebx -> ebx   
46 [0x2e]:           smovr_2 ebx, fp+1   
47 [0x2f]: line: 325 ipushl #2   
48 [0x30]:           movi #31, ebx   
50 [0x32]:           loadval ecx   
51 [0x33]:           mul ecx, ebx -> ebx   
52 [0x34]:           rstore ebx   
53 [0x35]:           movi #1000000009, ebx   
55 [0x37]:           loadval ecx   
56 [0x38]:           mod ecx, ebx -> ebx   
57 [0x39]:           smovr_2 ebx, fp+2   
58 [0x3a]:           jmp @15   
59 [0x3b]: line: 327 new_class @45 // std#long   
60 [0x3c]:           dup    
61 [0x3d]:           ipushl #1   
62 [0x3e]:           call @2065 // <std#long.long>   
63 [0x3f]:           popobj2    
64 [0x40]:           returnobj   
65 [0x41]:           ret   


constructor: std#string.string[2973] params(0) in file: lib\support\0.2.805/string.sharp:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#string_builder.set_resize_capacity[2974] params(1) in file: lib\support\0.2.805/string_builder.sharp:20:8: note:  
		    def set_resize_capacity(new_capacity: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 21 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


constructor: std#string_builder.string_builder[2975] params(1) in file: lib\support\0.2.805/string_builder.sharp:24:19: note:  
		    string_builder(str : _int8[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          movl 0   
48 [0x30]:          movi #65, ebx   
50 [0x32]:          cast ebx   
51 [0x33]:          pushl 0   
52 [0x34]: line: 25 movl 1   
53 [0x35]:          checknull   
54 [0x36]:          not ebx, ebx   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 61   
57 [0x39]: line: 26 pushl 0   
58 [0x3a]:          pushl 1   
59 [0x3b]:          call @2987 // <std#string_builder.append>   
60 [0x3c]:          pop   
61 [0x3d]:          nop   
62 [0x3e]:          ret   


constructor: std#string_builder.string_builder[2976] params(1) in file: lib\support\0.2.805/string_builder.sharp:30:19: note:  
		    string_builder(ch: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          movl 0   
48 [0x30]:          movi #65, ebx   
50 [0x32]:          cast ebx   
51 [0x33]:          pushl 0   
52 [0x34]: line: 31 pushl 0   
53 [0x35]:          ipushl #1   
54 [0x36]:          call @2984 // <std#string_builder.append>   
55 [0x37]:          pop   
56 [0x38]:          ret   


constructor: std#string_builder.string_builder[2977] params(1) in file: lib\support\0.2.805/string_builder.sharp:34:19: note:  
		    string_builder(str : char[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          movl 0   
48 [0x30]:          movi #65, ebx   
50 [0x32]:          cast ebx   
51 [0x33]:          pushl 0   
52 [0x34]: line: 35 movl 1   
53 [0x35]:          checknull   
54 [0x36]:          not ebx, ebx   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 115   
57 [0x39]: line: 36 pushl 0   
58 [0x3a]:          movl 1   
59 [0x3b]:          sizeof ebx   
60 [0x3c]:          rstore ebx   
61 [0x3d]:          call @2981 // <std#string_builder.space_available>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          not ebx, ebx   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 71   
66 [0x42]: line: 37 pushl 0   
67 [0x43]:          movl 1   
68 [0x44]:          sizeof ebx   
69 [0x45]:          rstore ebx   
70 [0x46]:          call @2982 // <std#string_builder.expand>   
71 [0x47]:          nop   
72 [0x48]: line: 40 movl 1   
73 [0x49]:          sizeof ebx   
74 [0x4a]:          newarry ebx   
75 [0x4b]:          movl 0   
76 [0x4c]:          movn #0   
78 [0x4e]:          popobj   
79 [0x4f]: line: 41 istorel -1, fp+3   
81 [0x51]:          pushl 1   
82 [0x52]:          popl 4   
83 [0x53]:          iaddl 1, fp@3   
85 [0x55]:          movl 4   
86 [0x56]:          sizeof ecx   
87 [0x57]:          loadl ebx, fp+3   
88 [0x58]:          lt ebx, ecx   
89 [0x59]:          jne 115   
90 [0x5a]:          movnd ebx   
91 [0x5b]:          pushobj   
92 [0x5c]:          popl 2   
93 [0x5d]: line: 42 pushl 2   
94 [0x5e]:          call @1560 // <std#integer<_int8>.get_value>   
95 [0x5f]:          movl 0   
96 [0x60]:          movn #0   
98 [0x62]:          pushobj   
99 [0x63]:          movl 0   
100 [0x64]:          movn #3   
102 [0x66]:          movi #0, adx   
104 [0x68]:          iaload ebx, adx   
105 [0x69]:          inc ebx   
106 [0x6a]:          movi #0, adx   
108 [0x6c]:          rmov adx, ebx   
109 [0x6d]:          popobj2    
110 [0x6e]:          movr adx, ebx   
111 [0x6f]:          chklen adx   
112 [0x70]:          loadval ebx   
113 [0x71]:          rmov adx, ebx   
114 [0x72]:          jmp @83   
115 [0x73]:          nop   
116 [0x74]:          ret   


constructor: std#string_builder.string_builder[2978] params(1) in file: lib\support\0.2.805/string_builder.sharp:47:19: note:  
		    string_builder(str: string) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          movl 0   
48 [0x30]:          movi #65, ebx   
50 [0x32]:          cast ebx   
51 [0x33]:          pushl 0   
52 [0x34]: line: 48 movl 1   
53 [0x35]:          checknull   
54 [0x36]:          not ebx, ebx   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 62   
57 [0x39]: line: 49 pushl 0   
58 [0x3a]:          pushl 1   
59 [0x3b]:          call @2949 // <std#string.get_data>   
60 [0x3c]:          call @2987 // <std#string_builder.append>   
61 [0x3d]:          pop   
62 [0x3e]:          nop   
63 [0x3f]:          ret   


constructor: std#string_builder.string_builder[2979] params(1) in file: lib\support\0.2.805/string_builder.sharp:53:19: note:  
		    string_builder(str: string_builder) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          movl 0   
48 [0x30]:          movi #65, ebx   
50 [0x32]:          cast ebx   
51 [0x33]:          pushl 0   
52 [0x34]: line: 54 movl 1   
53 [0x35]:          checknull   
54 [0x36]:          not ebx, ebx   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 64   
57 [0x39]: line: 55 pushl 0   
58 [0x3a]:          movl 1   
59 [0x3b]:          movn #0   
61 [0x3d]:          pushobj   
62 [0x3e]:          call @2987 // <std#string_builder.append>   
63 [0x3f]:          pop   
64 [0x40]:          nop   
65 [0x41]:          ret   


constructor: std#string_builder.string_builder[2980] params(2) in file: lib\support\0.2.805/string_builder.sharp:59:19: note:  
		    string_builder(str : _int8[], offset: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          movl 0   
48 [0x30]:          movi #65, ebx   
50 [0x32]:          cast ebx   
51 [0x33]:          pushl 0   
52 [0x34]: line: 60 movl 1   
53 [0x35]:          checknull   
54 [0x36]:          not ebx, ebx   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 118   
57 [0x39]: line: 61 pushl 0   
58 [0x3a]:          movl 1   
59 [0x3b]:          sizeof ebx   
60 [0x3c]:          rstore ebx   
61 [0x3d]:          loadl ebx, fp+2   
62 [0x3e]:          loadval ecx   
63 [0x3f]:          sub ecx, ebx -> ebx   
64 [0x40]:          rstore ebx   
65 [0x41]:          call @2981 // <std#string_builder.space_available>   
66 [0x42]:          loadval ebx   
67 [0x43]:          not ebx, ebx   
68 [0x44]:          movr cmt, ebx   
69 [0x45]:          jne 75   
70 [0x46]: line: 62 pushl 0   
71 [0x47]:          movl 1   
72 [0x48]:          sizeof ebx   
73 [0x49]:          rstore ebx   
74 [0x4a]:          call @2982 // <std#string_builder.expand>   
75 [0x4b]:          nop   
76 [0x4c]: line: 65 pushl 1   
77 [0x4d]:          movl 0   
78 [0x4e]:          movn #0   
80 [0x50]:          pushobj   
81 [0x51]:          movl 0   
82 [0x52]:          movn #3   
84 [0x54]:          movi #0, adx   
86 [0x56]:          iaload ebx, adx   
87 [0x57]:          inc ebx   
88 [0x58]:          movi #0, adx   
90 [0x5a]:          rmov adx, ebx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          ipushl #2   
93 [0x5d]:          movl 1   
94 [0x5e]:          sizeof ebx   
95 [0x5f]:          rstore ebx   
96 [0x60]:          call @1741 // <std.io#__srt_global.memcopy>   
97 [0x61]: line: 66 movl 1   
98 [0x62]:          sizeof ebx   
99 [0x63]:          rstore ebx   
100 [0x64]:          loadl ebx, fp+2   
101 [0x65]:          loadval ecx   
102 [0x66]:          sub ecx, ebx -> ebx   
103 [0x67]:          rstore ebx   
104 [0x68]:          movi #1, ebx   
106 [0x6a]:          loadval ecx   
107 [0x6b]:          sub ecx, ebx -> ebx   
108 [0x6c]:          rstore ebx   
109 [0x6d]:          movl 0   
110 [0x6e]:          movn #3   
112 [0x70]:          movi #0, adx   
114 [0x72]:          iaload ecx, adx   
115 [0x73]:          loadval ebx   
116 [0x74]:          add ecx, ebx -> ebx   
117 [0x75]:          rmov adx, ebx   
118 [0x76]:          nop   
119 [0x77]:          ret   


function: std#string_builder.space_available[2981] params(1) in file: lib\support\0.2.805/string_builder.sharp:70:8: note:  
		    def space_available(space_required : var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 71 movl 0   
5 [0x5]:          movn #3   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #1, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          loadl ebx, fp+1   
17 [0x11]:          loadval ecx   
18 [0x12]:          add ecx, ebx -> ebx   
19 [0x13]:          rstore ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          loadval ecx   
25 [0x19]:          lt ecx, ebx   
26 [0x1a]:          return_val cmt   
27 [0x1b]:          ret   


function: std#string_builder.expand[2982] params(1) in file: lib\support\0.2.805/string_builder.sharp:74:8: note:  
		    def expand(space_required : var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 75 movl 0   
5 [0x5]:          movn #3   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #1, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          loadl ebx, fp+1   
17 [0x11]:          loadval ecx   
18 [0x12]:          add ecx, ebx -> ebx   
19 [0x13]:          rstore ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          movi #0, adx   
25 [0x19]:          iaload ebx, adx   
26 [0x1a]:          loadval ecx   
27 [0x1b]:          add ecx, ebx -> ebx   
28 [0x1c]:          smovr_2 ebx, fp+2   
29 [0x1d]: line: 76 movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          pushobj   
33 [0x21]:          ipushl #2   
34 [0x22]:          call @1731 // <std.io#__srt_global.realloc>   
35 [0x23]:          ret   


function: std#string_builder.replace[2983] params(2) in file: lib\support\0.2.805/string_builder.sharp:79:8: note:  
		    def replace(pos : var, ch: _int8) : string_builder {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 80 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          sizeof ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 18   
14 [0xe]: line: 81 pushl 0   
15 [0xf]:          ipushl #1   
16 [0x10]:          call @3016 // <std#string_builder.bounds_error>   
17 [0x11]:          throw    
18 [0x12]:          nop   
19 [0x13]: line: 84 ipushl #2   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          loadl ebx, fp+1   
25 [0x19]:          popobj2    
26 [0x1a]:          movr adx, ebx   
27 [0x1b]:          chklen adx   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]: line: 85 movl 0   
31 [0x1f]:          returnobj   
32 [0x20]:          ret   


function: std#string_builder.append[2984] params(1) in file: lib\support\0.2.805/string_builder.sharp:88:8: note:  
		    def append(ch: var) : string_builder
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 90 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 20   
12 [0xc]: line: 91 movi #255, ebx   
14 [0xe]:          newarry ebx   
15 [0xf]:          movl 0   
16 [0x10]:          movn #0   
18 [0x12]:          popobj   
19 [0x13]:          jmp @45   
20 [0x14]:          movl 0   
21 [0x15]:          movn #3   
23 [0x17]:          movi #0, adx   
25 [0x19]:          iaload ebx, adx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movi #1, ebx   
29 [0x1d]:          loadval ecx   
30 [0x1e]:          add ecx, ebx -> ebx   
31 [0x1f]:          rstore ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          sizeof ebx   
36 [0x24]:          loadval ecx   
37 [0x25]:          gte ecx, ebx   
38 [0x26]:          movr ebx, cmt   
39 [0x27]:          movr cmt, ebx   
40 [0x28]:          jne 45   
41 [0x29]: line: 93 pushl 0   
42 [0x2a]:          istore 0   
44 [0x2c]:          call @2982 // <std#string_builder.expand>   
45 [0x2d]:          nop   
46 [0x2e]: line: 95 ipushl #1   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #0   
50 [0x32]:          pushobj   
51 [0x33]:          movl 0   
52 [0x34]:          movn #0   
54 [0x36]:          sizeof ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          movi #1, ebx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          sub ecx, ebx -> ebx   
60 [0x3c]:          popobj2    
61 [0x3d]:          movr adx, ebx   
62 [0x3e]:          chklen adx   
63 [0x3f]:          loadval ebx   
64 [0x40]:          rmov adx, ebx   
65 [0x41]: line: 96 movl 0   
66 [0x42]:          returnobj   
67 [0x43]:          ret   


function: std#string_builder.get_elements[2985] params(0) in file: lib\support\0.2.805/string_builder.sharp:99:8: note:  
		    def get_elements() := to_string().get_elements();
		       ^

0 [0x0]: line: 99 pushl 0   
1 [0x1]:          call @2991 // <std#string_builder.to_string>   
2 [0x2]:          call @2950 // <std#string.get_elements>   
3 [0x3]:          popobj2    
4 [0x4]:          returnobj   
5 [0x5]:          ret   


function: std#string_builder.append[2986] params(1) in file: lib\support\0.2.805/string_builder.sharp:101:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 101 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1560 // <std#integer<_int8>.get_value>   
3 [0x3]:           call @2984 // <std#string_builder.append>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#string_builder.append[2987] params(1) in file: lib\support\0.2.805/string_builder.sharp:103:8: note:  
		    def append(immstr: _int8[]) : string_builder
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 105 movl 1   
5 [0x5]:           checknull   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 11   
8 [0x8]:           movl 0   
9 [0x9]:           returnobj   
10 [0xa]:           ret   
11 [0xb]:           nop   
12 [0xc]: line: 107 movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           pushobj   
16 [0x10]:           pushnull    
17 [0x11]:           itest ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 33   
20 [0x14]: line: 108 movl 1   
21 [0x15]:           sizeof ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #255, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           add ecx, ebx -> ebx   
27 [0x1b]:           newarry ebx   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           popobj   
32 [0x20]:           jmp @47   
33 [0x21]:           pushl 0   
34 [0x22]:           movl 1   
35 [0x23]:           sizeof ebx   
36 [0x24]:           rstore ebx   
37 [0x25]:           call @2981 // <std#string_builder.space_available>   
38 [0x26]:           loadval ebx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 47   
42 [0x2a]: line: 110 pushl 0   
43 [0x2b]:           movl 1   
44 [0x2c]:           sizeof ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           call @2982 // <std#string_builder.expand>   
47 [0x2f]:           nop   
48 [0x30]: line: 112 pushl 1   
49 [0x31]:           movl 0   
50 [0x32]:           movn #0   
52 [0x34]:           pushobj   
53 [0x35]:           movl 0   
54 [0x36]:           movn #3   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           iaload ebx, adx   
59 [0x3b]:           inc ebx   
60 [0x3c]:           movi #0, adx   
62 [0x3e]:           rmov adx, ebx   
63 [0x3f]:           rstore ebx   
64 [0x40]:           istore 0   
66 [0x42]:           movl 1   
67 [0x43]:           sizeof ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           call @1741 // <std.io#__srt_global.memcopy>   
70 [0x46]: line: 113 movl 1   
71 [0x47]:           sizeof ebx   
72 [0x48]:           rstore ebx   
73 [0x49]:           movi #1, ebx   
75 [0x4b]:           loadval ecx   
76 [0x4c]:           sub ecx, ebx -> ebx   
77 [0x4d]:           rstore ebx   
78 [0x4e]:           movl 0   
79 [0x4f]:           movn #3   
81 [0x51]:           movi #0, adx   
83 [0x53]:           iaload ecx, adx   
84 [0x54]:           loadval ebx   
85 [0x55]:           add ecx, ebx -> ebx   
86 [0x56]:           rmov adx, ebx   
87 [0x57]: line: 114 movl 0   
88 [0x58]:           returnobj   
89 [0x59]:           ret   


function: std#string_builder.append[2988] params(2) in file: lib\support\0.2.805/string_builder.sharp:117:8: note:  
		    def append(immstr: _int8[], len: var) : string_builder
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 119 movl 1   
5 [0x5]:           checknull   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 11   
8 [0x8]:           movl 0   
9 [0x9]:           returnobj   
10 [0xa]:           ret   
11 [0xb]:           nop   
12 [0xc]: line: 120 loadl ecx, fp+2   
13 [0xd]:           movi #0, ebx   
15 [0xf]:           lt ecx, ebx   
16 [0x10]:           movr ebx, cmt   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 24   
19 [0x13]: line: 121 new_class @3 // std#exception   
20 [0x14]:           dup    
21 [0x15]:           newstr @41 // length cannot be less than zero   
22 [0x16]:           call @1620 // <std#exception.exception>   
23 [0x17]:           throw    
24 [0x18]:           nop   
25 [0x19]: line: 123 ipushl #2   
26 [0x1a]:           movl 1   
27 [0x1b]:           sizeof ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           gt ecx, ebx   
30 [0x1e]:           movr ebx, cmt   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 49   
33 [0x21]: line: 124 new_class @3 // std#exception   
34 [0x22]:           dup    
35 [0x23]:           new_class @64 // std#string   
36 [0x24]:           dup    
37 [0x25]:           newstr @42 // length of:    
38 [0x26]:           call @2923 // <std#string.string>   
39 [0x27]:           ipushl #2   
40 [0x28]:           call @2955 // <std#string.operator+>   
41 [0x29]:           newstr @43 //  is greater than the string:    
42 [0x2a]:           call @2935 // <std#string.operator+>   
43 [0x2b]:           movl 1   
44 [0x2c]:           sizeof ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           call @2955 // <std#string.operator+>   
47 [0x2f]:           call @1621 // <std#exception.exception>   
48 [0x30]:           throw    
49 [0x31]:           nop   
50 [0x32]: line: 126 movl 0   
51 [0x33]:           movn #0   
53 [0x35]:           pushobj   
54 [0x36]:           pushnull    
55 [0x37]:           itest ebx   
56 [0x38]:           movr cmt, ebx   
57 [0x39]:           jne 69   
58 [0x3a]: line: 127 ipushl #2   
59 [0x3b]:           movi #255, ebx   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           add ecx, ebx -> ebx   
63 [0x3f]:           newarry ebx   
64 [0x40]:           movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           popobj   
68 [0x44]:           jmp @83   
69 [0x45]:           pushl 0   
70 [0x46]:           movl 1   
71 [0x47]:           sizeof ebx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2981 // <std#string_builder.space_available>   
74 [0x4a]:           loadval ebx   
75 [0x4b]:           not ebx, ebx   
76 [0x4c]:           movr cmt, ebx   
77 [0x4d]:           jne 83   
78 [0x4e]: line: 129 pushl 0   
79 [0x4f]:           movl 1   
80 [0x50]:           sizeof ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           call @2982 // <std#string_builder.expand>   
83 [0x53]:           nop   
84 [0x54]: line: 131 pushl 1   
85 [0x55]:           movl 0   
86 [0x56]:           movn #0   
88 [0x58]:           pushobj   
89 [0x59]:           movl 0   
90 [0x5a]:           movn #3   
92 [0x5c]:           movi #0, adx   
94 [0x5e]:           iaload ebx, adx   
95 [0x5f]:           inc ebx   
96 [0x60]:           movi #0, adx   
98 [0x62]:           rmov adx, ebx   
99 [0x63]:           rstore ebx   
100 [0x64]:           istore 0   
102 [0x66]:           ipushl #2   
103 [0x67]:           call @1741 // <std.io#__srt_global.memcopy>   
104 [0x68]: line: 132 movl 1   
105 [0x69]:           sizeof ebx   
106 [0x6a]:           rstore ebx   
107 [0x6b]:           loadl ebx, fp+2   
108 [0x6c]:           loadval ecx   
109 [0x6d]:           sub ecx, ebx -> ebx   
110 [0x6e]:           rstore ebx   
111 [0x6f]:           movi #1, ebx   
113 [0x71]:           loadval ecx   
114 [0x72]:           sub ecx, ebx -> ebx   
115 [0x73]:           rstore ebx   
116 [0x74]:           movl 0   
117 [0x75]:           movn #3   
119 [0x77]:           movi #0, adx   
121 [0x79]:           iaload ecx, adx   
122 [0x7a]:           loadval ebx   
123 [0x7b]:           add ecx, ebx -> ebx   
124 [0x7c]:           rmov adx, ebx   
125 [0x7d]: line: 133 movl 0   
126 [0x7e]:           returnobj   
127 [0x7f]:           ret   


overload function: std#string_builder.operator+[2989] params(1) in file: lib\support\0.2.805/string_builder.sharp:136:8: note:  
		    def operator+(immstr : _int8[]) : string_builder {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 137 new_class @65 // std#string_builder   
5 [0x5]:           dup    
6 [0x6]:           movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           call @2975 // <std#string_builder.string_builder>   
11 [0xb]:           popobj2    
12 [0xc]:           smovr_3 fp+2   
13 [0xd]: line: 138 movl 1   
14 [0xe]:           checknull   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 25   
18 [0x12]: line: 139 pushl 2   
19 [0x13]:           pushl 1   
20 [0x14]:           call @2987 // <std#string_builder.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 141 pushl 2   
26 [0x1a]:           newstr @44 // null   
27 [0x1b]:           call @2987 // <std#string_builder.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


overload function: std#string_builder.operator+[2990] params(1) in file: lib\support\0.2.805/string_builder.sharp:145:8: note:  
		    def operator+(obj : printable) : string_builder {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 146 new_class @65 // std#string_builder   
5 [0x5]:           dup    
6 [0x6]:           movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           call @2975 // <std#string_builder.string_builder>   
11 [0xb]:           popobj2    
12 [0xc]:           smovr_3 fp+2   
13 [0xd]: line: 147 movl 1   
14 [0xe]:           checknull   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 28   
18 [0x12]: line: 148 pushl 2   
19 [0x13]:           pushl 1   
20 [0x14]:           invoke_delegate 2914 { static=0, args=0 }   
22 [0x16]:           call @2949 // <std#string.get_data>   
23 [0x17]:           call @2987 // <std#string_builder.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           jmp @34   
28 [0x1c]: line: 150 pushl 2   
29 [0x1d]:           newstr @44 // null   
30 [0x1e]:           call @2987 // <std#string_builder.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           nop   


function: std#string_builder.to_string[2991] params(0) in file: lib\support\0.2.805/string_builder.sharp:153:8: note:  
		    def to_string() := new string(data, 0, cursor + 1);
		       ^

0 [0x0]: line: 153 new_class @64 // std#string   
1 [0x1]:           dup    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           istore 0   
8 [0x8]:           movl 0   
9 [0x9]:           movn #3   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           add ecx, ebx -> ebx   
19 [0x13]:           rstore ebx   
20 [0x14]:           call @2928 // <std#string.string>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   


overload function: std#string_builder.operator==[2992] params(1) in file: lib\support\0.2.805/string_builder.sharp:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 156 movl 0   
5 [0x5]:           movn #3   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #1, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           rstore ebx   
16 [0x10]:           movl 1   
17 [0x11]:           sizeof ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           tne ecx, ebx   
20 [0x14]:           jne 24   
21 [0x15]: line: 157 istorel 0, fp+0   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 159 istorel 0, fp+2   
27 [0x1b]: line: 160 istorel -1, fp+4   
29 [0x1d]:           pushl 1   
30 [0x1e]:           popl 5   
31 [0x1f]:           iaddl 1, fp@4   
33 [0x21]:           movl 5   
34 [0x22]:           sizeof ecx   
35 [0x23]:           loadl ebx, fp+4   
36 [0x24]:           lt ebx, ecx   
37 [0x25]:           jne 62   
38 [0x26]:           iaload ecx, ebx   
39 [0x27]:           smovr_2 ecx, fp+3   
40 [0x28]: line: 161 ipushl #3   
41 [0x29]:           movl 0   
42 [0x2a]:           movn #0   
44 [0x2c]:           pushobj   
45 [0x2d]:           loadl ebx, fp+2   
46 [0x2e]:           movr egx, ebx   
47 [0x2f]:           inc ebx   
48 [0x30]:           smovr_2 ebx, fp+2   
49 [0x31]:           movr ebx, egx   
50 [0x32]:           popobj2    
51 [0x33]:           movr adx, ebx   
52 [0x34]:           chklen adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           loadval ecx   
55 [0x37]:           tne ecx, ebx   
56 [0x38]:           jne 60   
57 [0x39]: line: 162 istorel 0, fp+0   
59 [0x3b]:           ret   
60 [0x3c]:           nop   
61 [0x3d]:           jmp @31   
62 [0x3e]: line: 165 istorel 1, fp+0   
64 [0x40]:           ret   


overload function: std#string_builder.operator==[2993] params(1) in file: lib\support\0.2.805/string_builder.sharp:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 169 movl 0   
5 [0x5]:           movn #3   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #1, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           rstore ebx   
16 [0x10]:           pushl 1   
17 [0x11]:           call @2949 // <std#string.get_data>   
18 [0x12]:           popobj2    
19 [0x13]:           sizeof ebx   
20 [0x14]:           loadval ecx   
21 [0x15]:           tne ecx, ebx   
22 [0x16]:           jne 26   
23 [0x17]: line: 170 istorel 0, fp+0   
25 [0x19]:           ret   
26 [0x1a]:           nop   
27 [0x1b]: line: 172 istorel 0, fp+2   
29 [0x1d]: line: 173 istorel -1, fp+4   
31 [0x1f]:           pushl 1   
32 [0x20]:           call @2949 // <std#string.get_data>   
33 [0x21]:           popl 5   
34 [0x22]:           iaddl 1, fp@4   
36 [0x24]:           movl 5   
37 [0x25]:           sizeof ecx   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           lt ebx, ecx   
40 [0x28]:           jne 65   
41 [0x29]:           iaload ecx, ebx   
42 [0x2a]:           smovr_2 ecx, fp+3   
43 [0x2b]: line: 174 ipushl #3   
44 [0x2c]:           movl 0   
45 [0x2d]:           movn #0   
47 [0x2f]:           pushobj   
48 [0x30]:           loadl ebx, fp+2   
49 [0x31]:           movr egx, ebx   
50 [0x32]:           inc ebx   
51 [0x33]:           smovr_2 ebx, fp+2   
52 [0x34]:           movr ebx, egx   
53 [0x35]:           popobj2    
54 [0x36]:           movr adx, ebx   
55 [0x37]:           chklen adx   
56 [0x38]:           iaload ebx, adx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           tne ecx, ebx   
59 [0x3b]:           jne 63   
60 [0x3c]: line: 175 istorel 0, fp+0   
62 [0x3e]:           ret   
63 [0x3f]:           nop   
64 [0x40]:           jmp @34   
65 [0x41]: line: 178 istorel 1, fp+0   
67 [0x43]:           ret   


overload function: std#string_builder.operator!=[2994] params(1) in file: lib\support\0.2.805/string_builder.sharp:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2992 // <std#string_builder.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string_builder.operator!=[2995] params(1) in file: lib\support\0.2.805/string_builder.sharp:184:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 184 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2993 // <std#string_builder.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string_builder.operator=[2996] params(1) in file: lib\support\0.2.805/string_builder.sharp:186:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 188 movl 1   
5 [0x5]:           checknull   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 24   
8 [0x8]: line: 189 movi #255, ebx   
10 [0xa]:           newarry ebx   
11 [0xb]:           movl 0   
12 [0xc]:           movn #0   
14 [0xe]:           popobj   
15 [0xf]: line: 190 movi #-1, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #3   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           jmp @58   
24 [0x18]: line: 193 movl 1   
25 [0x19]:           sizeof ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #255, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           newarry ebx   
32 [0x20]:           movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           popobj   
36 [0x24]: line: 194 movl 1   
37 [0x25]:           sizeof ebx   
38 [0x26]:           movl 0   
39 [0x27]:           movn #3   
41 [0x29]:           movi #0, adx   
43 [0x2b]:           rmov adx, ebx   
44 [0x2c]: line: 195 pushl 1   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           pushobj   
49 [0x31]:           istore 0   
51 [0x33]:           movi #0, ebx   
53 [0x35]:           rstore ebx   
54 [0x36]:           movl 1   
55 [0x37]:           sizeof ebx   
56 [0x38]:           rstore ebx   
57 [0x39]:           call @1741 // <std.io#__srt_global.memcopy>   
58 [0x3a]:           nop   
59 [0x3b]:           ret   


function: std#string_builder.at[2997] params(1) in file: lib\support\0.2.805/string_builder.sharp:199:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 200 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 20   
16 [0x10]: line: 201 pushl 0   
17 [0x11]:           ipushl #1   
18 [0x12]:           call @3016 // <std#string_builder.bounds_error>   
19 [0x13]:           throw    
20 [0x14]:           nop   
21 [0x15]: line: 202 movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+1   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           iaload ebx, adx   
30 [0x1e]:           return_val ebx   
31 [0x1f]:           ret   


overload function: std#string_builder.operator[[2998] params(1) in file: lib\support\0.2.805/string_builder.sharp:205:8: note:  
		    def operator[](pos: var) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 206 pushl 0   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @2997 // <std#string_builder.at>   
7 [0x7]:           loadval ebx   
8 [0x8]:           return_val ebx   
9 [0x9]:           ret   


function: std#string_builder.fmt[2999] params(1) in file: lib\support\0.2.805/string_builder.sharp:209:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 210 ipushl #0   
1 [0x1]:           movg @65 // @std#string_builder   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]: line: 211 ipushl #0   
10 [0xa]:           movi #102, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           tne ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skne ebx // pc = 20   
16 [0x10]:           ipushl #0   
17 [0x11]:           movi #70, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           tne ecx, ebx   
21 [0x15]:           jne 31   
22 [0x16]:           istore 0   
24 [0x18]:           movg @65 // @std#string_builder   
25 [0x19]:           movn #1   
27 [0x1b]:           loadval ebx   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           rmov adx, ebx   
31 [0x1f]:           nop   
32 [0x20]:           ret   


function: std#string_builder.set_precision[3000] params(1) in file: lib\support\0.2.805/string_builder.sharp:214:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 215 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 12   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 24   
14 [0xe]: line: 216 new_class @4 // std#illegal_argument_exception   
15 [0xf]:           dup    
16 [0x10]:           new_class @64 // std#string   
17 [0x11]:           dup    
18 [0x12]:           newstr @45 // invalid precision:    
19 [0x13]:           call @2923 // <std#string.string>   
20 [0x14]:           ipushl #0   
21 [0x15]:           call @2955 // <std#string.operator+>   
22 [0x16]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
23 [0x17]:           throw    
24 [0x18]:           nop   
25 [0x19]: line: 217 ipushl #0   
26 [0x1a]:           movg @65 // @std#string_builder   
27 [0x1b]:           movn #1   
29 [0x1d]:           loadval ebx   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           rmov adx, ebx   
33 [0x21]:           ret   


function: std#string_builder.to_array[3001] params(0) in file: lib\support\0.2.805/string_builder.sharp:220:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 222 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           pushnull    
9 [0x9]:           itest ebx   
10 [0xa]:           skpe ebx // pc = 21   
11 [0xb]:           movl 0   
12 [0xc]:           movn #3   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           movi #-1, ebx   
20 [0x14]:           loadval ecx   
21 [0x15]:           test ecx, ebx   
22 [0x16]:           jne 27   
23 [0x17]:           pushnull    
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           nop   
28 [0x1c]: line: 223 movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           pushobj   
32 [0x20]:           istore 0   
34 [0x22]:           movl 0   
35 [0x23]:           movn #3   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           rstore ebx   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           add ecx, ebx -> ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           call @1751 // <std.io#__srt_global.copy>   
47 [0x2f]:           popobj2    
48 [0x30]:           returnobj   
49 [0x31]:           ret   


function: std#string_builder.starts_with[3002] params(1) in file: lib\support\0.2.805/string_builder.sharp:227:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 228 movl 1   
5 [0x5]:           checknull   
6 [0x6]:           skpe ebx // pc = 25   
7 [0x7]:           pushl 1   
8 [0x8]:           call @2956 // <std#string.size>   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movl 0   
12 [0xc]:           movn #3   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           movi #1, ebx   
20 [0x14]:           loadval ecx   
21 [0x15]:           add ecx, ebx -> ebx   
22 [0x16]:           loadval ecx   
23 [0x17]:           gt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 30   
27 [0x1b]: line: 229 istorel 0, fp+0   
29 [0x1d]:           ret   
30 [0x1e]:           nop   
31 [0x1f]: line: 232 istorel 0, fp+2   
33 [0x21]:           ipushl #2   
34 [0x22]:           pushl 1   
35 [0x23]:           call @2956 // <std#string.size>   
36 [0x24]:           loadval ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 71   
42 [0x2a]: line: 234 movl 0   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           loadl ebx, fp+2   
47 [0x2f]:           popobj2    
48 [0x30]:           movr adx, ebx   
49 [0x31]:           chklen adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 1   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           loadl ebx, fp+2   
57 [0x39]:           popobj2    
58 [0x3a]:           movr adx, ebx   
59 [0x3b]:           chklen adx   
60 [0x3c]:           iaload ebx, adx   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           tne ecx, ebx   
63 [0x3f]:           jne 67   
64 [0x40]: line: 235 istorel 0, fp+0   
66 [0x42]:           ret   
67 [0x43]:           nop   
68 [0x44]:           iaddl 1, fp@2   
70 [0x46]:           jmp @33   
71 [0x47]: line: 237 istorel 1, fp+0   
73 [0x49]:           ret   


function: std#string_builder.find[3003] params(1) in file: lib\support\0.2.805/string_builder.sharp:240:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 241 pushl 1   
5 [0x5]:           call @2956 // <std#string.size>   
6 [0x6]:           loadval ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #3   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           add ecx, ebx -> ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           gt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 27   
24 [0x18]: line: 242 istorel 0, fp+0   
26 [0x1a]:           ret   
27 [0x1b]:           nop   
28 [0x1c]: line: 245 istorel 0, fp+2   
30 [0x1e]: line: 246 istorel 0, fp+3   
32 [0x20]:           ipushl #3   
33 [0x21]:           movl 0   
34 [0x22]:           movn #3   
36 [0x24]:           movi #0, adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           add ecx, ebx -> ebx   
44 [0x2c]:           loadval ecx   
45 [0x2d]:           lt ecx, ebx   
46 [0x2e]:           movr ebx, cmt   
47 [0x2f]:           movr cmt, ebx   
48 [0x30]:           jne 116   
49 [0x31]: line: 247 ipushl #3   
50 [0x32]:           pushl 1   
51 [0x33]:           call @2956 // <std#string.size>   
52 [0x34]:           loadval ebx   
53 [0x35]:           loadval ecx   
54 [0x36]:           add ecx, ebx -> ebx   
55 [0x37]:           rstore ebx   
56 [0x38]:           movl 0   
57 [0x39]:           movn #3   
59 [0x3b]:           movi #0, adx   
61 [0x3d]:           iaload ebx, adx   
62 [0x3e]:           rstore ebx   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           loadval ecx   
68 [0x44]:           lt ecx, ebx   
69 [0x45]:           movr ebx, cmt   
70 [0x46]:           movr cmt, ebx   
71 [0x47]:           jne 109   
72 [0x48]: line: 248 istorel 0, fp+4   
74 [0x4a]:           ipushl #4   
75 [0x4b]:           pushl 1   
76 [0x4c]:           call @2956 // <std#string.size>   
77 [0x4d]:           loadval ebx   
78 [0x4e]:           loadval ecx   
79 [0x4f]:           lt ecx, ebx   
80 [0x50]:           movr ebx, cmt   
81 [0x51]:           movr cmt, ebx   
82 [0x52]:           jne 105   
83 [0x53]: line: 249 pushl 1   
84 [0x54]:           ipushl #4   
85 [0x55]:           call @2946 // <std#string.operator[>   
86 [0x56]:           loadval ebx   
87 [0x57]:           rstore ebx   
88 [0x58]:           movl 0   
89 [0x59]:           movn #0   
91 [0x5b]:           pushobj   
92 [0x5c]:           loadl ebx, fp+4   
93 [0x5d]:           popobj2    
94 [0x5e]:           movr adx, ebx   
95 [0x5f]:           chklen adx   
96 [0x60]:           iaload ebx, adx   
97 [0x61]:           loadval ecx   
98 [0x62]:           tne ecx, ebx   
99 [0x63]:           jne 101   
100 [0x64]: line: 250 jmp @105   
101 [0x65]:           nop   
102 [0x66]:           iaddl 1, fp@4   
104 [0x68]:           jmp @74   
105 [0x69]: line: 253 istorel 1, fp+0   
107 [0x6b]:           ret   
108 [0x6c]:           jmp @112   
109 [0x6d]: line: 254 istorel 0, fp+0   
111 [0x6f]:           ret   
112 [0x70]:           nop   
113 [0x71]:           iaddl 1, fp@3   
115 [0x73]:           jmp @32   
116 [0x74]: line: 257 istorel 0, fp+0   
118 [0x76]:           ret   


function: std#string_builder.find[3004] params(1) in file: lib\support\0.2.805/string_builder.sharp:260:8: note:  
		    def find(str: string_builder) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 261 movl 1   
5 [0x5]:           movn #0   
7 [0x7]:           sizeof ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movl 0   
10 [0xa]:           movn #3   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #1, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           add ecx, ebx -> ebx   
20 [0x14]:           loadval ecx   
21 [0x15]:           gt ecx, ebx   
22 [0x16]:           movr ebx, cmt   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 28   
25 [0x19]: line: 262 istorel 0, fp+0   
27 [0x1b]:           ret   
28 [0x1c]:           nop   
29 [0x1d]: line: 265 istorel 0, fp+2   
31 [0x1f]: line: 266 istorel 0, fp+3   
33 [0x21]:           ipushl #3   
34 [0x22]:           movl 0   
35 [0x23]:           movn #3   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           rstore ebx   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           add ecx, ebx -> ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           lt ecx, ebx   
47 [0x2f]:           movr ebx, cmt   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 119   
50 [0x32]: line: 267 ipushl #3   
51 [0x33]:           movl 1   
52 [0x34]:           movn #0   
54 [0x36]:           sizeof ebx   
55 [0x37]:           loadval ecx   
56 [0x38]:           add ecx, ebx -> ebx   
57 [0x39]:           rstore ebx   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #3   
61 [0x3d]:           movi #0, adx   
63 [0x3f]:           iaload ebx, adx   
64 [0x40]:           rstore ebx   
65 [0x41]:           movi #1, ebx   
67 [0x43]:           loadval ecx   
68 [0x44]:           add ecx, ebx -> ebx   
69 [0x45]:           loadval ecx   
70 [0x46]:           lt ecx, ebx   
71 [0x47]:           movr ebx, cmt   
72 [0x48]:           movr cmt, ebx   
73 [0x49]:           jne 112   
74 [0x4a]: line: 268 istorel 0, fp+4   
76 [0x4c]:           ipushl #4   
77 [0x4d]:           movl 1   
78 [0x4e]:           movn #0   
80 [0x50]:           sizeof ebx   
81 [0x51]:           loadval ecx   
82 [0x52]:           lt ecx, ebx   
83 [0x53]:           movr ebx, cmt   
84 [0x54]:           movr cmt, ebx   
85 [0x55]:           jne 108   
86 [0x56]: line: 269 pushl 1   
87 [0x57]:           ipushl #4   
88 [0x58]:           call @2998 // <std#string_builder.operator[>   
89 [0x59]:           loadval ebx   
90 [0x5a]:           rstore ebx   
91 [0x5b]:           movl 0   
92 [0x5c]:           movn #0   
94 [0x5e]:           pushobj   
95 [0x5f]:           loadl ebx, fp+4   
96 [0x60]:           popobj2    
97 [0x61]:           movr adx, ebx   
98 [0x62]:           chklen adx   
99 [0x63]:           iaload ebx, adx   
100 [0x64]:           loadval ecx   
101 [0x65]:           tne ecx, ebx   
102 [0x66]:           jne 104   
103 [0x67]: line: 270 jmp @108   
104 [0x68]:           nop   
105 [0x69]:           iaddl 1, fp@4   
107 [0x6b]:           jmp @76   
108 [0x6c]: line: 273 istorel 1, fp+0   
110 [0x6e]:           ret   
111 [0x6f]:           jmp @115   
112 [0x70]: line: 274 istorel 0, fp+0   
114 [0x72]:           ret   
115 [0x73]:           nop   
116 [0x74]:           iaddl 1, fp@3   
118 [0x76]:           jmp @33   
119 [0x77]: line: 277 istorel 0, fp+0   
121 [0x79]:           ret   


function: std#string_builder.ends_with[3005] params(1) in file: lib\support\0.2.805/string_builder.sharp:280:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 281 movl 1   
5 [0x5]:           movn #0   
7 [0x7]:           sizeof ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movl 0   
10 [0xa]:           movn #3   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #1, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           add ecx, ebx -> ebx   
20 [0x14]:           loadval ecx   
21 [0x15]:           gte ecx, ebx   
22 [0x16]:           movr ebx, cmt   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 28   
25 [0x19]: line: 282 istorel 0, fp+0   
27 [0x1b]:           ret   
28 [0x1c]:           nop   
29 [0x1d]: line: 284 movl 0   
30 [0x1e]:           movn #3   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #1, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           add ecx, ebx -> ebx   
40 [0x28]:           rstore ebx   
41 [0x29]:           movl 1   
42 [0x2a]:           movn #0   
44 [0x2c]:           sizeof ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           sub ecx, ebx -> ebx   
47 [0x2f]:           smovr_2 ebx, fp+2   
48 [0x30]:           ipushl #2   
49 [0x31]:           movl 0   
50 [0x32]:           movn #3   
52 [0x34]:           movi #0, adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           rstore ebx   
56 [0x38]:           movi #1, ebx   
58 [0x3a]:           loadval ecx   
59 [0x3b]:           add ecx, ebx -> ebx   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           lt ecx, ebx   
62 [0x3e]:           movr ebx, cmt   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 94   
65 [0x41]: line: 285 movl 0   
66 [0x42]:           movn #0   
68 [0x44]:           pushobj   
69 [0x45]:           loadl ebx, fp+2   
70 [0x46]:           popobj2    
71 [0x47]:           movr adx, ebx   
72 [0x48]:           chklen adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movl 1   
76 [0x4c]:           movn #0   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+2   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           loadval ecx   
85 [0x55]:           tne ecx, ebx   
86 [0x56]:           jne 90   
87 [0x57]: line: 286 istorel 0, fp+0   
89 [0x59]:           ret   
90 [0x5a]:           nop   
91 [0x5b]:           iaddl 1, fp@2   
93 [0x5d]:           jmp @48   
94 [0x5e]: line: 289 istorel 1, fp+0   
96 [0x60]:           ret   


overload function: std#string_builder.operator+[3006] params(1) in file: lib\support\0.2.805/string_builder.sharp:292:8: note:  
		    def operator+(num : var) : string_builder {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 293 new_class @65 // std#string_builder   
5 [0x5]:           dup    
6 [0x6]:           movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           call @2975 // <std#string_builder.string_builder>   
11 [0xb]:           popobj2    
12 [0xc]:           smovr_3 fp+2   
13 [0xd]: line: 294 pushl 2   
14 [0xe]:           pushl 0   
15 [0xf]:           ipushl #1   
16 [0x10]:           call @3008 // <std#string_builder.parse>   
17 [0x11]:           call @3012 // <std#string_builder.get_data>   
18 [0x12]:           call @2987 // <std#string_builder.append>   
19 [0x13]:           pop   
20 [0x14]: line: 295 movl 2   
21 [0x15]:           returnobj   
22 [0x16]:           ret   


function: std#string_builder.size[3007] params(0) in file: lib\support\0.2.805/string_builder.sharp:298:8: note:  
		    def size() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 299 movl 0   
5 [0x5]:           movn #3   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #1, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


function: std#string_builder.parse[3008] params(1) in file: lib\support\0.2.805/string_builder.sharp:302:8: note:  
		    def parse( number : var ) : string_builder
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 304 new_class @65 // std#string_builder   
5 [0x5]:           dup    
6 [0x6]:           movg @65 // @std#string_builder   
7 [0x7]:           movn #0   
9 [0x9]:           movi #0, adx   
11 [0xb]:           iaload ebx, adx   
12 [0xc]:           rstore ebx   
13 [0xd]:           ipushl #1   
14 [0xe]:           movg @65 // @std#string_builder   
15 [0xf]:           movn #1   
17 [0x11]:           movi #0, adx   
19 [0x13]:           iaload ebx, adx   
20 [0x14]:           rstore ebx   
21 [0x15]:           call @1564 // <std#__srt_global.snprintf>   
22 [0x16]:           call @2975 // <std#string_builder.string_builder>   
23 [0x17]:           popobj2    
24 [0x18]:           returnobj   
25 [0x19]:           ret   


overload function: std#string_builder.operator+=[3009] params(1) in file: lib\support\0.2.805/string_builder.sharp:307:8: note:  
		    def operator+=( num: var ) : string_builder
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 309 pushl 0   
5 [0x5]:           pushl 0   
6 [0x6]:           ipushl #1   
7 [0x7]:           call @3008 // <std#string_builder.parse>   
8 [0x8]:           call @3012 // <std#string_builder.get_data>   
9 [0x9]:           call @2987 // <std#string_builder.append>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#string_builder.operator+=[3010] params(1) in file: lib\support\0.2.805/string_builder.sharp:312:15: note:  
		    public def operator+=( obj: printable ) : string_builder
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 314 pushl 1   
5 [0x5]:           invoke_delegate 2914 { static=0, args=0 }   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+2   
9 [0x9]: line: 315 movl 2   
10 [0xa]:           checknull   
11 [0xb]:           not ebx, ebx   
12 [0xc]:           skne ebx // pc = 18   
13 [0xd]:           pushl 2   
14 [0xe]:           call @2949 // <std#string.get_data>   
15 [0xf]:           pushnull    
16 [0x10]:           itest ebx   
17 [0x11]:           not ebx, ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 316 pushl 0   
21 [0x15]:           pushl 2   
22 [0x16]:           call @2949 // <std#string.get_data>   
23 [0x17]:           call @2987 // <std#string_builder.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           jmp @34   
28 [0x1c]: line: 318 pushl 0   
29 [0x1d]:           newstr @44 // null   
30 [0x1e]:           call @2987 // <std#string_builder.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           nop   


overload function: std#string_builder.operator+=[3011] params(1) in file: lib\support\0.2.805/string_builder.sharp:321:8: note:  
		    def operator+=( str: string ) : string_builder
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 323 pushl 0   
5 [0x5]:           pushl 1   
6 [0x6]:           call @2949 // <std#string.get_data>   
7 [0x7]:           call @2987 // <std#string_builder.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#string_builder.get_data[3012] params(0) in file: lib\support\0.2.805/string_builder.sharp:326:8: note:  
		    def get_data() : _int8[]{
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 327 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string_builder.operator+=[3013] params(1) in file: lib\support\0.2.805/string_builder.sharp:330:8: note:  
		    def operator+=( str: string_builder ) : string_builder
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 332 pushl 0   
5 [0x5]:           movl 1   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @2987 // <std#string_builder.append>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#string_builder.operator+=[3014] params(1) in file: lib\support\0.2.805/string_builder.sharp:335:8: note:  
		    def operator+=( str: _int8[] ) : string_builder
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 337 pushl 0   
5 [0x5]:           pushl 1   
6 [0x6]:           call @2987 // <std#string_builder.append>   
7 [0x7]:           popobj2    
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std#string_builder.substring[3015] params(2) in file: lib\support\0.2.805/string_builder.sharp:340:15: note:  
		    public def substring(startPos: var, endPos: var) : string_builder {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 341 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gte ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           skpe ebx // pc = 25   
20 [0x14]:           loadl ecx, fp+1   
21 [0x15]:           movi #0, ebx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 31   
27 [0x1b]: line: 342 pushl 0   
28 [0x1c]:           ipushl #1   
29 [0x1d]:           call @3016 // <std#string_builder.bounds_error>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 343 ipushl #2   
33 [0x21]:           loadl ebx, fp+1   
34 [0x22]:           loadval ecx   
35 [0x23]:           lt ecx, ebx   
36 [0x24]:           movr ebx, cmt   
37 [0x25]:           movr cmt, ebx   
38 [0x26]:           jne 53   
39 [0x27]: line: 344 new_class @4 // std#illegal_argument_exception   
40 [0x28]:           dup    
41 [0x29]:           new_class @64 // std#string   
42 [0x2a]:           dup    
43 [0x2b]:           newstr @50 // endPos:    
44 [0x2c]:           call @2923 // <std#string.string>   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @2955 // <std#string.operator+>   
47 [0x2f]:           newstr @51 //  cannot be less than the startPos:    
48 [0x30]:           call @2935 // <std#string.operator+>   
49 [0x31]:           ipushl #1   
50 [0x32]:           call @2955 // <std#string.operator+>   
51 [0x33]:           call @1624 // <std#illegal_argument_exception.illegal_argument_exception>   
52 [0x34]:           throw    
53 [0x35]:           nop   
54 [0x36]: line: 348 new_class @65 // std#string_builder   
55 [0x37]:           dup    
56 [0x38]:           call @3018 // <std#string_builder.string_builder>   
57 [0x39]:           popobj2    
58 [0x3a]:           smovr_3 fp+3   
59 [0x3b]: line: 349 movl 0   
60 [0x3c]:           movn #0   
62 [0x3e]:           pushobj   
63 [0x3f]:           ipushl #1   
64 [0x40]:           ipushl #2   
65 [0x41]:           call @1751 // <std.io#__srt_global.copy>   
66 [0x42]:           movl 3   
67 [0x43]:           movn #0   
69 [0x45]:           popobj   
70 [0x46]: line: 350 movl 3   
71 [0x47]:           returnobj   
72 [0x48]:           ret   


function: std#string_builder.bounds_error[3016] params(1) in file: lib\support\0.2.805/string_builder.sharp:353:16: note:  
		    private def bounds_error(pos : var) : error {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 354 new_class @6 // std#out_of_bounds_exception   
5 [0x5]:           dup    
6 [0x6]:           new_class @64 // std#string   
7 [0x7]:           dup    
8 [0x8]:           newstr @48 // Index out of bounds exception at:    
9 [0x9]:           call @2923 // <std#string.string>   
10 [0xa]:           ipushl #1   
11 [0xb]:           call @2955 // <std#string.operator+>   
12 [0xc]:           newstr @49 //  with size of:    
13 [0xd]:           call @2935 // <std#string.operator+>   
14 [0xe]:           movl 0   
15 [0xf]:           movn #3   
17 [0x11]:           movi #0, adx   
19 [0x13]:           iaload ebx, adx   
20 [0x14]:           rstore ebx   
21 [0x15]:           movi #1, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           add ecx, ebx -> ebx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           call @2955 // <std#string.operator+>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   


function: std#string_builder.hash[3017] params(0) in file: lib\support\0.2.805/string_builder.sharp:357:8: note:  
		    def hash() : long {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #65, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 358 istorel 0, fp+1   
6 [0x6]: line: 359 istorel 1, fp+2   
8 [0x8]: line: 360 istorel -1, fp+4   
10 [0xa]: line: 361 movl 0   
11 [0xb]: line: 362 movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           popl 5   
15 [0xf]:           iaddl 1, fp@4   
17 [0x11]:           movl 5   
18 [0x12]:           sizeof ecx   
19 [0x13]:           loadl ebx, fp+4   
20 [0x14]:           lt ebx, ecx   
21 [0x15]:           jne 59   
22 [0x16]:           iaload ecx, ebx   
23 [0x17]:           smovr_2 ecx, fp+3   
24 [0x18]: line: 363 ipushl #1   
25 [0x19]:           ipushl #3   
26 [0x1a]:           movi #97, ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           sub ecx, ebx -> ebx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movi #1, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           add ecx, ebx -> ebx   
35 [0x23]:           rstore ebx   
36 [0x24]:           loadl ebx, fp+2   
37 [0x25]:           loadval ecx   
38 [0x26]:           mul ecx, ebx -> ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           movi #1000000009, ebx   
44 [0x2c]:           loadval ecx   
45 [0x2d]:           mod ecx, ebx -> ebx   
46 [0x2e]:           smovr_2 ebx, fp+1   
47 [0x2f]: line: 364 ipushl #2   
48 [0x30]:           movi #31, ebx   
50 [0x32]:           loadval ecx   
51 [0x33]:           mul ecx, ebx -> ebx   
52 [0x34]:           rstore ebx   
53 [0x35]:           movi #1000000009, ebx   
55 [0x37]:           loadval ecx   
56 [0x38]:           mod ecx, ebx -> ebx   
57 [0x39]:           smovr_2 ebx, fp+2   
58 [0x3a]:           jmp @15   
59 [0x3b]: line: 366 new_class @45 // std#long   
60 [0x3c]:           dup    
61 [0x3d]:           ipushl #1   
62 [0x3e]:           call @2065 // <std#long.long>   
63 [0x3f]:           popobj2    
64 [0x40]:           returnobj   
65 [0x41]:           ret   


constructor: std#string_builder.string_builder[3018] params(0) in file: lib\support\0.2.805/string_builder.sharp:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          ret   


function: std#time.nano_time[3019] params(0) in file: lib\support\0.2.805/time.sharp:8:15: note:  
		    static def nano_time() : var {
		              ^

0 [0x0]: line: 9 istorel 0, fp+0   
2 [0x2]: line: 11 int 0xb   : protected asm start
3 [0x3]:          smovr_2 bmr, fp+0   
4 [0x4]: line: 16 loadl ebx, fp+0   : protected asm end
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#time.nano_to_micro[3020] params(1) in file: lib\support\0.2.805/time.sharp:20:15: note:  
		    static def nano_to_micro(nano: var) : var {
		              ^

0 [0x0]: line: 21 ipushl #0   
1 [0x1]:          movi #1000, ebx   
3 [0x3]:          loadval ecx   
4 [0x4]:          div ecx, ebx -> ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#time.nano_to_mills[3021] params(1) in file: lib\support\0.2.805/time.sharp:24:15: note:  
		    static def nano_to_mills(nano: var) : var {
		              ^

0 [0x0]: line: 25 ipushl #0   
1 [0x1]:          call @3020 // <std#time.nano_to_micro>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#time.nano_to_secs[3022] params(1) in file: lib\support\0.2.805/time.sharp:28:22: note:  
		    public static def nano_to_secs(nano: var) : var {
		                     ^

0 [0x0]: line: 29 ipushl #0   
1 [0x1]:          call @3021 // <std#time.nano_to_mills>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#time.mills_time[3023] params(0) in file: lib\support\0.2.805/time.sharp:32:15: note:  
		    static def mills_time() : var {
		              ^

0 [0x0]: line: 33 call @3019 // <std#time.nano_time>   
1 [0x1]:          call @3021 // <std#time.nano_to_mills>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: std#time.sleep[3024] params(1) in file: lib\support\0.2.805/time.sharp:36:15: note:  
		    static def sleep(time: var) {
		              ^

0 [0x0]: line: 37 movg @67 // @std#time_unit   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #0   
5 [0x5]:          call @3025 // <std#time.sleep>   
6 [0x6]:          ret   


function: std#time.sleep[3025] params(2) in file: lib\support\0.2.805/time.sharp:40:15: note:  
		    static def sleep(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 41 loadl ecx, fp+1   
1 [0x1]:          movi #0, ebx   
3 [0x3]:          lt ecx, ebx   
4 [0x4]:          movr ebx, cmt   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 17   
7 [0x7]: line: 42 new_class @3 // std#exception   
8 [0x8]:          dup    
9 [0x9]:          new_class @64 // std#string   
10 [0xa]:          dup    
11 [0xb]:          newstr @52 // cannot sleep for negative time:    
12 [0xc]:          call @2923 // <std#string.string>   
13 [0xd]:          ipushl #1   
14 [0xe]:          call @2955 // <std#string.operator+>   
15 [0xf]:          call @1621 // <std#exception.exception>   
16 [0x10]:          throw    
17 [0x11]:          nop   
18 [0x12]: line: 44 pushl 0   
19 [0x13]:          movg @67 // @std#time_unit   
20 [0x14]:          movn #0   
22 [0x16]:          pushobj   
23 [0x17]:          call @1610 // <std#_enum_.operator==>   
24 [0x18]:          loadval ebx   
25 [0x19]:          movr cmt, ebx   
26 [0x1a]:          jne 36   
27 [0x1b]: line: 45 ipushl #1   
28 [0x1c]:          movi #1000000, ebx   
30 [0x1e]:          loadval ecx   
31 [0x1f]:          mul ecx, ebx -> ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          call @3027 // <std#time.adjust_time>   
34 [0x22]:          ipopl 1   
35 [0x23]:          jmp @66   
36 [0x24]:          pushl 0   
37 [0x25]:          movg @67 // @std#time_unit   
38 [0x26]:          movn #1   
40 [0x28]:          pushobj   
41 [0x29]:          call @1610 // <std#_enum_.operator==>   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          movr cmt, ebx   
44 [0x2c]:          jne 54   
45 [0x2d]: line: 47 ipushl #1   
46 [0x2e]:          movi #1000, ebx   
48 [0x30]:          loadval ecx   
49 [0x31]:          mul ecx, ebx -> ebx   
50 [0x32]:          rstore ebx   
51 [0x33]:          call @3027 // <std#time.adjust_time>   
52 [0x34]:          ipopl 1   
53 [0x35]:          jmp @66   
54 [0x36]:          pushl 0   
55 [0x37]:          movg @67 // @std#time_unit   
56 [0x38]:          movn #2   
58 [0x3a]:          pushobj   
59 [0x3b]:          call @1610 // <std#_enum_.operator==>   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          movr cmt, ebx   
62 [0x3e]:          jne 66   
63 [0x3f]: line: 49 ipushl #1   
64 [0x40]:          call @3027 // <std#time.adjust_time>   
65 [0x41]:          ipopl 1   
66 [0x42]:          nop   
67 [0x43]: line: 52 loadl ebx, fp+1   : protected asm start
68 [0x44]:          sleep ebx   
69 [0x45]:          ret   : protected asm end


function: std#time.wait[3026] params(2) in file: lib\support\0.2.805/time.sharp:58:15: note:  
		    static def wait(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 59 ipushl #1   
1 [0x1]:          movg @66 // @std#time   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          tne ecx, ebx   
9 [0x9]:          jne 67   
10 [0xa]: line: 60 loadl ecx, fp+1   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          lt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 27   
17 [0x11]: line: 61 new_class @3 // std#exception   
18 [0x12]:          dup    
19 [0x13]:          new_class @64 // std#string   
20 [0x14]:          dup    
21 [0x15]:          newstr @52 // cannot sleep for negative time:    
22 [0x16]:          call @2923 // <std#string.string>   
23 [0x17]:          ipushl #1   
24 [0x18]:          call @2955 // <std#string.operator+>   
25 [0x19]:          call @1621 // <std#exception.exception>   
26 [0x1a]:          throw    
27 [0x1b]:          nop   
28 [0x1c]: line: 63 pushl 0   
29 [0x1d]:          movg @67 // @std#time_unit   
30 [0x1e]:          movn #0   
32 [0x20]:          pushobj   
33 [0x21]:          call @1610 // <std#_enum_.operator==>   
34 [0x22]:          loadval ebx   
35 [0x23]:          movr cmt, ebx   
36 [0x24]:          jne 41   
37 [0x25]: line: 64 movi #1000, ebx   
39 [0x27]:          mull ebx, fp@1   
40 [0x28]:          jmp @66   
41 [0x29]:          pushl 0   
42 [0x2a]:          movg @67 // @std#time_unit   
43 [0x2b]:          movn #2   
45 [0x2d]:          pushobj   
46 [0x2e]:          call @1610 // <std#_enum_.operator==>   
47 [0x2f]:          loadval ebx   
48 [0x30]:          movr cmt, ebx   
49 [0x31]:          jne 54   
50 [0x32]: line: 66 movi #1000, ebx   
52 [0x34]:          divl ebx, fp@1   
53 [0x35]:          jmp @66   
54 [0x36]:          pushl 0   
55 [0x37]:          movg @67 // @std#time_unit   
56 [0x38]:          movn #3   
58 [0x3a]:          pushobj   
59 [0x3b]:          call @1610 // <std#_enum_.operator==>   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          movr cmt, ebx   
62 [0x3e]:          jne 66   
63 [0x3f]: line: 68 movi #1000000, ebx   
65 [0x41]:          divl ebx, fp@1   
66 [0x42]:          nop   
67 [0x43]:          nop   
68 [0x44]: line: 72 loadl adx, fp+1   : protected asm start
69 [0x45]:          int 0x14   
70 [0x46]:          ret   : protected asm end


function: std#time.adjust_time[3027] params(1) in file: lib\support\0.2.805/time.sharp:84:23: note:  
		    private static def adjust_time(usec: var) : var {
		                      ^

0 [0x0]: line: 86 call @1929 // <platform#build.is_windows>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 11   
4 [0x4]: line: 87 ipushl #0   
5 [0x5]:          movi #1000, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          div ecx, ebx -> ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   
11 [0xb]:          nop   
12 [0xc]: line: 90 loadl ebx, fp+0   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#time.measure[3028] params(2) in file: lib\support\0.2.805/time.sharp:93:15: note:  
		    static def measure(tm_unit: time_unit, block: ()()) : var {
		              ^

0 [0x0]: line: 94 call @3019 // <std#time.nano_time>   
1 [0x1]:          ipopl 2   
2 [0x2]:          istorel 0, fp+3   
4 [0x4]: line: 95 ipushl #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]: line: 96 call @3019 // <std#time.nano_time>   
8 [0x8]:          ipopl 3   
9 [0x9]: line: 98 pushl 0   
10 [0xa]:          movg @67 // @std#time_unit   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          call @1610 // <std#_enum_.operator==>   
15 [0xf]:          loadval ebx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 25   
18 [0x12]: line: 100 ipushl #2   
19 [0x13]:           call @3022 // <std#time.nano_to_secs>   
20 [0x14]:           ipopl 2   
21 [0x15]: line: 101 ipushl #3   
22 [0x16]:           call @3022 // <std#time.nano_to_secs>   
23 [0x17]:           ipopl 3   
24 [0x18]:           jmp @56   
25 [0x19]:           pushl 0   
26 [0x1a]:           movg @67 // @std#time_unit   
27 [0x1b]:           movn #1   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @1610 // <std#_enum_.operator==>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 41   
34 [0x22]: line: 104 ipushl #2   
35 [0x23]:           call @3021 // <std#time.nano_to_mills>   
36 [0x24]:           ipopl 2   
37 [0x25]: line: 105 ipushl #3   
38 [0x26]:           call @3021 // <std#time.nano_to_mills>   
39 [0x27]:           ipopl 3   
40 [0x28]:           jmp @56   
41 [0x29]:           pushl 0   
42 [0x2a]:           movg @67 // @std#time_unit   
43 [0x2b]:           movn #2   
45 [0x2d]:           pushobj   
46 [0x2e]:           call @1610 // <std#_enum_.operator==>   
47 [0x2f]:           loadval ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 56   
50 [0x32]: line: 108 ipushl #2   
51 [0x33]:           call @3020 // <std#time.nano_to_micro>   
52 [0x34]:           ipopl 2   
53 [0x35]: line: 109 ipushl #3   
54 [0x36]:           call @3020 // <std#time.nano_to_micro>   
55 [0x37]:           ipopl 3   
56 [0x38]:           nop   
57 [0x39]: line: 113 ipushl #3   
58 [0x3a]:           loadl ebx, fp+2   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           sub ecx, ebx -> ebx   
61 [0x3d]:           return_val ebx   
62 [0x3e]:           ret   


constructor: std#time.time[3029] params(0) in file: lib\support\0.2.805/time.sharp:5:6: note:  
		class time {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std#unique.hash[3030] params(0) in file: lib\support\0.2.805/unique.sharp:11:8: note:  
		    def hash() : long;
		       ^



std#unique.guid[3031] params(0) in file: lib\support\0.2.805/unique.sharp:12:8: note:  
		    def guid() : long;
		       ^



constructor: std#unique.unique[3032] params(0) in file: lib\support\0.2.805/unique.sharp:10:10: note:  
		interface unique {
		         ^

0 [0x0]:         ret   


constructor: common#constants.strings.strings[3033] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/constants.sharp:37:10: note:  
		    class strings {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: common#constants.constants[3034] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/constants.sharp:3:6: note:  
		class constants {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


common.gpio#__srt_global.setup[3035] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/gpio//gpio.sharp:3:11: note:  
		native def setup();
		          ^



common.gpio#__srt_global.pin_mode[3036] params(2) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/gpio//gpio.sharp:4:11: note:  
		native def pin_mode(pin: var, mode: var);
		          ^



common.gpio#__srt_global.write_pin[3037] params(2) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/gpio//gpio.sharp:5:11: note:  
		native def write_pin(pin: var, value: var);
		          ^



common.gpio#__srt_global.read_pin[3038] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/gpio//gpio.sharp:6:11: note:  
		native def read_pin(pin: var): var;
		          ^



function: common.network.core#request.get_signal_strength[3039] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request.sharp:20:15: note:  
		    static def get_signal_strength()
		              ^

0 [0x0]: line: 21 movg @74 // @common.network.core#request   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3080 // <common.network.driver#nrf24.get_signal_strength>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: common.network.core#request.write[3040] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request.sharp:23:23: note:  
		    private static def write(rdata: request_data): var {
		                      ^

0 [0x0]: line: 24 movg @74 // @common.network.core#request   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @3045 // <common.network.core#request_data.to_string>   
6 [0x6]:          call @3082 // <common.network.driver#nrf24.send>   
7 [0x7]:          loadval ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: common.network.core#request.read[3041] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request.sharp:27:23: note:  
		    private static def read(rdata: request_data): var {
		                      ^

0 [0x0]: line: 28 new_class @64 // std#string   
1 [0x1]:          dup    
2 [0x2]:          call @2973 // <std#string.string>   
3 [0x3]:          popobj2    
4 [0x4]:          smovr_3 fp+1   
5 [0x5]: line: 29 movg @74 // @common.network.core#request   
6 [0x6]:          movn #0   
8 [0x8]:          pushobj   
9 [0x9]:          pushl 1   
10 [0xa]:          call @3081 // <common.network.driver#nrf24.read>   
11 [0xb]:          ipopl 2   
12 [0xc]: line: 32 ipushl #2   
13 [0xd]:          movi #0, ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          jne 114   
18 [0x12]: line: 34 istorel 0, fp+3   
20 [0x14]: line: 35 new_class @64 // std#string   
21 [0x15]: line: 36 dup    
22 [0x16]:          call @2973 // <std#string.string>   
23 [0x17]:          popobj2    
24 [0x18]:          smovr_3 fp+4   
25 [0x19]: line: 37 new_class @64 // std#string   
26 [0x1a]:          dup    
27 [0x1b]:          call @2973 // <std#string.string>   
28 [0x1c]:          popobj2    
29 [0x1d]:          smovr_3 fp+5   
30 [0x1e]: line: 39 loadl ebx, fp+3   
31 [0x1f]:          smovr_2 ebx, fp+6   
32 [0x20]: line: 40 pushl 1   
33 [0x21]:          ipushl #3   
34 [0x22]:          call @2946 // <std#string.operator[>   
35 [0x23]:          loadval ebx   
36 [0x24]:          rstore ebx   
37 [0x25]:          movi #61, ebx   
39 [0x27]:          loadval ecx   
40 [0x28]:          tne ecx, ebx   
41 [0x29]:          jne 45   
42 [0x2a]:          iaddl 1, fp@3   
44 [0x2c]:          jmp @32   
45 [0x2d]: line: 41 pushl 1   
46 [0x2e]:          ipushl #6   
47 [0x2f]:          ipushl #3   
48 [0x30]:          call @2970 // <std#string.substring>   
49 [0x31]:          popobj2    
50 [0x32]:          smovr_3 fp+4   
51 [0x33]: line: 43 loadl ebx, fp+3   
52 [0x34]:          inc ebx   
53 [0x35]:          smovr_2 ebx, fp+3   
54 [0x36]:          smovr_2 ebx, fp+6   
55 [0x37]: line: 44 pushl 1   
56 [0x38]:          ipushl #3   
57 [0x39]:          call @2946 // <std#string.operator[>   
58 [0x3a]:          loadval ebx   
59 [0x3b]:          rstore ebx   
60 [0x3c]:          movi #44, ebx   
62 [0x3e]:          loadval ecx   
63 [0x3f]:          tne ecx, ebx   
64 [0x40]:          jne 80   
65 [0x41]: line: 45 iaddl 1, fp@3   
67 [0x43]: line: 46 ipushl #3   
68 [0x44]:          pushl 1   
69 [0x45]:          call @2956 // <std#string.size>   
70 [0x46]:          loadval ebx   
71 [0x47]:          loadval ecx   
72 [0x48]:          lt ecx, ebx   
73 [0x49]:          movr ebx, cmt   
74 [0x4a]:          not ebx, ebx   
75 [0x4b]:          movr cmt, ebx   
76 [0x4c]:          jne 78   
77 [0x4d]: line: 47 jmp @80   
78 [0x4e]:          nop   
79 [0x4f]:          jmp @55   
80 [0x50]: line: 50 pushl 1   
81 [0x51]:          ipushl #6   
82 [0x52]:          ipushl #3   
83 [0x53]:          call @2970 // <std#string.substring>   
84 [0x54]:          popobj2    
85 [0x55]:          smovr_3 fp+5   
86 [0x56]: line: 52 pushl 0   
87 [0x57]:          pushl 4   
88 [0x58]:          pushl 5   
89 [0x59]:          call @3044 // <common.network.core#request_data.add_item>   
90 [0x5a]:          pop   
91 [0x5b]: line: 53 iaddl 1, fp@3   
93 [0x5d]: line: 55 ipushl #3   
94 [0x5e]:          movi #1, ebx   
96 [0x60]:          loadval ecx   
97 [0x61]:          add ecx, ebx -> ebx   
98 [0x62]:          rstore ebx   
99 [0x63]:          pushl 1   
100 [0x64]:          call @2956 // <std#string.size>   
101 [0x65]:          loadval ebx   
102 [0x66]:          loadval ecx   
103 [0x67]:          gte ecx, ebx   
104 [0x68]:          movr ebx, cmt   
105 [0x69]:          movr cmt, ebx   
106 [0x6a]:          jne 108   
107 [0x6b]: line: 56 jmp @110   
108 [0x6c]:          nop   
109 [0x6d]:          jmp @20   
110 [0x6e]: line: 59 istorel 0, fp+0   
112 [0x70]:          ret   
113 [0x71]:          jmp @117   
114 [0x72]: line: 60 loadl ebx, fp+2   
115 [0x73]:          return_val ebx   
116 [0x74]:          ret   
117 [0x75]:          nop   


function: common.network.core#request.rw_inf[3042] params(3) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request.sharp:63:15: note:  
		    static def rw_inf(rdata: request_data, rw: var, count: var) : var {
		              ^

0 [0x0]: line: 64 movg @74 // @common.network.core#request   
1 [0x1]:          movn #0   
3 [0x3]:          _lck    
4 [0x4]: line: 65 ipushl #1   
5 [0x5]:          movg @74 // @common.network.core#request   
6 [0x6]:          movn #1   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 60   
14 [0xe]: line: 66 pushl 0   
15 [0xf]: line: 67 call @3041 // <common.network.core#request.read>   
16 [0x10]:          loadval ebx   
17 [0x11]:          rstore ebx   
18 [0x12]:          movi #0, ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          tne ecx, ebx   
22 [0x16]:          jne 56   
23 [0x17]: line: 68 call @1852 // <std.io#thread.yield>   
24 [0x18]: line: 69 istore 1   
26 [0x1a]:          call @1847 // <std.io#thread.sleep>   
27 [0x1b]: line: 70 ipushl #2   
28 [0x1c]:          movi #-100, ebx   
30 [0x1e]:          loadval ecx   
31 [0x1f]:          tne ecx, ebx   
32 [0x20]:          movr ebx, cmt   
33 [0x21]:          skne ebx // pc = 45   
34 [0x22]:          loadl ebx, fp+2   
35 [0x23]:          movr egx, ebx   
36 [0x24]:          dec ebx   
37 [0x25]:          smovr_2 ebx, fp+2   
38 [0x26]:          movr ebx, egx   
39 [0x27]:          rstore ebx   
40 [0x28]:          movi #0, ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          lt ecx, ebx   
44 [0x2c]:          movr ebx, cmt   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 54   
47 [0x2f]: line: 71 movg @74 // @common.network.core#request   
48 [0x30]:          movn #0   
50 [0x32]:          _ulck   
51 [0x33]:          istorel 1, fp+0   
53 [0x35]:          ret   
54 [0x36]:          nop   
55 [0x37]: line: 73 jmp @14   
56 [0x38]:          nop   
57 [0x39]: line: 76 jmp @59   
58 [0x3a]:          jmp @14   
59 [0x3b]:          jmp @105   
60 [0x3c]: line: 79 pushl 0   
61 [0x3d]: line: 80 call @3040 // <common.network.core#request.write>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          rstore ebx   
64 [0x40]:          movi #0, ebx   
66 [0x42]:          loadval ecx   
67 [0x43]:          tne ecx, ebx   
68 [0x44]:          jne 102   
69 [0x45]: line: 81 call @1852 // <std.io#thread.yield>   
70 [0x46]: line: 82 istore 1   
72 [0x48]:          call @1847 // <std.io#thread.sleep>   
73 [0x49]: line: 83 ipushl #2   
74 [0x4a]:          movi #-100, ebx   
76 [0x4c]:          loadval ecx   
77 [0x4d]:          tne ecx, ebx   
78 [0x4e]:          movr ebx, cmt   
79 [0x4f]:          skne ebx // pc = 91   
80 [0x50]:          loadl ebx, fp+2   
81 [0x51]:          movr egx, ebx   
82 [0x52]:          dec ebx   
83 [0x53]:          smovr_2 ebx, fp+2   
84 [0x54]:          movr ebx, egx   
85 [0x55]:          rstore ebx   
86 [0x56]:          movi #0, ebx   
88 [0x58]:          loadval ecx   
89 [0x59]:          lt ecx, ebx   
90 [0x5a]:          movr ebx, cmt   
91 [0x5b]:          movr cmt, ebx   
92 [0x5c]:          jne 100   
93 [0x5d]: line: 84 movg @74 // @common.network.core#request   
94 [0x5e]:          movn #0   
96 [0x60]:          _ulck   
97 [0x61]:          istorel 1, fp+0   
99 [0x63]:          ret   
100 [0x64]:          nop   
101 [0x65]: line: 86 jmp @60   
102 [0x66]:          nop   
103 [0x67]: line: 89 jmp @105   
104 [0x68]:          jmp @60   
105 [0x69]:          nop   
106 [0x6a]: line: 93 movg @74 // @common.network.core#request   
107 [0x6b]:          movn #0   
109 [0x6d]:          _ulck   
110 [0x6e]:          istorel 0, fp+0   
112 [0x70]:          ret   
113 [0x71]:          movg @74 // @common.network.core#request   
114 [0x72]:          movn #0   
116 [0x74]:          _ulck   


constructor: common.network.core#request.request[3043] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request.sharp:7:6: note:  
		class request
		     ^

0 [0x0]: line: 14 movg @74 // @common.network.core#request   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 20   
8 [0x8]: line: 15 new_class @86 // common.network.driver#nrf24   
9 [0x9]:          dup    
10 [0xa]:          call @3074 // <common.network.driver#nrf24.nrf24>   
11 [0xb]:          movg @74 // @common.network.core#request   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]: line: 16 movg @74 // @common.network.core#request   
16 [0x10]:          movn #0   
18 [0x12]:          pushobj   
19 [0x13]:          call @3077 // <common.network.driver#nrf24.dump>   
20 [0x14]:          nop   
21 [0x15]:          ret   


function: common.network.core#request_data.add_item[3044] params(2) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request_data.sharp:10:8: note:  
		    def add_item(key: string, value: string) : request_data {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #75, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 11 new_class @76 // common.network.core#request_data.request_item   
5 [0x5]:          dup    
6 [0x6]:          pushl 1   
7 [0x7]:          pushl 2   
8 [0x8]:          call @3048 // <common.network.core#request_data.request_item.request_item>   
9 [0x9]:          popobj2    
10 [0xa]:          smovr_3 fp+3   
11 [0xb]: line: 12 movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          pushl 3   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @3277 // <std#list<common.network.core#request_data.request_item>.indexof>   
24 [0x18]:          ipopl 4   
25 [0x19]: line: 14 ipushl #4   
26 [0x1a]:          movi #-1, ebx   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          test ecx, ebx   
30 [0x1e]:          jne 38   
31 [0x1f]: line: 15 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          pushl 3   
36 [0x24]:          call @3269 // <std#list<common.network.core#request_data.request_item>.add>   
37 [0x25]:          jmp @49   
38 [0x26]: line: 17 pushl 2   
39 [0x27]:          movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          pushobj   
43 [0x2b]:          ipushl #4   
44 [0x2c]:          call @3262 // <std#list<common.network.core#request_data.request_item>.at>   
45 [0x2d]:          popobj2    
46 [0x2e]:          movn #1   
48 [0x30]:          popobj   
49 [0x31]:          nop   
50 [0x32]: line: 19 movl 0   
51 [0x33]:          returnobj   
52 [0x34]:          ret   


function: common.network.core#request_data.to_string[3045] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request_data.sharp:22:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #75, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 23 new_class @65 // std#string_builder   
5 [0x5]:          dup    
6 [0x6]:          call @3018 // <std#string_builder.string_builder>   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+1   
9 [0x9]: line: 24 istorel 0, fp+2   
11 [0xb]:          ipushl #2   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          pushobj   
16 [0x10]:          call @3272 // <std#list<common.network.core#request_data.request_item>.size>   
17 [0x11]:          loadval ebx   
18 [0x12]:          loadval ecx   
19 [0x13]:          lt ecx, ebx   
20 [0x14]:          movr ebx, cmt   
21 [0x15]:          movr cmt, ebx   
22 [0x16]:          jne 79   
23 [0x17]: line: 25 pushl 1   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          ipushl #2   
29 [0x1d]:          call @3261 // <std#list<common.network.core#request_data.request_item>.operator[>   
30 [0x1e]:          popobj2    
31 [0x1f]:          movn #0   
33 [0x21]:          pushobj   
34 [0x22]:          call @3011 // <std#string_builder.operator+=>   
35 [0x23]:          pop   
36 [0x24]: line: 26 pushl 1   
37 [0x25]:          new_class @64 // std#string   
38 [0x26]:          dup    
39 [0x27]:          newstr @53 // =   
40 [0x28]:          call @2923 // <std#string.string>   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #0   
44 [0x2c]:          pushobj   
45 [0x2d]:          ipushl #2   
46 [0x2e]:          call @3261 // <std#list<common.network.core#request_data.request_item>.operator[>   
47 [0x2f]:          popobj2    
48 [0x30]:          movn #1   
50 [0x32]:          pushobj   
51 [0x33]:          call @2938 // <std#string.operator+>   
52 [0x34]:          call @3011 // <std#string_builder.operator+=>   
53 [0x35]:          pop   
54 [0x36]: line: 28 ipushl #2   
55 [0x37]:          movi #1, ebx   
57 [0x39]:          loadval ecx   
58 [0x3a]:          add ecx, ebx -> ebx   
59 [0x3b]:          rstore ebx   
60 [0x3c]:          movl 0   
61 [0x3d]:          movn #0   
63 [0x3f]:          pushobj   
64 [0x40]:          call @3272 // <std#list<common.network.core#request_data.request_item>.size>   
65 [0x41]:          loadval ebx   
66 [0x42]:          loadval ecx   
67 [0x43]:          lt ecx, ebx   
68 [0x44]:          movr ebx, cmt   
69 [0x45]:          movr cmt, ebx   
70 [0x46]:          jne 75   
71 [0x47]: line: 29 pushl 1   
72 [0x48]:          newstr @54 // ,   
73 [0x49]:          call @3014 // <std#string_builder.operator+=>   
74 [0x4a]:          pop   
75 [0x4b]:          nop   
76 [0x4c]:          iaddl 1, fp@2   
78 [0x4e]:          jmp @11   
79 [0x4f]: line: 33 pushl 1   
80 [0x50]:          call @2991 // <std#string_builder.to_string>   
81 [0x51]:          popobj2    
82 [0x52]:          returnobj   
83 [0x53]:          ret   


function: common.network.core#request_data.at[3046] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request_data.sharp:36:8: note:  
		    def at(key: string): string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #75, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 37 new_class @76 // common.network.core#request_data.request_item   
5 [0x5]:          dup    
6 [0x6]:          pushl 1   
7 [0x7]:          pushnull    
8 [0x8]:          call @3048 // <common.network.core#request_data.request_item.request_item>   
9 [0x9]:          popobj2    
10 [0xa]:          smovr_3 fp+2   
11 [0xb]: line: 38 movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          pushl 2   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          rstore ebx   
23 [0x17]:          call @3277 // <std#list<common.network.core#request_data.request_item>.indexof>   
24 [0x18]:          ipopl 3   
25 [0x19]: line: 40 ipushl #3   
26 [0x1a]:          movi #-1, ebx   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          test ecx, ebx   
30 [0x1e]:          jne 36   
31 [0x1f]: line: 41 pushnull    
32 [0x20]:          popobj2    
33 [0x21]:          returnobj   
34 [0x22]:          ret   
35 [0x23]:          jmp @47   
36 [0x24]: line: 43 movl 0   
37 [0x25]:          movn #0   
39 [0x27]:          pushobj   
40 [0x28]:          ipushl #3   
41 [0x29]:          call @3262 // <std#list<common.network.core#request_data.request_item>.at>   
42 [0x2a]:          popobj2    
43 [0x2b]:          movn #1   
45 [0x2d]:          returnobj   
46 [0x2e]:          ret   
47 [0x2f]:          nop   


function: common.network.core#request_data.clear[3047] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request_data.sharp:46:8: note:  
		    def clear() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #75, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 47 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @3266 // <std#list<common.network.core#request_data.request_item>.clear>   
9 [0x9]:          ret   


constructor: common.network.core#request_data.request_item.request_item[3048] params(2) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request_data.sharp:55:21: note:  
		        request_item(k: string, v: string)
		                    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #76, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 57 pushl 1   
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          popobj   
10 [0xa]: line: 58 pushl 2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          popobj   
15 [0xf]:          ret   


constructor: common.network.core#request_data.request_item.request_item[3049] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request_data.sharp:50:10: note:  
		    class request_item
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: common.network.core#request_data.request_data[3050] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request_data.sharp:3:6: note:  
		class request_data {
		     ^

0 [0x0]:         new_class @116 // std#list<common.network.core#request_data.request_item>   
1 [0x1]:         dup    
2 [0x2]:         call @3255 // <std#list<common.network.core#request_data.request_item>.list>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         movi #3300, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #1   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         ret   


common.network.data.request#acknowledge_request.send[3051] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//ackowledge_request.sharp:7:8: note:  
		    def send();
		       ^



constructor: common.network.data.request#acknowledge_request.acknowledge_request[3052] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//ackowledge_request.sharp:5:10: note:  
		interface acknowledge_request
		         ^

0 [0x0]:         ret   


common.network.data.request#command_request.listen[3053] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//command_request.sharp:7:8: note:  
		    def listen(): command_response;
		       ^



common.network.data.request#command_request.send_command[3054] params(3) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//command_request.sharp:8:8: note:  
		    def send_command(req: request_data, ack: var, timeout: var): var;
		       ^



constructor: common.network.data.request#command_request.command_request[3055] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//command_request.sharp:5:10: note:  
		interface command_request
		         ^

0 [0x0]:         ret   


common.network.data.request#flight_mode_change_request.change_mode[3056] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//fight_mode_change_request.sharp:5:8: note:  
		    def change_mode(mode: string): var;
		       ^



constructor: common.network.data.request#flight_mode_change_request.flight_mode_change_request[3057] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//fight_mode_change_request.sharp:3:10: note:  
		interface flight_mode_change_request
		         ^

0 [0x0]:         ret   


common.network.data.request#handshake_request.handshake[3058] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//handshake_request.sharp:5:8: note:  
		    def handshake();
		       ^



constructor: common.network.data.request#handshake_request.handshake_request[3059] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//handshake_request.sharp:3:10: note:  
		interface handshake_request
		         ^

0 [0x0]:         ret   


common.network.data.request#signal_strength_request.get_strength[3060] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//signal_strength_request.sharp:5:8: note:  
		    def get_strength(): var;
		       ^



constructor: common.network.data.request#signal_strength_request.signal_strength_request[3061] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//request//signal_strength_request.sharp:3:10: note:  
		interface signal_strength_request
		         ^

0 [0x0]:         ret   


constructor: common.network.data.response#command_response.command_response[3062] params(2) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//response//command_response.sharp:7:21: note:  
		    command_response(cmd: string, req: request_data)
		                    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #84, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 9 pushl 1   
6 [0x6]:         movl 0   
7 [0x7]:         movn #0   
9 [0x9]:         popobj   
10 [0xa]: line: 10 pushl 2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          popobj   
15 [0xf]:          ret   


constructor: common.network.data.response#command_response.command_response[3063] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//data//response//command_response.sharp:5:6: note:  
		class command_response
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


common.network.driver#__srt_global.setup[3064] params(5) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:6:11: note:  
		native def setup(trnsLvl: var, rate: var, delay: var,
		          ^



common.network.driver#__srt_global.set_transmission_lvl[3065] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:9:11: note:  
		native def set_transmission_lvl(level: var);
		          ^



common.network.driver#__srt_global.set_transmission_rate[3066] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:11:11: note:  
		native def set_transmission_rate(level: var);
		          ^



common.network.driver#__srt_global.dump_details[3067] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:13:11: note:  
		native def dump_details();
		          ^



common.network.driver#__srt_global.set_retry_count[3068] params(2) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:15:11: note:  
		native def set_retry_count(delay: var, count: var);
		          ^



common.network.driver#__srt_global.power_down[3069] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:17:11: note:  
		native def power_down();
		          ^



common.network.driver#__srt_global.get_signal_strength[3070] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:19:11: note:  
		native def get_signal_strength(): var;
		          ^



common.network.driver#__srt_global.read[3071] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:21:11: note:  
		native def read() : _int8[];
		          ^



common.network.driver#__srt_global.send[3072] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:23:11: note:  
		native def send(data: _int8[]);
		          ^



common.network.driver#__srt_global.get_last_error[3073] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//dev_interface.sharp:25:11: note:  
		native def get_last_error() : var;
		          ^



constructor: common.network.driver#nrf24.nrf24[3074] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//nrf.sharp:12:10: note:  
		    nrf24()
		         ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         ldc ebx // 0   
17 [0x11]:         movl 0   
18 [0x12]:         movn #2   
20 [0x14]:         movi #0, adx   
22 [0x16]:         rmov adx, ebx   
23 [0x17]:         ldc ebx // 1   
24 [0x18]:         movl 0   
25 [0x19]:         movn #3   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]:         movl 0   
31 [0x1f]:         movi #86, ebx   
33 [0x21]:         cast ebx   
34 [0x22]:         pushl 0   
35 [0x23]: line: 14 movi #1, ebx   
37 [0x25]:          movl 0   
38 [0x26]:          movn #0   
40 [0x28]:          movi #0, adx   
42 [0x2a]:          rmov adx, ebx   
43 [0x2b]: line: 15 movi #1, ebx   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #1   
48 [0x30]:          movi #0, adx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]:          ret   


function: common.network.driver#nrf24.set_rf_lvl[3075] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//nrf.sharp:20:5: note:  
			def set_rf_lvl(level: var) {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #86, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 21 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 22 pushl 0   
7 [0x7]:          call @3083 // <common.network.driver#nrf24.check_state>   
8 [0x8]: line: 23 ipushl #1   
9 [0x9]:          movl 0   
10 [0xa]:          movn #2   
12 [0xc]:          loadval ebx   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          movl 0   
17 [0x11]:          _ulck   
18 [0x12]:          ret   


function: common.network.driver#nrf24.set_data_rate[3076] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//nrf.sharp:28:5: note:  
			def set_data_rate(level: var) {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #86, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 29 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 30 pushl 0   
7 [0x7]:          call @3083 // <common.network.driver#nrf24.check_state>   
8 [0x8]: line: 31 ipushl #1   
9 [0x9]:          movl 0   
10 [0xa]:          movn #3   
12 [0xc]:          loadval ebx   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          movl 0   
17 [0x11]:          _ulck   
18 [0x12]:          ret   


function: common.network.driver#nrf24.dump[3077] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//nrf.sharp:36:5: note:  
			def dump() {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #86, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 37 movl 0   
5 [0x5]:          _lck    
6 [0x6]:          movl 0   
7 [0x7]:          _ulck   
8 [0x8]:          ret   


function: common.network.driver#nrf24.update_retry_count[3078] params(2) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//nrf.sharp:43:5: note:  
			def update_retry_count(delay: var, count: var) {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #86, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         ret   


function: common.network.driver#nrf24.shut_down[3079] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//nrf.sharp:46:5: note:  
			def shut_down() {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #86, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         ret   


function: common.network.driver#nrf24.get_signal_strength[3080] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//nrf.sharp:49:5: note:  
			def get_signal_strength(): var {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #86, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 50 istorel 4, fp+0   
6 [0x6]:          ret   


function: common.network.driver#nrf24.read[3081] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//nrf.sharp:53:5: note:  
			def read(response: string): var {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #86, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 54 istorel 1, fp+0   
6 [0x6]:          ret   


function: common.network.driver#nrf24.send[3082] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//nrf.sharp:57:5: note:  
			def send(response: string): var {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #86, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 58 istorel 1, fp+0   
6 [0x6]:          ret   


function: common.network.driver#nrf24.check_state[3083] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//driver//nrf.sharp:61:5: note:  
			def check_state() {
		    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #86, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 62 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          not ebx, ebx   
11 [0xb]:          movr cmt, ebx   
12 [0xc]:          jne 18   
13 [0xd]: line: 63 new_class @5 // std#illegal_state_exception   
14 [0xe]:          dup    
15 [0xf]:          newstr @55 // device is not setup   
16 [0x10]:          call @1626 // <std#illegal_state_exception.illegal_state_exception>   
17 [0x11]:          throw    
18 [0x12]:          nop   
19 [0x13]: line: 64 movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          movi #0, adx   
24 [0x18]:          iaload ebx, adx   
25 [0x19]:          not ebx, ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 33   
28 [0x1c]: line: 65 new_class @5 // std#illegal_state_exception   
29 [0x1d]:          dup    
30 [0x1e]:          newstr @56 // device is shutown   
31 [0x1f]:          call @1626 // <std#illegal_state_exception.illegal_state_exception>   
32 [0x20]:          throw    
33 [0x21]:          nop   
34 [0x22]:          ret   


function: common.network#network.handshake[3084] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//network.sharp:22:15: note:  
		    static def handshake() {
		              ^

0 [0x0]: line: 23 call @3280 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          movn #0   
4 [0x4]:          pushobj   
5 [0x5]:          invoke_delegate 3058 { static=0, args=0 }   
7 [0x7]:          ret   


function: common.network#network.listen[3085] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//network.sharp:26:15: note:  
		    static def listen(): command_response {
		              ^

0 [0x0]: line: 27 call @3280 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          movn #1   
4 [0x4]:          pushobj   
5 [0x5]:          invoke_delegate 3053 { static=0, args=0 }   
7 [0x7]:          popobj2    
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: common.network#network.change_mode[3086] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//network.sharp:30:15: note:  
		    static def change_mode(mode: string): var {
		              ^

0 [0x0]: line: 31 call @3280 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          movn #2   
4 [0x4]:          pushobj   
5 [0x5]:          pushl 0   
6 [0x6]:          invoke_delegate 3056 { static=0, args=1 }   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: common.network#network.get_signal_strength[3087] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//network.sharp:34:15: note:  
		    static def get_signal_strength() : var {
		              ^

0 [0x0]: line: 35 call @3280 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          movn #4   
4 [0x4]:          pushobj   
5 [0x5]:          invoke_delegate 3060 { static=0, args=0 }   
7 [0x7]:          loadval ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: common.network#network.send_acknowledge[3088] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//network.sharp:38:15: note:  
		    static def send_acknowledge() {
		              ^

0 [0x0]: line: 39 call @3280 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          movn #3   
4 [0x4]:          pushobj   
5 [0x5]:          invoke_delegate 3051 { static=0, args=0 }   
7 [0x7]:          ret   


constructor: common.network#network.network[3089] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//network.sharp:5:6: note:  
		class network {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: common.network.remote#acknowledge_request_impl.acknowledge_request_impl[3090] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//acknowledge_request_impl.sharp:10:29: note:  
		    acknowledge_request_impl()
		                            ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #90, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         call @3094 // <common.network.remote#command_request_impl.command_request_impl>   
6 [0x6]: line: 12 new_class @75 // common.network.core#request_data   
7 [0x7]:          dup    
8 [0x8]:          call @3050 // <common.network.core#request_data.request_data>   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]: line: 13 movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          pushobj   
17 [0x11]:          movg @71 // @common#constants.strings   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          movg @71 // @common#constants.strings   
22 [0x16]:          movn #2   
24 [0x18]:          pushobj   
25 [0x19]:          call @3044 // <common.network.core#request_data.add_item>   
26 [0x1a]:          pop   
27 [0x1b]:          ret   


function: common.network.remote#acknowledge_request_impl.send[3091] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//acknowledge_request_impl.sharp:18:8: note:  
		    def send() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #90, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 19 pushl 0   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          pushobj   
9 [0x9]:          istore 0   
11 [0xb]:          movi #1, ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          call @3093 // <common.network.remote#command_request_impl.send_command>   
15 [0xf]:          pop   
16 [0x10]:          ret   


function: common.network.remote#command_request_impl.listen[3092] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//command_request_impl.sharp:11:8: note:  
		    def listen(): command_response {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #91, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 12 new_class @75 // common.network.core#request_data   
5 [0x5]:          dup    
6 [0x6]:          call @3050 // <common.network.core#request_data.request_data>   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+1   
9 [0x9]: line: 14 pushl 1   
10 [0xa]: line: 15 movg @74 // @common.network.core#request   
11 [0xb]:          movn #1   
13 [0xd]:          movi #0, adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          rstore ebx   
17 [0x11]:          istore 4294967295   
19 [0x13]:          call @3042 // <common.network.core#request.rw_inf>   
20 [0x14]:          pop   
21 [0x15]: line: 17 pushl 1   
22 [0x16]:          movg @71 // @common#constants.strings   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3046 // <common.network.core#request_data.at>   
27 [0x1b]:          popobj2    
28 [0x1c]:          smovr_3 fp+2   
29 [0x1d]: line: 18 movl 2   
30 [0x1e]:          checknull   
31 [0x1f]:          not ebx, ebx   
32 [0x20]:          movr cmt, ebx   
33 [0x21]:          jne 43   
34 [0x22]: line: 19 new_class @84 // common.network.data.response#command_response   
35 [0x23]:          dup    
36 [0x24]:          pushl 2   
37 [0x25]:          pushl 1   
38 [0x26]:          call @3062 // <common.network.data.response#command_response.command_response>   
39 [0x27]:          popobj2    
40 [0x28]:          returnobj   
41 [0x29]:          ret   
42 [0x2a]:          jmp @46   
43 [0x2b]: line: 21 pushl 1   
44 [0x2c]:          call @3047 // <common.network.core#request_data.clear>   
45 [0x2d]: line: 22 jmp @9   
46 [0x2e]:          nop   
47 [0x2f]: line: 25 pushnull    
48 [0x30]:          popobj2    
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: common.network.remote#command_request_impl.send_command[3093] params(3) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//command_request_impl.sharp:28:8: note:  
		    def send_command(req: request_data, ack: var, timeout: var): var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #91, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 29 new_class @75 // common.network.core#request_data   
5 [0x5]:          dup    
6 [0x6]:          call @3050 // <common.network.core#request_data.request_data>   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+4   
9 [0x9]: line: 31 loadl ebx, fp+3   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 79   
12 [0xc]: line: 33 pushl 1   
13 [0xd]:          movg @74 // @common.network.core#request   
14 [0xe]:          movn #2   
16 [0x10]:          movi #0, adx   
18 [0x12]:          iaload ebx, adx   
19 [0x13]:          rstore ebx   
20 [0x14]:          istore 3   
22 [0x16]:          call @3042 // <common.network.core#request.rw_inf>   
23 [0x17]:          loadval ebx   
24 [0x18]:          movr cmt, ebx   
25 [0x19]:          jne 29   
26 [0x1a]: line: 34 istorel 1, fp+0   
28 [0x1c]:          ret   
29 [0x1d]:          nop   
30 [0x1e]: line: 37 loadl ebx, fp+2   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 77   
33 [0x21]: line: 38 pushl 4   
34 [0x22]:          movg @74 // @common.network.core#request   
35 [0x23]:          movn #1   
37 [0x25]:          movi #0, adx   
39 [0x27]:          iaload ebx, adx   
40 [0x28]:          rstore ebx   
41 [0x29]:          istore 3   
43 [0x2b]:          call @3042 // <common.network.core#request.rw_inf>   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 50   
47 [0x2f]: line: 39 istorel 1, fp+0   
49 [0x31]:          ret   
50 [0x32]:          nop   
51 [0x33]: line: 42 pushl 4   
52 [0x34]:          movg @71 // @common#constants.strings   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          call @3046 // <common.network.core#request_data.at>   
57 [0x39]:          popobj2    
58 [0x3a]:          smovr_3 fp+5   
59 [0x3b]: line: 43 movl 5   
60 [0x3c]:          checknull   
61 [0x3d]:          not ebx, ebx   
62 [0x3e]:          skne ebx // pc = 70   
63 [0x3f]:          pushl 5   
64 [0x40]:          movg @71 // @common#constants.strings   
65 [0x41]:          movn #2   
67 [0x43]:          pushobj   
68 [0x44]:          call @2941 // <std#string.operator==>   
69 [0x45]:          loadval ebx   
70 [0x46]:          not ebx, ebx   
71 [0x47]:          movr cmt, ebx   
72 [0x48]:          jne 76   
73 [0x49]: line: 44 istorel 1, fp+0   
75 [0x4b]:          ret   
76 [0x4c]:          nop   
77 [0x4d]:          nop   
78 [0x4e]:          jmp @137   
79 [0x4f]: line: 48 pushl 1   
80 [0x50]: line: 49 movg @74 // @common.network.core#request   
81 [0x51]:          movn #2   
83 [0x53]:          movi #0, adx   
85 [0x55]:          iaload ebx, adx   
86 [0x56]:          rstore ebx   
87 [0x57]:          istore 3   
89 [0x59]:          call @3042 // <common.network.core#request.rw_inf>   
90 [0x5a]:          pop   
91 [0x5b]: line: 51 loadl ebx, fp+2   
92 [0x5c]:          movr cmt, ebx   
93 [0x5d]:          jne 136   
94 [0x5e]: line: 52 pushl 4   
95 [0x5f]:          movg @74 // @common.network.core#request   
96 [0x60]:          movn #1   
98 [0x62]:          movi #0, adx   
100 [0x64]:          iaload ebx, adx   
101 [0x65]:          rstore ebx   
102 [0x66]:          istore 3   
104 [0x68]:          call @3042 // <common.network.core#request.rw_inf>   
105 [0x69]:          loadval ebx   
106 [0x6a]:          movr cmt, ebx   
107 [0x6b]:          jne 109   
108 [0x6c]: line: 53 jmp @79   
109 [0x6d]:          nop   
110 [0x6e]: line: 56 pushl 4   
111 [0x6f]:          movg @71 // @common#constants.strings   
112 [0x70]:          movn #1   
114 [0x72]:          pushobj   
115 [0x73]:          call @3046 // <common.network.core#request_data.at>   
116 [0x74]:          popobj2    
117 [0x75]:          smovr_3 fp+6   
118 [0x76]: line: 57 movl 6   
119 [0x77]:          checknull   
120 [0x78]:          not ebx, ebx   
121 [0x79]:          skne ebx // pc = 129   
122 [0x7a]:          pushl 6   
123 [0x7b]:          movg @71 // @common#constants.strings   
124 [0x7c]:          movn #2   
126 [0x7e]:          pushobj   
127 [0x7f]:          call @2941 // <std#string.operator==>   
128 [0x80]:          loadval ebx   
129 [0x81]:          not ebx, ebx   
130 [0x82]:          movr cmt, ebx   
131 [0x83]:          jne 135   
132 [0x84]: line: 58 pushl 4   
133 [0x85]:          call @3047 // <common.network.core#request_data.clear>   
134 [0x86]: line: 59 jmp @79   
135 [0x87]:          nop   
136 [0x88]:          nop   
137 [0x89]:          nop   
138 [0x8a]: line: 64 istorel 0, fp+0   
140 [0x8c]:          ret   


constructor: common.network.remote#command_request_impl.command_request_impl[3094] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//command_request_impl.sharp:8:6: note:  
		class command_request_impl base request : command_request
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3043 // <common.network.core#request.request>   
2 [0x2]:         ret   


constructor: common.network.remote#flight_mode_change_request_impl.flight_mode_change_request_impl[3095] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//flight_mode_request_impl.sharp:9:36: note:  
		    flight_mode_change_request_impl()
		                                   ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #92, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         call @3094 // <common.network.remote#command_request_impl.command_request_impl>   
6 [0x6]: line: 11 new_class @75 // common.network.core#request_data   
7 [0x7]:          dup    
8 [0x8]:          call @3050 // <common.network.core#request_data.request_data>   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]: line: 12 movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          pushobj   
17 [0x11]:          movg @71 // @common#constants.strings   
18 [0x12]:          movn #0   
20 [0x14]:          pushobj   
21 [0x15]:          movg @71 // @common#constants.strings   
22 [0x16]:          movn #11   
24 [0x18]:          pushobj   
25 [0x19]:          call @3044 // <common.network.core#request_data.add_item>   
26 [0x1a]:          pop   
27 [0x1b]:          ret   


function: common.network.remote#flight_mode_change_request_impl.change_mode[3096] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//flight_mode_request_impl.sharp:17:8: note:  
		    def change_mode(mode: string): var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #92, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 18 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          movg @71 // @common#constants.strings   
9 [0x9]:          movn #3   
11 [0xb]:          pushobj   
12 [0xc]:          pushl 1   
13 [0xd]:          call @3044 // <common.network.core#request_data.add_item>   
14 [0xe]:          pop   
15 [0xf]: line: 19 pushl 0   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          istore 1   
22 [0x16]:          movi #1, ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          call @3093 // <common.network.remote#command_request_impl.send_command>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          return_val ebx   
28 [0x1c]:          ret   


constructor: common.network.remote#handshake_request_impl.handshake_request_impl[3097] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//handshake_request_impl.sharp:10:27: note:  
		    handshake_request_impl()
		                          ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #93, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]:         call @3094 // <common.network.remote#command_request_impl.command_request_impl>   
6 [0x6]: line: 12 new_class @75 // common.network.core#request_data   
7 [0x7]:          dup    
8 [0x8]:          call @3050 // <common.network.core#request_data.request_data>   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]: line: 13 movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          pushobj   
17 [0x11]:          movg @71 // @common#constants.strings   
18 [0x12]:          movn #0   
20 [0x14]:          pushobj   
21 [0x15]:          movg @71 // @common#constants.strings   
22 [0x16]:          movn #6   
24 [0x18]:          pushobj   
25 [0x19]:          call @3044 // <common.network.core#request_data.add_item>   
26 [0x1a]:          pop   
27 [0x1b]:          ret   


function: common.network.remote#handshake_request_impl.handshake[3098] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//handshake_request_impl.sharp:18:8: note:  
		    def handshake() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #93, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 19 pushl 0   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          pushobj   
9 [0x9]:          istore 1   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          call @3093 // <common.network.remote#command_request_impl.send_command>   
15 [0xf]:          pop   
16 [0x10]:          ret   


function: common.network.remote#__srt_global.initialize[3099] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//remote.sharp:6:4: note:  
		def initialize(net: network) {
		   ^

0 [0x0]: line: 7 new_class @93 // common.network.remote#handshake_request_impl   
1 [0x1]:         dup    
2 [0x2]:         call @3097 // <common.network.remote#handshake_request_impl.handshake_request_impl>   
3 [0x3]:         movl 0   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]: line: 8 new_class @91 // common.network.remote#command_request_impl   
8 [0x8]:         dup    
9 [0x9]:         call @3094 // <common.network.remote#command_request_impl.command_request_impl>   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]: line: 9 new_class @92 // common.network.remote#flight_mode_change_request_impl   
15 [0xf]:         dup    
16 [0x10]:         call @3095 // <common.network.remote#flight_mode_change_request_impl.flight_mode_change_request_impl>   
17 [0x11]:         movl 0   
18 [0x12]:         movn #2   
20 [0x14]:         popobj   
21 [0x15]: line: 10 new_class @90 // common.network.remote#acknowledge_request_impl   
22 [0x16]:          dup    
23 [0x17]:          call @3090 // <common.network.remote#acknowledge_request_impl.acknowledge_request_impl>   
24 [0x18]:          movl 0   
25 [0x19]:          movn #3   
27 [0x1b]:          popobj   
28 [0x1c]: line: 11 new_class @94 // common.network.remote#signal_strength_request_impl   
29 [0x1d]:          dup    
30 [0x1e]:          call @3101 // <common.network.remote#signal_strength_request_impl.signal_strength_request_impl>   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #4   
34 [0x22]:          popobj   
35 [0x23]:          ret   


function: common.network.remote#signal_strength_request_impl.get_strength[3100] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//signal_strength_request_impl.sharp:10:8: note:  
		    def get_strength(): var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #94, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 11 call @3039 // <common.network.core#request.get_signal_strength>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


constructor: common.network.remote#signal_strength_request_impl.signal_strength_request_impl[3101] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//remote//signal_strength_request_impl.sharp:8:6: note:  
		class signal_strength_request_impl base request : signal_strength_request
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3043 // <common.network.core#request.request>   
2 [0x2]:         ret   


function: main#__srt_global.setup_conn_tracker[3102] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\controller/connection_tracker.sharp:13:4: note:  
		def setup_conn_tracker() {
		   ^

0 [0x0]: line: 17 call @1829 // <std.io.task#task.builder>   
1 [0x1]:          istore 1000   
3 [0x3]:          movg @67 // @std#time_unit   
4 [0x4]:          movn #1   
6 [0x6]:          pushobj   
7 [0x7]:          call @1796 // <std.io.task#job_builder.recurring>   
8 [0x8]:          istore 3307   
10 [0xa]:          call @1801 // <std.io.task#job_builder.operator=>   
11 [0xb]:          pop   
12 [0xc]: line: 29 call @1829 // <std.io.task#task.builder>   
13 [0xd]:          istore 3000   
15 [0xf]:          call @1795 // <std.io.task#job_builder.schedule>   
16 [0x10]:          istore 250   
18 [0x12]:          movg @67 // @std#time_unit   
19 [0x13]:          movn #1   
21 [0x15]:          pushobj   
22 [0x16]:          call @1796 // <std.io.task#job_builder.recurring>   
23 [0x17]:          istore 3308   
25 [0x19]:          call @1801 // <std.io.task#job_builder.operator=>   
26 [0x1a]:          pop   
27 [0x1b]:          ret   


function: main#__srt_global.main[3103] params(1) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\controller/main.sharp:12:4: note:  
		def main(args: string[])
		   ^

0 [0x0]: line: 15 ldc ebx // 0   
1 [0x1]:          rstore ebx   
2 [0x2]:          movg @70 // @common#constants   
3 [0x3]:          movn #20   
5 [0x5]:          loadval ebx   
6 [0x6]:          movi #0, adx   
8 [0x8]:          rmov adx, ebx   
9 [0x9]: line: 18 istore 3   
11 [0xb]:          call @1816 // <std.io.task#__srt_global.set_thread_max>   
12 [0xc]: line: 19 call @3102 // <main#__srt_global.setup_conn_tracker>   
13 [0xd]: line: 21 istore 3000   
15 [0xf]:          call @1847 // <std.io#thread.sleep>   
16 [0x10]: line: 22 call @3084 // <common.network#network.handshake>   
17 [0x11]: line: 23 istore 1   
19 [0x13]:          movg @95 // @main#__srt_global   
20 [0x14]:          movn #3   
22 [0x16]:          loadval ebx   
23 [0x17]:          movi #0, adx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 25 call @1829 // <std.io.task#task.builder>   
27 [0x1b]:          call @1800 // <std.io.task#job_builder.long_term>   
28 [0x1c]:          istore 3000   
30 [0x1e]:          call @1795 // <std.io.task#job_builder.schedule>   
31 [0x1f]:          istore 50   
33 [0x21]:          movg @67 // @std#time_unit   
34 [0x22]:          movn #1   
36 [0x24]:          pushobj   
37 [0x25]:          call @1796 // <std.io.task#job_builder.recurring>   
38 [0x26]:          istore 3309   
40 [0x28]:          call @1801 // <std.io.task#job_builder.operator=>   
41 [0x29]:          pop   
42 [0x2a]: line: 38 call @1852 // <std.io#thread.yield>   
43 [0x2b]: line: 39 istore 10   
45 [0x2d]: line: 40 call @1847 // <std.io#thread.sleep>   
46 [0x2e]:          jmp @42   
47 [0x2f]:          ret   


std#loopable<std#string>.get_elements[3104] params(0) in file: lib\support\0.2.805/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<std#string>.loopable[3105] params(0) in file: lib\support\0.2.805/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#list<std#string>.list[3106] params(0) in file: lib\support\0.2.805/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 14 movi #10, ebx   
7 [0x7]:          new_classarray ebx  // std#string[]   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          popobj   
12 [0xc]:          ret   


constructor: std#list<std#string>.list[3107] params(1) in file: lib\support\0.2.805/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 18 loadl ebx, fp+1   
6 [0x6]:          new_classarray ebx  // std#string[]   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: std#list<std#string>.list[3108] params(1) in file: lib\support\0.2.805/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 22 pushl 0   
6 [0x6]:          pushl 1   
7 [0x7]:          call @3119 // <std#list<std#string>.add_all>   
8 [0x8]:          ret   


function: std#list<std#string>.empty[3109] params(0) in file: lib\support\0.2.805/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std#string>.set_compact[3110] params(1) in file: lib\support\0.2.805/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 28 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #2   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


function: std#list<std#string>.get_elements[3111] params(0) in file: lib\support\0.2.805/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 32 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 21   
16 [0x10]:          pushnull    
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   
20 [0x14]:          jmp @38   
21 [0x15]: line: 33 movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          istore 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @1749 // <std.io#__srt_global.copy>   
35 [0x23]:          popobj2    
36 [0x24]:          returnobj   
37 [0x25]:          ret   
38 [0x26]:          nop   


overload function: std#list<std#string>.operator[[3112] params(1) in file: lib\support\0.2.805/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 37 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 38 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3130 // <std#list<std#string>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 39 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std#list<std#string>.at[3113] params(1) in file: lib\support\0.2.805/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 43 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 44 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3130 // <std#list<std#string>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 45 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std#list<std#string>.last[3114] params(0) in file: lib\support\0.2.805/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 49 pushl 0   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movi #1, ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          sub ecx, ebx -> ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @3113 // <std#list<std#string>.at>   
18 [0x12]:          popobj2    
19 [0x13]:          returnobj   
20 [0x14]:          ret   


function: std#list<std#string>.put[3115] params(2) in file: lib\support\0.2.805/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 53 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 54 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3130 // <std#list<std#string>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 56 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          smovr_3 fp+3   
40 [0x28]: line: 57 pushl 2   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #1   
44 [0x2c]:          pushobj   
45 [0x2d]:          loadl ebx, fp+1   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          popobj   
51 [0x33]: line: 58 movl 3   
52 [0x34]:          returnobj   
53 [0x35]:          ret   


function: std#list<std#string>.expand[3116] params(0) in file: lib\support\0.2.805/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 62 movl 0   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 28   
12 [0xc]: line: 63 movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          pushobj   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          sizeof ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          movi #128, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          add ecx, ebx -> ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          call @1729 // <std.io#__srt_global.realloc>   
27 [0x1b]:          jmp @55   
28 [0x1c]: line: 65 movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          sizeof ebx   
36 [0x24]:          rstore ebx   
37 [0x25]:          movl 0   
38 [0x26]:          movn #1   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #4, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          shr ecx, ebx -> ebx   
46 [0x2e]:          loadval ecx   
47 [0x2f]:          add ecx, ebx -> ebx   
48 [0x30]:          rstore ebx   
49 [0x31]:          movi #128, ebx   
51 [0x33]:          loadval ecx   
52 [0x34]:          add ecx, ebx -> ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @1729 // <std.io#__srt_global.realloc>   
55 [0x37]:          nop   
56 [0x38]:          ret   


function: std#list<std#string>.clear[3117] params(0) in file: lib\support\0.2.805/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 69 movi #10, ebx   
6 [0x6]:          new_classarray ebx  // std#string[]   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]: line: 70 movi #0, ebx   
13 [0xd]:          movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]:          ret   


function: std#list<std#string>.add_all[3118] params(1) in file: lib\support\0.2.805/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 74 movl 1   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          istore 0   
10 [0xa]:          movl 1   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @1749 // <std.io#__srt_global.copy>   
18 [0x12]:          popobj2    
19 [0x13]:          movi #64, cmt   
21 [0x15]:          cast cmt   
22 [0x16]:          pushobj   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          popobj   
27 [0x1b]: line: 75 movl 1   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          ret   


function: std#list<std#string>.add_all[3119] params(1) in file: lib\support\0.2.805/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 79 movl 1   
5 [0x5]:          checknull   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 34   
9 [0x9]: line: 80 pushl 1   
10 [0xa]:          istore 0   
12 [0xc]:          movl 1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @1749 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #64, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 81 movl 1   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]:          jmp @49   
34 [0x22]: line: 83 movi #0, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #0   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 84 movi #10, ebx   
44 [0x2c]:          new_classarray ebx  // std#string[]   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #1   
48 [0x30]:          popobj   
49 [0x31]:          nop   
50 [0x32]:          ret   


function: std#list<std#string>.add[3120] params(1) in file: lib\support\0.2.805/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 89 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          sizeof ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          gte ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 22   
20 [0x14]: line: 90 pushl 0   
21 [0x15]:          call @3116 // <std#list<std#string>.expand>   
22 [0x16]:          nop   
23 [0x17]: line: 91 pushl 1   
24 [0x18]:          movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          inc ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]:          ret   


function: std#list<std#string>.indexof[3121] params(1) in file: lib\support\0.2.805/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 95 istorel 0, fp+2   
6 [0x6]:          ipushl #2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 40   
18 [0x12]: line: 96 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          pushobj   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          popobj2    
25 [0x19]:          movr adx, ebx   
26 [0x1a]:          chklen adx   
27 [0x1b]:          movnd adx   
28 [0x1c]:          pushobj   
29 [0x1d]:          call @2941 // <std#string.operator==>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 36   
33 [0x21]: line: 97 loadl ebx, fp+2   
34 [0x22]:          return_val ebx   
35 [0x23]:          ret   
36 [0x24]:          nop   
37 [0x25]:          iaddl 1, fp@2   
39 [0x27]:          jmp @6   
40 [0x28]: line: 101 istorel -1, fp+0   
42 [0x2a]:           ret   


function: std#list<std#string>.pop_back[3122] params(0) in file: lib\support\0.2.805/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 105 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 106 movl 1   
19 [0x13]:           del   
20 [0x14]: line: 107 pushl 1   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #0   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           movr egx, ebx   
32 [0x20]:           dec ebx   
33 [0x21]:           movi #0, adx   
35 [0x23]:           rmov adx, ebx   
36 [0x24]:           movr ebx, egx   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]:           nop   
43 [0x2b]:           ret   


function: std#list<std#string>.size[3123] params(0) in file: lib\support\0.2.805/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<std#string>.insert[3124] params(2) in file: lib\support\0.2.805/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 114 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 20   
15 [0xf]:           loadl ecx, fp+1   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 29   
22 [0x16]: line: 115 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @3130 // <std#list<std#string>.out_of_bounds_msg>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           throw    
29 [0x1d]:           nop   
30 [0x1e]: line: 117 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #0, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           test ecx, ebx   
41 [0x29]:           jne 46   
42 [0x2a]: line: 118 pushl 0   
43 [0x2b]:           pushl 2   
44 [0x2c]:           call @3120 // <std#list<std#string>.add>   
45 [0x2d]:           jmp @135   
46 [0x2e]: line: 120 movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           rstore ebx   
53 [0x35]:           movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           sizeof ebx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           gte ecx, ebx   
59 [0x3b]:           movr ebx, cmt   
60 [0x3c]:           movr cmt, ebx   
61 [0x3d]:           jne 64   
62 [0x3e]: line: 121 pushl 0   
63 [0x3f]:           call @3116 // <std#list<std#string>.expand>   
64 [0x40]:           nop   
65 [0x41]: line: 122 movl 0   
66 [0x42]:           movn #0   
68 [0x44]:           movi #0, adx   
70 [0x46]:           iaload ebx, adx   
71 [0x47]:           movr egx, ebx   
72 [0x48]:           inc ebx   
73 [0x49]:           movi #0, adx   
75 [0x4b]:           rmov adx, ebx   
76 [0x4c]: line: 123 movl 0   
77 [0x4d]:           movn #0   
79 [0x4f]:           movi #0, adx   
81 [0x51]:           iaload ebx, adx   
82 [0x52]:           rstore ebx   
83 [0x53]:           movi #1, ebx   
85 [0x55]:           loadval ecx   
86 [0x56]:           sub ecx, ebx -> ebx   
87 [0x57]:           smovr_2 ebx, fp+3   
88 [0x58]:           ipushl #3   
89 [0x59]:           loadl ebx, fp+1   
90 [0x5a]:           loadval ecx   
91 [0x5b]:           gt ecx, ebx   
92 [0x5c]:           movr ebx, cmt   
93 [0x5d]:           movr cmt, ebx   
94 [0x5e]:           jne 124   
95 [0x5f]: line: 124 movl 0   
96 [0x60]:           movn #1   
98 [0x62]:           pushobj   
99 [0x63]:           ipushl #3   
100 [0x64]:           movi #1, ebx   
102 [0x66]:           loadval ecx   
103 [0x67]:           sub ecx, ebx -> ebx   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           pushobj   
109 [0x6d]:           movl 0   
110 [0x6e]:           movn #1   
112 [0x70]:           pushobj   
113 [0x71]:           loadl ebx, fp+3   
114 [0x72]:           popobj2    
115 [0x73]:           movr adx, ebx   
116 [0x74]:           chklen adx   
117 [0x75]:           movnd adx   
118 [0x76]:           popobj   
119 [0x77]:           loadl ebx, fp+3   
120 [0x78]:           movr egx, ebx   
121 [0x79]:           dec ebx   
122 [0x7a]:           smovr_2 ebx, fp+3   
123 [0x7b]:           jmp @88   
124 [0x7c]: line: 125 pushl 2   
125 [0x7d]:           movl 0   
126 [0x7e]:           movn #1   
128 [0x80]:           pushobj   
129 [0x81]:           loadl ebx, fp+1   
130 [0x82]:           popobj2    
131 [0x83]:           movr adx, ebx   
132 [0x84]:           chklen adx   
133 [0x85]:           movnd adx   
134 [0x86]:           popobj   
135 [0x87]:           nop   
136 [0x88]:           ret   


function: std#list<std#string>.remove[3125] params(1) in file: lib\support\0.2.805/list.sharp:130:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 131 istorel 0, fp+2   
6 [0x6]:           ipushl #2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 41   
18 [0x12]: line: 132 pushl 1   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           call @2941 // <std#string.operator==>   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 37   
33 [0x21]: line: 133 pushl 0   
34 [0x22]:           ipushl #2   
35 [0x23]:           call @3127 // <std#list<std#string>.remove_at>   
36 [0x24]: line: 134 ret   
37 [0x25]:           nop   
38 [0x26]:           iaddl 1, fp@2   
40 [0x28]:           jmp @6   
41 [0x29]:           ret   


function: std#list<std#string>.remove[3126] params(2) in file: lib\support\0.2.805/list.sharp:139:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 140 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 43   
18 [0x12]: line: 141 ipushl #2   
19 [0x13]:           pushl 1   
20 [0x14]:           movl 0   
21 [0x15]:           movn #1   
23 [0x17]:           pushobj   
24 [0x18]:           loadl ebx, fp+3   
25 [0x19]:           popobj2    
26 [0x1a]:           movr adx, ebx   
27 [0x1b]:           chklen adx   
28 [0x1c]:           movnd adx   
29 [0x1d]:           pushobj   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 39   
35 [0x23]: line: 142 pushl 0   
36 [0x24]:           ipushl #3   
37 [0x25]:           call @3127 // <std#list<std#string>.remove_at>   
38 [0x26]: line: 143 ret   
39 [0x27]:           nop   
40 [0x28]:           iaddl 1, fp@3   
42 [0x2a]:           jmp @6   
43 [0x2b]:           ret   


function: std#list<std#string>.remove_at[3127] params(1) in file: lib\support\0.2.805/list.sharp:148:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 149 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gte ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 20   
15 [0xf]:           loadl ecx, fp+1   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 29   
22 [0x16]: line: 150 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @3130 // <std#list<std#string>.out_of_bounds_msg>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           throw    
29 [0x1d]:           nop   
30 [0x1e]: line: 152 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           loadl ebx, fp+1   
38 [0x26]:           loadval ecx   
39 [0x27]:           sub ecx, ebx -> ebx   
40 [0x28]:           rstore ebx   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           sub ecx, ebx -> ebx   
45 [0x2d]:           smovr_2 ebx, fp+2   
46 [0x2e]: line: 153 ipushl #2   
47 [0x2f]:           movi #0, ebx   
49 [0x31]:           loadval ecx   
50 [0x32]:           gt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 77   
54 [0x36]: line: 154 movl 0   
55 [0x37]:           movn #1   
57 [0x39]:           pushobj   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           ipushl #1   
64 [0x40]:           movi #1, ebx   
66 [0x42]:           loadval ecx   
67 [0x43]:           add ecx, ebx -> ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movl 0   
70 [0x46]:           movn #0   
72 [0x48]:           movi #0, adx   
74 [0x4a]:           iaload ebx, adx   
75 [0x4b]:           rstore ebx   
76 [0x4c]:           call @1739 // <std.io#__srt_global.memcopy>   
77 [0x4d]:           nop   
78 [0x4e]: line: 156 pushl 0   
79 [0x4f]:           call @3122 // <std#list<std#string>.pop_back>   
80 [0x50]:           ret   


function: std#list<std#string>.indexof[3128] params(2) in file: lib\support\0.2.805/list.sharp:159:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 160 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 161 ipushl #2   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           pushl 1   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 38   
35 [0x23]: line: 162 loadl ebx, fp+3   
36 [0x24]:           return_val ebx   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @6   
42 [0x2a]: line: 166 istorel -1, fp+0   
44 [0x2c]:           ret   


function: std#list<std#string>.to_string[3129] params(0) in file: lib\support\0.2.805/list.sharp:169:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 170 new_class @65 // std#string_builder   
5 [0x5]:           dup    
6 [0x6]:           call @3018 // <std#string_builder.string_builder>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 172 pushl 1   
10 [0xa]:           newstr @107 // [    
11 [0xb]:           call @3014 // <std#string_builder.operator+=>   
12 [0xc]:           pop   
13 [0xd]: line: 173 istorel 0, fp+2   
15 [0xf]:           ipushl #2   
16 [0x10]:           movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           movi #0, adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           loadval ecx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 65   
27 [0x1b]: line: 174 pushl 1   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #1   
31 [0x1f]:           pushobj   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           pushobj   
38 [0x26]:           call @3011 // <std#string_builder.operator+=>   
39 [0x27]:           pop   
40 [0x28]: line: 176 ipushl #2   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           add ecx, ebx -> ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           loadval ecx   
53 [0x35]:           lt ecx, ebx   
54 [0x36]:           movr ebx, cmt   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 61   
57 [0x39]: line: 177 pushl 1   
58 [0x3a]:           newstr @108 // ,    
59 [0x3b]:           call @3014 // <std#string_builder.operator+=>   
60 [0x3c]:           pop   
61 [0x3d]:           nop   
62 [0x3e]:           iaddl 1, fp@2   
64 [0x40]:           jmp @15   
65 [0x41]: line: 181 pushl 1   
66 [0x42]:           newstr @109 //  ]   
67 [0x43]:           call @3014 // <std#string_builder.operator+=>   
68 [0x44]:           pop   
69 [0x45]: line: 182 pushl 1   
70 [0x46]:           call @2991 // <std#string_builder.to_string>   
71 [0x47]:           popobj2    
72 [0x48]:           returnobj   
73 [0x49]:           ret   


function: std#list<std#string>.out_of_bounds_msg[3130] params(1) in file: lib\support\0.2.805/list.sharp:185:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #106, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 186 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @110 // Index:    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @2955 // <std#string.operator+>   
10 [0xa]:           newstr @111 // , size:    
11 [0xb]:           call @2935 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @2955 // <std#string.operator+>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


constructor: std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable[3131] params(1) in file: lib\support\0.2.805/hashtable.sharp:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         movl 0   
16 [0x10]:         movi #108, ebx   
18 [0x12]:         cast ebx   
19 [0x13]:         pushl 0   
20 [0x14]: line: 11 loadl ebx, fp+1   
21 [0x15]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
22 [0x16]:          movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          popobj   
26 [0x1a]: line: 12 movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          sizeof ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          movi #0, adx   
36 [0x24]:          iaload ebx, adx   
37 [0x25]:          loadval ecx   
38 [0x26]:          mul ecx, ebx -> ebx   
39 [0x27]:          movl 0   
40 [0x28]:          movn #2   
42 [0x2a]:          movi #0, adx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]:          ret   


constructor: std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable[3132] params(0) in file: lib\support\0.2.805/hashtable.sharp:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         movl 0   
16 [0x10]:         movi #108, ebx   
18 [0x12]:         cast ebx   
19 [0x13]:         pushl 0   
20 [0x14]: line: 16 movi #128, ebx   
22 [0x16]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          popobj   
27 [0x1b]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.set_threshold[3133] params(1) in file: lib\support\0.2.805/hashtable.sharp:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #108, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 20 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 21 ipushl #1   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          loadval ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]: line: 22 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          sizeof ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          loadl ebx, fp+1   
20 [0x14]:          loadval ecx   
21 [0x15]:          mul ecx, ebx -> ebx   
22 [0x16]:          movl 0   
23 [0x17]:          movn #2   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          rmov adx, ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          _ulck   
30 [0x1e]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.hash[3134] params(1) in file: lib\support\0.2.805/hashtable.sharp:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #108, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 27 pushl 1   
5 [0x5]:          call @1851 // <std.io#thread.hash>   
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @287 // <std#integer<_int64>.operator%>   
12 [0xc]:          loadval ebx   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.resize[3135] params(0) in file: lib\support\0.2.805/hashtable.sharp:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #108, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 31 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 32 movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 1   
12 [0xc]:          sizeof ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #1, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          shr ecx, ebx -> ebx   
18 [0x12]:          loadval ecx   
19 [0x13]:          add ecx, ebx -> ebx   
20 [0x14]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
21 [0x15]:          movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          popobj   
25 [0x19]: line: 33 movl 0   
26 [0x1a]:          movn #0   
28 [0x1c]:          sizeof ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          movi #0, adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          loadval ecx   
37 [0x25]:          mul ecx, ebx -> ebx   
38 [0x26]:          movl 0   
39 [0x27]:          movn #2   
41 [0x29]:          movi #0, adx   
43 [0x2b]:          rmov adx, ebx   
44 [0x2c]: line: 34 istorel -1, fp+3   
46 [0x2e]:          pushl 1   
47 [0x2f]:          popl 4   
48 [0x30]:          iaddl 1, fp@3   
50 [0x32]:          movl 4   
51 [0x33]:          sizeof ecx   
52 [0x34]:          loadl ebx, fp+3   
53 [0x35]:          lt ebx, ecx   
54 [0x36]:          jne 103   
55 [0x37]:          movnd ebx   
56 [0x38]:          pushobj   
57 [0x39]:          popl 2   
58 [0x3a]: line: 36 movl 2   
59 [0x3b]:          checknull   
60 [0x3c]:          not ebx, ebx   
61 [0x3d]:          movr cmt, ebx   
62 [0x3e]:          jne 102   
63 [0x3f]: line: 38 movl 2   
64 [0x40]:          movn #2   
66 [0x42]:          smovr_3 fp+5   
67 [0x43]: line: 39 pushl 0   
68 [0x44]:          movl 2   
69 [0x45]:          movn #0   
71 [0x47]:          pushobj   
72 [0x48]:          call @3134 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
73 [0x49]:          ipopl 6   
74 [0x4a]: line: 40 movl 0   
75 [0x4b]:          movn #0   
77 [0x4d]:          pushobj   
78 [0x4e]:          loadl ebx, fp+6   
79 [0x4f]:          popobj2    
80 [0x50]:          movr adx, ebx   
81 [0x51]:          chklen adx   
82 [0x52]:          movnd adx   
83 [0x53]:          pushobj   
84 [0x54]:          movl 2   
85 [0x55]:          movn #2   
87 [0x57]:          popobj   
88 [0x58]: line: 41 pushl 2   
89 [0x59]:          movl 0   
90 [0x5a]:          movn #0   
92 [0x5c]:          pushobj   
93 [0x5d]:          loadl ebx, fp+6   
94 [0x5e]:          popobj2    
95 [0x5f]:          movr adx, ebx   
96 [0x60]:          chklen adx   
97 [0x61]:          movnd adx   
98 [0x62]:          popobj   
99 [0x63]: line: 42 movl 5   
100 [0x64]:          smovr_3 fp+2   
101 [0x65]:          jmp @58   
102 [0x66]:          jmp @48   
103 [0x67]: line: 46 pushnull    
104 [0x68]:          popobj2    
105 [0x69]:          smovr_3 fp+1   
106 [0x6a]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.at[3136] params(1) in file: lib\support\0.2.805/hashtable.sharp:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #108, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 50 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 51 pushl 0   
7 [0x7]:          pushl 1   
8 [0x8]:          call @3134 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
9 [0x9]:          ipopl 2   
10 [0xa]: line: 52 istorel -1, fp+3   
12 [0xc]: line: 53 movl 4   
13 [0xd]:          del   
14 [0xe]: line: 55 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          loadl ebx, fp+2   
19 [0x13]:          popobj2    
20 [0x14]:          movr adx, ebx   
21 [0x15]:          chklen adx   
22 [0x16]:          movnd adx   
23 [0x17]:          pushobj   
24 [0x18]:          pushnull    
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 34   
28 [0x1c]: line: 56 movl 0   
29 [0x1d]:          _ulck   
30 [0x1e]:          movl 4   
31 [0x1f]:          returnobj   
32 [0x20]:          ret   
33 [0x21]:          jmp @88   
34 [0x22]: line: 58 movl 0   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          loadl ebx, fp+2   
39 [0x27]:          popobj2    
40 [0x28]:          movr adx, ebx   
41 [0x29]:          chklen adx   
42 [0x2a]:          movnd adx   
43 [0x2b]:          smovr_3 fp+5   
44 [0x2c]: line: 59 movl 5   
45 [0x2d]:          checknull   
46 [0x2e]:          not ebx, ebx   
47 [0x2f]:          skne ebx // pc = 63   
48 [0x30]:          movl 5   
49 [0x31]:          movn #0   
51 [0x33]:          pushobj   
52 [0x34]:          pushl 1   
53 [0x35]:          itest ebx   
54 [0x36]:          not ebx, ebx   
55 [0x37]:          skne ebx // pc = 63   
56 [0x38]:          movl 5   
57 [0x39]:          movn #2   
59 [0x3b]:          pushobj   
60 [0x3c]:          pushnull    
61 [0x3d]:          itest ebx   
62 [0x3e]:          not ebx, ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 70   
65 [0x41]: line: 61 movl 5   
66 [0x42]:          movn #2   
68 [0x44]:          smovr_3 fp+5   
69 [0x45]:          jmp @44   
70 [0x46]: line: 63 movl 5   
71 [0x47]:          checknull   
72 [0x48]:          movr cmt, ebx   
73 [0x49]:          jne 80   
74 [0x4a]: line: 64 movl 0   
75 [0x4b]:          _ulck   
76 [0x4c]:          movl 4   
77 [0x4d]:          returnobj   
78 [0x4e]:          ret   
79 [0x4f]:          jmp @87   
80 [0x50]: line: 66 movl 0   
81 [0x51]:          _ulck   
82 [0x52]:          movl 5   
83 [0x53]:          movn #1   
85 [0x55]:          returnobj   
86 [0x56]:          ret   
87 [0x57]:          nop   
88 [0x58]:          nop   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.put[3137] params(2) in file: lib\support\0.2.805/hashtable.sharp:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #108, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 73 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 74 pushl 0   
7 [0x7]:          pushl 1   
8 [0x8]:          call @3134 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
9 [0x9]:          ipopl 3   
10 [0xa]: line: 75 movl 4   
11 [0xb]:          del   
12 [0xc]: line: 76 movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          pushobj   
16 [0x10]:          loadl ebx, fp+3   
17 [0x11]:          popobj2    
18 [0x12]:          movr adx, ebx   
19 [0x13]:          chklen adx   
20 [0x14]:          movnd adx   
21 [0x15]:          smovr_3 fp+5   
22 [0x16]: line: 78 movl 5   
23 [0x17]:          checknull   
24 [0x18]:          not ebx, ebx   
25 [0x19]:          skne ebx // pc = 33   
26 [0x1a]:          movl 5   
27 [0x1b]:          movn #0   
29 [0x1d]:          pushobj   
30 [0x1e]:          pushl 1   
31 [0x1f]:          itest ebx   
32 [0x20]:          not ebx, ebx   
33 [0x21]:          movr cmt, ebx   
34 [0x22]:          jne 42   
35 [0x23]: line: 79 movl 5   
36 [0x24]:          smovr_3 fp+4   
37 [0x25]: line: 80 movl 5   
38 [0x26]:          movn #2   
40 [0x28]:          smovr_3 fp+5   
41 [0x29]:          jmp @22   
42 [0x2a]: line: 83 movl 5   
43 [0x2b]:          checknull   
44 [0x2c]:          movr cmt, ebx   
45 [0x2d]:          jne 92   
46 [0x2e]: line: 84 movl 0   
47 [0x2f]:          movn #3   
49 [0x31]:          movi #0, adx   
51 [0x33]:          iaload ebx, adx   
52 [0x34]:          movr egx, ebx   
53 [0x35]:          inc ebx   
54 [0x36]:          movi #0, adx   
56 [0x38]:          rmov adx, ebx   
57 [0x39]: line: 85 new_class @118 // std.io.task#entry<std.io#thread,std.io.task#job_controller>   
58 [0x3a]:          dup    
59 [0x3b]:          pushl 1   
60 [0x3c]:          pushl 2   
61 [0x3d]:          call @3281 // <std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry>   
62 [0x3e]:          popobj2    
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]: line: 86 movl 4   
65 [0x41]:          checknull   
66 [0x42]:          movr cmt, ebx   
67 [0x43]:          jne 80   
68 [0x44]: line: 87 pushl 5   
69 [0x45]:          movl 0   
70 [0x46]:          movn #0   
72 [0x48]:          pushobj   
73 [0x49]:          loadl ebx, fp+3   
74 [0x4a]:          popobj2    
75 [0x4b]:          movr adx, ebx   
76 [0x4c]:          chklen adx   
77 [0x4d]:          movnd adx   
78 [0x4e]:          popobj   
79 [0x4f]:          jmp @85   
80 [0x50]: line: 89 pushl 5   
81 [0x51]:          movl 4   
82 [0x52]:          movn #2   
84 [0x54]:          popobj   
85 [0x55]:          nop   
86 [0x56]: line: 92 movl 0   
87 [0x57]:          _ulck   
88 [0x58]:          istorel 1, fp+0   
90 [0x5a]:          ret   
91 [0x5b]:          jmp @102   
92 [0x5c]: line: 94 pushl 2   
93 [0x5d]:          movl 5   
94 [0x5e]:          movn #1   
96 [0x60]:          popobj   
97 [0x61]: line: 95 movl 0   
98 [0x62]:          _ulck   
99 [0x63]:          istorel 0, fp+0   
101 [0x65]:          ret   
102 [0x66]:          nop   
103 [0x67]:          movl 0   
104 [0x68]:          _ulck   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.remove[3138] params(1) in file: lib\support\0.2.805/hashtable.sharp:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #108, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 101 movl 0   
5 [0x5]:           _lck    
6 [0x6]: line: 102 pushl 0   
7 [0x7]:           pushl 1   
8 [0x8]:           call @3134 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
9 [0x9]:           ipopl 2   
10 [0xa]: line: 103 movl 0   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           loadl ebx, fp+2   
15 [0xf]:           popobj2    
16 [0x10]:           movr adx, ebx   
17 [0x11]:           chklen adx   
18 [0x12]:           movnd adx   
19 [0x13]:           pushobj   
20 [0x14]:           pushnull    
21 [0x15]:           itest ebx   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 104   
24 [0x18]: line: 104 movl 3   
25 [0x19]:           del   
26 [0x1a]: line: 105 movl 0   
27 [0x1b]:           movn #0   
29 [0x1d]:           pushobj   
30 [0x1e]:           loadl ebx, fp+2   
31 [0x1f]:           popobj2    
32 [0x20]:           movr adx, ebx   
33 [0x21]:           chklen adx   
34 [0x22]:           movnd adx   
35 [0x23]:           smovr_3 fp+4   
36 [0x24]: line: 106 movl 4   
37 [0x25]:           checknull   
38 [0x26]:           not ebx, ebx   
39 [0x27]:           skne ebx // pc = 47   
40 [0x28]:           movl 4   
41 [0x29]:           movn #0   
43 [0x2b]:           pushobj   
44 [0x2c]:           pushl 1   
45 [0x2d]:           itest ebx   
46 [0x2e]:           not ebx, ebx   
47 [0x2f]:           movr cmt, ebx   
48 [0x30]:           jne 56   
49 [0x31]: line: 107 movl 4   
50 [0x32]:           smovr_3 fp+3   
51 [0x33]: line: 108 movl 4   
52 [0x34]:           movn #2   
54 [0x36]:           smovr_3 fp+4   
55 [0x37]:           jmp @36   
56 [0x38]: line: 111 movl 4   
57 [0x39]:           movn #0   
59 [0x3b]:           pushobj   
60 [0x3c]:           pushl 1   
61 [0x3d]:           call @1869 // <std.io#thread.operator==>   
62 [0x3e]:           loadval ebx   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 103   
65 [0x41]: line: 112 movl 3   
66 [0x42]:           checknull   
67 [0x43]:           movr cmt, ebx   
68 [0x44]:           jne 85   
69 [0x45]: line: 113 movl 4   
70 [0x46]:           movn #2   
72 [0x48]:           smovr_3 fp+5   
73 [0x49]: line: 114 pushl 5   
74 [0x4a]:           movl 0   
75 [0x4b]:           movn #0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+2   
79 [0x4f]:           popobj2    
80 [0x50]:           movr adx, ebx   
81 [0x51]:           chklen adx   
82 [0x52]:           movnd adx   
83 [0x53]:           popobj   
84 [0x54]:           jmp @97   
85 [0x55]: line: 116 movl 4   
86 [0x56]:           movn #2   
88 [0x58]:           smovr_3 fp+6   
89 [0x59]: line: 117 pushl 6   
90 [0x5a]:           movl 3   
91 [0x5b]:           movn #2   
93 [0x5d]:           popobj   
94 [0x5e]: line: 118 pushnull    
95 [0x5f]:           popobj2    
96 [0x60]:           smovr_3 fp+4   
97 [0x61]:           nop   
98 [0x62]: line: 121 movl 0   
99 [0x63]:           _ulck   
100 [0x64]:           istorel 1, fp+0   
102 [0x66]:           ret   
103 [0x67]:           nop   
104 [0x68]:           nop   
105 [0x69]: line: 125 movl 0   
106 [0x6a]:           _ulck   
107 [0x6b]:           istorel 0, fp+0   
109 [0x6d]:           ret   
110 [0x6e]:           movl 0   
111 [0x6f]:           _ulck   


constructor: std#hashmap<std#int,std.io#thread>.hashmap[3139] params(1) in file: lib\support\0.2.805/hashmap.sharp:10:19: note:  
		    public hashmap(initialCapacity: var) {
		                  ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movl 0   
8 [0x8]:         movi #109, ebx   
10 [0xa]:         cast ebx   
11 [0xb]:         pushl 0   
12 [0xc]: line: 11 loadl ebx, fp+1   
13 [0xd]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
14 [0xe]:          movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          popobj   
18 [0x12]: line: 12 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          sizeof ebx   
22 [0x16]:          rstore ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          loadval ecx   
30 [0x1e]:          mul ecx, ebx -> ebx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #2   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          ret   


constructor: std#hashmap<std#int,std.io#thread>.hashmap[3140] params(0) in file: lib\support\0.2.805/hashmap.sharp:15:19: note:  
		    public hashmap() {
		                  ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movl 0   
8 [0x8]:         movi #109, ebx   
10 [0xa]:         cast ebx   
11 [0xb]:         pushl 0   
12 [0xc]: line: 16 movi #128, ebx   
14 [0xe]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
15 [0xf]:          movl 0   
16 [0x10]:          movn #0   
18 [0x12]:          popobj   
19 [0x13]: line: 17 movi #96, ebx   
21 [0x15]:          movl 0   
22 [0x16]:          movn #2   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]:          ret   


function: std#hashmap<std#int,std.io#thread>.set_threshold[3141] params(1) in file: lib\support\0.2.805/hashmap.sharp:20:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #109, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 21 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]: line: 22 movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          loadl ebx, fp+1   
18 [0x12]:          loadval ecx   
19 [0x13]:          mul ecx, ebx -> ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #2   
23 [0x17]:          movi #0, adx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]:          ret   


function: std#hashmap<std#int,std.io#thread>.hash[3142] params(1) in file: lib\support\0.2.805/hashmap.sharp:25:8: note:  
		    def hash(key: k) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #109, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 26 pushl 1   
5 [0x5]:          call @598 // <std#integer<_int32>.hash>   
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @287 // <std#integer<_int64>.operator%>   
12 [0xc]:          loadval ebx   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#hashmap<std#int,std.io#thread>.resize[3143] params(0) in file: lib\support\0.2.805/hashmap.sharp:29:8: note:  
		    def resize() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #109, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 30 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 31 movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 1   
12 [0xc]:          sizeof ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #1, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          shr ecx, ebx -> ebx   
18 [0x12]:          loadval ecx   
19 [0x13]:          add ecx, ebx -> ebx   
20 [0x14]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
21 [0x15]:          movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          popobj   
25 [0x19]: line: 32 movl 0   
26 [0x1a]:          movn #0   
28 [0x1c]:          sizeof ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          movi #0, adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          loadval ecx   
37 [0x25]:          mul ecx, ebx -> ebx   
38 [0x26]:          movl 0   
39 [0x27]:          movn #2   
41 [0x29]:          movi #0, adx   
43 [0x2b]:          rmov adx, ebx   
44 [0x2c]: line: 33 istorel -1, fp+3   
46 [0x2e]:          pushl 1   
47 [0x2f]:          popl 4   
48 [0x30]:          iaddl 1, fp@3   
50 [0x32]:          movl 4   
51 [0x33]:          sizeof ecx   
52 [0x34]:          loadl ebx, fp+3   
53 [0x35]:          lt ebx, ecx   
54 [0x36]:          jne 103   
55 [0x37]:          movnd ebx   
56 [0x38]:          pushobj   
57 [0x39]:          popl 2   
58 [0x3a]: line: 35 movl 2   
59 [0x3b]:          checknull   
60 [0x3c]:          not ebx, ebx   
61 [0x3d]:          movr cmt, ebx   
62 [0x3e]:          jne 102   
63 [0x3f]: line: 37 movl 2   
64 [0x40]:          movn #2   
66 [0x42]:          smovr_3 fp+5   
67 [0x43]: line: 38 pushl 0   
68 [0x44]:          movl 2   
69 [0x45]:          movn #0   
71 [0x47]:          pushobj   
72 [0x48]:          call @3142 // <std#hashmap<std#int,std.io#thread>.hash>   
73 [0x49]:          ipopl 6   
74 [0x4a]: line: 39 movl 0   
75 [0x4b]:          movn #0   
77 [0x4d]:          pushobj   
78 [0x4e]:          loadl ebx, fp+6   
79 [0x4f]:          popobj2    
80 [0x50]:          movr adx, ebx   
81 [0x51]:          chklen adx   
82 [0x52]:          movnd adx   
83 [0x53]:          pushobj   
84 [0x54]:          movl 2   
85 [0x55]:          movn #2   
87 [0x57]:          popobj   
88 [0x58]: line: 40 pushl 2   
89 [0x59]:          movl 0   
90 [0x5a]:          movn #0   
92 [0x5c]:          pushobj   
93 [0x5d]:          loadl ebx, fp+6   
94 [0x5e]:          popobj2    
95 [0x5f]:          movr adx, ebx   
96 [0x60]:          chklen adx   
97 [0x61]:          movnd adx   
98 [0x62]:          popobj   
99 [0x63]: line: 41 movl 5   
100 [0x64]:          smovr_3 fp+2   
101 [0x65]:          jmp @58   
102 [0x66]:          jmp @48   
103 [0x67]: line: 45 pushnull    
104 [0x68]:          popobj2    
105 [0x69]:          smovr_3 fp+1   
106 [0x6a]:          ret   


function: std#hashmap<std#int,std.io#thread>.at[3144] params(1) in file: lib\support\0.2.805/hashmap.sharp:48:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #109, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 49 pushl 0   
5 [0x5]:          pushl 1   
6 [0x6]:          call @3142 // <std#hashmap<std#int,std.io#thread>.hash>   
7 [0x7]:          ipopl 2   
8 [0x8]: line: 50 istorel -1, fp+3   
10 [0xa]: line: 51 movl 4   
11 [0xb]:          del   
12 [0xc]: line: 53 movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          pushobj   
16 [0x10]:          loadl ebx, fp+2   
17 [0x11]:          popobj2    
18 [0x12]:          movr adx, ebx   
19 [0x13]:          chklen adx   
20 [0x14]:          movnd adx   
21 [0x15]:          pushobj   
22 [0x16]:          pushnull    
23 [0x17]:          itest ebx   
24 [0x18]:          movr cmt, ebx   
25 [0x19]:          jne 30   
26 [0x1a]: line: 54 movl 4   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   
29 [0x1d]:          jmp @68   
30 [0x1e]: line: 56 movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+2   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          smovr_3 fp+5   
40 [0x28]: line: 57 movl 5   
41 [0x29]:          checknull   
42 [0x2a]:          not ebx, ebx   
43 [0x2b]:          movr cmt, ebx   
44 [0x2c]:          jne 65   
45 [0x2d]: line: 58 movl 5   
46 [0x2e]:          movn #0   
48 [0x30]:          pushobj   
49 [0x31]:          pushl 1   
50 [0x32]:          call @606 // <std#integer<_int32>.operator==>   
51 [0x33]:          loadval ebx   
52 [0x34]:          movr cmt, ebx   
53 [0x35]:          jne 59   
54 [0x36]: line: 59 movl 5   
55 [0x37]:          movn #1   
57 [0x39]:          returnobj   
58 [0x3a]:          ret   
59 [0x3b]:          nop   
60 [0x3c]: line: 61 movl 5   
61 [0x3d]:          movn #2   
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]:          jmp @40   
65 [0x41]: line: 64 movl 4   
66 [0x42]:          returnobj   
67 [0x43]:          ret   
68 [0x44]:          nop   


function: std#hashmap<std#int,std.io#thread>.put[3145] params(2) in file: lib\support\0.2.805/hashmap.sharp:68:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #109, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 69 pushl 0   
5 [0x5]:          pushl 1   
6 [0x6]:          call @3142 // <std#hashmap<std#int,std.io#thread>.hash>   
7 [0x7]:          ipopl 3   
8 [0x8]: line: 70 movl 4   
9 [0x9]:          del   
10 [0xa]: line: 71 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          loadl ebx, fp+3   
15 [0xf]:          popobj2    
16 [0x10]:          movr adx, ebx   
17 [0x11]:          chklen adx   
18 [0x12]:          movnd adx   
19 [0x13]:          smovr_3 fp+5   
20 [0x14]: line: 73 movl 5   
21 [0x15]:          checknull   
22 [0x16]:          not ebx, ebx   
23 [0x17]:          skne ebx // pc = 31   
24 [0x18]:          movl 5   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          pushl 1   
29 [0x1d]:          call @605 // <std#integer<_int32>.operator!=>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 40   
33 [0x21]: line: 74 movl 5   
34 [0x22]:          smovr_3 fp+4   
35 [0x23]: line: 75 movl 5   
36 [0x24]:          movn #2   
38 [0x26]:          smovr_3 fp+5   
39 [0x27]:          jmp @20   
40 [0x28]: line: 78 movl 5   
41 [0x29]:          checknull   
42 [0x2a]:          movr cmt, ebx   
43 [0x2b]:          jne 88   
44 [0x2c]: line: 79 movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          iaload ebx, adx   
50 [0x32]:          movr egx, ebx   
51 [0x33]:          inc ebx   
52 [0x34]:          movi #0, adx   
54 [0x36]:          rmov adx, ebx   
55 [0x37]: line: 80 new_class @119 // std.io#entry<std#int,std.io#thread>   
56 [0x38]:          dup    
57 [0x39]:          pushl 1   
58 [0x3a]:          pushl 2   
59 [0x3b]:          call @3284 // <std.io#entry<std#int,std.io#thread>.entry>   
60 [0x3c]:          popobj2    
61 [0x3d]:          smovr_3 fp+5   
62 [0x3e]: line: 81 movl 4   
63 [0x3f]:          checknull   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 78   
66 [0x42]: line: 82 pushl 5   
67 [0x43]:          movl 0   
68 [0x44]:          movn #0   
70 [0x46]:          pushobj   
71 [0x47]:          loadl ebx, fp+3   
72 [0x48]:          popobj2    
73 [0x49]:          movr adx, ebx   
74 [0x4a]:          chklen adx   
75 [0x4b]:          movnd adx   
76 [0x4c]:          popobj   
77 [0x4d]:          jmp @83   
78 [0x4e]: line: 84 pushl 5   
79 [0x4f]:          movl 4   
80 [0x50]:          movn #2   
82 [0x52]:          popobj   
83 [0x53]:          nop   
84 [0x54]: line: 87 istorel 1, fp+0   
86 [0x56]:          ret   
87 [0x57]:          jmp @96   
88 [0x58]: line: 89 pushl 2   
89 [0x59]:          movl 5   
90 [0x5a]:          movn #1   
92 [0x5c]:          popobj   
93 [0x5d]: line: 90 istorel 0, fp+0   
95 [0x5f]:          ret   
96 [0x60]:          nop   


function: std#hashmap<std#int,std.io#thread>.remove[3146] params(1) in file: lib\support\0.2.805/hashmap.sharp:94:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #109, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 95 pushl 0   
5 [0x5]:          pushl 1   
6 [0x6]:          call @3142 // <std#hashmap<std#int,std.io#thread>.hash>   
7 [0x7]:          ipopl 2   
8 [0x8]: line: 96 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+2   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          pushobj   
18 [0x12]:          pushnull    
19 [0x13]:          itest ebx   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 100   
22 [0x16]: line: 97 movl 3   
23 [0x17]:          del   
24 [0x18]: line: 98 movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          loadl ebx, fp+2   
29 [0x1d]:          popobj2    
30 [0x1e]:          movr adx, ebx   
31 [0x1f]:          chklen adx   
32 [0x20]:          movnd adx   
33 [0x21]:          smovr_3 fp+4   
34 [0x22]: line: 99 movl 4   
35 [0x23]:          checknull   
36 [0x24]:          not ebx, ebx   
37 [0x25]:          skne ebx // pc = 45   
38 [0x26]:          movl 4   
39 [0x27]:          movn #0   
41 [0x29]:          pushobj   
42 [0x2a]:          pushl 1   
43 [0x2b]:          call @605 // <std#integer<_int32>.operator!=>   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 54   
47 [0x2f]: line: 100 movl 4   
48 [0x30]:           smovr_3 fp+3   
49 [0x31]: line: 101 movl 4   
50 [0x32]:           movn #2   
52 [0x34]:           smovr_3 fp+4   
53 [0x35]:           jmp @34   
54 [0x36]: line: 104 movl 4   
55 [0x37]:           movn #0   
57 [0x39]:           pushobj   
58 [0x3a]:           pushl 1   
59 [0x3b]:           call @606 // <std#integer<_int32>.operator==>   
60 [0x3c]:           loadval ebx   
61 [0x3d]:           movr cmt, ebx   
62 [0x3e]:           jne 99   
63 [0x3f]: line: 105 movl 3   
64 [0x40]:           checknull   
65 [0x41]:           movr cmt, ebx   
66 [0x42]:           jne 83   
67 [0x43]: line: 106 movl 4   
68 [0x44]:           movn #2   
70 [0x46]:           smovr_3 fp+5   
71 [0x47]: line: 107 pushl 5   
72 [0x48]:           movl 0   
73 [0x49]:           movn #0   
75 [0x4b]:           pushobj   
76 [0x4c]:           loadl ebx, fp+2   
77 [0x4d]:           popobj2    
78 [0x4e]:           movr adx, ebx   
79 [0x4f]:           chklen adx   
80 [0x50]:           movnd adx   
81 [0x51]:           popobj   
82 [0x52]:           jmp @95   
83 [0x53]: line: 109 movl 4   
84 [0x54]:           movn #2   
86 [0x56]:           smovr_3 fp+6   
87 [0x57]: line: 110 pushl 6   
88 [0x58]:           movl 3   
89 [0x59]:           movn #2   
91 [0x5b]:           popobj   
92 [0x5c]: line: 111 pushnull    
93 [0x5d]:           popobj2    
94 [0x5e]:           smovr_3 fp+4   
95 [0x5f]:           nop   
96 [0x60]: line: 114 istorel 1, fp+0   
98 [0x62]:           ret   
99 [0x63]:           nop   
100 [0x64]:           nop   
101 [0x65]: line: 118 istorel 0, fp+0   
103 [0x67]:           ret   


function: std#throwable.get_stack_trace[3147] params(0) in file: lib\support\0.2.805/exceptions.sharp:13:25: note:  
		    stack_trace : string;
		                        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #2, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 15 movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 21   
12 [0xc]: line: 16 movl 0   
13 [0xd]:          movn #2   
15 [0xf]:          pushobj   
16 [0x10]:          call @1946 // <platform.kernel#vm.get_stack_trace>   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]:          nop   
22 [0x16]: line: 20 movl 0   
23 [0x17]:          movn #1   
25 [0x19]:          returnobj   
26 [0x1a]:          ret   


constructor: std#list<std.io#thread>.list[3148] params(0) in file: lib\support\0.2.805/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 14 movi #10, ebx   
7 [0x7]:          new_classarray ebx  // std.io#thread[]   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          popobj   
12 [0xc]:          ret   


constructor: std#list<std.io#thread>.list[3149] params(1) in file: lib\support\0.2.805/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 18 loadl ebx, fp+1   
6 [0x6]:          new_classarray ebx  // std.io#thread[]   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: std#list<std.io#thread>.list[3150] params(1) in file: lib\support\0.2.805/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 22 pushl 0   
6 [0x6]:          pushl 1   
7 [0x7]:          call @3161 // <std#list<std.io#thread>.add_all>   
8 [0x8]:          ret   


function: std#list<std.io#thread>.empty[3151] params(0) in file: lib\support\0.2.805/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std.io#thread>.set_compact[3152] params(1) in file: lib\support\0.2.805/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 28 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #2   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


function: std#list<std.io#thread>.get_elements[3153] params(0) in file: lib\support\0.2.805/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 32 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 21   
16 [0x10]:          pushnull    
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   
20 [0x14]:          jmp @38   
21 [0x15]: line: 33 movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          istore 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @1749 // <std.io#__srt_global.copy>   
35 [0x23]:          popobj2    
36 [0x24]:          returnobj   
37 [0x25]:          ret   
38 [0x26]:          nop   


overload function: std#list<std.io#thread>.operator[[3154] params(1) in file: lib\support\0.2.805/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 37 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 38 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3172 // <std#list<std.io#thread>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 39 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std#list<std.io#thread>.at[3155] params(1) in file: lib\support\0.2.805/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 43 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 44 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3172 // <std#list<std.io#thread>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 45 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std#list<std.io#thread>.last[3156] params(0) in file: lib\support\0.2.805/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 49 pushl 0   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movi #1, ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          sub ecx, ebx -> ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @3155 // <std#list<std.io#thread>.at>   
18 [0x12]:          popobj2    
19 [0x13]:          returnobj   
20 [0x14]:          ret   


function: std#list<std.io#thread>.put[3157] params(2) in file: lib\support\0.2.805/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 53 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 54 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3172 // <std#list<std.io#thread>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 56 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          smovr_3 fp+3   
40 [0x28]: line: 57 pushl 2   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #1   
44 [0x2c]:          pushobj   
45 [0x2d]:          loadl ebx, fp+1   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          popobj   
51 [0x33]: line: 58 movl 3   
52 [0x34]:          returnobj   
53 [0x35]:          ret   


function: std#list<std.io#thread>.expand[3158] params(0) in file: lib\support\0.2.805/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 62 movl 0   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 28   
12 [0xc]: line: 63 movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          pushobj   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          sizeof ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          movi #128, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          add ecx, ebx -> ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          call @1729 // <std.io#__srt_global.realloc>   
27 [0x1b]:          jmp @55   
28 [0x1c]: line: 65 movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          sizeof ebx   
36 [0x24]:          rstore ebx   
37 [0x25]:          movl 0   
38 [0x26]:          movn #1   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #4, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          shr ecx, ebx -> ebx   
46 [0x2e]:          loadval ecx   
47 [0x2f]:          add ecx, ebx -> ebx   
48 [0x30]:          rstore ebx   
49 [0x31]:          movi #128, ebx   
51 [0x33]:          loadval ecx   
52 [0x34]:          add ecx, ebx -> ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @1729 // <std.io#__srt_global.realloc>   
55 [0x37]:          nop   
56 [0x38]:          ret   


function: std#list<std.io#thread>.clear[3159] params(0) in file: lib\support\0.2.805/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 69 movi #10, ebx   
6 [0x6]:          new_classarray ebx  // std.io#thread[]   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]: line: 70 movi #0, ebx   
13 [0xd]:          movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]:          ret   


function: std#list<std.io#thread>.add_all[3160] params(1) in file: lib\support\0.2.805/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 74 movl 1   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          istore 0   
10 [0xa]:          movl 1   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @1749 // <std.io#__srt_global.copy>   
18 [0x12]:          popobj2    
19 [0x13]:          movi #28, cmt   
21 [0x15]:          cast cmt   
22 [0x16]:          pushobj   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          popobj   
27 [0x1b]: line: 75 movl 1   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          ret   


function: std#list<std.io#thread>.add_all[3161] params(1) in file: lib\support\0.2.805/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 79 movl 1   
5 [0x5]:          checknull   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 34   
9 [0x9]: line: 80 pushl 1   
10 [0xa]:          istore 0   
12 [0xc]:          movl 1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @1749 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #28, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 81 movl 1   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]:          jmp @49   
34 [0x22]: line: 83 movi #0, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #0   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 84 movi #10, ebx   
44 [0x2c]:          new_classarray ebx  // std.io#thread[]   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #1   
48 [0x30]:          popobj   
49 [0x31]:          nop   
50 [0x32]:          ret   


function: std#list<std.io#thread>.add[3162] params(1) in file: lib\support\0.2.805/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 89 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          sizeof ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          gte ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 22   
20 [0x14]: line: 90 pushl 0   
21 [0x15]:          call @3158 // <std#list<std.io#thread>.expand>   
22 [0x16]:          nop   
23 [0x17]: line: 91 pushl 1   
24 [0x18]:          movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          inc ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]:          ret   


function: std#list<std.io#thread>.indexof[3163] params(1) in file: lib\support\0.2.805/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 95 istorel 0, fp+2   
6 [0x6]:          ipushl #2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 40   
18 [0x12]: line: 96 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          pushobj   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          popobj2    
25 [0x19]:          movr adx, ebx   
26 [0x1a]:          chklen adx   
27 [0x1b]:          movnd adx   
28 [0x1c]:          pushobj   
29 [0x1d]:          call @1869 // <std.io#thread.operator==>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 36   
33 [0x21]: line: 97 loadl ebx, fp+2   
34 [0x22]:          return_val ebx   
35 [0x23]:          ret   
36 [0x24]:          nop   
37 [0x25]:          iaddl 1, fp@2   
39 [0x27]:          jmp @6   
40 [0x28]: line: 101 istorel -1, fp+0   
42 [0x2a]:           ret   


function: std#list<std.io#thread>.pop_back[3164] params(0) in file: lib\support\0.2.805/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 105 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 106 movl 1   
19 [0x13]:           del   
20 [0x14]: line: 107 pushl 1   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #0   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           movr egx, ebx   
32 [0x20]:           dec ebx   
33 [0x21]:           movi #0, adx   
35 [0x23]:           rmov adx, ebx   
36 [0x24]:           movr ebx, egx   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]:           nop   
43 [0x2b]:           ret   


function: std#list<std.io#thread>.size[3165] params(0) in file: lib\support\0.2.805/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<std.io#thread>.insert[3166] params(2) in file: lib\support\0.2.805/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 114 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 20   
15 [0xf]:           loadl ecx, fp+1   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 29   
22 [0x16]: line: 115 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @3172 // <std#list<std.io#thread>.out_of_bounds_msg>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           throw    
29 [0x1d]:           nop   
30 [0x1e]: line: 117 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #0, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           test ecx, ebx   
41 [0x29]:           jne 46   
42 [0x2a]: line: 118 pushl 0   
43 [0x2b]:           pushl 2   
44 [0x2c]:           call @3162 // <std#list<std.io#thread>.add>   
45 [0x2d]:           jmp @135   
46 [0x2e]: line: 120 movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           rstore ebx   
53 [0x35]:           movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           sizeof ebx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           gte ecx, ebx   
59 [0x3b]:           movr ebx, cmt   
60 [0x3c]:           movr cmt, ebx   
61 [0x3d]:           jne 64   
62 [0x3e]: line: 121 pushl 0   
63 [0x3f]:           call @3158 // <std#list<std.io#thread>.expand>   
64 [0x40]:           nop   
65 [0x41]: line: 122 movl 0   
66 [0x42]:           movn #0   
68 [0x44]:           movi #0, adx   
70 [0x46]:           iaload ebx, adx   
71 [0x47]:           movr egx, ebx   
72 [0x48]:           inc ebx   
73 [0x49]:           movi #0, adx   
75 [0x4b]:           rmov adx, ebx   
76 [0x4c]: line: 123 movl 0   
77 [0x4d]:           movn #0   
79 [0x4f]:           movi #0, adx   
81 [0x51]:           iaload ebx, adx   
82 [0x52]:           rstore ebx   
83 [0x53]:           movi #1, ebx   
85 [0x55]:           loadval ecx   
86 [0x56]:           sub ecx, ebx -> ebx   
87 [0x57]:           smovr_2 ebx, fp+3   
88 [0x58]:           ipushl #3   
89 [0x59]:           loadl ebx, fp+1   
90 [0x5a]:           loadval ecx   
91 [0x5b]:           gt ecx, ebx   
92 [0x5c]:           movr ebx, cmt   
93 [0x5d]:           movr cmt, ebx   
94 [0x5e]:           jne 124   
95 [0x5f]: line: 124 movl 0   
96 [0x60]:           movn #1   
98 [0x62]:           pushobj   
99 [0x63]:           ipushl #3   
100 [0x64]:           movi #1, ebx   
102 [0x66]:           loadval ecx   
103 [0x67]:           sub ecx, ebx -> ebx   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           pushobj   
109 [0x6d]:           movl 0   
110 [0x6e]:           movn #1   
112 [0x70]:           pushobj   
113 [0x71]:           loadl ebx, fp+3   
114 [0x72]:           popobj2    
115 [0x73]:           movr adx, ebx   
116 [0x74]:           chklen adx   
117 [0x75]:           movnd adx   
118 [0x76]:           popobj   
119 [0x77]:           loadl ebx, fp+3   
120 [0x78]:           movr egx, ebx   
121 [0x79]:           dec ebx   
122 [0x7a]:           smovr_2 ebx, fp+3   
123 [0x7b]:           jmp @88   
124 [0x7c]: line: 125 pushl 2   
125 [0x7d]:           movl 0   
126 [0x7e]:           movn #1   
128 [0x80]:           pushobj   
129 [0x81]:           loadl ebx, fp+1   
130 [0x82]:           popobj2    
131 [0x83]:           movr adx, ebx   
132 [0x84]:           chklen adx   
133 [0x85]:           movnd adx   
134 [0x86]:           popobj   
135 [0x87]:           nop   
136 [0x88]:           ret   


function: std#list<std.io#thread>.remove[3167] params(1) in file: lib\support\0.2.805/list.sharp:130:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 131 istorel 0, fp+2   
6 [0x6]:           ipushl #2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 41   
18 [0x12]: line: 132 pushl 1   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           call @1869 // <std.io#thread.operator==>   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 37   
33 [0x21]: line: 133 pushl 0   
34 [0x22]:           ipushl #2   
35 [0x23]:           call @3169 // <std#list<std.io#thread>.remove_at>   
36 [0x24]: line: 134 ret   
37 [0x25]:           nop   
38 [0x26]:           iaddl 1, fp@2   
40 [0x28]:           jmp @6   
41 [0x29]:           ret   


function: std#list<std.io#thread>.remove[3168] params(2) in file: lib\support\0.2.805/list.sharp:139:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 140 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 43   
18 [0x12]: line: 141 ipushl #2   
19 [0x13]:           pushl 1   
20 [0x14]:           movl 0   
21 [0x15]:           movn #1   
23 [0x17]:           pushobj   
24 [0x18]:           loadl ebx, fp+3   
25 [0x19]:           popobj2    
26 [0x1a]:           movr adx, ebx   
27 [0x1b]:           chklen adx   
28 [0x1c]:           movnd adx   
29 [0x1d]:           pushobj   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 39   
35 [0x23]: line: 142 pushl 0   
36 [0x24]:           ipushl #3   
37 [0x25]:           call @3169 // <std#list<std.io#thread>.remove_at>   
38 [0x26]: line: 143 ret   
39 [0x27]:           nop   
40 [0x28]:           iaddl 1, fp@3   
42 [0x2a]:           jmp @6   
43 [0x2b]:           ret   


function: std#list<std.io#thread>.remove_at[3169] params(1) in file: lib\support\0.2.805/list.sharp:148:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 149 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gte ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 20   
15 [0xf]:           loadl ecx, fp+1   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 29   
22 [0x16]: line: 150 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @3172 // <std#list<std.io#thread>.out_of_bounds_msg>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           throw    
29 [0x1d]:           nop   
30 [0x1e]: line: 152 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           loadl ebx, fp+1   
38 [0x26]:           loadval ecx   
39 [0x27]:           sub ecx, ebx -> ebx   
40 [0x28]:           rstore ebx   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           sub ecx, ebx -> ebx   
45 [0x2d]:           smovr_2 ebx, fp+2   
46 [0x2e]: line: 153 ipushl #2   
47 [0x2f]:           movi #0, ebx   
49 [0x31]:           loadval ecx   
50 [0x32]:           gt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 77   
54 [0x36]: line: 154 movl 0   
55 [0x37]:           movn #1   
57 [0x39]:           pushobj   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           ipushl #1   
64 [0x40]:           movi #1, ebx   
66 [0x42]:           loadval ecx   
67 [0x43]:           add ecx, ebx -> ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movl 0   
70 [0x46]:           movn #0   
72 [0x48]:           movi #0, adx   
74 [0x4a]:           iaload ebx, adx   
75 [0x4b]:           rstore ebx   
76 [0x4c]:           call @1739 // <std.io#__srt_global.memcopy>   
77 [0x4d]:           nop   
78 [0x4e]: line: 156 pushl 0   
79 [0x4f]:           call @3164 // <std#list<std.io#thread>.pop_back>   
80 [0x50]:           ret   


function: std#list<std.io#thread>.indexof[3170] params(2) in file: lib\support\0.2.805/list.sharp:159:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 160 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 161 ipushl #2   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           pushl 1   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 38   
35 [0x23]: line: 162 loadl ebx, fp+3   
36 [0x24]:           return_val ebx   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @6   
42 [0x2a]: line: 166 istorel -1, fp+0   
44 [0x2c]:           ret   


function: std#list<std.io#thread>.to_string[3171] params(0) in file: lib\support\0.2.805/list.sharp:169:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 170 new_class @65 // std#string_builder   
5 [0x5]:           dup    
6 [0x6]:           call @3018 // <std#string_builder.string_builder>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 172 pushl 1   
10 [0xa]:           newstr @107 // [    
11 [0xb]:           call @3014 // <std#string_builder.operator+=>   
12 [0xc]:           pop   
13 [0xd]: line: 173 istorel 0, fp+2   
15 [0xf]:           ipushl #2   
16 [0x10]:           movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           movi #0, adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           loadval ecx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 65   
27 [0x1b]: line: 174 pushl 1   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #1   
31 [0x1f]:           pushobj   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           pushobj   
38 [0x26]:           call @3010 // <std#string_builder.operator+=>   
39 [0x27]:           pop   
40 [0x28]: line: 176 ipushl #2   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           add ecx, ebx -> ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           loadval ecx   
53 [0x35]:           lt ecx, ebx   
54 [0x36]:           movr ebx, cmt   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 61   
57 [0x39]: line: 177 pushl 1   
58 [0x3a]:           newstr @108 // ,    
59 [0x3b]:           call @3014 // <std#string_builder.operator+=>   
60 [0x3c]:           pop   
61 [0x3d]:           nop   
62 [0x3e]:           iaddl 1, fp@2   
64 [0x40]:           jmp @15   
65 [0x41]: line: 181 pushl 1   
66 [0x42]:           newstr @109 //  ]   
67 [0x43]:           call @3014 // <std#string_builder.operator+=>   
68 [0x44]:           pop   
69 [0x45]: line: 182 pushl 1   
70 [0x46]:           call @2991 // <std#string_builder.to_string>   
71 [0x47]:           popobj2    
72 [0x48]:           returnobj   
73 [0x49]:           ret   


function: std#list<std.io#thread>.out_of_bounds_msg[3172] params(1) in file: lib\support\0.2.805/list.sharp:185:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #110, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 186 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @110 // Index:    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @2955 // <std#string.operator+>   
10 [0xa]:           newstr @111 // , size:    
11 [0xb]:           call @2935 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @2955 // <std#string.operator+>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


std#loopable<std.io.task#job>.get_elements[3173] params(0) in file: lib\support\0.2.805/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<std.io.task#job>.loopable[3174] params(0) in file: lib\support\0.2.805/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#synced_list<std.io.task#job>.synced_list[3175] params(0) in file: lib\support\0.2.805/synced_list.sharp:13:16: note:  
		    synced_list() {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 14 movi #10, ebx   
7 [0x7]:          new_classarray ebx  // std.io.task#job[]   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          popobj   
12 [0xc]:          ret   


constructor: std#synced_list<std.io.task#job>.synced_list[3176] params(1) in file: lib\support\0.2.805/synced_list.sharp:17:16: note:  
		    synced_list(starting_capacity: var) {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 18 loadl ebx, fp+1   
6 [0x6]:          new_classarray ebx  // std.io.task#job[]   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]:          ret   


function: std#synced_list<std.io.task#job>.set_compact[3177] params(1) in file: lib\support\0.2.805/synced_list.sharp:21:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 22 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 23 ipushl #1   
7 [0x7]:          movl 0   
8 [0x8]:          movn #2   
10 [0xa]:          loadval ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]:          movl 0   
15 [0xf]:          _ulck   
16 [0x10]:          ret   


function: std#synced_list<std.io.task#job>.get_elements[3178] params(0) in file: lib\support\0.2.805/synced_list.sharp:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 28 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 29 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          movi #0, ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          test ecx, ebx   
17 [0x11]:          jne 25   
18 [0x12]:          movl 0   
19 [0x13]:          _ulck   
20 [0x14]:          pushnull    
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   
24 [0x18]:          jmp @44   
25 [0x19]: line: 30 movl 0   
26 [0x1a]:          _ulck   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          istore 0   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          movi #0, adx   
38 [0x26]:          iaload ebx, adx   
39 [0x27]:          rstore ebx   
40 [0x28]:          call @1749 // <std.io#__srt_global.copy>   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          nop   
45 [0x2d]:          movl 0   
46 [0x2e]:          _ulck   


overload function: std#synced_list<std.io.task#job>.operator[[3179] params(1) in file: lib\support\0.2.805/synced_list.sharp:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 35 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 36 ipushl #1   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gte ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          skpe ebx // pc = 22   
17 [0x11]:          loadl ecx, fp+1   
18 [0x12]:          movi #0, ebx   
20 [0x14]:          lt ecx, ebx   
21 [0x15]:          movr ebx, cmt   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 37 new_class @6 // std#out_of_bounds_exception   
25 [0x19]:          dup    
26 [0x1a]:          pushl 0   
27 [0x1b]:          ipushl #1   
28 [0x1c]:          call @3222 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
29 [0x1d]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 38 movl 0   
33 [0x21]:          _ulck   
34 [0x22]:          movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          pushobj   
38 [0x26]:          loadl ebx, fp+1   
39 [0x27]:          popobj2    
40 [0x28]:          movr adx, ebx   
41 [0x29]:          chklen adx   
42 [0x2a]:          movnd adx   
43 [0x2b]:          returnobj   
44 [0x2c]:          ret   
45 [0x2d]:          movl 0   
46 [0x2e]:          _ulck   


function: std#synced_list<std.io.task#job>.at[3180] params(1) in file: lib\support\0.2.805/synced_list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 43 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 44 ipushl #1   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gte ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          skpe ebx // pc = 22   
17 [0x11]:          loadl ecx, fp+1   
18 [0x12]:          movi #0, ebx   
20 [0x14]:          lt ecx, ebx   
21 [0x15]:          movr ebx, cmt   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 45 new_class @6 // std#out_of_bounds_exception   
25 [0x19]:          dup    
26 [0x1a]:          pushl 0   
27 [0x1b]:          ipushl #1   
28 [0x1c]:          call @3222 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
29 [0x1d]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 46 movl 0   
33 [0x21]:          _ulck   
34 [0x22]:          movl 0   
35 [0x23]:          movn #1   
37 [0x25]:          pushobj   
38 [0x26]:          loadl ebx, fp+1   
39 [0x27]:          popobj2    
40 [0x28]:          movr adx, ebx   
41 [0x29]:          chklen adx   
42 [0x2a]:          movnd adx   
43 [0x2b]:          returnobj   
44 [0x2c]:          ret   
45 [0x2d]:          movl 0   
46 [0x2e]:          _ulck   


function: std#synced_list<std.io.task#job>.last[3181] params(0) in file: lib\support\0.2.805/synced_list.sharp:50:8: note:  
		    def last(): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 51 pushl 0   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movi #1, ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          sub ecx, ebx -> ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @3180 // <std#synced_list<std.io.task#job>.at>   
18 [0x12]:          popobj2    
19 [0x13]:          returnobj   
20 [0x14]:          ret   


function: std#synced_list<std.io.task#job>.put[3182] params(2) in file: lib\support\0.2.805/synced_list.sharp:54:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 55 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 56 ipushl #1   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gte ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          skpe ebx // pc = 22   
17 [0x11]:          loadl ecx, fp+1   
18 [0x12]:          movi #0, ebx   
20 [0x14]:          lt ecx, ebx   
21 [0x15]:          movr ebx, cmt   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 57 new_class @6 // std#out_of_bounds_exception   
25 [0x19]:          dup    
26 [0x1a]:          pushl 0   
27 [0x1b]:          ipushl #1   
28 [0x1c]:          call @3222 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
29 [0x1d]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:          throw    
31 [0x1f]:          nop   
32 [0x20]: line: 59 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+1   
37 [0x25]:          popobj2    
38 [0x26]:          movr adx, ebx   
39 [0x27]:          chklen adx   
40 [0x28]:          movnd adx   
41 [0x29]:          smovr_3 fp+3   
42 [0x2a]: line: 60 pushl 2   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #1   
46 [0x2e]:          pushobj   
47 [0x2f]:          loadl ebx, fp+1   
48 [0x30]:          popobj2    
49 [0x31]:          movr adx, ebx   
50 [0x32]:          chklen adx   
51 [0x33]:          movnd adx   
52 [0x34]:          popobj   
53 [0x35]: line: 61 movl 0   
54 [0x36]:          _ulck   
55 [0x37]:          movl 3   
56 [0x38]:          returnobj   
57 [0x39]:          ret   
58 [0x3a]:          movl 0   
59 [0x3b]:          _ulck   


function: std#synced_list<std.io.task#job>.expand[3183] params(0) in file: lib\support\0.2.805/synced_list.sharp:65:16: note:  
		    private def expand() {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 66 movl 0   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 28   
12 [0xc]: line: 67 movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          pushobj   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          sizeof ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          movi #128, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          add ecx, ebx -> ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          call @1729 // <std.io#__srt_global.realloc>   
27 [0x1b]:          jmp @55   
28 [0x1c]: line: 69 movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          sizeof ebx   
36 [0x24]:          rstore ebx   
37 [0x25]:          movl 0   
38 [0x26]:          movn #1   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #4, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          shr ecx, ebx -> ebx   
46 [0x2e]:          loadval ecx   
47 [0x2f]:          add ecx, ebx -> ebx   
48 [0x30]:          rstore ebx   
49 [0x31]:          movi #128, ebx   
51 [0x33]:          loadval ecx   
52 [0x34]:          add ecx, ebx -> ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @1729 // <std.io#__srt_global.realloc>   
55 [0x37]:          nop   
56 [0x38]:          ret   


function: std#synced_list<std.io.task#job>.clear[3184] params(0) in file: lib\support\0.2.805/synced_list.sharp:72:8: note:  
		    def clear() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 73 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 74 movi #10, ebx   
8 [0x8]:          new_classarray ebx  // std.io.task#job[]   
9 [0x9]:          movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          popobj   
13 [0xd]: line: 75 movi #0, ebx   
15 [0xf]:          movl 0   
16 [0x10]:          movn #0   
18 [0x12]:          movi #0, adx   
20 [0x14]:          rmov adx, ebx   
21 [0x15]:          movl 0   
22 [0x16]:          _ulck   
23 [0x17]:          ret   


constructor: std#list<std.io.task#job>.list[3185] params(0) in file: lib\support\0.2.805/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 14 movi #10, ebx   
7 [0x7]:          new_classarray ebx  // std.io.task#job[]   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          popobj   
12 [0xc]:          ret   


constructor: std#list<std.io.task#job>.list[3186] params(1) in file: lib\support\0.2.805/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 18 loadl ebx, fp+1   
6 [0x6]:          new_classarray ebx  // std.io.task#job[]   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: std#list<std.io.task#job>.list[3187] params(1) in file: lib\support\0.2.805/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 22 pushl 0   
6 [0x6]:          pushl 1   
7 [0x7]:          call @3198 // <std#list<std.io.task#job>.add_all>   
8 [0x8]:          ret   


function: std#list<std.io.task#job>.empty[3188] params(0) in file: lib\support\0.2.805/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std.io.task#job>.set_compact[3189] params(1) in file: lib\support\0.2.805/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 28 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #2   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


function: std#list<std.io.task#job>.get_elements[3190] params(0) in file: lib\support\0.2.805/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 32 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 21   
16 [0x10]:          pushnull    
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   
20 [0x14]:          jmp @38   
21 [0x15]: line: 33 movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          istore 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @1749 // <std.io#__srt_global.copy>   
35 [0x23]:          popobj2    
36 [0x24]:          returnobj   
37 [0x25]:          ret   
38 [0x26]:          nop   


overload function: std#list<std.io.task#job>.operator[[3191] params(1) in file: lib\support\0.2.805/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 37 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 38 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3209 // <std#list<std.io.task#job>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 39 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std#list<std.io.task#job>.at[3192] params(1) in file: lib\support\0.2.805/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 43 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 44 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3209 // <std#list<std.io.task#job>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 45 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std#list<std.io.task#job>.last[3193] params(0) in file: lib\support\0.2.805/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 49 pushl 0   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movi #1, ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          sub ecx, ebx -> ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @3192 // <std#list<std.io.task#job>.at>   
18 [0x12]:          popobj2    
19 [0x13]:          returnobj   
20 [0x14]:          ret   


function: std#list<std.io.task#job>.put[3194] params(2) in file: lib\support\0.2.805/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 53 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 54 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3209 // <std#list<std.io.task#job>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 56 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          smovr_3 fp+3   
40 [0x28]: line: 57 pushl 2   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #1   
44 [0x2c]:          pushobj   
45 [0x2d]:          loadl ebx, fp+1   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          popobj   
51 [0x33]: line: 58 movl 3   
52 [0x34]:          returnobj   
53 [0x35]:          ret   


function: std#list<std.io.task#job>.expand[3195] params(0) in file: lib\support\0.2.805/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 62 movl 0   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 28   
12 [0xc]: line: 63 movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          pushobj   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          sizeof ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          movi #128, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          add ecx, ebx -> ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          call @1729 // <std.io#__srt_global.realloc>   
27 [0x1b]:          jmp @55   
28 [0x1c]: line: 65 movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          sizeof ebx   
36 [0x24]:          rstore ebx   
37 [0x25]:          movl 0   
38 [0x26]:          movn #1   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #4, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          shr ecx, ebx -> ebx   
46 [0x2e]:          loadval ecx   
47 [0x2f]:          add ecx, ebx -> ebx   
48 [0x30]:          rstore ebx   
49 [0x31]:          movi #128, ebx   
51 [0x33]:          loadval ecx   
52 [0x34]:          add ecx, ebx -> ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @1729 // <std.io#__srt_global.realloc>   
55 [0x37]:          nop   
56 [0x38]:          ret   


function: std#list<std.io.task#job>.clear[3196] params(0) in file: lib\support\0.2.805/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 69 movi #10, ebx   
6 [0x6]:          new_classarray ebx  // std.io.task#job[]   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]: line: 70 movi #0, ebx   
13 [0xd]:          movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]:          ret   


function: std#list<std.io.task#job>.add_all[3197] params(1) in file: lib\support\0.2.805/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 74 movl 1   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          istore 0   
10 [0xa]:          movl 1   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @1749 // <std.io#__srt_global.copy>   
18 [0x12]:          popobj2    
19 [0x13]:          movi #22, cmt   
21 [0x15]:          cast cmt   
22 [0x16]:          pushobj   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          popobj   
27 [0x1b]: line: 75 movl 1   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          ret   


function: std#list<std.io.task#job>.add_all[3198] params(1) in file: lib\support\0.2.805/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 79 movl 1   
5 [0x5]:          checknull   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 34   
9 [0x9]: line: 80 pushl 1   
10 [0xa]:          istore 0   
12 [0xc]:          movl 1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @1749 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #22, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 81 movl 1   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]:          jmp @49   
34 [0x22]: line: 83 movi #0, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #0   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 84 movi #10, ebx   
44 [0x2c]:          new_classarray ebx  // std.io.task#job[]   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #1   
48 [0x30]:          popobj   
49 [0x31]:          nop   
50 [0x32]:          ret   


function: std#list<std.io.task#job>.add[3199] params(1) in file: lib\support\0.2.805/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 89 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          sizeof ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          gte ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 22   
20 [0x14]: line: 90 pushl 0   
21 [0x15]:          call @3195 // <std#list<std.io.task#job>.expand>   
22 [0x16]:          nop   
23 [0x17]: line: 91 pushl 1   
24 [0x18]:          movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          inc ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]:          ret   


function: std#list<std.io.task#job>.indexof[3200] params(1) in file: lib\support\0.2.805/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 95 istorel 0, fp+2   
6 [0x6]:          ipushl #2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 39   
18 [0x12]: line: 96 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          pushobj   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          popobj2    
25 [0x19]:          movr adx, ebx   
26 [0x1a]:          chklen adx   
27 [0x1b]:          movnd adx   
28 [0x1c]:          pushobj   
29 [0x1d]:          itest ebx   
30 [0x1e]:          movr cmt, ebx   
31 [0x1f]:          jne 35   
32 [0x20]: line: 97 loadl ebx, fp+2   
33 [0x21]:          return_val ebx   
34 [0x22]:          ret   
35 [0x23]:          nop   
36 [0x24]:          iaddl 1, fp@2   
38 [0x26]:          jmp @6   
39 [0x27]: line: 101 istorel -1, fp+0   
41 [0x29]:           ret   


function: std#list<std.io.task#job>.pop_back[3201] params(0) in file: lib\support\0.2.805/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 105 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 106 movl 1   
19 [0x13]:           del   
20 [0x14]: line: 107 pushl 1   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #0   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           movr egx, ebx   
32 [0x20]:           dec ebx   
33 [0x21]:           movi #0, adx   
35 [0x23]:           rmov adx, ebx   
36 [0x24]:           movr ebx, egx   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]:           nop   
43 [0x2b]:           ret   


function: std#list<std.io.task#job>.size[3202] params(0) in file: lib\support\0.2.805/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<std.io.task#job>.insert[3203] params(2) in file: lib\support\0.2.805/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 114 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 20   
15 [0xf]:           loadl ecx, fp+1   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 29   
22 [0x16]: line: 115 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @3209 // <std#list<std.io.task#job>.out_of_bounds_msg>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           throw    
29 [0x1d]:           nop   
30 [0x1e]: line: 117 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #0, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           test ecx, ebx   
41 [0x29]:           jne 46   
42 [0x2a]: line: 118 pushl 0   
43 [0x2b]:           pushl 2   
44 [0x2c]:           call @3199 // <std#list<std.io.task#job>.add>   
45 [0x2d]:           jmp @135   
46 [0x2e]: line: 120 movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           rstore ebx   
53 [0x35]:           movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           sizeof ebx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           gte ecx, ebx   
59 [0x3b]:           movr ebx, cmt   
60 [0x3c]:           movr cmt, ebx   
61 [0x3d]:           jne 64   
62 [0x3e]: line: 121 pushl 0   
63 [0x3f]:           call @3195 // <std#list<std.io.task#job>.expand>   
64 [0x40]:           nop   
65 [0x41]: line: 122 movl 0   
66 [0x42]:           movn #0   
68 [0x44]:           movi #0, adx   
70 [0x46]:           iaload ebx, adx   
71 [0x47]:           movr egx, ebx   
72 [0x48]:           inc ebx   
73 [0x49]:           movi #0, adx   
75 [0x4b]:           rmov adx, ebx   
76 [0x4c]: line: 123 movl 0   
77 [0x4d]:           movn #0   
79 [0x4f]:           movi #0, adx   
81 [0x51]:           iaload ebx, adx   
82 [0x52]:           rstore ebx   
83 [0x53]:           movi #1, ebx   
85 [0x55]:           loadval ecx   
86 [0x56]:           sub ecx, ebx -> ebx   
87 [0x57]:           smovr_2 ebx, fp+3   
88 [0x58]:           ipushl #3   
89 [0x59]:           loadl ebx, fp+1   
90 [0x5a]:           loadval ecx   
91 [0x5b]:           gt ecx, ebx   
92 [0x5c]:           movr ebx, cmt   
93 [0x5d]:           movr cmt, ebx   
94 [0x5e]:           jne 124   
95 [0x5f]: line: 124 movl 0   
96 [0x60]:           movn #1   
98 [0x62]:           pushobj   
99 [0x63]:           ipushl #3   
100 [0x64]:           movi #1, ebx   
102 [0x66]:           loadval ecx   
103 [0x67]:           sub ecx, ebx -> ebx   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           pushobj   
109 [0x6d]:           movl 0   
110 [0x6e]:           movn #1   
112 [0x70]:           pushobj   
113 [0x71]:           loadl ebx, fp+3   
114 [0x72]:           popobj2    
115 [0x73]:           movr adx, ebx   
116 [0x74]:           chklen adx   
117 [0x75]:           movnd adx   
118 [0x76]:           popobj   
119 [0x77]:           loadl ebx, fp+3   
120 [0x78]:           movr egx, ebx   
121 [0x79]:           dec ebx   
122 [0x7a]:           smovr_2 ebx, fp+3   
123 [0x7b]:           jmp @88   
124 [0x7c]: line: 125 pushl 2   
125 [0x7d]:           movl 0   
126 [0x7e]:           movn #1   
128 [0x80]:           pushobj   
129 [0x81]:           loadl ebx, fp+1   
130 [0x82]:           popobj2    
131 [0x83]:           movr adx, ebx   
132 [0x84]:           chklen adx   
133 [0x85]:           movnd adx   
134 [0x86]:           popobj   
135 [0x87]:           nop   
136 [0x88]:           ret   


function: std#list<std.io.task#job>.remove[3204] params(1) in file: lib\support\0.2.805/list.sharp:130:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 131 istorel 0, fp+2   
6 [0x6]:           ipushl #2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 40   
18 [0x12]: line: 132 pushl 1   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           itest ebx   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 133 pushl 0   
33 [0x21]:           ipushl #2   
34 [0x22]:           call @3206 // <std#list<std.io.task#job>.remove_at>   
35 [0x23]: line: 134 ret   
36 [0x24]:           nop   
37 [0x25]:           iaddl 1, fp@2   
39 [0x27]:           jmp @6   
40 [0x28]:           ret   


function: std#list<std.io.task#job>.remove[3205] params(2) in file: lib\support\0.2.805/list.sharp:139:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 140 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 43   
18 [0x12]: line: 141 ipushl #2   
19 [0x13]:           pushl 1   
20 [0x14]:           movl 0   
21 [0x15]:           movn #1   
23 [0x17]:           pushobj   
24 [0x18]:           loadl ebx, fp+3   
25 [0x19]:           popobj2    
26 [0x1a]:           movr adx, ebx   
27 [0x1b]:           chklen adx   
28 [0x1c]:           movnd adx   
29 [0x1d]:           pushobj   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 39   
35 [0x23]: line: 142 pushl 0   
36 [0x24]:           ipushl #3   
37 [0x25]:           call @3206 // <std#list<std.io.task#job>.remove_at>   
38 [0x26]: line: 143 ret   
39 [0x27]:           nop   
40 [0x28]:           iaddl 1, fp@3   
42 [0x2a]:           jmp @6   
43 [0x2b]:           ret   


function: std#list<std.io.task#job>.remove_at[3206] params(1) in file: lib\support\0.2.805/list.sharp:148:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 149 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gte ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 20   
15 [0xf]:           loadl ecx, fp+1   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 29   
22 [0x16]: line: 150 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @3209 // <std#list<std.io.task#job>.out_of_bounds_msg>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           throw    
29 [0x1d]:           nop   
30 [0x1e]: line: 152 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           loadl ebx, fp+1   
38 [0x26]:           loadval ecx   
39 [0x27]:           sub ecx, ebx -> ebx   
40 [0x28]:           rstore ebx   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           sub ecx, ebx -> ebx   
45 [0x2d]:           smovr_2 ebx, fp+2   
46 [0x2e]: line: 153 ipushl #2   
47 [0x2f]:           movi #0, ebx   
49 [0x31]:           loadval ecx   
50 [0x32]:           gt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 77   
54 [0x36]: line: 154 movl 0   
55 [0x37]:           movn #1   
57 [0x39]:           pushobj   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           ipushl #1   
64 [0x40]:           movi #1, ebx   
66 [0x42]:           loadval ecx   
67 [0x43]:           add ecx, ebx -> ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movl 0   
70 [0x46]:           movn #0   
72 [0x48]:           movi #0, adx   
74 [0x4a]:           iaload ebx, adx   
75 [0x4b]:           rstore ebx   
76 [0x4c]:           call @1739 // <std.io#__srt_global.memcopy>   
77 [0x4d]:           nop   
78 [0x4e]: line: 156 pushl 0   
79 [0x4f]:           call @3201 // <std#list<std.io.task#job>.pop_back>   
80 [0x50]:           ret   


function: std#list<std.io.task#job>.indexof[3207] params(2) in file: lib\support\0.2.805/list.sharp:159:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 160 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 161 ipushl #2   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           pushl 1   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 38   
35 [0x23]: line: 162 loadl ebx, fp+3   
36 [0x24]:           return_val ebx   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @6   
42 [0x2a]: line: 166 istorel -1, fp+0   
44 [0x2c]:           ret   


function: std#list<std.io.task#job>.to_string[3208] params(0) in file: lib\support\0.2.805/list.sharp:169:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 170 new_class @65 // std#string_builder   
5 [0x5]:           dup    
6 [0x6]:           call @3018 // <std#string_builder.string_builder>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 172 pushl 1   
10 [0xa]:           newstr @107 // [    
11 [0xb]:           call @3014 // <std#string_builder.operator+=>   
12 [0xc]:           pop   
13 [0xd]: line: 173 istorel 0, fp+2   
15 [0xf]:           ipushl #2   
16 [0x10]:           movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           movi #0, adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           loadval ecx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 65   
27 [0x1b]: line: 174 pushl 1   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #1   
31 [0x1f]:           pushobj   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           pushobj   
38 [0x26]:           call @3010 // <std#string_builder.operator+=>   
39 [0x27]:           pop   
40 [0x28]: line: 176 ipushl #2   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           add ecx, ebx -> ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           loadval ecx   
53 [0x35]:           lt ecx, ebx   
54 [0x36]:           movr ebx, cmt   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 61   
57 [0x39]: line: 177 pushl 1   
58 [0x3a]:           newstr @108 // ,    
59 [0x3b]:           call @3014 // <std#string_builder.operator+=>   
60 [0x3c]:           pop   
61 [0x3d]:           nop   
62 [0x3e]:           iaddl 1, fp@2   
64 [0x40]:           jmp @15   
65 [0x41]: line: 181 pushl 1   
66 [0x42]:           newstr @109 //  ]   
67 [0x43]:           call @3014 // <std#string_builder.operator+=>   
68 [0x44]:           pop   
69 [0x45]: line: 182 pushl 1   
70 [0x46]:           call @2991 // <std#string_builder.to_string>   
71 [0x47]:           popobj2    
72 [0x48]:           returnobj   
73 [0x49]:           ret   


function: std#list<std.io.task#job>.out_of_bounds_msg[3209] params(1) in file: lib\support\0.2.805/list.sharp:185:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #113, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 186 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @110 // Index:    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @2955 // <std#string.operator+>   
10 [0xa]:           newstr @111 // , size:    
11 [0xb]:           call @2935 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @2955 // <std#string.operator+>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


function: std#synced_list<std.io.task#job>.add_all[3210] params(1) in file: lib\support\0.2.805/synced_list.sharp:79:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 80 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 81 movl 1   
7 [0x7]:          movn #1   
9 [0x9]:          pushobj   
10 [0xa]:          istore 0   
12 [0xc]:          movl 1   
13 [0xd]:          movn #0   
15 [0xf]:          movi #0, adx   
17 [0x11]:          iaload ebx, adx   
18 [0x12]:          rstore ebx   
19 [0x13]:          call @1749 // <std.io#__srt_global.copy>   
20 [0x14]:          popobj2    
21 [0x15]:          movi #22, cmt   
23 [0x17]:          cast cmt   
24 [0x18]:          pushobj   
25 [0x19]:          movl 0   
26 [0x1a]:          movn #1   
28 [0x1c]:          popobj   
29 [0x1d]: line: 82 movl 1   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #0   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          _ulck   
43 [0x2b]:          ret   


function: std#synced_list<std.io.task#job>.add[3211] params(1) in file: lib\support\0.2.805/synced_list.sharp:86:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 87 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 88 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          sizeof ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          gte ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 24   
22 [0x16]: line: 89 pushl 0   
23 [0x17]:          call @3183 // <std#synced_list<std.io.task#job>.expand>   
24 [0x18]:          nop   
25 [0x19]: line: 90 pushl 1   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          pushobj   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          movi #0, adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          movr egx, ebx   
37 [0x25]:          inc ebx   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]:          movr ebx, egx   
42 [0x2a]:          popobj2    
43 [0x2b]:          movr adx, ebx   
44 [0x2c]:          chklen adx   
45 [0x2d]:          movnd adx   
46 [0x2e]:          popobj   
47 [0x2f]:          movl 0   
48 [0x30]:          _ulck   
49 [0x31]:          ret   


function: std#synced_list<std.io.task#job>.indexof[3212] params(1) in file: lib\support\0.2.805/synced_list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 95 movl 0   
5 [0x5]:          _lck    
6 [0x6]: line: 96 istorel 0, fp+2   
8 [0x8]:          ipushl #2   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 43   
20 [0x14]: line: 97 pushl 1   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          loadl ebx, fp+2   
26 [0x1a]:          popobj2    
27 [0x1b]:          movr adx, ebx   
28 [0x1c]:          chklen adx   
29 [0x1d]:          movnd adx   
30 [0x1e]:          pushobj   
31 [0x1f]:          itest ebx   
32 [0x20]:          movr cmt, ebx   
33 [0x21]:          jne 39   
34 [0x22]: line: 98 movl 0   
35 [0x23]:          _ulck   
36 [0x24]:          loadl ebx, fp+2   
37 [0x25]:          return_val ebx   
38 [0x26]:          ret   
39 [0x27]:          nop   
40 [0x28]:          iaddl 1, fp@2   
42 [0x2a]:          jmp @8   
43 [0x2b]: line: 102 movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           istorel -1, fp+0   
47 [0x2f]:           ret   
48 [0x30]:           movl 0   
49 [0x31]:           _ulck   


function: std#synced_list<std.io.task#job>.pop_back[3213] params(0) in file: lib\support\0.2.805/synced_list.sharp:106:8: note:  
		    def pop_back() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 107 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 108 movl 1   
19 [0x13]:           del   
20 [0x14]: line: 109 pushl 1   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #0   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           movr egx, ebx   
32 [0x20]:           dec ebx   
33 [0x21]:           movi #0, adx   
35 [0x23]:           rmov adx, ebx   
36 [0x24]:           movr ebx, egx   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]:           nop   
43 [0x2b]:           ret   


function: std#synced_list<std.io.task#job>.size[3214] params(0) in file: lib\support\0.2.805/synced_list.sharp:113:8: note:  
		    def size() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 114 movl 0   
5 [0x5]:           _lck    
6 [0x6]: line: 115 movl 0   
7 [0x7]:           _ulck   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   
16 [0x10]:           movl 0   
17 [0x11]:           _ulck   


function: std#synced_list<std.io.task#job>.empty[3215] params(0) in file: lib\support\0.2.805/synced_list.sharp:119:8: note:  
		    def empty() : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 120 movl 0   
5 [0x5]:           _lck    
6 [0x6]: line: 121 movl 0   
7 [0x7]:           _ulck   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           test ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   
21 [0x15]:           movl 0   
22 [0x16]:           _ulck   


function: std#synced_list<std.io.task#job>.insert[3216] params(2) in file: lib\support\0.2.805/synced_list.sharp:125:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 126 movl 0   
5 [0x5]:           _lck    
6 [0x6]: line: 127 ipushl #1   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           skpe ebx // pc = 22   
17 [0x11]:           loadl ecx, fp+1   
18 [0x12]:           movi #0, ebx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 31   
24 [0x18]: line: 128 new_class @6 // std#out_of_bounds_exception   
25 [0x19]:           dup    
26 [0x1a]:           pushl 0   
27 [0x1b]:           ipushl #1   
28 [0x1c]:           call @3222 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
29 [0x1d]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 130 movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           movi #0, adx   
37 [0x25]:           iaload ebx, adx   
38 [0x26]:           rstore ebx   
39 [0x27]:           movi #0, ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           test ecx, ebx   
43 [0x2b]:           jne 48   
44 [0x2c]: line: 131 pushl 0   
45 [0x2d]:           pushl 2   
46 [0x2e]:           call @3211 // <std#synced_list<std.io.task#job>.add>   
47 [0x2f]:           jmp @137   
48 [0x30]: line: 133 movl 0   
49 [0x31]:           movn #0   
51 [0x33]:           movi #0, adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           rstore ebx   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           sizeof ebx   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           gte ecx, ebx   
61 [0x3d]:           movr ebx, cmt   
62 [0x3e]:           movr cmt, ebx   
63 [0x3f]:           jne 66   
64 [0x40]: line: 134 pushl 0   
65 [0x41]:           call @3183 // <std#synced_list<std.io.task#job>.expand>   
66 [0x42]:           nop   
67 [0x43]: line: 135 movl 0   
68 [0x44]:           movn #0   
70 [0x46]:           movi #0, adx   
72 [0x48]:           iaload ebx, adx   
73 [0x49]:           movr egx, ebx   
74 [0x4a]:           inc ebx   
75 [0x4b]:           movi #0, adx   
77 [0x4d]:           rmov adx, ebx   
78 [0x4e]: line: 136 movl 0   
79 [0x4f]:           movn #0   
81 [0x51]:           movi #0, adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           rstore ebx   
85 [0x55]:           movi #1, ebx   
87 [0x57]:           loadval ecx   
88 [0x58]:           sub ecx, ebx -> ebx   
89 [0x59]:           smovr_2 ebx, fp+3   
90 [0x5a]:           ipushl #3   
91 [0x5b]:           loadl ebx, fp+1   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           gt ecx, ebx   
94 [0x5e]:           movr ebx, cmt   
95 [0x5f]:           movr cmt, ebx   
96 [0x60]:           jne 126   
97 [0x61]: line: 137 movl 0   
98 [0x62]:           movn #1   
100 [0x64]:           pushobj   
101 [0x65]:           ipushl #3   
102 [0x66]:           movi #1, ebx   
104 [0x68]:           loadval ecx   
105 [0x69]:           sub ecx, ebx -> ebx   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           movnd adx   
110 [0x6e]:           pushobj   
111 [0x6f]:           movl 0   
112 [0x70]:           movn #1   
114 [0x72]:           pushobj   
115 [0x73]:           loadl ebx, fp+3   
116 [0x74]:           popobj2    
117 [0x75]:           movr adx, ebx   
118 [0x76]:           chklen adx   
119 [0x77]:           movnd adx   
120 [0x78]:           popobj   
121 [0x79]:           loadl ebx, fp+3   
122 [0x7a]:           movr egx, ebx   
123 [0x7b]:           dec ebx   
124 [0x7c]:           smovr_2 ebx, fp+3   
125 [0x7d]:           jmp @90   
126 [0x7e]: line: 138 pushl 2   
127 [0x7f]:           movl 0   
128 [0x80]:           movn #1   
130 [0x82]:           pushobj   
131 [0x83]:           loadl ebx, fp+1   
132 [0x84]:           popobj2    
133 [0x85]:           movr adx, ebx   
134 [0x86]:           chklen adx   
135 [0x87]:           movnd adx   
136 [0x88]:           popobj   
137 [0x89]:           nop   
138 [0x8a]:           movl 0   
139 [0x8b]:           _ulck   
140 [0x8c]:           ret   


function: std#synced_list<std.io.task#job>.remove[3217] params(1) in file: lib\support\0.2.805/synced_list.sharp:144:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 145 movl 0   
5 [0x5]:           _lck    
6 [0x6]: line: 146 istorel 0, fp+2   
8 [0x8]:           ipushl #2   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 44   
20 [0x14]: line: 147 pushl 1   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           loadl ebx, fp+2   
26 [0x1a]:           popobj2    
27 [0x1b]:           movr adx, ebx   
28 [0x1c]:           chklen adx   
29 [0x1d]:           movnd adx   
30 [0x1e]:           pushobj   
31 [0x1f]:           itest ebx   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 40   
34 [0x22]: line: 148 pushl 0   
35 [0x23]:           ipushl #2   
36 [0x24]:           call @3219 // <std#synced_list<std.io.task#job>.remove_at>   
37 [0x25]: line: 149 movl 0   
38 [0x26]:           _ulck   
39 [0x27]:           ret   
40 [0x28]:           nop   
41 [0x29]:           iaddl 1, fp@2   
43 [0x2b]:           jmp @8   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   
46 [0x2e]:           ret   


function: std#synced_list<std.io.task#job>.remove[3218] params(2) in file: lib\support\0.2.805/synced_list.sharp:155:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 156 movl 0   
5 [0x5]:           _lck    
6 [0x6]: line: 157 istorel 0, fp+3   
8 [0x8]:           ipushl #3   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 47   
20 [0x14]: line: 158 ipushl #2   
21 [0x15]:           pushl 1   
22 [0x16]:           movl 0   
23 [0x17]:           movn #1   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+3   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           pushobj   
32 [0x20]:           smov ebx, sp+[-2]   
33 [0x21]:           calld ebx   
34 [0x22]:           loadval ebx   
35 [0x23]:           movr cmt, ebx   
36 [0x24]:           jne 43   
37 [0x25]: line: 159 pushl 0   
38 [0x26]:           ipushl #3   
39 [0x27]:           call @3219 // <std#synced_list<std.io.task#job>.remove_at>   
40 [0x28]: line: 160 movl 0   
41 [0x29]:           _ulck   
42 [0x2a]:           ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @8   
47 [0x2f]:           movl 0   
48 [0x30]:           _ulck   
49 [0x31]:           ret   


function: std#synced_list<std.io.task#job>.remove_at[3219] params(1) in file: lib\support\0.2.805/synced_list.sharp:166:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 167 movl 0   
5 [0x5]:           _lck    
6 [0x6]: line: 168 ipushl #1   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           skpe ebx // pc = 22   
17 [0x11]:           loadl ecx, fp+1   
18 [0x12]:           movi #0, ebx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 31   
24 [0x18]: line: 169 new_class @6 // std#out_of_bounds_exception   
25 [0x19]:           dup    
26 [0x1a]:           pushl 0   
27 [0x1b]:           ipushl #1   
28 [0x1c]:           call @3222 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
29 [0x1d]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]: line: 171 movl 0   
33 [0x21]:           movn #0   
35 [0x23]:           movi #0, adx   
37 [0x25]:           iaload ebx, adx   
38 [0x26]:           rstore ebx   
39 [0x27]:           loadl ebx, fp+1   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movi #1, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           sub ecx, ebx -> ebx   
47 [0x2f]:           smovr_2 ebx, fp+2   
48 [0x30]: line: 172 ipushl #2   
49 [0x31]:           movi #0, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           gt ecx, ebx   
53 [0x35]:           movr ebx, cmt   
54 [0x36]:           movr cmt, ebx   
55 [0x37]:           jne 79   
56 [0x38]: line: 173 movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           movl 0   
61 [0x3d]:           movn #1   
63 [0x3f]:           pushobj   
64 [0x40]:           ipushl #1   
65 [0x41]:           ipushl #1   
66 [0x42]:           movi #1, ebx   
68 [0x44]:           loadval ecx   
69 [0x45]:           add ecx, ebx -> ebx   
70 [0x46]:           rstore ebx   
71 [0x47]:           movl 0   
72 [0x48]:           movn #0   
74 [0x4a]:           movi #0, adx   
76 [0x4c]:           iaload ebx, adx   
77 [0x4d]:           rstore ebx   
78 [0x4e]:           call @1739 // <std.io#__srt_global.memcopy>   
79 [0x4f]:           nop   
80 [0x50]: line: 175 pushl 0   
81 [0x51]:           call @3213 // <std#synced_list<std.io.task#job>.pop_back>   
82 [0x52]:           movl 0   
83 [0x53]:           _ulck   
84 [0x54]:           ret   


function: std#synced_list<std.io.task#job>.indexof[3220] params(2) in file: lib\support\0.2.805/synced_list.sharp:179:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 180 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 181 ipushl #2   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           pushl 1   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 38   
35 [0x23]: line: 182 loadl ebx, fp+3   
36 [0x24]:           return_val ebx   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @6   
42 [0x2a]: line: 186 istorel -1, fp+0   
44 [0x2c]:           ret   


function: std#synced_list<std.io.task#job>.to_string[3221] params(0) in file: lib\support\0.2.805/synced_list.sharp:189:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 190 movl 0   
5 [0x5]:           _lck    
6 [0x6]: line: 191 new_class @65 // std#string_builder   
7 [0x7]:           dup    
8 [0x8]:           call @3018 // <std#string_builder.string_builder>   
9 [0x9]:           popobj2    
10 [0xa]:           smovr_3 fp+1   
11 [0xb]: line: 193 pushl 1   
12 [0xc]:           newstr @107 // [    
13 [0xd]:           call @3014 // <std#string_builder.operator+=>   
14 [0xe]:           pop   
15 [0xf]: line: 194 istorel 0, fp+2   
17 [0x11]:           ipushl #2   
18 [0x12]:           movl 0   
19 [0x13]:           movn #0   
21 [0x15]:           movi #0, adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           loadval ecx   
25 [0x19]:           lt ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 67   
29 [0x1d]: line: 195 pushl 1   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #1   
33 [0x21]:           pushobj   
34 [0x22]:           loadl ebx, fp+2   
35 [0x23]:           popobj2    
36 [0x24]:           movr adx, ebx   
37 [0x25]:           chklen adx   
38 [0x26]:           movnd adx   
39 [0x27]:           pushobj   
40 [0x28]:           call @3010 // <std#string_builder.operator+=>   
41 [0x29]:           pop   
42 [0x2a]: line: 197 ipushl #2   
43 [0x2b]:           movi #1, ebx   
45 [0x2d]:           loadval ecx   
46 [0x2e]:           add ecx, ebx -> ebx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movl 0   
49 [0x31]:           movn #0   
51 [0x33]:           movi #0, adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           loadval ecx   
55 [0x37]:           lt ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 63   
59 [0x3b]: line: 198 pushl 1   
60 [0x3c]:           newstr @108 // ,    
61 [0x3d]:           call @3014 // <std#string_builder.operator+=>   
62 [0x3e]:           pop   
63 [0x3f]:           nop   
64 [0x40]:           iaddl 1, fp@2   
66 [0x42]:           jmp @17   
67 [0x43]: line: 202 pushl 1   
68 [0x44]:           newstr @109 //  ]   
69 [0x45]:           call @3014 // <std#string_builder.operator+=>   
70 [0x46]:           pop   
71 [0x47]: line: 203 movl 0   
72 [0x48]:           _ulck   
73 [0x49]:           pushl 1   
74 [0x4a]:           call @2991 // <std#string_builder.to_string>   
75 [0x4b]:           popobj2    
76 [0x4c]:           returnobj   
77 [0x4d]:           ret   
78 [0x4e]:           movl 0   
79 [0x4f]:           _ulck   


function: std#synced_list<std.io.task#job>.out_of_bounds_msg[3222] params(1) in file: lib\support\0.2.805/synced_list.sharp:207:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #111, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 208 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @110 // Index:    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @2955 // <std#string.operator+>   
10 [0xa]:           newstr @111 // , size:    
11 [0xb]:           call @2935 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @2955 // <std#string.operator+>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


std#loopable<var>.get_elements[3223] params(0) in file: lib\support\0.2.805/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<var>.loopable[3224] params(0) in file: lib\support\0.2.805/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#list<var>.list[3225] params(0) in file: lib\support\0.2.805/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 14 movi #10, ebx   
7 [0x7]:          newarry ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          popobj   
12 [0xc]:          ret   


constructor: std#list<var>.list[3226] params(1) in file: lib\support\0.2.805/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 18 loadl ebx, fp+1   
6 [0x6]:          newarry ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: std#list<var>.list[3227] params(1) in file: lib\support\0.2.805/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 22 pushl 0   
6 [0x6]:          pushl 1   
7 [0x7]:          call @3238 // <std#list<var>.add_all>   
8 [0x8]:          ret   


function: std#list<var>.empty[3228] params(0) in file: lib\support\0.2.805/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<var>.set_compact[3229] params(1) in file: lib\support\0.2.805/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 28 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #2   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


function: std#list<var>.get_elements[3230] params(0) in file: lib\support\0.2.805/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 32 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 21   
16 [0x10]:          pushnull    
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   
20 [0x14]:          jmp @38   
21 [0x15]: line: 33 movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          istore 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @1750 // <std.io#__srt_global.copy>   
35 [0x23]:          popobj2    
36 [0x24]:          returnobj   
37 [0x25]:          ret   
38 [0x26]:          nop   


overload function: std#list<var>.operator[[3231] params(1) in file: lib\support\0.2.805/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 37 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 38 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3249 // <std#list<var>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 39 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          iaload ebx, adx   
39 [0x27]:          return_val ebx   
40 [0x28]:          ret   


function: std#list<var>.at[3232] params(1) in file: lib\support\0.2.805/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 43 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 44 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3249 // <std#list<var>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 45 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          iaload ebx, adx   
39 [0x27]:          return_val ebx   
40 [0x28]:          ret   


function: std#list<var>.last[3233] params(0) in file: lib\support\0.2.805/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 49 pushl 0   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movi #1, ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          sub ecx, ebx -> ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @3232 // <std#list<var>.at>   
18 [0x12]:          loadval ebx   
19 [0x13]:          return_val ebx   
20 [0x14]:          ret   


function: std#list<var>.put[3234] params(2) in file: lib\support\0.2.805/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 53 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 54 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3249 // <std#list<var>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 56 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          iaload ebx, adx   
39 [0x27]:          smovr_2 ebx, fp+3   
40 [0x28]: line: 57 ipushl #2   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #1   
44 [0x2c]:          pushobj   
45 [0x2d]:          loadl ebx, fp+1   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          loadval ebx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 58 loadl ebx, fp+3   
52 [0x34]:          return_val ebx   
53 [0x35]:          ret   


function: std#list<var>.expand[3235] params(0) in file: lib\support\0.2.805/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 62 movl 0   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 28   
12 [0xc]: line: 63 movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          pushobj   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          sizeof ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          movi #128, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          add ecx, ebx -> ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          call @1730 // <std.io#__srt_global.realloc>   
27 [0x1b]:          jmp @55   
28 [0x1c]: line: 65 movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          sizeof ebx   
36 [0x24]:          rstore ebx   
37 [0x25]:          movl 0   
38 [0x26]:          movn #1   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #4, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          shr ecx, ebx -> ebx   
46 [0x2e]:          loadval ecx   
47 [0x2f]:          add ecx, ebx -> ebx   
48 [0x30]:          rstore ebx   
49 [0x31]:          movi #128, ebx   
51 [0x33]:          loadval ecx   
52 [0x34]:          add ecx, ebx -> ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @1730 // <std.io#__srt_global.realloc>   
55 [0x37]:          nop   
56 [0x38]:          ret   


function: std#list<var>.clear[3236] params(0) in file: lib\support\0.2.805/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 69 movi #10, ebx   
6 [0x6]:          newarry ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]: line: 70 movi #0, ebx   
13 [0xd]:          movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]:          ret   


function: std#list<var>.add_all[3237] params(1) in file: lib\support\0.2.805/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 74 movl 1   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          istore 0   
10 [0xa]:          movl 1   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @1750 // <std.io#__srt_global.copy>   
18 [0x12]:          movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          popobj   
22 [0x16]: line: 75 movl 1   
23 [0x17]:          movn #0   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]:          ret   


function: std#list<var>.add_all[3238] params(1) in file: lib\support\0.2.805/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 79 movl 1   
5 [0x5]:          checknull   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 29   
9 [0x9]: line: 80 pushl 1   
10 [0xa]:          istore 0   
12 [0xc]:          movl 1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @1750 // <std.io#__srt_global.copy>   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          popobj   
20 [0x14]: line: 81 movl 1   
21 [0x15]:          sizeof ebx   
22 [0x16]:          movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          rmov adx, ebx   
28 [0x1c]:          jmp @44   
29 [0x1d]: line: 83 movi #0, ebx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]: line: 84 movi #10, ebx   
39 [0x27]:          newarry ebx   
40 [0x28]:          movl 0   
41 [0x29]:          movn #1   
43 [0x2b]:          popobj   
44 [0x2c]:          nop   
45 [0x2d]:          ret   


function: std#list<var>.add[3239] params(1) in file: lib\support\0.2.805/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 89 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          sizeof ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          gte ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 22   
20 [0x14]: line: 90 pushl 0   
21 [0x15]:          call @3235 // <std#list<var>.expand>   
22 [0x16]:          nop   
23 [0x17]: line: 91 ipushl #1   
24 [0x18]:          movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          inc ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]:          ret   


function: std#list<var>.indexof[3240] params(1) in file: lib\support\0.2.805/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 95 istorel 0, fp+2   
6 [0x6]:          ipushl #2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 38   
18 [0x12]: line: 96 ipushl #1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          pushobj   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          popobj2    
25 [0x19]:          movr adx, ebx   
26 [0x1a]:          chklen adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          test ecx, ebx   
30 [0x1e]:          jne 34   
31 [0x1f]: line: 97 loadl ebx, fp+2   
32 [0x20]:          return_val ebx   
33 [0x21]:          ret   
34 [0x22]:          nop   
35 [0x23]:          iaddl 1, fp@2   
37 [0x25]:          jmp @6   
38 [0x26]: line: 101 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<var>.pop_back[3241] params(0) in file: lib\support\0.2.805/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 105 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 106 istorel 0, fp+1   
20 [0x14]: line: 107 ipushl #1   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #0   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           movr egx, ebx   
32 [0x20]:           dec ebx   
33 [0x21]:           movi #0, adx   
35 [0x23]:           rmov adx, ebx   
36 [0x24]:           movr ebx, egx   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           loadval ebx   
41 [0x29]:           rmov adx, ebx   
42 [0x2a]:           nop   
43 [0x2b]:           ret   


function: std#list<var>.size[3242] params(0) in file: lib\support\0.2.805/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<var>.insert[3243] params(2) in file: lib\support\0.2.805/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 114 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 20   
15 [0xf]:           loadl ecx, fp+1   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 29   
22 [0x16]: line: 115 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @3249 // <std#list<var>.out_of_bounds_msg>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           throw    
29 [0x1d]:           nop   
30 [0x1e]: line: 117 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #0, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           test ecx, ebx   
41 [0x29]:           jne 46   
42 [0x2a]: line: 118 pushl 0   
43 [0x2b]:           ipushl #2   
44 [0x2c]:           call @3239 // <std#list<var>.add>   
45 [0x2d]:           jmp @135   
46 [0x2e]: line: 120 movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           rstore ebx   
53 [0x35]:           movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           sizeof ebx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           gte ecx, ebx   
59 [0x3b]:           movr ebx, cmt   
60 [0x3c]:           movr cmt, ebx   
61 [0x3d]:           jne 64   
62 [0x3e]: line: 121 pushl 0   
63 [0x3f]:           call @3235 // <std#list<var>.expand>   
64 [0x40]:           nop   
65 [0x41]: line: 122 movl 0   
66 [0x42]:           movn #0   
68 [0x44]:           movi #0, adx   
70 [0x46]:           iaload ebx, adx   
71 [0x47]:           movr egx, ebx   
72 [0x48]:           inc ebx   
73 [0x49]:           movi #0, adx   
75 [0x4b]:           rmov adx, ebx   
76 [0x4c]: line: 123 movl 0   
77 [0x4d]:           movn #0   
79 [0x4f]:           movi #0, adx   
81 [0x51]:           iaload ebx, adx   
82 [0x52]:           rstore ebx   
83 [0x53]:           movi #1, ebx   
85 [0x55]:           loadval ecx   
86 [0x56]:           sub ecx, ebx -> ebx   
87 [0x57]:           smovr_2 ebx, fp+3   
88 [0x58]:           ipushl #3   
89 [0x59]:           loadl ebx, fp+1   
90 [0x5a]:           loadval ecx   
91 [0x5b]:           gt ecx, ebx   
92 [0x5c]:           movr ebx, cmt   
93 [0x5d]:           movr cmt, ebx   
94 [0x5e]:           jne 124   
95 [0x5f]: line: 124 movl 0   
96 [0x60]:           movn #1   
98 [0x62]:           pushobj   
99 [0x63]:           ipushl #3   
100 [0x64]:           movi #1, ebx   
102 [0x66]:           loadval ecx   
103 [0x67]:           sub ecx, ebx -> ebx   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           iaload ebx, adx   
108 [0x6c]:           rstore ebx   
109 [0x6d]:           movl 0   
110 [0x6e]:           movn #1   
112 [0x70]:           pushobj   
113 [0x71]:           loadl ebx, fp+3   
114 [0x72]:           popobj2    
115 [0x73]:           movr adx, ebx   
116 [0x74]:           chklen adx   
117 [0x75]:           loadval ebx   
118 [0x76]:           rmov adx, ebx   
119 [0x77]:           loadl ebx, fp+3   
120 [0x78]:           movr egx, ebx   
121 [0x79]:           dec ebx   
122 [0x7a]:           smovr_2 ebx, fp+3   
123 [0x7b]:           jmp @88   
124 [0x7c]: line: 125 ipushl #2   
125 [0x7d]:           movl 0   
126 [0x7e]:           movn #1   
128 [0x80]:           pushobj   
129 [0x81]:           loadl ebx, fp+1   
130 [0x82]:           popobj2    
131 [0x83]:           movr adx, ebx   
132 [0x84]:           chklen adx   
133 [0x85]:           loadval ebx   
134 [0x86]:           rmov adx, ebx   
135 [0x87]:           nop   
136 [0x88]:           ret   


function: std#list<var>.remove[3244] params(1) in file: lib\support\0.2.805/list.sharp:130:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 131 istorel 0, fp+2   
6 [0x6]:           ipushl #2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 39   
18 [0x12]: line: 132 ipushl #1   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           iaload ebx, adx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           test ecx, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 133 pushl 0   
32 [0x20]:           ipushl #2   
33 [0x21]:           call @3246 // <std#list<var>.remove_at>   
34 [0x22]: line: 134 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@2   
38 [0x26]:           jmp @6   
39 [0x27]:           ret   


function: std#list<var>.remove[3245] params(2) in file: lib\support\0.2.805/list.sharp:139:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 140 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 43   
18 [0x12]: line: 141 ipushl #2   
19 [0x13]:           ipushl #1   
20 [0x14]:           movl 0   
21 [0x15]:           movn #1   
23 [0x17]:           pushobj   
24 [0x18]:           loadl ebx, fp+3   
25 [0x19]:           popobj2    
26 [0x1a]:           movr adx, ebx   
27 [0x1b]:           chklen adx   
28 [0x1c]:           iaload ebx, adx   
29 [0x1d]:           rstore ebx   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 39   
35 [0x23]: line: 142 pushl 0   
36 [0x24]:           ipushl #3   
37 [0x25]:           call @3246 // <std#list<var>.remove_at>   
38 [0x26]: line: 143 ret   
39 [0x27]:           nop   
40 [0x28]:           iaddl 1, fp@3   
42 [0x2a]:           jmp @6   
43 [0x2b]:           ret   


function: std#list<var>.remove_at[3246] params(1) in file: lib\support\0.2.805/list.sharp:148:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 149 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gte ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 20   
15 [0xf]:           loadl ecx, fp+1   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 29   
22 [0x16]: line: 150 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @3249 // <std#list<var>.out_of_bounds_msg>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           throw    
29 [0x1d]:           nop   
30 [0x1e]: line: 152 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           loadl ebx, fp+1   
38 [0x26]:           loadval ecx   
39 [0x27]:           sub ecx, ebx -> ebx   
40 [0x28]:           rstore ebx   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           sub ecx, ebx -> ebx   
45 [0x2d]:           smovr_2 ebx, fp+2   
46 [0x2e]: line: 153 ipushl #2   
47 [0x2f]:           movi #0, ebx   
49 [0x31]:           loadval ecx   
50 [0x32]:           gt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 77   
54 [0x36]: line: 154 movl 0   
55 [0x37]:           movn #1   
57 [0x39]:           pushobj   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           ipushl #1   
64 [0x40]:           movi #1, ebx   
66 [0x42]:           loadval ecx   
67 [0x43]:           add ecx, ebx -> ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movl 0   
70 [0x46]:           movn #0   
72 [0x48]:           movi #0, adx   
74 [0x4a]:           iaload ebx, adx   
75 [0x4b]:           rstore ebx   
76 [0x4c]:           call @1740 // <std.io#__srt_global.memcopy>   
77 [0x4d]:           nop   
78 [0x4e]: line: 156 pushl 0   
79 [0x4f]:           call @3241 // <std#list<var>.pop_back>   
80 [0x50]:           ret   


function: std#list<var>.indexof[3247] params(2) in file: lib\support\0.2.805/list.sharp:159:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 160 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 161 ipushl #2   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           iaload ebx, adx   
28 [0x1c]:           rstore ebx   
29 [0x1d]:           ipushl #1   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 38   
35 [0x23]: line: 162 loadl ebx, fp+3   
36 [0x24]:           return_val ebx   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @6   
42 [0x2a]: line: 166 istorel -1, fp+0   
44 [0x2c]:           ret   


function: std#list<var>.to_string[3248] params(0) in file: lib\support\0.2.805/list.sharp:169:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 170 new_class @65 // std#string_builder   
5 [0x5]:           dup    
6 [0x6]:           call @3018 // <std#string_builder.string_builder>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 172 pushl 1   
10 [0xa]:           newstr @107 // [    
11 [0xb]:           call @3014 // <std#string_builder.operator+=>   
12 [0xc]:           pop   
13 [0xd]: line: 173 istorel 0, fp+2   
15 [0xf]:           ipushl #2   
16 [0x10]:           movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           movi #0, adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           loadval ecx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 65   
27 [0x1b]: line: 174 pushl 1   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #1   
31 [0x1f]:           pushobj   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           iaload ebx, adx   
37 [0x25]:           rstore ebx   
38 [0x26]:           call @3009 // <std#string_builder.operator+=>   
39 [0x27]:           pop   
40 [0x28]: line: 176 ipushl #2   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           add ecx, ebx -> ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           loadval ecx   
53 [0x35]:           lt ecx, ebx   
54 [0x36]:           movr ebx, cmt   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 61   
57 [0x39]: line: 177 pushl 1   
58 [0x3a]:           newstr @108 // ,    
59 [0x3b]:           call @3014 // <std#string_builder.operator+=>   
60 [0x3c]:           pop   
61 [0x3d]:           nop   
62 [0x3e]:           iaddl 1, fp@2   
64 [0x40]:           jmp @15   
65 [0x41]: line: 181 pushl 1   
66 [0x42]:           newstr @109 //  ]   
67 [0x43]:           call @3014 // <std#string_builder.operator+=>   
68 [0x44]:           pop   
69 [0x45]: line: 182 pushl 1   
70 [0x46]:           call @2991 // <std#string_builder.to_string>   
71 [0x47]:           popobj2    
72 [0x48]:           returnobj   
73 [0x49]:           ret   


function: std#list<var>.out_of_bounds_msg[3249] params(1) in file: lib\support\0.2.805/list.sharp:185:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #114, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 186 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @110 // Index:    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @2955 // <std#string.operator+>   
10 [0xa]:           newstr @111 // , size:    
11 [0xb]:           call @2935 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @2955 // <std#string.operator+>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


function: std#_nil_.set_instance[3250] params(1) in file: lib\support\0.2.805/nil.sharp:11:44: note:  
		    static instance : _nil_ = new _nil_ { };
		                                           ^

0 [0x0]:         ret   


function: std.reflect#reflect.set_reflect_obj[3251] params(1) in file: lib\support\0.2.805/reflect//reflection.sharp:5:35: note:  
		        get { return reflect_obj; }
		                                  ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #63, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         ret   


function: std.reflect#reflect.get_reflect_obj[3252] params(0) in file: lib\support\0.2.805/reflect//reflection.sharp:4:25: note:  
		    reflect_obj : object;
		                        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #63, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 5 movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         returnobj   
8 [0x8]:         ret   


std#loopable<common.network.core#request_data.request_item>.get_elements[3253] params(0) in file: lib\support\0.2.805/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<common.network.core#request_data.request_item>.loopable[3254] params(0) in file: lib\support\0.2.805/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#list<common.network.core#request_data.request_item>.list[3255] params(0) in file: lib\support\0.2.805/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 14 movi #10, ebx   
7 [0x7]:          new_classarray ebx  // common.network.core#request_data.request_item[]   
8 [0x8]:          movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          popobj   
12 [0xc]:          ret   


constructor: std#list<common.network.core#request_data.request_item>.list[3256] params(1) in file: lib\support\0.2.805/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 18 loadl ebx, fp+1   
6 [0x6]:          new_classarray ebx  // common.network.core#request_data.request_item[]   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: std#list<common.network.core#request_data.request_item>.list[3257] params(1) in file: lib\support\0.2.805/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 22 pushl 0   
6 [0x6]:          pushl 1   
7 [0x7]:          call @3268 // <std#list<common.network.core#request_data.request_item>.add_all>   
8 [0x8]:          ret   


function: std#list<common.network.core#request_data.request_item>.empty[3258] params(0) in file: lib\support\0.2.805/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<common.network.core#request_data.request_item>.set_compact[3259] params(1) in file: lib\support\0.2.805/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 28 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #2   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


function: std#list<common.network.core#request_data.request_item>.get_elements[3260] params(0) in file: lib\support\0.2.805/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 32 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 21   
16 [0x10]:          pushnull    
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   
20 [0x14]:          jmp @38   
21 [0x15]: line: 33 movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          istore 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @1749 // <std.io#__srt_global.copy>   
35 [0x23]:          popobj2    
36 [0x24]:          returnobj   
37 [0x25]:          ret   
38 [0x26]:          nop   


overload function: std#list<common.network.core#request_data.request_item>.operator[[3261] params(1) in file: lib\support\0.2.805/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 37 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 38 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3279 // <std#list<common.network.core#request_data.request_item>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 39 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std#list<common.network.core#request_data.request_item>.at[3262] params(1) in file: lib\support\0.2.805/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 43 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 44 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3279 // <std#list<common.network.core#request_data.request_item>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 45 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std#list<common.network.core#request_data.request_item>.last[3263] params(0) in file: lib\support\0.2.805/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 49 pushl 0   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          rstore ebx   
12 [0xc]:          movi #1, ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          sub ecx, ebx -> ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @3262 // <std#list<common.network.core#request_data.request_item>.at>   
18 [0x12]:          popobj2    
19 [0x13]:          returnobj   
20 [0x14]:          ret   


function: std#list<common.network.core#request_data.request_item>.put[3264] params(2) in file: lib\support\0.2.805/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 53 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          skpe ebx // pc = 20   
15 [0xf]:          loadl ecx, fp+1   
16 [0x10]:          movi #0, ebx   
18 [0x12]:          lt ecx, ebx   
19 [0x13]:          movr ebx, cmt   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 29   
22 [0x16]: line: 54 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:          dup    
24 [0x18]:          pushl 0   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3279 // <std#list<common.network.core#request_data.request_item>.out_of_bounds_msg>   
27 [0x1b]:          call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 56 movl 0   
31 [0x1f]:          movn #1   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+1   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          smovr_3 fp+3   
40 [0x28]: line: 57 pushl 2   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #1   
44 [0x2c]:          pushobj   
45 [0x2d]:          loadl ebx, fp+1   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          popobj   
51 [0x33]: line: 58 movl 3   
52 [0x34]:          returnobj   
53 [0x35]:          ret   


function: std#list<common.network.core#request_data.request_item>.expand[3265] params(0) in file: lib\support\0.2.805/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 62 movl 0   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 28   
12 [0xc]: line: 63 movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          pushobj   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          sizeof ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          movi #128, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          add ecx, ebx -> ebx   
25 [0x19]:          rstore ebx   
26 [0x1a]:          call @1729 // <std.io#__srt_global.realloc>   
27 [0x1b]:          jmp @55   
28 [0x1c]: line: 65 movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          sizeof ebx   
36 [0x24]:          rstore ebx   
37 [0x25]:          movl 0   
38 [0x26]:          movn #1   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #4, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          shr ecx, ebx -> ebx   
46 [0x2e]:          loadval ecx   
47 [0x2f]:          add ecx, ebx -> ebx   
48 [0x30]:          rstore ebx   
49 [0x31]:          movi #128, ebx   
51 [0x33]:          loadval ecx   
52 [0x34]:          add ecx, ebx -> ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @1729 // <std.io#__srt_global.realloc>   
55 [0x37]:          nop   
56 [0x38]:          ret   


function: std#list<common.network.core#request_data.request_item>.clear[3266] params(0) in file: lib\support\0.2.805/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 69 movi #10, ebx   
6 [0x6]:          new_classarray ebx  // common.network.core#request_data.request_item[]   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]: line: 70 movi #0, ebx   
13 [0xd]:          movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          movi #0, adx   
18 [0x12]:          rmov adx, ebx   
19 [0x13]:          ret   


function: std#list<common.network.core#request_data.request_item>.add_all[3267] params(1) in file: lib\support\0.2.805/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 74 movl 1   
5 [0x5]:          movn #1   
7 [0x7]:          pushobj   
8 [0x8]:          istore 0   
10 [0xa]:          movl 1   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          rstore ebx   
17 [0x11]:          call @1749 // <std.io#__srt_global.copy>   
18 [0x12]:          popobj2    
19 [0x13]:          movi #76, cmt   
21 [0x15]:          cast cmt   
22 [0x16]:          pushobj   
23 [0x17]:          movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          popobj   
27 [0x1b]: line: 75 movl 1   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          ret   


function: std#list<common.network.core#request_data.request_item>.add_all[3268] params(1) in file: lib\support\0.2.805/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 79 movl 1   
5 [0x5]:          checknull   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 34   
9 [0x9]: line: 80 pushl 1   
10 [0xa]:          istore 0   
12 [0xc]:          movl 1   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @1749 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #76, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 81 movl 1   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]:          jmp @49   
34 [0x22]: line: 83 movi #0, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #0   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 84 movi #10, ebx   
44 [0x2c]:          new_classarray ebx  // common.network.core#request_data.request_item[]   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #1   
48 [0x30]:          popobj   
49 [0x31]:          nop   
50 [0x32]:          ret   


function: std#list<common.network.core#request_data.request_item>.add[3269] params(1) in file: lib\support\0.2.805/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 89 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #1   
14 [0xe]:          sizeof ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          gte ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 22   
20 [0x14]: line: 90 pushl 0   
21 [0x15]:          call @3265 // <std#list<common.network.core#request_data.request_item>.expand>   
22 [0x16]:          nop   
23 [0x17]: line: 91 pushl 1   
24 [0x18]:          movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          movr egx, ebx   
35 [0x23]:          inc ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]:          ret   


function: std#list<common.network.core#request_data.request_item>.indexof[3270] params(1) in file: lib\support\0.2.805/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 95 istorel 0, fp+2   
6 [0x6]:          ipushl #2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 39   
18 [0x12]: line: 96 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          pushobj   
23 [0x17]:          loadl ebx, fp+2   
24 [0x18]:          popobj2    
25 [0x19]:          movr adx, ebx   
26 [0x1a]:          chklen adx   
27 [0x1b]:          movnd adx   
28 [0x1c]:          pushobj   
29 [0x1d]:          itest ebx   
30 [0x1e]:          movr cmt, ebx   
31 [0x1f]:          jne 35   
32 [0x20]: line: 97 loadl ebx, fp+2   
33 [0x21]:          return_val ebx   
34 [0x22]:          ret   
35 [0x23]:          nop   
36 [0x24]:          iaddl 1, fp@2   
38 [0x26]:          jmp @6   
39 [0x27]: line: 101 istorel -1, fp+0   
41 [0x29]:           ret   


function: std#list<common.network.core#request_data.request_item>.pop_back[3271] params(0) in file: lib\support\0.2.805/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 105 movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 106 movl 1   
19 [0x13]:           del   
20 [0x14]: line: 107 pushl 1   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           pushobj   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #0   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           movr egx, ebx   
32 [0x20]:           dec ebx   
33 [0x21]:           movi #0, adx   
35 [0x23]:           rmov adx, ebx   
36 [0x24]:           movr ebx, egx   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]:           nop   
43 [0x2b]:           ret   


function: std#list<common.network.core#request_data.request_item>.size[3272] params(0) in file: lib\support\0.2.805/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<common.network.core#request_data.request_item>.insert[3273] params(2) in file: lib\support\0.2.805/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 114 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 20   
15 [0xf]:           loadl ecx, fp+1   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 29   
22 [0x16]: line: 115 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @3279 // <std#list<common.network.core#request_data.request_item>.out_of_bounds_msg>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           throw    
29 [0x1d]:           nop   
30 [0x1e]: line: 117 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #0, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           test ecx, ebx   
41 [0x29]:           jne 46   
42 [0x2a]: line: 118 pushl 0   
43 [0x2b]:           pushl 2   
44 [0x2c]:           call @3269 // <std#list<common.network.core#request_data.request_item>.add>   
45 [0x2d]:           jmp @135   
46 [0x2e]: line: 120 movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           rstore ebx   
53 [0x35]:           movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           sizeof ebx   
57 [0x39]:           loadval ecx   
58 [0x3a]:           gte ecx, ebx   
59 [0x3b]:           movr ebx, cmt   
60 [0x3c]:           movr cmt, ebx   
61 [0x3d]:           jne 64   
62 [0x3e]: line: 121 pushl 0   
63 [0x3f]:           call @3265 // <std#list<common.network.core#request_data.request_item>.expand>   
64 [0x40]:           nop   
65 [0x41]: line: 122 movl 0   
66 [0x42]:           movn #0   
68 [0x44]:           movi #0, adx   
70 [0x46]:           iaload ebx, adx   
71 [0x47]:           movr egx, ebx   
72 [0x48]:           inc ebx   
73 [0x49]:           movi #0, adx   
75 [0x4b]:           rmov adx, ebx   
76 [0x4c]: line: 123 movl 0   
77 [0x4d]:           movn #0   
79 [0x4f]:           movi #0, adx   
81 [0x51]:           iaload ebx, adx   
82 [0x52]:           rstore ebx   
83 [0x53]:           movi #1, ebx   
85 [0x55]:           loadval ecx   
86 [0x56]:           sub ecx, ebx -> ebx   
87 [0x57]:           smovr_2 ebx, fp+3   
88 [0x58]:           ipushl #3   
89 [0x59]:           loadl ebx, fp+1   
90 [0x5a]:           loadval ecx   
91 [0x5b]:           gt ecx, ebx   
92 [0x5c]:           movr ebx, cmt   
93 [0x5d]:           movr cmt, ebx   
94 [0x5e]:           jne 124   
95 [0x5f]: line: 124 movl 0   
96 [0x60]:           movn #1   
98 [0x62]:           pushobj   
99 [0x63]:           ipushl #3   
100 [0x64]:           movi #1, ebx   
102 [0x66]:           loadval ecx   
103 [0x67]:           sub ecx, ebx -> ebx   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           pushobj   
109 [0x6d]:           movl 0   
110 [0x6e]:           movn #1   
112 [0x70]:           pushobj   
113 [0x71]:           loadl ebx, fp+3   
114 [0x72]:           popobj2    
115 [0x73]:           movr adx, ebx   
116 [0x74]:           chklen adx   
117 [0x75]:           movnd adx   
118 [0x76]:           popobj   
119 [0x77]:           loadl ebx, fp+3   
120 [0x78]:           movr egx, ebx   
121 [0x79]:           dec ebx   
122 [0x7a]:           smovr_2 ebx, fp+3   
123 [0x7b]:           jmp @88   
124 [0x7c]: line: 125 pushl 2   
125 [0x7d]:           movl 0   
126 [0x7e]:           movn #1   
128 [0x80]:           pushobj   
129 [0x81]:           loadl ebx, fp+1   
130 [0x82]:           popobj2    
131 [0x83]:           movr adx, ebx   
132 [0x84]:           chklen adx   
133 [0x85]:           movnd adx   
134 [0x86]:           popobj   
135 [0x87]:           nop   
136 [0x88]:           ret   


function: std#list<common.network.core#request_data.request_item>.remove[3274] params(1) in file: lib\support\0.2.805/list.sharp:130:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 131 istorel 0, fp+2   
6 [0x6]:           ipushl #2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 40   
18 [0x12]: line: 132 pushl 1   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           itest ebx   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 133 pushl 0   
33 [0x21]:           ipushl #2   
34 [0x22]:           call @3276 // <std#list<common.network.core#request_data.request_item>.remove_at>   
35 [0x23]: line: 134 ret   
36 [0x24]:           nop   
37 [0x25]:           iaddl 1, fp@2   
39 [0x27]:           jmp @6   
40 [0x28]:           ret   


function: std#list<common.network.core#request_data.request_item>.remove[3275] params(2) in file: lib\support\0.2.805/list.sharp:139:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 140 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 43   
18 [0x12]: line: 141 ipushl #2   
19 [0x13]:           pushl 1   
20 [0x14]:           movl 0   
21 [0x15]:           movn #1   
23 [0x17]:           pushobj   
24 [0x18]:           loadl ebx, fp+3   
25 [0x19]:           popobj2    
26 [0x1a]:           movr adx, ebx   
27 [0x1b]:           chklen adx   
28 [0x1c]:           movnd adx   
29 [0x1d]:           pushobj   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 39   
35 [0x23]: line: 142 pushl 0   
36 [0x24]:           ipushl #3   
37 [0x25]:           call @3276 // <std#list<common.network.core#request_data.request_item>.remove_at>   
38 [0x26]: line: 143 ret   
39 [0x27]:           nop   
40 [0x28]:           iaddl 1, fp@3   
42 [0x2a]:           jmp @6   
43 [0x2b]:           ret   


function: std#list<common.network.core#request_data.request_item>.remove_at[3276] params(1) in file: lib\support\0.2.805/list.sharp:148:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 149 ipushl #1   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           gte ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           skpe ebx // pc = 20   
15 [0xf]:           loadl ecx, fp+1   
16 [0x10]:           movi #0, ebx   
18 [0x12]:           lt ecx, ebx   
19 [0x13]:           movr ebx, cmt   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 29   
22 [0x16]: line: 150 new_class @6 // std#out_of_bounds_exception   
23 [0x17]:           dup    
24 [0x18]:           pushl 0   
25 [0x19]:           ipushl #1   
26 [0x1a]:           call @3279 // <std#list<common.network.core#request_data.request_item>.out_of_bounds_msg>   
27 [0x1b]:           call @1630 // <std#out_of_bounds_exception.out_of_bounds_exception>   
28 [0x1c]:           throw    
29 [0x1d]:           nop   
30 [0x1e]: line: 152 movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           loadl ebx, fp+1   
38 [0x26]:           loadval ecx   
39 [0x27]:           sub ecx, ebx -> ebx   
40 [0x28]:           rstore ebx   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           sub ecx, ebx -> ebx   
45 [0x2d]:           smovr_2 ebx, fp+2   
46 [0x2e]: line: 153 ipushl #2   
47 [0x2f]:           movi #0, ebx   
49 [0x31]:           loadval ecx   
50 [0x32]:           gt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 77   
54 [0x36]: line: 154 movl 0   
55 [0x37]:           movn #1   
57 [0x39]:           pushobj   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           ipushl #1   
64 [0x40]:           movi #1, ebx   
66 [0x42]:           loadval ecx   
67 [0x43]:           add ecx, ebx -> ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movl 0   
70 [0x46]:           movn #0   
72 [0x48]:           movi #0, adx   
74 [0x4a]:           iaload ebx, adx   
75 [0x4b]:           rstore ebx   
76 [0x4c]:           call @1739 // <std.io#__srt_global.memcopy>   
77 [0x4d]:           nop   
78 [0x4e]: line: 156 pushl 0   
79 [0x4f]:           call @3271 // <std#list<common.network.core#request_data.request_item>.pop_back>   
80 [0x50]:           ret   


function: std#list<common.network.core#request_data.request_item>.indexof[3277] params(2) in file: lib\support\0.2.805/list.sharp:159:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 160 istorel 0, fp+3   
6 [0x6]:           ipushl #3   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 42   
18 [0x12]: line: 161 ipushl #2   
19 [0x13]:           movl 0   
20 [0x14]:           movn #1   
22 [0x16]:           pushobj   
23 [0x17]:           loadl ebx, fp+3   
24 [0x18]:           popobj2    
25 [0x19]:           movr adx, ebx   
26 [0x1a]:           chklen adx   
27 [0x1b]:           movnd adx   
28 [0x1c]:           pushobj   
29 [0x1d]:           pushl 1   
30 [0x1e]:           smov ebx, sp+[-2]   
31 [0x1f]:           calld ebx   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 38   
35 [0x23]: line: 162 loadl ebx, fp+3   
36 [0x24]:           return_val ebx   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @6   
42 [0x2a]: line: 166 istorel -1, fp+0   
44 [0x2c]:           ret   


function: std#list<common.network.core#request_data.request_item>.to_string[3278] params(0) in file: lib\support\0.2.805/list.sharp:169:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 170 new_class @65 // std#string_builder   
5 [0x5]:           dup    
6 [0x6]:           call @3018 // <std#string_builder.string_builder>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 172 pushl 1   
10 [0xa]:           newstr @107 // [    
11 [0xb]:           call @3014 // <std#string_builder.operator+=>   
12 [0xc]:           pop   
13 [0xd]: line: 173 istorel 0, fp+2   
15 [0xf]:           ipushl #2   
16 [0x10]:           movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           movi #0, adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           loadval ecx   
23 [0x17]:           lt ecx, ebx   
24 [0x18]:           movr ebx, cmt   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 65   
27 [0x1b]: line: 174 pushl 1   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #1   
31 [0x1f]:           pushobj   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           pushobj   
38 [0x26]:           call @3010 // <std#string_builder.operator+=>   
39 [0x27]:           pop   
40 [0x28]: line: 176 ipushl #2   
41 [0x29]:           movi #1, ebx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           add ecx, ebx -> ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #0   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           loadval ecx   
53 [0x35]:           lt ecx, ebx   
54 [0x36]:           movr ebx, cmt   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 61   
57 [0x39]: line: 177 pushl 1   
58 [0x3a]:           newstr @108 // ,    
59 [0x3b]:           call @3014 // <std#string_builder.operator+=>   
60 [0x3c]:           pop   
61 [0x3d]:           nop   
62 [0x3e]:           iaddl 1, fp@2   
64 [0x40]:           jmp @15   
65 [0x41]: line: 181 pushl 1   
66 [0x42]:           newstr @109 //  ]   
67 [0x43]:           call @3014 // <std#string_builder.operator+=>   
68 [0x44]:           pop   
69 [0x45]: line: 182 pushl 1   
70 [0x46]:           call @2991 // <std#string_builder.to_string>   
71 [0x47]:           popobj2    
72 [0x48]:           returnobj   
73 [0x49]:           ret   


function: std#list<common.network.core#request_data.request_item>.out_of_bounds_msg[3279] params(1) in file: lib\support\0.2.805/list.sharp:185:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #116, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 186 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @110 // Index:    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @2955 // <std#string.operator+>   
10 [0xa]:           newstr @111 // , size:    
11 [0xb]:           call @2935 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @2955 // <std#string.operator+>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


function: common.network#network.get_INSTANCE[3280] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//network.sharp:6:38: note:  
		    private static INSTANCE : network;
		                                     ^

0 [0x0]: line: 8 movg @88 // @common.network#network   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         pushnull    
5 [0x5]:         itest ebx   
6 [0x6]:         movr cmt, ebx   
7 [0x7]:         jne 20   
8 [0x8]: line: 9 new_class @88 // common.network#network   
9 [0x9]:         dup    
10 [0xa]:         call @3089 // <common.network#network.network>   
11 [0xb]:         movg @88 // @common.network#network   
12 [0xc]:         movn #0   
14 [0xe]:         popobj   
15 [0xf]: line: 10 movg @88 // @common.network#network   
16 [0x10]:          movn #0   
18 [0x12]:          pushobj   
19 [0x13]:          call @3099 // <common.network.remote#__srt_global.initialize>   
20 [0x14]:          nop   
21 [0x15]: line: 13 movg @88 // @common.network#network   
22 [0x16]:          movn #0   
24 [0x18]:          returnobj   
25 [0x19]:          ret   


constructor: std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry[3281] params(2) in file: lib\support\0.2.805/hashtable.sharp:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #118, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 135 pushl 1   
6 [0x6]:           movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           popobj   
10 [0xa]: line: 136 pushl 2   
11 [0xb]:           movl 0   
12 [0xc]:           movn #1   
14 [0xe]:           popobj   
15 [0xf]:           ret   


function: std.io.task#entry<std.io#thread,std.io.task#job_controller>.to_string[3282] params(0) in file: lib\support\0.2.805/hashtable.sharp:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #118, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 140 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @112 // key    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           call @2937 // <std#string.operator+>   
13 [0xd]:           newstr @113 //  value    
14 [0xe]:           call @2935 // <std#string.operator+>   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           call @2937 // <std#string.operator+>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


constructor: std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry[3283] params(0) in file: lib\support\0.2.805/hashtable.sharp:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io#entry<std#int,std.io#thread>.entry[3284] params(2) in file: lib\support\0.2.805/hashmap.sharp:126:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #119, ebx   
3 [0x3]:         cast ebx   
4 [0x4]:         pushl 0   
5 [0x5]: line: 127 pushl 1   
6 [0x6]:           movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           popobj   
10 [0xa]: line: 128 pushl 2   
11 [0xb]:           movl 0   
12 [0xc]:           movn #1   
14 [0xe]:           popobj   
15 [0xf]:           ret   


function: std.io#entry<std#int,std.io#thread>.to_string[3285] params(0) in file: lib\support\0.2.805/hashmap.sharp:131:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]:         movl 0   
1 [0x1]:         movi #119, ebx   
3 [0x3]:         cast ebx   
4 [0x4]: line: 132 new_class @64 // std#string   
5 [0x5]:           dup    
6 [0x6]:           newstr @112 // key    
7 [0x7]:           call @2923 // <std#string.string>   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           call @2937 // <std#string.operator+>   
13 [0xd]:           newstr @113 //  value    
14 [0xe]:           call @2935 // <std#string.operator+>   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           call @2937 // <std#string.operator+>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


constructor: std.io#entry<std#int,std.io#thread>.entry[3286] params(0) in file: lib\support\0.2.805/hashmap.sharp:121:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std.io#__srt_global.$03internal_static_init[3287] params(0) in file: lib\support\0.2.805/io//critical_section.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @37 // std#_object_   
1 [0x1]:         dup    
2 [0x2]:         movg @17 // @std.io#__srt_global   
3 [0x3]:         movn #0   
5 [0x5]:         popobj   
6 [0x6]:         ret   


function: std.io#file.$03internal_static_init[3288] params(0) in file: lib\support\0.2.805/io//file.sharp:17:13: note:  
		public class file {
		            ^

0 [0x0]:         call @1707 // <std.io#file.get_file_system>   
1 [0x1]:         movg @18 // @std.io#file   
2 [0x2]:         movn #0   
4 [0x4]:         popobj   
5 [0x5]:         movg @18 // @std.io#file   
6 [0x6]:         movn #0   
8 [0x8]:         pushobj   
9 [0x9]:         invoke_delegate 1709 { static=0, args=0 }   
11 [0xb]:         movg @18 // @std.io#file   
12 [0xc]:         movn #1   
14 [0xe]:         loadval ebx   
15 [0xf]:         movi #0, adx   
17 [0x11]:         rmov adx, ebx   
18 [0x12]:         ret   
19 [0x13]:         ret   


function: std.io.task#job.$03internal_static_init[3289] params(0) in file: lib\support\0.2.805/io//task//job.sharp:5:13: note:  
		public class job {
		            ^

0 [0x0]:         istore 0   
2 [0x2]:         movg @22 // @std.io.task#job   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: std.io.task#__srt_global.$03internal_static_init[3290] params(0) in file: lib\support\0.2.805/io//task//task.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @25 // std.io.task#job_master   
1 [0x1]:         dup    
2 [0x2]:         call @1807 // <std.io.task#job_master.job_master>   
3 [0x3]:         movg @20 // @std.io.task#__srt_global   
4 [0x4]:         movn #3   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std.io#thread_group.$03internal_static_init[3291] params(0) in file: lib\support\0.2.805/io//thread_group.sharp:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @29 // std.io#thread_group   
1 [0x1]:         dup    
2 [0x2]:         new_class @64 // std#string   
3 [0x3]:         dup    
4 [0x4]:         newstr @2 // main   
5 [0x5]:         call @2923 // <std#string.string>   
6 [0x6]:         call @1870 // <std.io#thread_group.thread_group>   
7 [0x7]:         movg @29 // @std.io#thread_group   
8 [0x8]:         movn #0   
10 [0xa]:         popobj   
11 [0xb]:         ret   
12 [0xc]:         ret   


function: std#_nil_.$03internal_static_init[3292] params(0) in file: lib\support\0.2.805/nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         new_class @36 // std#_nil_   
1 [0x1]:         movg @36 // @std#_nil_   
2 [0x2]:         movn #0   
4 [0x4]:         popobj   
5 [0x5]:         ret   
6 [0x6]:         ret   


function: std#__srt_global.$03internal_static_init[3293] params(0) in file: lib\support\0.2.805/object.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         istore 0   
2 [0x2]:         movg @0 // @std#__srt_global   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std#string.$03internal_static_init[3294] params(0) in file: lib\support\0.2.805/string.sharp:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @64 // @std#string   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @64 // @std#string   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std#string_builder.$03internal_static_init[3295] params(0) in file: lib\support\0.2.805/string_builder.sharp:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @65 // @std#string_builder   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @65 // @std#string_builder   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std#time.$03internal_static_init[3296] params(0) in file: lib\support\0.2.805/time.sharp:5:6: note:  
		class time {
		     ^

0 [0x0]:         istore 4294967295   
2 [0x2]:         movg @66 // @std#time   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: common#constants.$03internal_static_init[3297] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/constants.sharp:3:6: note:  
		class constants {
		     ^

0 [0x0]:         ldc ebx // 1   
1 [0x1]:         rstore ebx   
2 [0x2]:         movg @70 // @common#constants   
3 [0x3]:         movn #20   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: common#constants.strings.$03internal_static_init[3298] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/constants.sharp:37:10: note:  
		    class strings {
		         ^

0 [0x0]:         new_class @64 // std#string   
1 [0x1]:         dup    
2 [0x2]:         newstr @5 // cmd   
3 [0x3]:         call @2923 // <std#string.string>   
4 [0x4]:         movg @71 // @common#constants.strings   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @64 // std#string   
9 [0x9]:         dup    
10 [0xa]:         newstr @6 // response   
11 [0xb]:         call @2923 // <std#string.string>   
12 [0xc]:         movg @71 // @common#constants.strings   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         new_class @64 // std#string   
17 [0x11]:         dup    
18 [0x12]:         newstr @7 // yes   
19 [0x13]:         call @2923 // <std#string.string>   
20 [0x14]:         movg @71 // @common#constants.strings   
21 [0x15]:         movn #2   
23 [0x17]:         popobj   
24 [0x18]:         new_class @64 // std#string   
25 [0x19]:         dup    
26 [0x1a]:         newstr @8 // mode   
27 [0x1b]:         call @2923 // <std#string.string>   
28 [0x1c]:         movg @71 // @common#constants.strings   
29 [0x1d]:         movn #3   
31 [0x1f]:         popobj   
32 [0x20]:         newstr @3 // 100   
33 [0x21]:         movg @71 // @common#constants.strings   
34 [0x22]:         movn #4   
36 [0x24]:         popobj   
37 [0x25]:         newstr @4 // 200   
38 [0x26]:         movg @71 // @common#constants.strings   
39 [0x27]:         movn #5   
41 [0x29]:         popobj   
42 [0x2a]:         new_class @64 // std#string   
43 [0x2b]:         dup    
44 [0x2c]:         newstr @9 // 0   
45 [0x2d]:         call @2923 // <std#string.string>   
46 [0x2e]:         movg @71 // @common#constants.strings   
47 [0x2f]:         movn #6   
49 [0x31]:         popobj   
50 [0x32]:         new_class @64 // std#string   
51 [0x33]:         dup    
52 [0x34]:         newstr @10 // 1   
53 [0x35]:         call @2923 // <std#string.string>   
54 [0x36]:         movg @71 // @common#constants.strings   
55 [0x37]:         movn #7   
57 [0x39]:         popobj   
58 [0x3a]:         new_class @64 // std#string   
59 [0x3b]:         dup    
60 [0x3c]:         newstr @11 // 2   
61 [0x3d]:         call @2923 // <std#string.string>   
62 [0x3e]:         movg @71 // @common#constants.strings   
63 [0x3f]:         movn #8   
65 [0x41]:         popobj   
66 [0x42]:         new_class @64 // std#string   
67 [0x43]:         dup    
68 [0x44]:         newstr @12 // 3   
69 [0x45]:         call @2923 // <std#string.string>   
70 [0x46]:         movg @71 // @common#constants.strings   
71 [0x47]:         movn #9   
73 [0x49]:         popobj   
74 [0x4a]:         new_class @64 // std#string   
75 [0x4b]:         dup    
76 [0x4c]:         newstr @13 // 4   
77 [0x4d]:         call @2923 // <std#string.string>   
78 [0x4e]:         movg @71 // @common#constants.strings   
79 [0x4f]:         movn #10   
81 [0x51]:         popobj   
82 [0x52]:         new_class @64 // std#string   
83 [0x53]:         dup    
84 [0x54]:         newstr @14 // 5   
85 [0x55]:         call @2923 // <std#string.string>   
86 [0x56]:         movg @71 // @common#constants.strings   
87 [0x57]:         movn #11   
89 [0x59]:         popobj   
90 [0x5a]:         ret   
91 [0x5b]:         ret   


function: common.network.core#request.$03internal_static_init[3299] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request.sharp:7:6: note:  
		class request
		     ^

0 [0x0]:         istore 0   
2 [0x2]:         movg @74 // @common.network.core#request   
3 [0x3]:         movn #1   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         istore 1   
11 [0xb]:         movg @74 // @common.network.core#request   
12 [0xc]:         movn #2   
14 [0xe]:         loadval ebx   
15 [0xf]:         movi #0, adx   
17 [0x11]:         rmov adx, ebx   
18 [0x12]:         ret   
19 [0x13]:         ret   


lambda: common.network.core#__srt_global.anon_func$3300[3300] params(2) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\common/network//core//request_data.sharp:6:9: note:  
		        { t1, t2 ->
		        ^

0 [0x0]: line: 7 movl 0   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         movl 1   
5 [0x5]:         movn #0   
7 [0x7]:         pushobj   
8 [0x8]:         call @2941 // <std#string.operator==>   
9 [0x9]:         loadval ebx   
10 [0xa]:         return_val ebx   
11 [0xb]:         ret   


function: main#__srt_global.$03internal_static_init[3301] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\controller/connection_tracker.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @37 // std#_object_   
1 [0x1]:         dup    
2 [0x2]:         movg @95 // @main#__srt_global   
3 [0x3]:         movn #0   
5 [0x5]:         popobj   
6 [0x6]:         ldc ebx // 0   
7 [0x7]:         rstore ebx   
8 [0x8]:         movg @95 // @main#__srt_global   
9 [0x9]:         movn #1   
11 [0xb]:         loadval ebx   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         istore 0   
17 [0x11]:         movg @95 // @main#__srt_global   
18 [0x12]:         movn #2   
20 [0x14]:         loadval ebx   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         istore 0   
26 [0x1a]:         movg @95 // @main#__srt_global   
27 [0x1b]:         movn #3   
29 [0x1d]:         loadval ebx   
30 [0x1e]:         movi #0, adx   
32 [0x20]:         rmov adx, ebx   
33 [0x21]:         ret   


function: std.io#thread_result.$03internal_static_init[3302] params(0) in file: lib\support\0.2.805/io//thread_kernel.sharp:3:5: note:  
		import platform.kernel;
		    ^

0 [0x0]: line: 42 istorel 0, fp+0   
2 [0x2]: line: 43 movi #17, ebx   
4 [0x4]:          new_classarray ebx  // std.io#thread_result[]   
5 [0x5]:          movg @31 // @std.io#thread_result   
6 [0x6]:          movn #17   
8 [0x8]:          popobj   
9 [0x9]: line: 44 movg @31 // @std.io#thread_result   
10 [0xa]:          movn #0   
12 [0xc]:          pushobj   
13 [0xd]:          movg @31 // @std.io#thread_result   
14 [0xe]:          movn #17   
16 [0x10]:          pushobj   
17 [0x11]:          loadl ebx, fp+0   
18 [0x12]:          movr egx, ebx   
19 [0x13]:          inc ebx   
20 [0x14]:          smovr_2 ebx, fp+0   
21 [0x15]:          movr ebx, egx   
22 [0x16]:          popobj2    
23 [0x17]:          movr adx, ebx   
24 [0x18]:          chklen adx   
25 [0x19]:          movnd adx   
26 [0x1a]:          popobj   
27 [0x1b]: line: 45 movg @31 // @std.io#thread_result   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          movg @31 // @std.io#thread_result   
32 [0x20]:          movn #17   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+0   
36 [0x24]:          movr egx, ebx   
37 [0x25]:          inc ebx   
38 [0x26]:          smovr_2 ebx, fp+0   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          movnd adx   
44 [0x2c]:          popobj   
45 [0x2d]: line: 46 movg @31 // @std.io#thread_result   
46 [0x2e]:          movn #2   
48 [0x30]:          pushobj   
49 [0x31]:          movg @31 // @std.io#thread_result   
50 [0x32]:          movn #17   
52 [0x34]:          pushobj   
53 [0x35]:          loadl ebx, fp+0   
54 [0x36]:          movr egx, ebx   
55 [0x37]:          inc ebx   
56 [0x38]:          smovr_2 ebx, fp+0   
57 [0x39]:          movr ebx, egx   
58 [0x3a]:          popobj2    
59 [0x3b]:          movr adx, ebx   
60 [0x3c]:          chklen adx   
61 [0x3d]:          movnd adx   
62 [0x3e]:          popobj   
63 [0x3f]: line: 47 movg @31 // @std.io#thread_result   
64 [0x40]:          movn #3   
66 [0x42]:          pushobj   
67 [0x43]:          movg @31 // @std.io#thread_result   
68 [0x44]:          movn #17   
70 [0x46]:          pushobj   
71 [0x47]:          loadl ebx, fp+0   
72 [0x48]:          movr egx, ebx   
73 [0x49]:          inc ebx   
74 [0x4a]:          smovr_2 ebx, fp+0   
75 [0x4b]:          movr ebx, egx   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          popobj   
81 [0x51]: line: 48 movg @31 // @std.io#thread_result   
82 [0x52]:          movn #4   
84 [0x54]:          pushobj   
85 [0x55]:          movg @31 // @std.io#thread_result   
86 [0x56]:          movn #17   
88 [0x58]:          pushobj   
89 [0x59]:          loadl ebx, fp+0   
90 [0x5a]:          movr egx, ebx   
91 [0x5b]:          inc ebx   
92 [0x5c]:          smovr_2 ebx, fp+0   
93 [0x5d]:          movr ebx, egx   
94 [0x5e]:          popobj2    
95 [0x5f]:          movr adx, ebx   
96 [0x60]:          chklen adx   
97 [0x61]:          movnd adx   
98 [0x62]:          popobj   
99 [0x63]: line: 49 movg @31 // @std.io#thread_result   
100 [0x64]:          movn #5   
102 [0x66]:          pushobj   
103 [0x67]:          movg @31 // @std.io#thread_result   
104 [0x68]:          movn #17   
106 [0x6a]:          pushobj   
107 [0x6b]:          loadl ebx, fp+0   
108 [0x6c]:          movr egx, ebx   
109 [0x6d]:          inc ebx   
110 [0x6e]:          smovr_2 ebx, fp+0   
111 [0x6f]:          movr ebx, egx   
112 [0x70]:          popobj2    
113 [0x71]:          movr adx, ebx   
114 [0x72]:          chklen adx   
115 [0x73]:          movnd adx   
116 [0x74]:          popobj   
117 [0x75]: line: 50 movg @31 // @std.io#thread_result   
118 [0x76]:          movn #6   
120 [0x78]:          pushobj   
121 [0x79]:          movg @31 // @std.io#thread_result   
122 [0x7a]:          movn #17   
124 [0x7c]:          pushobj   
125 [0x7d]:          loadl ebx, fp+0   
126 [0x7e]:          movr egx, ebx   
127 [0x7f]:          inc ebx   
128 [0x80]:          smovr_2 ebx, fp+0   
129 [0x81]:          movr ebx, egx   
130 [0x82]:          popobj2    
131 [0x83]:          movr adx, ebx   
132 [0x84]:          chklen adx   
133 [0x85]:          movnd adx   
134 [0x86]:          popobj   
135 [0x87]: line: 51 movg @31 // @std.io#thread_result   
136 [0x88]:          movn #7   
138 [0x8a]:          pushobj   
139 [0x8b]:          movg @31 // @std.io#thread_result   
140 [0x8c]:          movn #17   
142 [0x8e]:          pushobj   
143 [0x8f]:          loadl ebx, fp+0   
144 [0x90]:          movr egx, ebx   
145 [0x91]:          inc ebx   
146 [0x92]:          smovr_2 ebx, fp+0   
147 [0x93]:          movr ebx, egx   
148 [0x94]:          popobj2    
149 [0x95]:          movr adx, ebx   
150 [0x96]:          chklen adx   
151 [0x97]:          movnd adx   
152 [0x98]:          popobj   
153 [0x99]: line: 52 movg @31 // @std.io#thread_result   
154 [0x9a]:          movn #8   
156 [0x9c]:          pushobj   
157 [0x9d]:          movg @31 // @std.io#thread_result   
158 [0x9e]:          movn #17   
160 [0xa0]:          pushobj   
161 [0xa1]:          loadl ebx, fp+0   
162 [0xa2]:          movr egx, ebx   
163 [0xa3]:          inc ebx   
164 [0xa4]:          smovr_2 ebx, fp+0   
165 [0xa5]:          movr ebx, egx   
166 [0xa6]:          popobj2    
167 [0xa7]:          movr adx, ebx   
168 [0xa8]:          chklen adx   
169 [0xa9]:          movnd adx   
170 [0xaa]:          popobj   
171 [0xab]: line: 53 movg @31 // @std.io#thread_result   
172 [0xac]:          movn #9   
174 [0xae]:          pushobj   
175 [0xaf]:          movg @31 // @std.io#thread_result   
176 [0xb0]:          movn #17   
178 [0xb2]:          pushobj   
179 [0xb3]:          loadl ebx, fp+0   
180 [0xb4]:          movr egx, ebx   
181 [0xb5]:          inc ebx   
182 [0xb6]:          smovr_2 ebx, fp+0   
183 [0xb7]:          movr ebx, egx   
184 [0xb8]:          popobj2    
185 [0xb9]:          movr adx, ebx   
186 [0xba]:          chklen adx   
187 [0xbb]:          movnd adx   
188 [0xbc]:          popobj   
189 [0xbd]: line: 54 movg @31 // @std.io#thread_result   
190 [0xbe]:          movn #10   
192 [0xc0]:          pushobj   
193 [0xc1]:          movg @31 // @std.io#thread_result   
194 [0xc2]:          movn #17   
196 [0xc4]:          pushobj   
197 [0xc5]:          loadl ebx, fp+0   
198 [0xc6]:          movr egx, ebx   
199 [0xc7]:          inc ebx   
200 [0xc8]:          smovr_2 ebx, fp+0   
201 [0xc9]:          movr ebx, egx   
202 [0xca]:          popobj2    
203 [0xcb]:          movr adx, ebx   
204 [0xcc]:          chklen adx   
205 [0xcd]:          movnd adx   
206 [0xce]:          popobj   
207 [0xcf]: line: 55 movg @31 // @std.io#thread_result   
208 [0xd0]:          movn #11   
210 [0xd2]:          pushobj   
211 [0xd3]:          movg @31 // @std.io#thread_result   
212 [0xd4]:          movn #17   
214 [0xd6]:          pushobj   
215 [0xd7]:          loadl ebx, fp+0   
216 [0xd8]:          movr egx, ebx   
217 [0xd9]:          inc ebx   
218 [0xda]:          smovr_2 ebx, fp+0   
219 [0xdb]:          movr ebx, egx   
220 [0xdc]:          popobj2    
221 [0xdd]:          movr adx, ebx   
222 [0xde]:          chklen adx   
223 [0xdf]:          movnd adx   
224 [0xe0]:          popobj   
225 [0xe1]: line: 56 movg @31 // @std.io#thread_result   
226 [0xe2]:          movn #12   
228 [0xe4]:          pushobj   
229 [0xe5]:          movg @31 // @std.io#thread_result   
230 [0xe6]:          movn #17   
232 [0xe8]:          pushobj   
233 [0xe9]:          loadl ebx, fp+0   
234 [0xea]:          movr egx, ebx   
235 [0xeb]:          inc ebx   
236 [0xec]:          smovr_2 ebx, fp+0   
237 [0xed]:          movr ebx, egx   
238 [0xee]:          popobj2    
239 [0xef]:          movr adx, ebx   
240 [0xf0]:          chklen adx   
241 [0xf1]:          movnd adx   
242 [0xf2]:          popobj   
243 [0xf3]: line: 57 movg @31 // @std.io#thread_result   
244 [0xf4]:          movn #13   
246 [0xf6]:          pushobj   
247 [0xf7]:          movg @31 // @std.io#thread_result   
248 [0xf8]:          movn #17   
250 [0xfa]:          pushobj   
251 [0xfb]:          loadl ebx, fp+0   
252 [0xfc]:          movr egx, ebx   
253 [0xfd]:          inc ebx   
254 [0xfe]:          smovr_2 ebx, fp+0   
255 [0xff]:          movr ebx, egx   
256 [0x100]:          popobj2    
257 [0x101]:          movr adx, ebx   
258 [0x102]:          chklen adx   
259 [0x103]:          movnd adx   
260 [0x104]:          popobj   
261 [0x105]: line: 58 movg @31 // @std.io#thread_result   
262 [0x106]:          movn #14   
264 [0x108]:          pushobj   
265 [0x109]:          movg @31 // @std.io#thread_result   
266 [0x10a]:          movn #17   
268 [0x10c]:          pushobj   
269 [0x10d]:          loadl ebx, fp+0   
270 [0x10e]:          movr egx, ebx   
271 [0x10f]:          inc ebx   
272 [0x110]:          smovr_2 ebx, fp+0   
273 [0x111]:          movr ebx, egx   
274 [0x112]:          popobj2    
275 [0x113]:          movr adx, ebx   
276 [0x114]:          chklen adx   
277 [0x115]:          movnd adx   
278 [0x116]:          popobj   
279 [0x117]: line: 59 movg @31 // @std.io#thread_result   
280 [0x118]:          movn #15   
282 [0x11a]:          pushobj   
283 [0x11b]:          movg @31 // @std.io#thread_result   
284 [0x11c]:          movn #17   
286 [0x11e]:          pushobj   
287 [0x11f]:          loadl ebx, fp+0   
288 [0x120]:          movr egx, ebx   
289 [0x121]:          inc ebx   
290 [0x122]:          smovr_2 ebx, fp+0   
291 [0x123]:          movr ebx, egx   
292 [0x124]:          popobj2    
293 [0x125]:          movr adx, ebx   
294 [0x126]:          chklen adx   
295 [0x127]:          movnd adx   
296 [0x128]:          popobj   
297 [0x129]: line: 60 movg @31 // @std.io#thread_result   
298 [0x12a]:          movn #16   
300 [0x12c]:          pushobj   
301 [0x12d]:          movg @31 // @std.io#thread_result   
302 [0x12e]:          movn #17   
304 [0x130]:          pushobj   
305 [0x131]:          loadl ebx, fp+0   
306 [0x132]:          movr egx, ebx   
307 [0x133]:          inc ebx   
308 [0x134]:          smovr_2 ebx, fp+0   
309 [0x135]:          movr ebx, egx   
310 [0x136]:          popobj2    
311 [0x137]:          movr adx, ebx   
312 [0x138]:          chklen adx   
313 [0x139]:          movnd adx   
314 [0x13a]:          popobj   
315 [0x13b]:          ret   
316 [0x13c]:          ret   


lambda: std.io.task#__srt_global.anon_func$3303[3303] params(2) in file: lib\support\0.2.805/io//task//job_master.sharp:71:35: note:  
				job_queue.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                  ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: std.io.task#__srt_global.anon_func$3304[3304] params(2) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:83:52: note:  
		                        jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                                   ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: std.io.task#__srt_global.anon_func$3305[3305] params(2) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:98:48: note:  
		                    jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                               ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: std.io.task#__srt_global.anon_func$3306[3306] params(1) in file: lib\support\0.2.805/io//task//job_scheduler.sharp:117:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 118 pushl 0   
1 [0x1]:           movg @20 // @std.io.task#__srt_global   
2 [0x2]:           movn #2   
4 [0x4]:           pushobj   
5 [0x5]:           call @1869 // <std.io#thread.operator==>   
6 [0x6]:           loadval ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 12   
9 [0x9]:           istorel 0, fp+0   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 120 movg @20 // @std.io.task#__srt_global   
14 [0xe]:           movn #3   
16 [0x10]:           pushobj   
17 [0x11]:           pushl 0   
18 [0x12]:           call @1812 // <std.io.task#job_master.get_host_controller>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           pushnull    
24 [0x18]:           itest ebx   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   


lambda: main#__srt_global.anon_func$3307[3307] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\controller/connection_tracker.sharp:19:10: note:  
		       = { ->
		         ^

0 [0x0]:         ret   


lambda: main#__srt_global.anon_func$3308[3308] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\controller/connection_tracker.sharp:32:10: note:  
		       = { ->
		         ^

0 [0x0]:         ret   


lambda: main#__srt_global.anon_func$3309[3309] params(0) in file: C:\Users\bnunnally\OneDrive\Documents\Clion\RaspiDrone\controller/main.sharp:29:9: note:  
		      = { ->
		        ^

0 [0x0]: line: 30 movg @95 // @main#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 9   
9 [0x9]:          nop   
10 [0xa]:          ret   


