## Object Dump file for bin/syntax:

pre codebase size: 83966
post codebase size: 75240
optimized opcodes: 8726
net % gain 10.3923


class: app#__srt_global[0] fields(1) methods(5)
class: std#__srt_global[1] fields(2) methods(57)
class: std#_enum_[2] fields(2) methods(19)
class: std#throwable[3] fields(3) methods(15)
class: std#exception[4] fields(3) methods(18)
class: std#illegal_argument_exception[5] fields(3) methods(21)
class: std#illegal_state_exception[6] fields(3) methods(21)
class: std#out_of_bounds_exception[7] fields(3) methods(21)
class: std#io_exception[8] fields(3) methods(21)
class: std#invalid_operation_exception[9] fields(3) methods(21)
class: std#nullptr_exception[10] fields(3) methods(21)
class: std#runtime_exception[11] fields(3) methods(21)
class: std#stack_overflow_exception[12] fields(3) methods(21)
class: std#thread_stack_exception[13] fields(3) methods(21)
class: std#class_cast_exception[14] fields(3) methods(21)
class: std#out_of_memory_exception[15] fields(3) methods(21)
class: std#not_implemented_error[16] fields(3) methods(24)
class: std#unsatisfied_link_error[17] fields(3) methods(24)
class: std#assertion_error[18] fields(3) methods(24)
class: std#error[19] fields(3) methods(21)
class: std.io#__srt_global[20] fields(1) methods(45)
enum: std.io#buffer_type[21] fields(6) methods(19)
class: std.io#file[22] fields(3) methods(52)
class: std.io#file_system[23] fields(18) methods(29)
class: std.io.task#__srt_global[24] fields(6) methods(18)
class: std.io.task#cancellation_exception[25] fields(3) methods(24)
class: std.io.task#job[26] fields(22) methods(30)
class: std.io.task#job_builder[27] fields(2) methods(23)
class: std.io.task#job_controller[28] fields(2) methods(10)
class: std.io.task#job_master[29] fields(5) methods(17)
enum: std.io.task#job_state[30] fields(6) methods(19)
class: std.io.task#task[31] fields(0) methods(19)
class: std.io#thread[32] fields(14) methods(46)
class: std.io#thread_group[33] fields(6) methods(22)
enum: std.io#thread_priority[34] fields(5) methods(19)
enum: std.io#thread_result[35] fields(20) methods(22)
interface: std.io#uncaught_exception_handler[36] fields(0) methods(11)
class: std.io#unix_fs[37] fields(20) methods(34)
class: std.io#win_fs[38] fields(20) methods(34)
class: std.math#__srt_global[39] fields(5) methods(27)
class: std#_nil_[40] fields(1) methods(13)
class: std#_object_[41] fields(0) methods(9)
class: platform#__srt_global[42] fields(0) methods(4)
class: platform#build[43] fields(4) methods(12)
class: platform.kernel#__srt_global[44] fields(0) methods(1)
class: platform.kernel#platform[45] fields(4) methods(18)
class: platform.kernel#stack_state[46] fields(2) methods(10)
class: platform.kernel#vm[47] fields(0) methods(31)
class: std#ulong[48] fields(1) methods(320)
class: std#long[49] fields(1) methods(320)
class: std#uint[50] fields(1) methods(320)
class: std#int[51] fields(1) methods(320)
class: std#ushort[52] fields(1) methods(320)
class: std#short[53] fields(1) methods(320)
class: std#uchar[54] fields(1) methods(320)
class: std#char[55] fields(1) methods(326)
class: std#byte[56] fields(1) methods(428)
class: std#bool[57] fields(1) methods(322)
class: std#double[58] fields(1) methods(320)
interface: std#printable[59] fields(0) methods(11)
class: std#tmp[60] fields(0) methods(11)
class: std.reflect#__srt_global[61] fields(0) methods(1)
class: std.reflect#_class_[62] fields(6) methods(11)
class: std.reflect#data_entity[63] fields(6) methods(10)
enum: std.reflect#data_type[64] fields(19) methods(19)
enum: std.reflect#property_type[65] fields(5) methods(19)
class: std.reflect#data_property[66] fields(6) methods(11)
class: std.reflect#field[67] fields(2) methods(10)
class: std.reflect#function[68] fields(6) methods(11)
class: std.reflect#reflect[69] fields(4) methods(13)
class: std#string[70] fields(3) methods(69)
class: std#string_builder[71] fields(7) methods(55)
class: std#time[72] fields(1) methods(23)
enum: std#time_request[73] fields(11) methods(19)
enum: std#time_unit[74] fields(6) methods(19)
interface: std#unique[75] fields(0) methods(12)
std#loopable<std.io#thread>[76] fields(0) methods(11)
generic: std#integer<_uint64>[77] fields(1) methods(218)
generic: std#integer<_int64>[78] fields(1) methods(218)
generic: std#integer<_uint32>[79] fields(1) methods(218)
generic: std#integer<_int32>[80] fields(1) methods(218)
generic: std#integer<_uint16>[81] fields(1) methods(218)
generic: std#integer<_int16>[82] fields(1) methods(218)
generic: std#integer<_uint8>[83] fields(1) methods(218)
generic: std#integer<_int8>[84] fields(1) methods(218)
generic: std#integer<var>[85] fields(1) methods(218)
std#loopable<_int8>[86] fields(0) methods(11)
generic: std#list<std#string>[87] fields(5) methods(37)
std#loopable<std#string>[88] fields(0) methods(11)
generic: std#hashtable<std.io#thread,std.io.task#job_controller>[89] fields(6) methods(17)
generic: std#hashtable<std#int,std.io#thread>[90] fields(6) methods(17)
generic: std.io#channel<var>[91] fields(6) methods(28)
enum: std.io#channel<t>.channel_state[92] fields(4) methods(19)
std.io#receive_channel<var>[93] fields(0) methods(15)
std.io#send_channel<var>[94] fields(0) methods(14)
std#loopable<var>[95] fields(0) methods(11)
generic: std#list<std.io#thread>[96] fields(5) methods(37)
generic: std#synced_list<std.io.task#job>[97] fields(5) methods(35)
std#loopable<std.io.task#job>[98] fields(0) methods(11)
generic: std#list<std.io.task#job>[99] fields(5) methods(37)
generic: std#list<var>[100] fields(5) methods(37)
generic: std.io.task#entry<std.io#thread,std.io.task#job_controller>[101] fields(3) methods(12)
generic: std.io#entry<std#int,std.io#thread>[102] fields(3) methods(12)
generic: app#filter<var>[103] fields(3) methods(17)
generic: std#list<app#filter<var>>[104] fields(5) methods(37)
std#loopable<app#filter<var>>[105] fields(0) methods(11)
generic: app#channel_data<var>[106] fields(2) methods(10)


 strings: 

[0]: job#
[1]: nil
[2]: main
[3]: 
[4]: data: 
[5]: test: 
[6]: assertion failed!
[7]: file path cannot be null
[8]: file path cannot be empty
[9]: Negative time
[10]: file could not be resolved: 
[11]: cannot set update restart interval on non-recurring job
[12]: cannot set a timeout on a job that's blocking the calling thread
[13]: cannot set a job recurring that's blocking the calling thread
[14]: cannot block calling thread on job that has a timeout
[15]: cannot block calling thread on a recurring job
[16]: recurring jobs cannot be deferred tasks
[17]: Long term jobs
[18]: Short term jobs
[19]: task_scheduler
[20]: cannot modify max thread count after task library has started, 
[21]: try calling this before your first task
[22]: cannot modify max thread count after task library has started, try calling this before your first ta
[23]: cannot have less than 2 max threads
[24]: long_term_worker_thread#
[25]: worker_thread#
[26]: invalid thread priority 
[27]: win
[28]: posix
[29]: .dll
[30]: .so
[31]: true
[32]: false
[33]: length cannot be less than zero
[34]: length of: 
[35]:  is greater than the string: 
[36]: null
[37]: invalid precision: 
[38]: end_pos: 
[39]:  cannot be less than the start_pos: 
[40]: Index out of bounds exception at: 
[41]:  with size of: 
[42]: endPos: 
[43]:  cannot be less than the startPos: 
[44]: cannot sleep for negative time: 
[45]: EXCLUSIVE
[46]: SINGLE
[47]: UNLIMITED
[48]: BUFFERED
[49]: created
[50]: active
[51]: completed
[52]: cancelled
[53]: min_priority
[54]: norm_priority
[55]: max_priority
[56]: result_ok
[57]: result_ill_thread_start
[58]: result_thread_running
[59]: result_thread_terminated
[60]: result_invalid_stack_size
[61]: result_thread_not_started
[62]: result_ill_thread_join
[63]: result_thread_join_failed
[64]: result_ill_thread_interrupt
[65]: result_thread_interrupt_failed
[66]: result_ill_thread_destroy
[67]: result_thread_create_failed
[68]: result_no_thread_id
[69]: result_thread_destroy_failed
[70]: result_ill_priority_set
[71]: result_ill_thread_suspend
[72]: result_max_spin
[73]: enums
[74]: int8
[75]: int16
[76]: int32
[77]: int64
[78]: uint8
[79]: uint16
[80]: uint32
[81]: uint64
[82]: fnptr
[83]: _var
[84]: _object
[85]: _class
[86]: method
[87]: _nil
[88]: any
[89]: untyped
[90]: undefined
[91]: class_property
[92]: field_property
[93]: function_property
[94]: tm_seconds
[95]: tm_minutes
[96]: tm_hour
[97]: tm_mday
[98]: tm_mon
[99]: tm_year
[100]: tm_wday
[101]: tm_yday
[102]: tm_isdst
[103]: seconds
[104]: milliseconds
[105]: microseconds
[106]: nanoseconds
[107]: OPEN
[108]: CLOSED
[109]: illegal char in string: 
[110]: [ 
[111]: , 
[112]:  ]
[113]: Index: 
[114]: , size: 
[115]: channel capacity cannot be < 0
[116]: channels must have at least 1 filter
[117]: invalid send on filter (
[118]: ) when max filter is 
[119]: key 
[120]:  value 

 constants: 

[0]: 2.7182818284590451e+00
[1]: 3.1415926535897931e+00
[2]: 1.0000000000000000e+00
[3]: 0.0000000000000000e+00
[4]: inf
[5]: nan
[6]: nan
[7]: 7.5000000000000000e-01
[8]: 2.5000000000000000e-01
[9]: 5.0000000000000000e-01
[10]: 1.0000000000000000e+09

 methods: 
constructor: app#__srt_global.__srt_global[0] params(0) in file: tests/syntax.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std#__srt_global.__srt_global[1] params(0) in file: lib\support\0.2.9/console.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io#__srt_global.__srt_global[2] params(0) in file: lib\support\0.2.9/io//atomic.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io.task#__srt_global.__srt_global[3] params(0) in file: lib\support\0.2.9/io//task//cancellation_exception.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.math#__srt_global.__srt_global[4] params(0) in file: lib\support\0.2.9/math//math.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform#__srt_global.__srt_global[5] params(0) in file: lib\support\0.2.9/platform//build.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform.kernel#__srt_global.__srt_global[6] params(0) in file: lib\support\0.2.9/platform//kernel//platform.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.reflect#__srt_global.__srt_global[7] params(0) in file: lib\support\0.2.9/reflect//class.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


std#loopable<std.io#thread>.get_elements[8] params(0) in file: lib\support\0.2.9/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<std.io#thread>.loopable[9] params(0) in file: lib\support\0.2.9/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint64>.integer[10] params(1) in file: lib\support\0.2.9/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu64 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_uint64>.hash[11] params(0) in file: lib\support\0.2.9/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2430 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint64>.operator!=[12] params(1) in file: lib\support\0.2.9/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[13] params(1) in file: lib\support\0.2.9/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[14] params(1) in file: lib\support\0.2.9/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[15] params(1) in file: lib\support\0.2.9/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[16] params(1) in file: lib\support\0.2.9/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[17] params(1) in file: lib\support\0.2.9/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[18] params(1) in file: lib\support\0.2.9/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[19] params(1) in file: lib\support\0.2.9/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[20] params(1) in file: lib\support\0.2.9/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[21] params(1) in file: lib\support\0.2.9/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[22] params(1) in file: lib\support\0.2.9/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[23] params(1) in file: lib\support\0.2.9/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[24] params(1) in file: lib\support\0.2.9/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[25] params(1) in file: lib\support\0.2.9/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[26] params(1) in file: lib\support\0.2.9/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[27] params(1) in file: lib\support\0.2.9/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[28] params(1) in file: lib\support\0.2.9/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[29] params(1) in file: lib\support\0.2.9/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[30] params(1) in file: lib\support\0.2.9/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[31] params(1) in file: lib\support\0.2.9/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[32] params(1) in file: lib\support\0.2.9/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[33] params(1) in file: lib\support\0.2.9/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[34] params(1) in file: lib\support\0.2.9/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[35] params(1) in file: lib\support\0.2.9/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[36] params(1) in file: lib\support\0.2.9/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[37] params(1) in file: lib\support\0.2.9/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[38] params(1) in file: lib\support\0.2.9/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[39] params(1) in file: lib\support\0.2.9/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[40] params(1) in file: lib\support\0.2.9/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[41] params(1) in file: lib\support\0.2.9/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[42] params(1) in file: lib\support\0.2.9/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[43] params(1) in file: lib\support\0.2.9/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[44] params(1) in file: lib\support\0.2.9/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator-[45] params(1) in file: lib\support\0.2.9/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[46] params(1) in file: lib\support\0.2.9/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[47] params(1) in file: lib\support\0.2.9/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[48] params(1) in file: lib\support\0.2.9/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[49] params(1) in file: lib\support\0.2.9/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[50] params(1) in file: lib\support\0.2.9/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[51] params(1) in file: lib\support\0.2.9/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[52] params(1) in file: lib\support\0.2.9/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[53] params(1) in file: lib\support\0.2.9/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[54] params(1) in file: lib\support\0.2.9/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[55] params(1) in file: lib\support\0.2.9/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[56] params(1) in file: lib\support\0.2.9/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator*[57] params(1) in file: lib\support\0.2.9/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[58] params(1) in file: lib\support\0.2.9/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[59] params(1) in file: lib\support\0.2.9/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[60] params(1) in file: lib\support\0.2.9/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[61] params(1) in file: lib\support\0.2.9/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[62] params(1) in file: lib\support\0.2.9/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[63] params(1) in file: lib\support\0.2.9/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[64] params(1) in file: lib\support\0.2.9/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[65] params(1) in file: lib\support\0.2.9/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[66] params(1) in file: lib\support\0.2.9/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[67] params(1) in file: lib\support\0.2.9/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[68] params(1) in file: lib\support\0.2.9/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator/[69] params(1) in file: lib\support\0.2.9/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[70] params(1) in file: lib\support\0.2.9/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[71] params(1) in file: lib\support\0.2.9/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[72] params(1) in file: lib\support\0.2.9/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[73] params(1) in file: lib\support\0.2.9/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[74] params(1) in file: lib\support\0.2.9/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[75] params(1) in file: lib\support\0.2.9/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[76] params(1) in file: lib\support\0.2.9/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[77] params(1) in file: lib\support\0.2.9/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[78] params(1) in file: lib\support\0.2.9/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[79] params(1) in file: lib\support\0.2.9/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[80] params(1) in file: lib\support\0.2.9/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator%[81] params(1) in file: lib\support\0.2.9/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[82] params(1) in file: lib\support\0.2.9/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[83] params(1) in file: lib\support\0.2.9/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[84] params(1) in file: lib\support\0.2.9/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[85] params(1) in file: lib\support\0.2.9/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[86] params(1) in file: lib\support\0.2.9/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[87] params(1) in file: lib\support\0.2.9/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[88] params(1) in file: lib\support\0.2.9/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[89] params(1) in file: lib\support\0.2.9/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[90] params(1) in file: lib\support\0.2.9/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[91] params(1) in file: lib\support\0.2.9/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator%[92] params(1) in file: lib\support\0.2.9/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator<[93] params(1) in file: lib\support\0.2.9/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[94] params(1) in file: lib\support\0.2.9/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[95] params(1) in file: lib\support\0.2.9/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[96] params(1) in file: lib\support\0.2.9/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[97] params(1) in file: lib\support\0.2.9/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[98] params(1) in file: lib\support\0.2.9/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[99] params(1) in file: lib\support\0.2.9/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[100] params(1) in file: lib\support\0.2.9/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[101] params(1) in file: lib\support\0.2.9/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[102] params(1) in file: lib\support\0.2.9/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[103] params(1) in file: lib\support\0.2.9/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[104] params(1) in file: lib\support\0.2.9/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator>[105] params(1) in file: lib\support\0.2.9/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[106] params(1) in file: lib\support\0.2.9/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[107] params(1) in file: lib\support\0.2.9/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[108] params(1) in file: lib\support\0.2.9/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[109] params(1) in file: lib\support\0.2.9/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[110] params(1) in file: lib\support\0.2.9/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[111] params(1) in file: lib\support\0.2.9/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[112] params(1) in file: lib\support\0.2.9/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[113] params(1) in file: lib\support\0.2.9/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[114] params(1) in file: lib\support\0.2.9/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[115] params(1) in file: lib\support\0.2.9/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[116] params(1) in file: lib\support\0.2.9/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator<=[117] params(1) in file: lib\support\0.2.9/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[118] params(1) in file: lib\support\0.2.9/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[119] params(1) in file: lib\support\0.2.9/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[120] params(1) in file: lib\support\0.2.9/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[121] params(1) in file: lib\support\0.2.9/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[122] params(1) in file: lib\support\0.2.9/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[123] params(1) in file: lib\support\0.2.9/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[124] params(1) in file: lib\support\0.2.9/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[125] params(1) in file: lib\support\0.2.9/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[126] params(1) in file: lib\support\0.2.9/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[127] params(1) in file: lib\support\0.2.9/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[128] params(1) in file: lib\support\0.2.9/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator**[129] params(1) in file: lib\support\0.2.9/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[130] params(1) in file: lib\support\0.2.9/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[131] params(1) in file: lib\support\0.2.9/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[132] params(1) in file: lib\support\0.2.9/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[133] params(1) in file: lib\support\0.2.9/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[134] params(1) in file: lib\support\0.2.9/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[135] params(1) in file: lib\support\0.2.9/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[136] params(1) in file: lib\support\0.2.9/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[137] params(1) in file: lib\support\0.2.9/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[138] params(1) in file: lib\support\0.2.9/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[139] params(1) in file: lib\support\0.2.9/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[140] params(1) in file: lib\support\0.2.9/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator<<[141] params(1) in file: lib\support\0.2.9/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[142] params(1) in file: lib\support\0.2.9/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[143] params(1) in file: lib\support\0.2.9/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[144] params(1) in file: lib\support\0.2.9/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[145] params(1) in file: lib\support\0.2.9/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[146] params(1) in file: lib\support\0.2.9/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[147] params(1) in file: lib\support\0.2.9/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[148] params(1) in file: lib\support\0.2.9/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[149] params(1) in file: lib\support\0.2.9/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[150] params(1) in file: lib\support\0.2.9/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[151] params(1) in file: lib\support\0.2.9/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[152] params(1) in file: lib\support\0.2.9/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator>>[153] params(1) in file: lib\support\0.2.9/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[154] params(1) in file: lib\support\0.2.9/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[155] params(1) in file: lib\support\0.2.9/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[156] params(1) in file: lib\support\0.2.9/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[157] params(1) in file: lib\support\0.2.9/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[158] params(1) in file: lib\support\0.2.9/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[159] params(1) in file: lib\support\0.2.9/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[160] params(1) in file: lib\support\0.2.9/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[161] params(1) in file: lib\support\0.2.9/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[162] params(1) in file: lib\support\0.2.9/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[163] params(1) in file: lib\support\0.2.9/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[164] params(1) in file: lib\support\0.2.9/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator^[165] params(1) in file: lib\support\0.2.9/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[166] params(1) in file: lib\support\0.2.9/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[167] params(1) in file: lib\support\0.2.9/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[168] params(1) in file: lib\support\0.2.9/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[169] params(1) in file: lib\support\0.2.9/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[170] params(1) in file: lib\support\0.2.9/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[171] params(1) in file: lib\support\0.2.9/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[172] params(1) in file: lib\support\0.2.9/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[173] params(1) in file: lib\support\0.2.9/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[174] params(1) in file: lib\support\0.2.9/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[175] params(1) in file: lib\support\0.2.9/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[176] params(1) in file: lib\support\0.2.9/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator&[177] params(1) in file: lib\support\0.2.9/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[178] params(1) in file: lib\support\0.2.9/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[179] params(1) in file: lib\support\0.2.9/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[180] params(1) in file: lib\support\0.2.9/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[181] params(1) in file: lib\support\0.2.9/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[182] params(1) in file: lib\support\0.2.9/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[183] params(1) in file: lib\support\0.2.9/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[184] params(1) in file: lib\support\0.2.9/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[185] params(1) in file: lib\support\0.2.9/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[186] params(1) in file: lib\support\0.2.9/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[187] params(1) in file: lib\support\0.2.9/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[188] params(1) in file: lib\support\0.2.9/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator|[189] params(1) in file: lib\support\0.2.9/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[190] params(1) in file: lib\support\0.2.9/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[191] params(1) in file: lib\support\0.2.9/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[192] params(1) in file: lib\support\0.2.9/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[193] params(1) in file: lib\support\0.2.9/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[194] params(1) in file: lib\support\0.2.9/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[195] params(1) in file: lib\support\0.2.9/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[196] params(1) in file: lib\support\0.2.9/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[197] params(1) in file: lib\support\0.2.9/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[198] params(1) in file: lib\support\0.2.9/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[199] params(1) in file: lib\support\0.2.9/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[200] params(1) in file: lib\support\0.2.9/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator!=[201] params(1) in file: lib\support\0.2.9/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator==[202] params(1) in file: lib\support\0.2.9/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator=[203] params(1) in file: lib\support\0.2.9/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint64>.to_string[204] params(0) in file: lib\support\0.2.9/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3509 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint64>.parse[205] params(1) in file: lib\support\0.2.9/primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @1896 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3510 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3491 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3491 // <std#string.at>   
47 [0x2f]:           call @3132 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // app#__srt_global   
53 [0x35]:           newarry adx: 0   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // app#__srt_global   
56 [0x38]:           checknull   
57 [0x39]:           dup    
58 [0x3a]:           newstr @109 // illegal char in string:    
59 [0x3b]:           call @3469 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3491 // <std#string.at>   
63 [0x3f]:           call @3502 // <std#string.operator+>   
64 [0x40]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu64 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3491 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu64 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu64 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_uint64>.to_ulong[206] params(0) in file: lib\support\0.2.9/primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // app#__srt_global   
1 [0x1]:           new_class @0 // app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_long[207] params(0) in file: lib\support\0.2.9/primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // app#__srt_global   
1 [0x1]:           movn #293   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_uint[208] params(0) in file: lib\support\0.2.9/primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // app#__srt_global   
1 [0x1]:           sleep adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_int[209] params(0) in file: lib\support\0.2.9/primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // app#__srt_global   
1 [0x1]:           test adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_ushort[210] params(0) in file: lib\support\0.2.9/primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // app#__srt_global   
1 [0x1]:           tne adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_short[211] params(0) in file: lib\support\0.2.9/primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // app#__srt_global   
1 [0x1]:           _lck    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_uchar[212] params(0) in file: lib\support\0.2.9/primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // app#__srt_global   
1 [0x1]:           _ulck   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_char[213] params(0) in file: lib\support\0.2.9/primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // app#__srt_global   
1 [0x1]:           movg @0 // @app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_byte[214] params(0) in file: lib\support\0.2.9/primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // app#__srt_global   
1 [0x1]:           movnd adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_bool[215] params(0) in file: lib\support\0.2.9/primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // app#__srt_global   
1 [0x1]:           newobj_arry adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_double[216] params(0) in file: lib\support\0.2.9/primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // app#__srt_global   
1 [0x1]:           not adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.get_value[217] params(0) in file: lib\support\0.2.9/primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint64>.integer[218] params(0) in file: lib\support\0.2.9/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int64>.integer[219] params(1) in file: lib\support\0.2.9/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov64 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_int64>.hash[220] params(0) in file: lib\support\0.2.9/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2430 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int64>.operator!=[221] params(1) in file: lib\support\0.2.9/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[222] params(1) in file: lib\support\0.2.9/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[223] params(1) in file: lib\support\0.2.9/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[224] params(1) in file: lib\support\0.2.9/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[225] params(1) in file: lib\support\0.2.9/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[226] params(1) in file: lib\support\0.2.9/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[227] params(1) in file: lib\support\0.2.9/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[228] params(1) in file: lib\support\0.2.9/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[229] params(1) in file: lib\support\0.2.9/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[230] params(1) in file: lib\support\0.2.9/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[231] params(1) in file: lib\support\0.2.9/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[232] params(1) in file: lib\support\0.2.9/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[233] params(1) in file: lib\support\0.2.9/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[234] params(1) in file: lib\support\0.2.9/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[235] params(1) in file: lib\support\0.2.9/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[236] params(1) in file: lib\support\0.2.9/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[237] params(1) in file: lib\support\0.2.9/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[238] params(1) in file: lib\support\0.2.9/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[239] params(1) in file: lib\support\0.2.9/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[240] params(1) in file: lib\support\0.2.9/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[241] params(1) in file: lib\support\0.2.9/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[242] params(1) in file: lib\support\0.2.9/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[243] params(1) in file: lib\support\0.2.9/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[244] params(1) in file: lib\support\0.2.9/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[245] params(1) in file: lib\support\0.2.9/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[246] params(1) in file: lib\support\0.2.9/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[247] params(1) in file: lib\support\0.2.9/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[248] params(1) in file: lib\support\0.2.9/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[249] params(1) in file: lib\support\0.2.9/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[250] params(1) in file: lib\support\0.2.9/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[251] params(1) in file: lib\support\0.2.9/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[252] params(1) in file: lib\support\0.2.9/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[253] params(1) in file: lib\support\0.2.9/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator-[254] params(1) in file: lib\support\0.2.9/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[255] params(1) in file: lib\support\0.2.9/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[256] params(1) in file: lib\support\0.2.9/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[257] params(1) in file: lib\support\0.2.9/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[258] params(1) in file: lib\support\0.2.9/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[259] params(1) in file: lib\support\0.2.9/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[260] params(1) in file: lib\support\0.2.9/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[261] params(1) in file: lib\support\0.2.9/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[262] params(1) in file: lib\support\0.2.9/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[263] params(1) in file: lib\support\0.2.9/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[264] params(1) in file: lib\support\0.2.9/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[265] params(1) in file: lib\support\0.2.9/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator*[266] params(1) in file: lib\support\0.2.9/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[267] params(1) in file: lib\support\0.2.9/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[268] params(1) in file: lib\support\0.2.9/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[269] params(1) in file: lib\support\0.2.9/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[270] params(1) in file: lib\support\0.2.9/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[271] params(1) in file: lib\support\0.2.9/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[272] params(1) in file: lib\support\0.2.9/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[273] params(1) in file: lib\support\0.2.9/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[274] params(1) in file: lib\support\0.2.9/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[275] params(1) in file: lib\support\0.2.9/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[276] params(1) in file: lib\support\0.2.9/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[277] params(1) in file: lib\support\0.2.9/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator/[278] params(1) in file: lib\support\0.2.9/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[279] params(1) in file: lib\support\0.2.9/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[280] params(1) in file: lib\support\0.2.9/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[281] params(1) in file: lib\support\0.2.9/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[282] params(1) in file: lib\support\0.2.9/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[283] params(1) in file: lib\support\0.2.9/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[284] params(1) in file: lib\support\0.2.9/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[285] params(1) in file: lib\support\0.2.9/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[286] params(1) in file: lib\support\0.2.9/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[287] params(1) in file: lib\support\0.2.9/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[288] params(1) in file: lib\support\0.2.9/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[289] params(1) in file: lib\support\0.2.9/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator%[290] params(1) in file: lib\support\0.2.9/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[291] params(1) in file: lib\support\0.2.9/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[292] params(1) in file: lib\support\0.2.9/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[293] params(1) in file: lib\support\0.2.9/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[294] params(1) in file: lib\support\0.2.9/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[295] params(1) in file: lib\support\0.2.9/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[296] params(1) in file: lib\support\0.2.9/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[297] params(1) in file: lib\support\0.2.9/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[298] params(1) in file: lib\support\0.2.9/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[299] params(1) in file: lib\support\0.2.9/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[300] params(1) in file: lib\support\0.2.9/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator%[301] params(1) in file: lib\support\0.2.9/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator<[302] params(1) in file: lib\support\0.2.9/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[303] params(1) in file: lib\support\0.2.9/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[304] params(1) in file: lib\support\0.2.9/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[305] params(1) in file: lib\support\0.2.9/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[306] params(1) in file: lib\support\0.2.9/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[307] params(1) in file: lib\support\0.2.9/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[308] params(1) in file: lib\support\0.2.9/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[309] params(1) in file: lib\support\0.2.9/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[310] params(1) in file: lib\support\0.2.9/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[311] params(1) in file: lib\support\0.2.9/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[312] params(1) in file: lib\support\0.2.9/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[313] params(1) in file: lib\support\0.2.9/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator>[314] params(1) in file: lib\support\0.2.9/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[315] params(1) in file: lib\support\0.2.9/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[316] params(1) in file: lib\support\0.2.9/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[317] params(1) in file: lib\support\0.2.9/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[318] params(1) in file: lib\support\0.2.9/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[319] params(1) in file: lib\support\0.2.9/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[320] params(1) in file: lib\support\0.2.9/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[321] params(1) in file: lib\support\0.2.9/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[322] params(1) in file: lib\support\0.2.9/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[323] params(1) in file: lib\support\0.2.9/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[324] params(1) in file: lib\support\0.2.9/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[325] params(1) in file: lib\support\0.2.9/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator<=[326] params(1) in file: lib\support\0.2.9/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[327] params(1) in file: lib\support\0.2.9/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[328] params(1) in file: lib\support\0.2.9/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[329] params(1) in file: lib\support\0.2.9/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[330] params(1) in file: lib\support\0.2.9/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[331] params(1) in file: lib\support\0.2.9/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[332] params(1) in file: lib\support\0.2.9/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[333] params(1) in file: lib\support\0.2.9/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[334] params(1) in file: lib\support\0.2.9/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[335] params(1) in file: lib\support\0.2.9/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[336] params(1) in file: lib\support\0.2.9/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[337] params(1) in file: lib\support\0.2.9/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator**[338] params(1) in file: lib\support\0.2.9/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[339] params(1) in file: lib\support\0.2.9/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[340] params(1) in file: lib\support\0.2.9/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[341] params(1) in file: lib\support\0.2.9/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[342] params(1) in file: lib\support\0.2.9/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[343] params(1) in file: lib\support\0.2.9/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[344] params(1) in file: lib\support\0.2.9/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[345] params(1) in file: lib\support\0.2.9/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[346] params(1) in file: lib\support\0.2.9/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[347] params(1) in file: lib\support\0.2.9/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[348] params(1) in file: lib\support\0.2.9/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[349] params(1) in file: lib\support\0.2.9/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator<<[350] params(1) in file: lib\support\0.2.9/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[351] params(1) in file: lib\support\0.2.9/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[352] params(1) in file: lib\support\0.2.9/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[353] params(1) in file: lib\support\0.2.9/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[354] params(1) in file: lib\support\0.2.9/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[355] params(1) in file: lib\support\0.2.9/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[356] params(1) in file: lib\support\0.2.9/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[357] params(1) in file: lib\support\0.2.9/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[358] params(1) in file: lib\support\0.2.9/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[359] params(1) in file: lib\support\0.2.9/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[360] params(1) in file: lib\support\0.2.9/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[361] params(1) in file: lib\support\0.2.9/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator>>[362] params(1) in file: lib\support\0.2.9/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[363] params(1) in file: lib\support\0.2.9/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[364] params(1) in file: lib\support\0.2.9/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[365] params(1) in file: lib\support\0.2.9/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[366] params(1) in file: lib\support\0.2.9/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[367] params(1) in file: lib\support\0.2.9/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[368] params(1) in file: lib\support\0.2.9/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[369] params(1) in file: lib\support\0.2.9/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[370] params(1) in file: lib\support\0.2.9/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[371] params(1) in file: lib\support\0.2.9/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[372] params(1) in file: lib\support\0.2.9/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[373] params(1) in file: lib\support\0.2.9/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator^[374] params(1) in file: lib\support\0.2.9/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[375] params(1) in file: lib\support\0.2.9/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[376] params(1) in file: lib\support\0.2.9/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[377] params(1) in file: lib\support\0.2.9/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[378] params(1) in file: lib\support\0.2.9/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[379] params(1) in file: lib\support\0.2.9/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[380] params(1) in file: lib\support\0.2.9/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[381] params(1) in file: lib\support\0.2.9/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[382] params(1) in file: lib\support\0.2.9/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[383] params(1) in file: lib\support\0.2.9/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[384] params(1) in file: lib\support\0.2.9/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[385] params(1) in file: lib\support\0.2.9/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator&[386] params(1) in file: lib\support\0.2.9/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[387] params(1) in file: lib\support\0.2.9/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[388] params(1) in file: lib\support\0.2.9/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[389] params(1) in file: lib\support\0.2.9/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[390] params(1) in file: lib\support\0.2.9/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[391] params(1) in file: lib\support\0.2.9/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[392] params(1) in file: lib\support\0.2.9/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[393] params(1) in file: lib\support\0.2.9/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[394] params(1) in file: lib\support\0.2.9/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[395] params(1) in file: lib\support\0.2.9/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[396] params(1) in file: lib\support\0.2.9/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[397] params(1) in file: lib\support\0.2.9/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator|[398] params(1) in file: lib\support\0.2.9/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[399] params(1) in file: lib\support\0.2.9/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[400] params(1) in file: lib\support\0.2.9/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[401] params(1) in file: lib\support\0.2.9/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[402] params(1) in file: lib\support\0.2.9/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[403] params(1) in file: lib\support\0.2.9/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[404] params(1) in file: lib\support\0.2.9/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[405] params(1) in file: lib\support\0.2.9/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[406] params(1) in file: lib\support\0.2.9/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[407] params(1) in file: lib\support\0.2.9/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[408] params(1) in file: lib\support\0.2.9/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[409] params(1) in file: lib\support\0.2.9/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator!=[410] params(1) in file: lib\support\0.2.9/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator==[411] params(1) in file: lib\support\0.2.9/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator=[412] params(1) in file: lib\support\0.2.9/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int64>.to_string[413] params(0) in file: lib\support\0.2.9/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3505 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int64>.parse[414] params(1) in file: lib\support\0.2.9/primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @1896 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3510 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3491 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3491 // <std#string.at>   
47 [0x2f]:           call @3132 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // app#__srt_global   
53 [0x35]:           newarry adx: 0   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // app#__srt_global   
56 [0x38]:           checknull   
57 [0x39]:           dup    
58 [0x3a]:           newstr @109 // illegal char in string:    
59 [0x3b]:           call @3469 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3491 // <std#string.at>   
63 [0x3f]:           call @3502 // <std#string.operator+>   
64 [0x40]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov64 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3491 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov64 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov64 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_int64>.to_ulong[415] params(0) in file: lib\support\0.2.9/primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // app#__srt_global   
1 [0x1]:           new_class @0 // app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_long[416] params(0) in file: lib\support\0.2.9/primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // app#__srt_global   
1 [0x1]:           movn #293   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_uint[417] params(0) in file: lib\support\0.2.9/primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // app#__srt_global   
1 [0x1]:           sleep adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_int[418] params(0) in file: lib\support\0.2.9/primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // app#__srt_global   
1 [0x1]:           test adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_ushort[419] params(0) in file: lib\support\0.2.9/primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // app#__srt_global   
1 [0x1]:           tne adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_short[420] params(0) in file: lib\support\0.2.9/primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // app#__srt_global   
1 [0x1]:           _lck    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_uchar[421] params(0) in file: lib\support\0.2.9/primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // app#__srt_global   
1 [0x1]:           _ulck   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_char[422] params(0) in file: lib\support\0.2.9/primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // app#__srt_global   
1 [0x1]:           movg @0 // @app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_byte[423] params(0) in file: lib\support\0.2.9/primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // app#__srt_global   
1 [0x1]:           movnd adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_bool[424] params(0) in file: lib\support\0.2.9/primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // app#__srt_global   
1 [0x1]:           newobj_arry adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_double[425] params(0) in file: lib\support\0.2.9/primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // app#__srt_global   
1 [0x1]:           not adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.get_value[426] params(0) in file: lib\support\0.2.9/primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int64>.integer[427] params(0) in file: lib\support\0.2.9/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint32>.integer[428] params(1) in file: lib\support\0.2.9/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu32 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_uint32>.hash[429] params(0) in file: lib\support\0.2.9/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2430 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint32>.operator!=[430] params(1) in file: lib\support\0.2.9/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[431] params(1) in file: lib\support\0.2.9/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[432] params(1) in file: lib\support\0.2.9/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[433] params(1) in file: lib\support\0.2.9/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[434] params(1) in file: lib\support\0.2.9/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[435] params(1) in file: lib\support\0.2.9/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[436] params(1) in file: lib\support\0.2.9/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[437] params(1) in file: lib\support\0.2.9/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[438] params(1) in file: lib\support\0.2.9/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[439] params(1) in file: lib\support\0.2.9/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[440] params(1) in file: lib\support\0.2.9/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[441] params(1) in file: lib\support\0.2.9/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[442] params(1) in file: lib\support\0.2.9/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[443] params(1) in file: lib\support\0.2.9/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[444] params(1) in file: lib\support\0.2.9/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[445] params(1) in file: lib\support\0.2.9/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[446] params(1) in file: lib\support\0.2.9/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[447] params(1) in file: lib\support\0.2.9/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[448] params(1) in file: lib\support\0.2.9/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[449] params(1) in file: lib\support\0.2.9/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[450] params(1) in file: lib\support\0.2.9/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[451] params(1) in file: lib\support\0.2.9/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[452] params(1) in file: lib\support\0.2.9/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[453] params(1) in file: lib\support\0.2.9/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[454] params(1) in file: lib\support\0.2.9/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[455] params(1) in file: lib\support\0.2.9/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[456] params(1) in file: lib\support\0.2.9/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[457] params(1) in file: lib\support\0.2.9/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[458] params(1) in file: lib\support\0.2.9/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[459] params(1) in file: lib\support\0.2.9/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[460] params(1) in file: lib\support\0.2.9/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[461] params(1) in file: lib\support\0.2.9/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[462] params(1) in file: lib\support\0.2.9/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator-[463] params(1) in file: lib\support\0.2.9/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[464] params(1) in file: lib\support\0.2.9/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[465] params(1) in file: lib\support\0.2.9/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[466] params(1) in file: lib\support\0.2.9/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[467] params(1) in file: lib\support\0.2.9/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[468] params(1) in file: lib\support\0.2.9/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[469] params(1) in file: lib\support\0.2.9/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[470] params(1) in file: lib\support\0.2.9/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[471] params(1) in file: lib\support\0.2.9/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[472] params(1) in file: lib\support\0.2.9/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[473] params(1) in file: lib\support\0.2.9/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[474] params(1) in file: lib\support\0.2.9/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator*[475] params(1) in file: lib\support\0.2.9/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[476] params(1) in file: lib\support\0.2.9/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[477] params(1) in file: lib\support\0.2.9/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[478] params(1) in file: lib\support\0.2.9/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[479] params(1) in file: lib\support\0.2.9/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[480] params(1) in file: lib\support\0.2.9/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[481] params(1) in file: lib\support\0.2.9/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[482] params(1) in file: lib\support\0.2.9/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[483] params(1) in file: lib\support\0.2.9/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[484] params(1) in file: lib\support\0.2.9/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[485] params(1) in file: lib\support\0.2.9/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[486] params(1) in file: lib\support\0.2.9/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator/[487] params(1) in file: lib\support\0.2.9/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[488] params(1) in file: lib\support\0.2.9/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[489] params(1) in file: lib\support\0.2.9/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[490] params(1) in file: lib\support\0.2.9/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[491] params(1) in file: lib\support\0.2.9/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[492] params(1) in file: lib\support\0.2.9/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[493] params(1) in file: lib\support\0.2.9/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[494] params(1) in file: lib\support\0.2.9/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[495] params(1) in file: lib\support\0.2.9/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[496] params(1) in file: lib\support\0.2.9/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[497] params(1) in file: lib\support\0.2.9/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[498] params(1) in file: lib\support\0.2.9/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator%[499] params(1) in file: lib\support\0.2.9/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[500] params(1) in file: lib\support\0.2.9/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[501] params(1) in file: lib\support\0.2.9/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[502] params(1) in file: lib\support\0.2.9/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[503] params(1) in file: lib\support\0.2.9/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[504] params(1) in file: lib\support\0.2.9/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[505] params(1) in file: lib\support\0.2.9/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[506] params(1) in file: lib\support\0.2.9/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[507] params(1) in file: lib\support\0.2.9/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[508] params(1) in file: lib\support\0.2.9/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[509] params(1) in file: lib\support\0.2.9/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator%[510] params(1) in file: lib\support\0.2.9/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator<[511] params(1) in file: lib\support\0.2.9/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[512] params(1) in file: lib\support\0.2.9/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[513] params(1) in file: lib\support\0.2.9/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[514] params(1) in file: lib\support\0.2.9/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[515] params(1) in file: lib\support\0.2.9/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[516] params(1) in file: lib\support\0.2.9/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[517] params(1) in file: lib\support\0.2.9/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[518] params(1) in file: lib\support\0.2.9/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[519] params(1) in file: lib\support\0.2.9/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[520] params(1) in file: lib\support\0.2.9/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[521] params(1) in file: lib\support\0.2.9/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[522] params(1) in file: lib\support\0.2.9/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator>[523] params(1) in file: lib\support\0.2.9/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[524] params(1) in file: lib\support\0.2.9/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[525] params(1) in file: lib\support\0.2.9/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[526] params(1) in file: lib\support\0.2.9/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[527] params(1) in file: lib\support\0.2.9/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[528] params(1) in file: lib\support\0.2.9/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[529] params(1) in file: lib\support\0.2.9/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[530] params(1) in file: lib\support\0.2.9/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[531] params(1) in file: lib\support\0.2.9/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[532] params(1) in file: lib\support\0.2.9/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[533] params(1) in file: lib\support\0.2.9/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[534] params(1) in file: lib\support\0.2.9/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator<=[535] params(1) in file: lib\support\0.2.9/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[536] params(1) in file: lib\support\0.2.9/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[537] params(1) in file: lib\support\0.2.9/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[538] params(1) in file: lib\support\0.2.9/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[539] params(1) in file: lib\support\0.2.9/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[540] params(1) in file: lib\support\0.2.9/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[541] params(1) in file: lib\support\0.2.9/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[542] params(1) in file: lib\support\0.2.9/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[543] params(1) in file: lib\support\0.2.9/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[544] params(1) in file: lib\support\0.2.9/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[545] params(1) in file: lib\support\0.2.9/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[546] params(1) in file: lib\support\0.2.9/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator**[547] params(1) in file: lib\support\0.2.9/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[548] params(1) in file: lib\support\0.2.9/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[549] params(1) in file: lib\support\0.2.9/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[550] params(1) in file: lib\support\0.2.9/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[551] params(1) in file: lib\support\0.2.9/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[552] params(1) in file: lib\support\0.2.9/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[553] params(1) in file: lib\support\0.2.9/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[554] params(1) in file: lib\support\0.2.9/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[555] params(1) in file: lib\support\0.2.9/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[556] params(1) in file: lib\support\0.2.9/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[557] params(1) in file: lib\support\0.2.9/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[558] params(1) in file: lib\support\0.2.9/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator<<[559] params(1) in file: lib\support\0.2.9/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[560] params(1) in file: lib\support\0.2.9/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[561] params(1) in file: lib\support\0.2.9/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[562] params(1) in file: lib\support\0.2.9/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[563] params(1) in file: lib\support\0.2.9/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[564] params(1) in file: lib\support\0.2.9/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[565] params(1) in file: lib\support\0.2.9/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[566] params(1) in file: lib\support\0.2.9/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[567] params(1) in file: lib\support\0.2.9/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[568] params(1) in file: lib\support\0.2.9/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[569] params(1) in file: lib\support\0.2.9/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[570] params(1) in file: lib\support\0.2.9/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator>>[571] params(1) in file: lib\support\0.2.9/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[572] params(1) in file: lib\support\0.2.9/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[573] params(1) in file: lib\support\0.2.9/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[574] params(1) in file: lib\support\0.2.9/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[575] params(1) in file: lib\support\0.2.9/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[576] params(1) in file: lib\support\0.2.9/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[577] params(1) in file: lib\support\0.2.9/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[578] params(1) in file: lib\support\0.2.9/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[579] params(1) in file: lib\support\0.2.9/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[580] params(1) in file: lib\support\0.2.9/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[581] params(1) in file: lib\support\0.2.9/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[582] params(1) in file: lib\support\0.2.9/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator^[583] params(1) in file: lib\support\0.2.9/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[584] params(1) in file: lib\support\0.2.9/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[585] params(1) in file: lib\support\0.2.9/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[586] params(1) in file: lib\support\0.2.9/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[587] params(1) in file: lib\support\0.2.9/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[588] params(1) in file: lib\support\0.2.9/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[589] params(1) in file: lib\support\0.2.9/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[590] params(1) in file: lib\support\0.2.9/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[591] params(1) in file: lib\support\0.2.9/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[592] params(1) in file: lib\support\0.2.9/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[593] params(1) in file: lib\support\0.2.9/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[594] params(1) in file: lib\support\0.2.9/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator&[595] params(1) in file: lib\support\0.2.9/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[596] params(1) in file: lib\support\0.2.9/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[597] params(1) in file: lib\support\0.2.9/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[598] params(1) in file: lib\support\0.2.9/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[599] params(1) in file: lib\support\0.2.9/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[600] params(1) in file: lib\support\0.2.9/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[601] params(1) in file: lib\support\0.2.9/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[602] params(1) in file: lib\support\0.2.9/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[603] params(1) in file: lib\support\0.2.9/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[604] params(1) in file: lib\support\0.2.9/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[605] params(1) in file: lib\support\0.2.9/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[606] params(1) in file: lib\support\0.2.9/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator|[607] params(1) in file: lib\support\0.2.9/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[608] params(1) in file: lib\support\0.2.9/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[609] params(1) in file: lib\support\0.2.9/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[610] params(1) in file: lib\support\0.2.9/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[611] params(1) in file: lib\support\0.2.9/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[612] params(1) in file: lib\support\0.2.9/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[613] params(1) in file: lib\support\0.2.9/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[614] params(1) in file: lib\support\0.2.9/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[615] params(1) in file: lib\support\0.2.9/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[616] params(1) in file: lib\support\0.2.9/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[617] params(1) in file: lib\support\0.2.9/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[618] params(1) in file: lib\support\0.2.9/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator!=[619] params(1) in file: lib\support\0.2.9/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator==[620] params(1) in file: lib\support\0.2.9/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator=[621] params(1) in file: lib\support\0.2.9/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint32>.to_string[622] params(0) in file: lib\support\0.2.9/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3508 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint32>.parse[623] params(1) in file: lib\support\0.2.9/primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu32 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @1896 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3510 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3491 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3491 // <std#string.at>   
47 [0x2f]:           call @3132 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // app#__srt_global   
53 [0x35]:           newarry adx: 0   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // app#__srt_global   
56 [0x38]:           checknull   
57 [0x39]:           dup    
58 [0x3a]:           newstr @109 // illegal char in string:    
59 [0x3b]:           call @3469 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3491 // <std#string.at>   
63 [0x3f]:           call @3502 // <std#string.operator+>   
64 [0x40]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu32 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3491 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu32 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu32 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_uint32>.to_ulong[624] params(0) in file: lib\support\0.2.9/primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // app#__srt_global   
1 [0x1]:           new_class @0 // app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_long[625] params(0) in file: lib\support\0.2.9/primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // app#__srt_global   
1 [0x1]:           movn #293   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_uint[626] params(0) in file: lib\support\0.2.9/primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // app#__srt_global   
1 [0x1]:           sleep adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_int[627] params(0) in file: lib\support\0.2.9/primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // app#__srt_global   
1 [0x1]:           test adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_ushort[628] params(0) in file: lib\support\0.2.9/primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // app#__srt_global   
1 [0x1]:           tne adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_short[629] params(0) in file: lib\support\0.2.9/primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // app#__srt_global   
1 [0x1]:           _lck    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_uchar[630] params(0) in file: lib\support\0.2.9/primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // app#__srt_global   
1 [0x1]:           _ulck   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_char[631] params(0) in file: lib\support\0.2.9/primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // app#__srt_global   
1 [0x1]:           movg @0 // @app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_byte[632] params(0) in file: lib\support\0.2.9/primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // app#__srt_global   
1 [0x1]:           movnd adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_bool[633] params(0) in file: lib\support\0.2.9/primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // app#__srt_global   
1 [0x1]:           newobj_arry adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_double[634] params(0) in file: lib\support\0.2.9/primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // app#__srt_global   
1 [0x1]:           not adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.get_value[635] params(0) in file: lib\support\0.2.9/primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint32>.integer[636] params(0) in file: lib\support\0.2.9/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int32>.integer[637] params(1) in file: lib\support\0.2.9/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov32 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_int32>.hash[638] params(0) in file: lib\support\0.2.9/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2430 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int32>.operator!=[639] params(1) in file: lib\support\0.2.9/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[640] params(1) in file: lib\support\0.2.9/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[641] params(1) in file: lib\support\0.2.9/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[642] params(1) in file: lib\support\0.2.9/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[643] params(1) in file: lib\support\0.2.9/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[644] params(1) in file: lib\support\0.2.9/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[645] params(1) in file: lib\support\0.2.9/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[646] params(1) in file: lib\support\0.2.9/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[647] params(1) in file: lib\support\0.2.9/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[648] params(1) in file: lib\support\0.2.9/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[649] params(1) in file: lib\support\0.2.9/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[650] params(1) in file: lib\support\0.2.9/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[651] params(1) in file: lib\support\0.2.9/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[652] params(1) in file: lib\support\0.2.9/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[653] params(1) in file: lib\support\0.2.9/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[654] params(1) in file: lib\support\0.2.9/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[655] params(1) in file: lib\support\0.2.9/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[656] params(1) in file: lib\support\0.2.9/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[657] params(1) in file: lib\support\0.2.9/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[658] params(1) in file: lib\support\0.2.9/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[659] params(1) in file: lib\support\0.2.9/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[660] params(1) in file: lib\support\0.2.9/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[661] params(1) in file: lib\support\0.2.9/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[662] params(1) in file: lib\support\0.2.9/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[663] params(1) in file: lib\support\0.2.9/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[664] params(1) in file: lib\support\0.2.9/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[665] params(1) in file: lib\support\0.2.9/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[666] params(1) in file: lib\support\0.2.9/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[667] params(1) in file: lib\support\0.2.9/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[668] params(1) in file: lib\support\0.2.9/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[669] params(1) in file: lib\support\0.2.9/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[670] params(1) in file: lib\support\0.2.9/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[671] params(1) in file: lib\support\0.2.9/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator-[672] params(1) in file: lib\support\0.2.9/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[673] params(1) in file: lib\support\0.2.9/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[674] params(1) in file: lib\support\0.2.9/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[675] params(1) in file: lib\support\0.2.9/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[676] params(1) in file: lib\support\0.2.9/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[677] params(1) in file: lib\support\0.2.9/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[678] params(1) in file: lib\support\0.2.9/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[679] params(1) in file: lib\support\0.2.9/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[680] params(1) in file: lib\support\0.2.9/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[681] params(1) in file: lib\support\0.2.9/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[682] params(1) in file: lib\support\0.2.9/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[683] params(1) in file: lib\support\0.2.9/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator*[684] params(1) in file: lib\support\0.2.9/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[685] params(1) in file: lib\support\0.2.9/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[686] params(1) in file: lib\support\0.2.9/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[687] params(1) in file: lib\support\0.2.9/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[688] params(1) in file: lib\support\0.2.9/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[689] params(1) in file: lib\support\0.2.9/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[690] params(1) in file: lib\support\0.2.9/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[691] params(1) in file: lib\support\0.2.9/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[692] params(1) in file: lib\support\0.2.9/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[693] params(1) in file: lib\support\0.2.9/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[694] params(1) in file: lib\support\0.2.9/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[695] params(1) in file: lib\support\0.2.9/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator/[696] params(1) in file: lib\support\0.2.9/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[697] params(1) in file: lib\support\0.2.9/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[698] params(1) in file: lib\support\0.2.9/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[699] params(1) in file: lib\support\0.2.9/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[700] params(1) in file: lib\support\0.2.9/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[701] params(1) in file: lib\support\0.2.9/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[702] params(1) in file: lib\support\0.2.9/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[703] params(1) in file: lib\support\0.2.9/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[704] params(1) in file: lib\support\0.2.9/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[705] params(1) in file: lib\support\0.2.9/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[706] params(1) in file: lib\support\0.2.9/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[707] params(1) in file: lib\support\0.2.9/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator%[708] params(1) in file: lib\support\0.2.9/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[709] params(1) in file: lib\support\0.2.9/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[710] params(1) in file: lib\support\0.2.9/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[711] params(1) in file: lib\support\0.2.9/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[712] params(1) in file: lib\support\0.2.9/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[713] params(1) in file: lib\support\0.2.9/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[714] params(1) in file: lib\support\0.2.9/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[715] params(1) in file: lib\support\0.2.9/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[716] params(1) in file: lib\support\0.2.9/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[717] params(1) in file: lib\support\0.2.9/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[718] params(1) in file: lib\support\0.2.9/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator%[719] params(1) in file: lib\support\0.2.9/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator<[720] params(1) in file: lib\support\0.2.9/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[721] params(1) in file: lib\support\0.2.9/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[722] params(1) in file: lib\support\0.2.9/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[723] params(1) in file: lib\support\0.2.9/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[724] params(1) in file: lib\support\0.2.9/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[725] params(1) in file: lib\support\0.2.9/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[726] params(1) in file: lib\support\0.2.9/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[727] params(1) in file: lib\support\0.2.9/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[728] params(1) in file: lib\support\0.2.9/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[729] params(1) in file: lib\support\0.2.9/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[730] params(1) in file: lib\support\0.2.9/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[731] params(1) in file: lib\support\0.2.9/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator>[732] params(1) in file: lib\support\0.2.9/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[733] params(1) in file: lib\support\0.2.9/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[734] params(1) in file: lib\support\0.2.9/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[735] params(1) in file: lib\support\0.2.9/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[736] params(1) in file: lib\support\0.2.9/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[737] params(1) in file: lib\support\0.2.9/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[738] params(1) in file: lib\support\0.2.9/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[739] params(1) in file: lib\support\0.2.9/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[740] params(1) in file: lib\support\0.2.9/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[741] params(1) in file: lib\support\0.2.9/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[742] params(1) in file: lib\support\0.2.9/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[743] params(1) in file: lib\support\0.2.9/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator<=[744] params(1) in file: lib\support\0.2.9/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[745] params(1) in file: lib\support\0.2.9/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[746] params(1) in file: lib\support\0.2.9/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[747] params(1) in file: lib\support\0.2.9/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[748] params(1) in file: lib\support\0.2.9/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[749] params(1) in file: lib\support\0.2.9/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[750] params(1) in file: lib\support\0.2.9/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[751] params(1) in file: lib\support\0.2.9/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[752] params(1) in file: lib\support\0.2.9/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[753] params(1) in file: lib\support\0.2.9/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[754] params(1) in file: lib\support\0.2.9/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[755] params(1) in file: lib\support\0.2.9/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator**[756] params(1) in file: lib\support\0.2.9/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[757] params(1) in file: lib\support\0.2.9/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[758] params(1) in file: lib\support\0.2.9/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[759] params(1) in file: lib\support\0.2.9/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[760] params(1) in file: lib\support\0.2.9/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[761] params(1) in file: lib\support\0.2.9/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[762] params(1) in file: lib\support\0.2.9/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[763] params(1) in file: lib\support\0.2.9/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[764] params(1) in file: lib\support\0.2.9/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[765] params(1) in file: lib\support\0.2.9/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[766] params(1) in file: lib\support\0.2.9/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[767] params(1) in file: lib\support\0.2.9/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator<<[768] params(1) in file: lib\support\0.2.9/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[769] params(1) in file: lib\support\0.2.9/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[770] params(1) in file: lib\support\0.2.9/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[771] params(1) in file: lib\support\0.2.9/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[772] params(1) in file: lib\support\0.2.9/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[773] params(1) in file: lib\support\0.2.9/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[774] params(1) in file: lib\support\0.2.9/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[775] params(1) in file: lib\support\0.2.9/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[776] params(1) in file: lib\support\0.2.9/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[777] params(1) in file: lib\support\0.2.9/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[778] params(1) in file: lib\support\0.2.9/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[779] params(1) in file: lib\support\0.2.9/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator>>[780] params(1) in file: lib\support\0.2.9/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[781] params(1) in file: lib\support\0.2.9/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[782] params(1) in file: lib\support\0.2.9/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[783] params(1) in file: lib\support\0.2.9/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[784] params(1) in file: lib\support\0.2.9/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[785] params(1) in file: lib\support\0.2.9/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[786] params(1) in file: lib\support\0.2.9/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[787] params(1) in file: lib\support\0.2.9/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[788] params(1) in file: lib\support\0.2.9/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[789] params(1) in file: lib\support\0.2.9/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[790] params(1) in file: lib\support\0.2.9/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[791] params(1) in file: lib\support\0.2.9/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator^[792] params(1) in file: lib\support\0.2.9/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[793] params(1) in file: lib\support\0.2.9/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[794] params(1) in file: lib\support\0.2.9/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[795] params(1) in file: lib\support\0.2.9/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[796] params(1) in file: lib\support\0.2.9/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[797] params(1) in file: lib\support\0.2.9/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[798] params(1) in file: lib\support\0.2.9/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[799] params(1) in file: lib\support\0.2.9/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[800] params(1) in file: lib\support\0.2.9/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[801] params(1) in file: lib\support\0.2.9/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[802] params(1) in file: lib\support\0.2.9/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[803] params(1) in file: lib\support\0.2.9/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator&[804] params(1) in file: lib\support\0.2.9/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[805] params(1) in file: lib\support\0.2.9/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[806] params(1) in file: lib\support\0.2.9/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[807] params(1) in file: lib\support\0.2.9/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[808] params(1) in file: lib\support\0.2.9/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[809] params(1) in file: lib\support\0.2.9/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[810] params(1) in file: lib\support\0.2.9/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[811] params(1) in file: lib\support\0.2.9/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[812] params(1) in file: lib\support\0.2.9/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[813] params(1) in file: lib\support\0.2.9/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[814] params(1) in file: lib\support\0.2.9/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[815] params(1) in file: lib\support\0.2.9/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator|[816] params(1) in file: lib\support\0.2.9/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[817] params(1) in file: lib\support\0.2.9/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[818] params(1) in file: lib\support\0.2.9/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[819] params(1) in file: lib\support\0.2.9/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[820] params(1) in file: lib\support\0.2.9/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[821] params(1) in file: lib\support\0.2.9/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[822] params(1) in file: lib\support\0.2.9/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[823] params(1) in file: lib\support\0.2.9/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[824] params(1) in file: lib\support\0.2.9/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[825] params(1) in file: lib\support\0.2.9/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[826] params(1) in file: lib\support\0.2.9/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[827] params(1) in file: lib\support\0.2.9/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator!=[828] params(1) in file: lib\support\0.2.9/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator==[829] params(1) in file: lib\support\0.2.9/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator=[830] params(1) in file: lib\support\0.2.9/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int32>.to_string[831] params(0) in file: lib\support\0.2.9/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3504 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int32>.parse[832] params(1) in file: lib\support\0.2.9/primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov32 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @1896 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3510 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3491 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3491 // <std#string.at>   
47 [0x2f]:           call @3132 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // app#__srt_global   
53 [0x35]:           newarry adx: 0   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // app#__srt_global   
56 [0x38]:           checknull   
57 [0x39]:           dup    
58 [0x3a]:           newstr @109 // illegal char in string:    
59 [0x3b]:           call @3469 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3491 // <std#string.at>   
63 [0x3f]:           call @3502 // <std#string.operator+>   
64 [0x40]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov32 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3491 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov32 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov32 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_int32>.to_ulong[833] params(0) in file: lib\support\0.2.9/primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // app#__srt_global   
1 [0x1]:           new_class @0 // app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_long[834] params(0) in file: lib\support\0.2.9/primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // app#__srt_global   
1 [0x1]:           movn #293   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_uint[835] params(0) in file: lib\support\0.2.9/primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // app#__srt_global   
1 [0x1]:           sleep adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_int[836] params(0) in file: lib\support\0.2.9/primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // app#__srt_global   
1 [0x1]:           test adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_ushort[837] params(0) in file: lib\support\0.2.9/primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // app#__srt_global   
1 [0x1]:           tne adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_short[838] params(0) in file: lib\support\0.2.9/primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // app#__srt_global   
1 [0x1]:           _lck    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_uchar[839] params(0) in file: lib\support\0.2.9/primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // app#__srt_global   
1 [0x1]:           _ulck   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_char[840] params(0) in file: lib\support\0.2.9/primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // app#__srt_global   
1 [0x1]:           movg @0 // @app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_byte[841] params(0) in file: lib\support\0.2.9/primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // app#__srt_global   
1 [0x1]:           movnd adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_bool[842] params(0) in file: lib\support\0.2.9/primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // app#__srt_global   
1 [0x1]:           newobj_arry adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_double[843] params(0) in file: lib\support\0.2.9/primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // app#__srt_global   
1 [0x1]:           not adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.get_value[844] params(0) in file: lib\support\0.2.9/primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int32>.integer[845] params(0) in file: lib\support\0.2.9/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint16>.integer[846] params(1) in file: lib\support\0.2.9/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu16 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_uint16>.hash[847] params(0) in file: lib\support\0.2.9/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2430 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint16>.operator!=[848] params(1) in file: lib\support\0.2.9/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[849] params(1) in file: lib\support\0.2.9/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[850] params(1) in file: lib\support\0.2.9/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[851] params(1) in file: lib\support\0.2.9/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[852] params(1) in file: lib\support\0.2.9/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[853] params(1) in file: lib\support\0.2.9/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[854] params(1) in file: lib\support\0.2.9/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[855] params(1) in file: lib\support\0.2.9/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[856] params(1) in file: lib\support\0.2.9/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[857] params(1) in file: lib\support\0.2.9/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[858] params(1) in file: lib\support\0.2.9/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[859] params(1) in file: lib\support\0.2.9/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[860] params(1) in file: lib\support\0.2.9/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[861] params(1) in file: lib\support\0.2.9/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[862] params(1) in file: lib\support\0.2.9/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[863] params(1) in file: lib\support\0.2.9/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[864] params(1) in file: lib\support\0.2.9/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[865] params(1) in file: lib\support\0.2.9/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[866] params(1) in file: lib\support\0.2.9/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[867] params(1) in file: lib\support\0.2.9/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[868] params(1) in file: lib\support\0.2.9/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[869] params(1) in file: lib\support\0.2.9/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[870] params(1) in file: lib\support\0.2.9/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[871] params(1) in file: lib\support\0.2.9/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[872] params(1) in file: lib\support\0.2.9/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[873] params(1) in file: lib\support\0.2.9/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[874] params(1) in file: lib\support\0.2.9/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[875] params(1) in file: lib\support\0.2.9/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[876] params(1) in file: lib\support\0.2.9/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[877] params(1) in file: lib\support\0.2.9/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[878] params(1) in file: lib\support\0.2.9/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[879] params(1) in file: lib\support\0.2.9/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[880] params(1) in file: lib\support\0.2.9/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator-[881] params(1) in file: lib\support\0.2.9/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[882] params(1) in file: lib\support\0.2.9/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[883] params(1) in file: lib\support\0.2.9/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[884] params(1) in file: lib\support\0.2.9/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[885] params(1) in file: lib\support\0.2.9/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[886] params(1) in file: lib\support\0.2.9/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[887] params(1) in file: lib\support\0.2.9/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[888] params(1) in file: lib\support\0.2.9/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[889] params(1) in file: lib\support\0.2.9/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[890] params(1) in file: lib\support\0.2.9/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[891] params(1) in file: lib\support\0.2.9/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[892] params(1) in file: lib\support\0.2.9/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator*[893] params(1) in file: lib\support\0.2.9/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[894] params(1) in file: lib\support\0.2.9/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[895] params(1) in file: lib\support\0.2.9/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[896] params(1) in file: lib\support\0.2.9/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[897] params(1) in file: lib\support\0.2.9/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[898] params(1) in file: lib\support\0.2.9/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[899] params(1) in file: lib\support\0.2.9/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[900] params(1) in file: lib\support\0.2.9/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[901] params(1) in file: lib\support\0.2.9/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[902] params(1) in file: lib\support\0.2.9/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[903] params(1) in file: lib\support\0.2.9/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[904] params(1) in file: lib\support\0.2.9/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator/[905] params(1) in file: lib\support\0.2.9/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[906] params(1) in file: lib\support\0.2.9/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[907] params(1) in file: lib\support\0.2.9/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[908] params(1) in file: lib\support\0.2.9/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[909] params(1) in file: lib\support\0.2.9/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[910] params(1) in file: lib\support\0.2.9/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[911] params(1) in file: lib\support\0.2.9/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[912] params(1) in file: lib\support\0.2.9/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[913] params(1) in file: lib\support\0.2.9/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[914] params(1) in file: lib\support\0.2.9/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[915] params(1) in file: lib\support\0.2.9/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[916] params(1) in file: lib\support\0.2.9/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator%[917] params(1) in file: lib\support\0.2.9/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[918] params(1) in file: lib\support\0.2.9/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[919] params(1) in file: lib\support\0.2.9/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[920] params(1) in file: lib\support\0.2.9/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[921] params(1) in file: lib\support\0.2.9/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[922] params(1) in file: lib\support\0.2.9/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[923] params(1) in file: lib\support\0.2.9/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[924] params(1) in file: lib\support\0.2.9/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[925] params(1) in file: lib\support\0.2.9/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[926] params(1) in file: lib\support\0.2.9/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[927] params(1) in file: lib\support\0.2.9/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator%[928] params(1) in file: lib\support\0.2.9/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator<[929] params(1) in file: lib\support\0.2.9/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[930] params(1) in file: lib\support\0.2.9/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[931] params(1) in file: lib\support\0.2.9/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[932] params(1) in file: lib\support\0.2.9/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[933] params(1) in file: lib\support\0.2.9/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[934] params(1) in file: lib\support\0.2.9/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[935] params(1) in file: lib\support\0.2.9/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[936] params(1) in file: lib\support\0.2.9/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[937] params(1) in file: lib\support\0.2.9/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[938] params(1) in file: lib\support\0.2.9/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[939] params(1) in file: lib\support\0.2.9/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[940] params(1) in file: lib\support\0.2.9/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator>[941] params(1) in file: lib\support\0.2.9/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[942] params(1) in file: lib\support\0.2.9/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[943] params(1) in file: lib\support\0.2.9/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[944] params(1) in file: lib\support\0.2.9/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[945] params(1) in file: lib\support\0.2.9/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[946] params(1) in file: lib\support\0.2.9/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[947] params(1) in file: lib\support\0.2.9/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[948] params(1) in file: lib\support\0.2.9/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[949] params(1) in file: lib\support\0.2.9/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[950] params(1) in file: lib\support\0.2.9/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[951] params(1) in file: lib\support\0.2.9/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[952] params(1) in file: lib\support\0.2.9/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator<=[953] params(1) in file: lib\support\0.2.9/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[954] params(1) in file: lib\support\0.2.9/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[955] params(1) in file: lib\support\0.2.9/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[956] params(1) in file: lib\support\0.2.9/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[957] params(1) in file: lib\support\0.2.9/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[958] params(1) in file: lib\support\0.2.9/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[959] params(1) in file: lib\support\0.2.9/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[960] params(1) in file: lib\support\0.2.9/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[961] params(1) in file: lib\support\0.2.9/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[962] params(1) in file: lib\support\0.2.9/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[963] params(1) in file: lib\support\0.2.9/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[964] params(1) in file: lib\support\0.2.9/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator**[965] params(1) in file: lib\support\0.2.9/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[966] params(1) in file: lib\support\0.2.9/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[967] params(1) in file: lib\support\0.2.9/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[968] params(1) in file: lib\support\0.2.9/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[969] params(1) in file: lib\support\0.2.9/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[970] params(1) in file: lib\support\0.2.9/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[971] params(1) in file: lib\support\0.2.9/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[972] params(1) in file: lib\support\0.2.9/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[973] params(1) in file: lib\support\0.2.9/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[974] params(1) in file: lib\support\0.2.9/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[975] params(1) in file: lib\support\0.2.9/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[976] params(1) in file: lib\support\0.2.9/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator<<[977] params(1) in file: lib\support\0.2.9/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[978] params(1) in file: lib\support\0.2.9/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[979] params(1) in file: lib\support\0.2.9/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[980] params(1) in file: lib\support\0.2.9/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[981] params(1) in file: lib\support\0.2.9/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[982] params(1) in file: lib\support\0.2.9/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[983] params(1) in file: lib\support\0.2.9/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[984] params(1) in file: lib\support\0.2.9/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[985] params(1) in file: lib\support\0.2.9/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[986] params(1) in file: lib\support\0.2.9/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[987] params(1) in file: lib\support\0.2.9/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[988] params(1) in file: lib\support\0.2.9/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator>>[989] params(1) in file: lib\support\0.2.9/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[990] params(1) in file: lib\support\0.2.9/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[991] params(1) in file: lib\support\0.2.9/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[992] params(1) in file: lib\support\0.2.9/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[993] params(1) in file: lib\support\0.2.9/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[994] params(1) in file: lib\support\0.2.9/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[995] params(1) in file: lib\support\0.2.9/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[996] params(1) in file: lib\support\0.2.9/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[997] params(1) in file: lib\support\0.2.9/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[998] params(1) in file: lib\support\0.2.9/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[999] params(1) in file: lib\support\0.2.9/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1000] params(1) in file: lib\support\0.2.9/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator^[1001] params(1) in file: lib\support\0.2.9/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1002] params(1) in file: lib\support\0.2.9/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1003] params(1) in file: lib\support\0.2.9/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1004] params(1) in file: lib\support\0.2.9/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1005] params(1) in file: lib\support\0.2.9/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1006] params(1) in file: lib\support\0.2.9/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1007] params(1) in file: lib\support\0.2.9/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1008] params(1) in file: lib\support\0.2.9/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1009] params(1) in file: lib\support\0.2.9/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1010] params(1) in file: lib\support\0.2.9/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1011] params(1) in file: lib\support\0.2.9/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1012] params(1) in file: lib\support\0.2.9/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator&[1013] params(1) in file: lib\support\0.2.9/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1014] params(1) in file: lib\support\0.2.9/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1015] params(1) in file: lib\support\0.2.9/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1016] params(1) in file: lib\support\0.2.9/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1017] params(1) in file: lib\support\0.2.9/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1018] params(1) in file: lib\support\0.2.9/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1019] params(1) in file: lib\support\0.2.9/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1020] params(1) in file: lib\support\0.2.9/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1021] params(1) in file: lib\support\0.2.9/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1022] params(1) in file: lib\support\0.2.9/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1023] params(1) in file: lib\support\0.2.9/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1024] params(1) in file: lib\support\0.2.9/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator|[1025] params(1) in file: lib\support\0.2.9/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1026] params(1) in file: lib\support\0.2.9/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1027] params(1) in file: lib\support\0.2.9/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1028] params(1) in file: lib\support\0.2.9/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1029] params(1) in file: lib\support\0.2.9/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1030] params(1) in file: lib\support\0.2.9/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1031] params(1) in file: lib\support\0.2.9/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1032] params(1) in file: lib\support\0.2.9/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1033] params(1) in file: lib\support\0.2.9/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1034] params(1) in file: lib\support\0.2.9/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1035] params(1) in file: lib\support\0.2.9/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1036] params(1) in file: lib\support\0.2.9/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator!=[1037] params(1) in file: lib\support\0.2.9/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator==[1038] params(1) in file: lib\support\0.2.9/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator=[1039] params(1) in file: lib\support\0.2.9/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint16>.to_string[1040] params(0) in file: lib\support\0.2.9/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3507 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint16>.parse[1041] params(1) in file: lib\support\0.2.9/primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu16 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @1896 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3510 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3491 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3491 // <std#string.at>   
47 [0x2f]:           call @3132 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // app#__srt_global   
53 [0x35]:           newarry adx: 0   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // app#__srt_global   
56 [0x38]:           checknull   
57 [0x39]:           dup    
58 [0x3a]:           newstr @109 // illegal char in string:    
59 [0x3b]:           call @3469 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3491 // <std#string.at>   
63 [0x3f]:           call @3502 // <std#string.operator+>   
64 [0x40]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu16 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3491 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu16 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu16 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_uint16>.to_ulong[1042] params(0) in file: lib\support\0.2.9/primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // app#__srt_global   
1 [0x1]:           new_class @0 // app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_long[1043] params(0) in file: lib\support\0.2.9/primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // app#__srt_global   
1 [0x1]:           movn #293   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_uint[1044] params(0) in file: lib\support\0.2.9/primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // app#__srt_global   
1 [0x1]:           sleep adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_int[1045] params(0) in file: lib\support\0.2.9/primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // app#__srt_global   
1 [0x1]:           test adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_ushort[1046] params(0) in file: lib\support\0.2.9/primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // app#__srt_global   
1 [0x1]:           tne adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_short[1047] params(0) in file: lib\support\0.2.9/primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // app#__srt_global   
1 [0x1]:           _lck    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_uchar[1048] params(0) in file: lib\support\0.2.9/primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // app#__srt_global   
1 [0x1]:           _ulck   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_char[1049] params(0) in file: lib\support\0.2.9/primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // app#__srt_global   
1 [0x1]:           movg @0 // @app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_byte[1050] params(0) in file: lib\support\0.2.9/primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // app#__srt_global   
1 [0x1]:           movnd adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_bool[1051] params(0) in file: lib\support\0.2.9/primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // app#__srt_global   
1 [0x1]:           newobj_arry adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_double[1052] params(0) in file: lib\support\0.2.9/primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // app#__srt_global   
1 [0x1]:           not adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.get_value[1053] params(0) in file: lib\support\0.2.9/primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint16>.integer[1054] params(0) in file: lib\support\0.2.9/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int16>.integer[1055] params(1) in file: lib\support\0.2.9/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov16 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_int16>.hash[1056] params(0) in file: lib\support\0.2.9/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2430 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int16>.operator!=[1057] params(1) in file: lib\support\0.2.9/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1058] params(1) in file: lib\support\0.2.9/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1059] params(1) in file: lib\support\0.2.9/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1060] params(1) in file: lib\support\0.2.9/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1061] params(1) in file: lib\support\0.2.9/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1062] params(1) in file: lib\support\0.2.9/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1063] params(1) in file: lib\support\0.2.9/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1064] params(1) in file: lib\support\0.2.9/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1065] params(1) in file: lib\support\0.2.9/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1066] params(1) in file: lib\support\0.2.9/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1067] params(1) in file: lib\support\0.2.9/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1068] params(1) in file: lib\support\0.2.9/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1069] params(1) in file: lib\support\0.2.9/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1070] params(1) in file: lib\support\0.2.9/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1071] params(1) in file: lib\support\0.2.9/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1072] params(1) in file: lib\support\0.2.9/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1073] params(1) in file: lib\support\0.2.9/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1074] params(1) in file: lib\support\0.2.9/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1075] params(1) in file: lib\support\0.2.9/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1076] params(1) in file: lib\support\0.2.9/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1077] params(1) in file: lib\support\0.2.9/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1078] params(1) in file: lib\support\0.2.9/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1079] params(1) in file: lib\support\0.2.9/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1080] params(1) in file: lib\support\0.2.9/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1081] params(1) in file: lib\support\0.2.9/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1082] params(1) in file: lib\support\0.2.9/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1083] params(1) in file: lib\support\0.2.9/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1084] params(1) in file: lib\support\0.2.9/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1085] params(1) in file: lib\support\0.2.9/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1086] params(1) in file: lib\support\0.2.9/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1087] params(1) in file: lib\support\0.2.9/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1088] params(1) in file: lib\support\0.2.9/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1089] params(1) in file: lib\support\0.2.9/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator-[1090] params(1) in file: lib\support\0.2.9/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1091] params(1) in file: lib\support\0.2.9/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1092] params(1) in file: lib\support\0.2.9/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1093] params(1) in file: lib\support\0.2.9/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1094] params(1) in file: lib\support\0.2.9/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1095] params(1) in file: lib\support\0.2.9/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1096] params(1) in file: lib\support\0.2.9/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1097] params(1) in file: lib\support\0.2.9/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1098] params(1) in file: lib\support\0.2.9/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1099] params(1) in file: lib\support\0.2.9/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1100] params(1) in file: lib\support\0.2.9/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1101] params(1) in file: lib\support\0.2.9/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator*[1102] params(1) in file: lib\support\0.2.9/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1103] params(1) in file: lib\support\0.2.9/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1104] params(1) in file: lib\support\0.2.9/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1105] params(1) in file: lib\support\0.2.9/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1106] params(1) in file: lib\support\0.2.9/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1107] params(1) in file: lib\support\0.2.9/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1108] params(1) in file: lib\support\0.2.9/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1109] params(1) in file: lib\support\0.2.9/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1110] params(1) in file: lib\support\0.2.9/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1111] params(1) in file: lib\support\0.2.9/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1112] params(1) in file: lib\support\0.2.9/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1113] params(1) in file: lib\support\0.2.9/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator/[1114] params(1) in file: lib\support\0.2.9/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1115] params(1) in file: lib\support\0.2.9/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1116] params(1) in file: lib\support\0.2.9/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1117] params(1) in file: lib\support\0.2.9/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1118] params(1) in file: lib\support\0.2.9/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1119] params(1) in file: lib\support\0.2.9/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1120] params(1) in file: lib\support\0.2.9/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1121] params(1) in file: lib\support\0.2.9/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1122] params(1) in file: lib\support\0.2.9/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1123] params(1) in file: lib\support\0.2.9/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1124] params(1) in file: lib\support\0.2.9/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1125] params(1) in file: lib\support\0.2.9/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator%[1126] params(1) in file: lib\support\0.2.9/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1127] params(1) in file: lib\support\0.2.9/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1128] params(1) in file: lib\support\0.2.9/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1129] params(1) in file: lib\support\0.2.9/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1130] params(1) in file: lib\support\0.2.9/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1131] params(1) in file: lib\support\0.2.9/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1132] params(1) in file: lib\support\0.2.9/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1133] params(1) in file: lib\support\0.2.9/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1134] params(1) in file: lib\support\0.2.9/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1135] params(1) in file: lib\support\0.2.9/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1136] params(1) in file: lib\support\0.2.9/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator%[1137] params(1) in file: lib\support\0.2.9/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator<[1138] params(1) in file: lib\support\0.2.9/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1139] params(1) in file: lib\support\0.2.9/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1140] params(1) in file: lib\support\0.2.9/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1141] params(1) in file: lib\support\0.2.9/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1142] params(1) in file: lib\support\0.2.9/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1143] params(1) in file: lib\support\0.2.9/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1144] params(1) in file: lib\support\0.2.9/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1145] params(1) in file: lib\support\0.2.9/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1146] params(1) in file: lib\support\0.2.9/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1147] params(1) in file: lib\support\0.2.9/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1148] params(1) in file: lib\support\0.2.9/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1149] params(1) in file: lib\support\0.2.9/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator>[1150] params(1) in file: lib\support\0.2.9/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1151] params(1) in file: lib\support\0.2.9/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1152] params(1) in file: lib\support\0.2.9/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1153] params(1) in file: lib\support\0.2.9/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1154] params(1) in file: lib\support\0.2.9/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1155] params(1) in file: lib\support\0.2.9/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1156] params(1) in file: lib\support\0.2.9/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1157] params(1) in file: lib\support\0.2.9/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1158] params(1) in file: lib\support\0.2.9/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1159] params(1) in file: lib\support\0.2.9/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1160] params(1) in file: lib\support\0.2.9/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1161] params(1) in file: lib\support\0.2.9/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator<=[1162] params(1) in file: lib\support\0.2.9/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1163] params(1) in file: lib\support\0.2.9/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1164] params(1) in file: lib\support\0.2.9/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1165] params(1) in file: lib\support\0.2.9/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1166] params(1) in file: lib\support\0.2.9/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1167] params(1) in file: lib\support\0.2.9/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1168] params(1) in file: lib\support\0.2.9/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1169] params(1) in file: lib\support\0.2.9/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1170] params(1) in file: lib\support\0.2.9/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1171] params(1) in file: lib\support\0.2.9/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1172] params(1) in file: lib\support\0.2.9/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1173] params(1) in file: lib\support\0.2.9/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator**[1174] params(1) in file: lib\support\0.2.9/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1175] params(1) in file: lib\support\0.2.9/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1176] params(1) in file: lib\support\0.2.9/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1177] params(1) in file: lib\support\0.2.9/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1178] params(1) in file: lib\support\0.2.9/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1179] params(1) in file: lib\support\0.2.9/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1180] params(1) in file: lib\support\0.2.9/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1181] params(1) in file: lib\support\0.2.9/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1182] params(1) in file: lib\support\0.2.9/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1183] params(1) in file: lib\support\0.2.9/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1184] params(1) in file: lib\support\0.2.9/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1185] params(1) in file: lib\support\0.2.9/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator<<[1186] params(1) in file: lib\support\0.2.9/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1187] params(1) in file: lib\support\0.2.9/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1188] params(1) in file: lib\support\0.2.9/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1189] params(1) in file: lib\support\0.2.9/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1190] params(1) in file: lib\support\0.2.9/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1191] params(1) in file: lib\support\0.2.9/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1192] params(1) in file: lib\support\0.2.9/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1193] params(1) in file: lib\support\0.2.9/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1194] params(1) in file: lib\support\0.2.9/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1195] params(1) in file: lib\support\0.2.9/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1196] params(1) in file: lib\support\0.2.9/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1197] params(1) in file: lib\support\0.2.9/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator>>[1198] params(1) in file: lib\support\0.2.9/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1199] params(1) in file: lib\support\0.2.9/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1200] params(1) in file: lib\support\0.2.9/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1201] params(1) in file: lib\support\0.2.9/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1202] params(1) in file: lib\support\0.2.9/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1203] params(1) in file: lib\support\0.2.9/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1204] params(1) in file: lib\support\0.2.9/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1205] params(1) in file: lib\support\0.2.9/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1206] params(1) in file: lib\support\0.2.9/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1207] params(1) in file: lib\support\0.2.9/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1208] params(1) in file: lib\support\0.2.9/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1209] params(1) in file: lib\support\0.2.9/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator^[1210] params(1) in file: lib\support\0.2.9/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1211] params(1) in file: lib\support\0.2.9/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1212] params(1) in file: lib\support\0.2.9/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1213] params(1) in file: lib\support\0.2.9/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1214] params(1) in file: lib\support\0.2.9/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1215] params(1) in file: lib\support\0.2.9/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1216] params(1) in file: lib\support\0.2.9/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1217] params(1) in file: lib\support\0.2.9/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1218] params(1) in file: lib\support\0.2.9/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1219] params(1) in file: lib\support\0.2.9/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1220] params(1) in file: lib\support\0.2.9/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1221] params(1) in file: lib\support\0.2.9/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator&[1222] params(1) in file: lib\support\0.2.9/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1223] params(1) in file: lib\support\0.2.9/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1224] params(1) in file: lib\support\0.2.9/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1225] params(1) in file: lib\support\0.2.9/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1226] params(1) in file: lib\support\0.2.9/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1227] params(1) in file: lib\support\0.2.9/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1228] params(1) in file: lib\support\0.2.9/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1229] params(1) in file: lib\support\0.2.9/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1230] params(1) in file: lib\support\0.2.9/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1231] params(1) in file: lib\support\0.2.9/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1232] params(1) in file: lib\support\0.2.9/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1233] params(1) in file: lib\support\0.2.9/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator|[1234] params(1) in file: lib\support\0.2.9/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1235] params(1) in file: lib\support\0.2.9/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1236] params(1) in file: lib\support\0.2.9/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1237] params(1) in file: lib\support\0.2.9/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1238] params(1) in file: lib\support\0.2.9/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1239] params(1) in file: lib\support\0.2.9/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1240] params(1) in file: lib\support\0.2.9/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1241] params(1) in file: lib\support\0.2.9/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1242] params(1) in file: lib\support\0.2.9/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1243] params(1) in file: lib\support\0.2.9/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1244] params(1) in file: lib\support\0.2.9/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1245] params(1) in file: lib\support\0.2.9/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator!=[1246] params(1) in file: lib\support\0.2.9/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator==[1247] params(1) in file: lib\support\0.2.9/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator=[1248] params(1) in file: lib\support\0.2.9/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int16>.to_string[1249] params(0) in file: lib\support\0.2.9/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3503 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int16>.parse[1250] params(1) in file: lib\support\0.2.9/primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov16 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @1896 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3510 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3491 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3491 // <std#string.at>   
47 [0x2f]:           call @3132 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // app#__srt_global   
53 [0x35]:           newarry adx: 0   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // app#__srt_global   
56 [0x38]:           checknull   
57 [0x39]:           dup    
58 [0x3a]:           newstr @109 // illegal char in string:    
59 [0x3b]:           call @3469 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3491 // <std#string.at>   
63 [0x3f]:           call @3502 // <std#string.operator+>   
64 [0x40]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov16 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3491 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov16 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov16 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_int16>.to_ulong[1251] params(0) in file: lib\support\0.2.9/primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // app#__srt_global   
1 [0x1]:           new_class @0 // app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_long[1252] params(0) in file: lib\support\0.2.9/primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // app#__srt_global   
1 [0x1]:           movn #293   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_uint[1253] params(0) in file: lib\support\0.2.9/primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // app#__srt_global   
1 [0x1]:           sleep adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_int[1254] params(0) in file: lib\support\0.2.9/primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // app#__srt_global   
1 [0x1]:           test adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_ushort[1255] params(0) in file: lib\support\0.2.9/primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // app#__srt_global   
1 [0x1]:           tne adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_short[1256] params(0) in file: lib\support\0.2.9/primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // app#__srt_global   
1 [0x1]:           _lck    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_uchar[1257] params(0) in file: lib\support\0.2.9/primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // app#__srt_global   
1 [0x1]:           _ulck   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_char[1258] params(0) in file: lib\support\0.2.9/primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // app#__srt_global   
1 [0x1]:           movg @0 // @app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_byte[1259] params(0) in file: lib\support\0.2.9/primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // app#__srt_global   
1 [0x1]:           movnd adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_bool[1260] params(0) in file: lib\support\0.2.9/primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // app#__srt_global   
1 [0x1]:           newobj_arry adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_double[1261] params(0) in file: lib\support\0.2.9/primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // app#__srt_global   
1 [0x1]:           not adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.get_value[1262] params(0) in file: lib\support\0.2.9/primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int16>.integer[1263] params(0) in file: lib\support\0.2.9/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint8>.integer[1264] params(1) in file: lib\support\0.2.9/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_uint8>.hash[1265] params(0) in file: lib\support\0.2.9/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2430 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint8>.operator!=[1266] params(1) in file: lib\support\0.2.9/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1267] params(1) in file: lib\support\0.2.9/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1268] params(1) in file: lib\support\0.2.9/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1269] params(1) in file: lib\support\0.2.9/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1270] params(1) in file: lib\support\0.2.9/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1271] params(1) in file: lib\support\0.2.9/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1272] params(1) in file: lib\support\0.2.9/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1273] params(1) in file: lib\support\0.2.9/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1274] params(1) in file: lib\support\0.2.9/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1275] params(1) in file: lib\support\0.2.9/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1276] params(1) in file: lib\support\0.2.9/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1277] params(1) in file: lib\support\0.2.9/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1278] params(1) in file: lib\support\0.2.9/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1279] params(1) in file: lib\support\0.2.9/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1280] params(1) in file: lib\support\0.2.9/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1281] params(1) in file: lib\support\0.2.9/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1282] params(1) in file: lib\support\0.2.9/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1283] params(1) in file: lib\support\0.2.9/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1284] params(1) in file: lib\support\0.2.9/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1285] params(1) in file: lib\support\0.2.9/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1286] params(1) in file: lib\support\0.2.9/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1287] params(1) in file: lib\support\0.2.9/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1288] params(1) in file: lib\support\0.2.9/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1289] params(1) in file: lib\support\0.2.9/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1290] params(1) in file: lib\support\0.2.9/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1291] params(1) in file: lib\support\0.2.9/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1292] params(1) in file: lib\support\0.2.9/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1293] params(1) in file: lib\support\0.2.9/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1294] params(1) in file: lib\support\0.2.9/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1295] params(1) in file: lib\support\0.2.9/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1296] params(1) in file: lib\support\0.2.9/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1297] params(1) in file: lib\support\0.2.9/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1298] params(1) in file: lib\support\0.2.9/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator-[1299] params(1) in file: lib\support\0.2.9/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1300] params(1) in file: lib\support\0.2.9/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1301] params(1) in file: lib\support\0.2.9/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1302] params(1) in file: lib\support\0.2.9/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1303] params(1) in file: lib\support\0.2.9/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1304] params(1) in file: lib\support\0.2.9/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1305] params(1) in file: lib\support\0.2.9/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1306] params(1) in file: lib\support\0.2.9/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1307] params(1) in file: lib\support\0.2.9/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1308] params(1) in file: lib\support\0.2.9/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1309] params(1) in file: lib\support\0.2.9/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1310] params(1) in file: lib\support\0.2.9/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator*[1311] params(1) in file: lib\support\0.2.9/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1312] params(1) in file: lib\support\0.2.9/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1313] params(1) in file: lib\support\0.2.9/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1314] params(1) in file: lib\support\0.2.9/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1315] params(1) in file: lib\support\0.2.9/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1316] params(1) in file: lib\support\0.2.9/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1317] params(1) in file: lib\support\0.2.9/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1318] params(1) in file: lib\support\0.2.9/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1319] params(1) in file: lib\support\0.2.9/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1320] params(1) in file: lib\support\0.2.9/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1321] params(1) in file: lib\support\0.2.9/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1322] params(1) in file: lib\support\0.2.9/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator/[1323] params(1) in file: lib\support\0.2.9/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1324] params(1) in file: lib\support\0.2.9/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1325] params(1) in file: lib\support\0.2.9/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1326] params(1) in file: lib\support\0.2.9/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1327] params(1) in file: lib\support\0.2.9/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1328] params(1) in file: lib\support\0.2.9/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1329] params(1) in file: lib\support\0.2.9/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1330] params(1) in file: lib\support\0.2.9/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1331] params(1) in file: lib\support\0.2.9/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1332] params(1) in file: lib\support\0.2.9/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1333] params(1) in file: lib\support\0.2.9/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1334] params(1) in file: lib\support\0.2.9/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator%[1335] params(1) in file: lib\support\0.2.9/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1336] params(1) in file: lib\support\0.2.9/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1337] params(1) in file: lib\support\0.2.9/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1338] params(1) in file: lib\support\0.2.9/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1339] params(1) in file: lib\support\0.2.9/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1340] params(1) in file: lib\support\0.2.9/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1341] params(1) in file: lib\support\0.2.9/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1342] params(1) in file: lib\support\0.2.9/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1343] params(1) in file: lib\support\0.2.9/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1344] params(1) in file: lib\support\0.2.9/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1345] params(1) in file: lib\support\0.2.9/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator%[1346] params(1) in file: lib\support\0.2.9/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator<[1347] params(1) in file: lib\support\0.2.9/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1348] params(1) in file: lib\support\0.2.9/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1349] params(1) in file: lib\support\0.2.9/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1350] params(1) in file: lib\support\0.2.9/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1351] params(1) in file: lib\support\0.2.9/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1352] params(1) in file: lib\support\0.2.9/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1353] params(1) in file: lib\support\0.2.9/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1354] params(1) in file: lib\support\0.2.9/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1355] params(1) in file: lib\support\0.2.9/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1356] params(1) in file: lib\support\0.2.9/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1357] params(1) in file: lib\support\0.2.9/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1358] params(1) in file: lib\support\0.2.9/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator>[1359] params(1) in file: lib\support\0.2.9/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1360] params(1) in file: lib\support\0.2.9/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1361] params(1) in file: lib\support\0.2.9/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1362] params(1) in file: lib\support\0.2.9/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1363] params(1) in file: lib\support\0.2.9/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1364] params(1) in file: lib\support\0.2.9/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1365] params(1) in file: lib\support\0.2.9/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1366] params(1) in file: lib\support\0.2.9/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1367] params(1) in file: lib\support\0.2.9/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1368] params(1) in file: lib\support\0.2.9/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1369] params(1) in file: lib\support\0.2.9/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1370] params(1) in file: lib\support\0.2.9/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator<=[1371] params(1) in file: lib\support\0.2.9/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1372] params(1) in file: lib\support\0.2.9/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1373] params(1) in file: lib\support\0.2.9/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1374] params(1) in file: lib\support\0.2.9/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1375] params(1) in file: lib\support\0.2.9/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1376] params(1) in file: lib\support\0.2.9/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1377] params(1) in file: lib\support\0.2.9/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1378] params(1) in file: lib\support\0.2.9/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1379] params(1) in file: lib\support\0.2.9/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1380] params(1) in file: lib\support\0.2.9/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1381] params(1) in file: lib\support\0.2.9/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1382] params(1) in file: lib\support\0.2.9/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator**[1383] params(1) in file: lib\support\0.2.9/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1384] params(1) in file: lib\support\0.2.9/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1385] params(1) in file: lib\support\0.2.9/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1386] params(1) in file: lib\support\0.2.9/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1387] params(1) in file: lib\support\0.2.9/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1388] params(1) in file: lib\support\0.2.9/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1389] params(1) in file: lib\support\0.2.9/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1390] params(1) in file: lib\support\0.2.9/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1391] params(1) in file: lib\support\0.2.9/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1392] params(1) in file: lib\support\0.2.9/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1393] params(1) in file: lib\support\0.2.9/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1394] params(1) in file: lib\support\0.2.9/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator<<[1395] params(1) in file: lib\support\0.2.9/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1396] params(1) in file: lib\support\0.2.9/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1397] params(1) in file: lib\support\0.2.9/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1398] params(1) in file: lib\support\0.2.9/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1399] params(1) in file: lib\support\0.2.9/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1400] params(1) in file: lib\support\0.2.9/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1401] params(1) in file: lib\support\0.2.9/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1402] params(1) in file: lib\support\0.2.9/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1403] params(1) in file: lib\support\0.2.9/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1404] params(1) in file: lib\support\0.2.9/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1405] params(1) in file: lib\support\0.2.9/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1406] params(1) in file: lib\support\0.2.9/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator>>[1407] params(1) in file: lib\support\0.2.9/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1408] params(1) in file: lib\support\0.2.9/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1409] params(1) in file: lib\support\0.2.9/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1410] params(1) in file: lib\support\0.2.9/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1411] params(1) in file: lib\support\0.2.9/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1412] params(1) in file: lib\support\0.2.9/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1413] params(1) in file: lib\support\0.2.9/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1414] params(1) in file: lib\support\0.2.9/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1415] params(1) in file: lib\support\0.2.9/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1416] params(1) in file: lib\support\0.2.9/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1417] params(1) in file: lib\support\0.2.9/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1418] params(1) in file: lib\support\0.2.9/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator^[1419] params(1) in file: lib\support\0.2.9/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1420] params(1) in file: lib\support\0.2.9/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1421] params(1) in file: lib\support\0.2.9/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1422] params(1) in file: lib\support\0.2.9/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1423] params(1) in file: lib\support\0.2.9/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1424] params(1) in file: lib\support\0.2.9/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1425] params(1) in file: lib\support\0.2.9/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1426] params(1) in file: lib\support\0.2.9/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1427] params(1) in file: lib\support\0.2.9/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1428] params(1) in file: lib\support\0.2.9/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1429] params(1) in file: lib\support\0.2.9/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1430] params(1) in file: lib\support\0.2.9/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator&[1431] params(1) in file: lib\support\0.2.9/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1432] params(1) in file: lib\support\0.2.9/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1433] params(1) in file: lib\support\0.2.9/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1434] params(1) in file: lib\support\0.2.9/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1435] params(1) in file: lib\support\0.2.9/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1436] params(1) in file: lib\support\0.2.9/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1437] params(1) in file: lib\support\0.2.9/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1438] params(1) in file: lib\support\0.2.9/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1439] params(1) in file: lib\support\0.2.9/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1440] params(1) in file: lib\support\0.2.9/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1441] params(1) in file: lib\support\0.2.9/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1442] params(1) in file: lib\support\0.2.9/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator|[1443] params(1) in file: lib\support\0.2.9/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1444] params(1) in file: lib\support\0.2.9/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1445] params(1) in file: lib\support\0.2.9/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1446] params(1) in file: lib\support\0.2.9/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1447] params(1) in file: lib\support\0.2.9/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1448] params(1) in file: lib\support\0.2.9/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1449] params(1) in file: lib\support\0.2.9/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1450] params(1) in file: lib\support\0.2.9/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1451] params(1) in file: lib\support\0.2.9/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1452] params(1) in file: lib\support\0.2.9/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1453] params(1) in file: lib\support\0.2.9/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1454] params(1) in file: lib\support\0.2.9/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator!=[1455] params(1) in file: lib\support\0.2.9/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator==[1456] params(1) in file: lib\support\0.2.9/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator=[1457] params(1) in file: lib\support\0.2.9/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint8>.to_string[1458] params(0) in file: lib\support\0.2.9/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3506 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint8>.parse[1459] params(1) in file: lib\support\0.2.9/primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu8 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @1896 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3510 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3491 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3491 // <std#string.at>   
47 [0x2f]:           call @3132 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // app#__srt_global   
53 [0x35]:           newarry adx: 0   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // app#__srt_global   
56 [0x38]:           checknull   
57 [0x39]:           dup    
58 [0x3a]:           newstr @109 // illegal char in string:    
59 [0x3b]:           call @3469 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3491 // <std#string.at>   
63 [0x3f]:           call @3502 // <std#string.operator+>   
64 [0x40]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu8 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3491 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu8 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu8 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_uint8>.to_ulong[1460] params(0) in file: lib\support\0.2.9/primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // app#__srt_global   
1 [0x1]:           new_class @0 // app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_long[1461] params(0) in file: lib\support\0.2.9/primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // app#__srt_global   
1 [0x1]:           movn #293   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_uint[1462] params(0) in file: lib\support\0.2.9/primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // app#__srt_global   
1 [0x1]:           sleep adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_int[1463] params(0) in file: lib\support\0.2.9/primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // app#__srt_global   
1 [0x1]:           test adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_ushort[1464] params(0) in file: lib\support\0.2.9/primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // app#__srt_global   
1 [0x1]:           tne adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_short[1465] params(0) in file: lib\support\0.2.9/primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // app#__srt_global   
1 [0x1]:           _lck    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_uchar[1466] params(0) in file: lib\support\0.2.9/primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // app#__srt_global   
1 [0x1]:           _ulck   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_char[1467] params(0) in file: lib\support\0.2.9/primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // app#__srt_global   
1 [0x1]:           movg @0 // @app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_byte[1468] params(0) in file: lib\support\0.2.9/primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // app#__srt_global   
1 [0x1]:           movnd adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_bool[1469] params(0) in file: lib\support\0.2.9/primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // app#__srt_global   
1 [0x1]:           newobj_arry adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_double[1470] params(0) in file: lib\support\0.2.9/primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // app#__srt_global   
1 [0x1]:           not adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.get_value[1471] params(0) in file: lib\support\0.2.9/primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint8>.integer[1472] params(0) in file: lib\support\0.2.9/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int8>.integer[1473] params(1) in file: lib\support\0.2.9/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_int8>.hash[1474] params(0) in file: lib\support\0.2.9/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2430 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int8>.operator!=[1475] params(1) in file: lib\support\0.2.9/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1476] params(1) in file: lib\support\0.2.9/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1477] params(1) in file: lib\support\0.2.9/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1478] params(1) in file: lib\support\0.2.9/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1479] params(1) in file: lib\support\0.2.9/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1480] params(1) in file: lib\support\0.2.9/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1481] params(1) in file: lib\support\0.2.9/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1482] params(1) in file: lib\support\0.2.9/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1483] params(1) in file: lib\support\0.2.9/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1484] params(1) in file: lib\support\0.2.9/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1485] params(1) in file: lib\support\0.2.9/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1486] params(1) in file: lib\support\0.2.9/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1487] params(1) in file: lib\support\0.2.9/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1488] params(1) in file: lib\support\0.2.9/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1489] params(1) in file: lib\support\0.2.9/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1490] params(1) in file: lib\support\0.2.9/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1491] params(1) in file: lib\support\0.2.9/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1492] params(1) in file: lib\support\0.2.9/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1493] params(1) in file: lib\support\0.2.9/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1494] params(1) in file: lib\support\0.2.9/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1495] params(1) in file: lib\support\0.2.9/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1496] params(1) in file: lib\support\0.2.9/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1497] params(1) in file: lib\support\0.2.9/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1498] params(1) in file: lib\support\0.2.9/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1499] params(1) in file: lib\support\0.2.9/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1500] params(1) in file: lib\support\0.2.9/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1501] params(1) in file: lib\support\0.2.9/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1502] params(1) in file: lib\support\0.2.9/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1503] params(1) in file: lib\support\0.2.9/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1504] params(1) in file: lib\support\0.2.9/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1505] params(1) in file: lib\support\0.2.9/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1506] params(1) in file: lib\support\0.2.9/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1507] params(1) in file: lib\support\0.2.9/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator-[1508] params(1) in file: lib\support\0.2.9/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1509] params(1) in file: lib\support\0.2.9/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1510] params(1) in file: lib\support\0.2.9/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1511] params(1) in file: lib\support\0.2.9/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1512] params(1) in file: lib\support\0.2.9/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1513] params(1) in file: lib\support\0.2.9/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1514] params(1) in file: lib\support\0.2.9/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1515] params(1) in file: lib\support\0.2.9/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1516] params(1) in file: lib\support\0.2.9/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1517] params(1) in file: lib\support\0.2.9/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1518] params(1) in file: lib\support\0.2.9/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1519] params(1) in file: lib\support\0.2.9/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator*[1520] params(1) in file: lib\support\0.2.9/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1521] params(1) in file: lib\support\0.2.9/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1522] params(1) in file: lib\support\0.2.9/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1523] params(1) in file: lib\support\0.2.9/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1524] params(1) in file: lib\support\0.2.9/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1525] params(1) in file: lib\support\0.2.9/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1526] params(1) in file: lib\support\0.2.9/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1527] params(1) in file: lib\support\0.2.9/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1528] params(1) in file: lib\support\0.2.9/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1529] params(1) in file: lib\support\0.2.9/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1530] params(1) in file: lib\support\0.2.9/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1531] params(1) in file: lib\support\0.2.9/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator/[1532] params(1) in file: lib\support\0.2.9/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1533] params(1) in file: lib\support\0.2.9/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1534] params(1) in file: lib\support\0.2.9/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1535] params(1) in file: lib\support\0.2.9/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1536] params(1) in file: lib\support\0.2.9/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1537] params(1) in file: lib\support\0.2.9/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1538] params(1) in file: lib\support\0.2.9/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1539] params(1) in file: lib\support\0.2.9/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1540] params(1) in file: lib\support\0.2.9/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1541] params(1) in file: lib\support\0.2.9/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1542] params(1) in file: lib\support\0.2.9/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1543] params(1) in file: lib\support\0.2.9/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator%[1544] params(1) in file: lib\support\0.2.9/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1545] params(1) in file: lib\support\0.2.9/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1546] params(1) in file: lib\support\0.2.9/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1547] params(1) in file: lib\support\0.2.9/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1548] params(1) in file: lib\support\0.2.9/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1549] params(1) in file: lib\support\0.2.9/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1550] params(1) in file: lib\support\0.2.9/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1551] params(1) in file: lib\support\0.2.9/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1552] params(1) in file: lib\support\0.2.9/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1553] params(1) in file: lib\support\0.2.9/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1554] params(1) in file: lib\support\0.2.9/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator%[1555] params(1) in file: lib\support\0.2.9/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator<[1556] params(1) in file: lib\support\0.2.9/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1557] params(1) in file: lib\support\0.2.9/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1558] params(1) in file: lib\support\0.2.9/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1559] params(1) in file: lib\support\0.2.9/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1560] params(1) in file: lib\support\0.2.9/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1561] params(1) in file: lib\support\0.2.9/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1562] params(1) in file: lib\support\0.2.9/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1563] params(1) in file: lib\support\0.2.9/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1564] params(1) in file: lib\support\0.2.9/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1565] params(1) in file: lib\support\0.2.9/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1566] params(1) in file: lib\support\0.2.9/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1567] params(1) in file: lib\support\0.2.9/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator>[1568] params(1) in file: lib\support\0.2.9/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1569] params(1) in file: lib\support\0.2.9/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1570] params(1) in file: lib\support\0.2.9/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1571] params(1) in file: lib\support\0.2.9/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1572] params(1) in file: lib\support\0.2.9/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1573] params(1) in file: lib\support\0.2.9/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1574] params(1) in file: lib\support\0.2.9/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1575] params(1) in file: lib\support\0.2.9/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1576] params(1) in file: lib\support\0.2.9/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1577] params(1) in file: lib\support\0.2.9/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1578] params(1) in file: lib\support\0.2.9/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1579] params(1) in file: lib\support\0.2.9/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator<=[1580] params(1) in file: lib\support\0.2.9/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1581] params(1) in file: lib\support\0.2.9/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1582] params(1) in file: lib\support\0.2.9/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1583] params(1) in file: lib\support\0.2.9/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1584] params(1) in file: lib\support\0.2.9/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1585] params(1) in file: lib\support\0.2.9/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1586] params(1) in file: lib\support\0.2.9/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1587] params(1) in file: lib\support\0.2.9/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1588] params(1) in file: lib\support\0.2.9/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1589] params(1) in file: lib\support\0.2.9/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1590] params(1) in file: lib\support\0.2.9/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1591] params(1) in file: lib\support\0.2.9/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator**[1592] params(1) in file: lib\support\0.2.9/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1593] params(1) in file: lib\support\0.2.9/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1594] params(1) in file: lib\support\0.2.9/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1595] params(1) in file: lib\support\0.2.9/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1596] params(1) in file: lib\support\0.2.9/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1597] params(1) in file: lib\support\0.2.9/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1598] params(1) in file: lib\support\0.2.9/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1599] params(1) in file: lib\support\0.2.9/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1600] params(1) in file: lib\support\0.2.9/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1601] params(1) in file: lib\support\0.2.9/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1602] params(1) in file: lib\support\0.2.9/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1603] params(1) in file: lib\support\0.2.9/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator<<[1604] params(1) in file: lib\support\0.2.9/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1605] params(1) in file: lib\support\0.2.9/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1606] params(1) in file: lib\support\0.2.9/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1607] params(1) in file: lib\support\0.2.9/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1608] params(1) in file: lib\support\0.2.9/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1609] params(1) in file: lib\support\0.2.9/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1610] params(1) in file: lib\support\0.2.9/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1611] params(1) in file: lib\support\0.2.9/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1612] params(1) in file: lib\support\0.2.9/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1613] params(1) in file: lib\support\0.2.9/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1614] params(1) in file: lib\support\0.2.9/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1615] params(1) in file: lib\support\0.2.9/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator>>[1616] params(1) in file: lib\support\0.2.9/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1617] params(1) in file: lib\support\0.2.9/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1618] params(1) in file: lib\support\0.2.9/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1619] params(1) in file: lib\support\0.2.9/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1620] params(1) in file: lib\support\0.2.9/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1621] params(1) in file: lib\support\0.2.9/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1622] params(1) in file: lib\support\0.2.9/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1623] params(1) in file: lib\support\0.2.9/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1624] params(1) in file: lib\support\0.2.9/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1625] params(1) in file: lib\support\0.2.9/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1626] params(1) in file: lib\support\0.2.9/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1627] params(1) in file: lib\support\0.2.9/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator^[1628] params(1) in file: lib\support\0.2.9/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1629] params(1) in file: lib\support\0.2.9/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1630] params(1) in file: lib\support\0.2.9/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1631] params(1) in file: lib\support\0.2.9/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1632] params(1) in file: lib\support\0.2.9/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1633] params(1) in file: lib\support\0.2.9/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1634] params(1) in file: lib\support\0.2.9/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1635] params(1) in file: lib\support\0.2.9/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1636] params(1) in file: lib\support\0.2.9/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1637] params(1) in file: lib\support\0.2.9/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1638] params(1) in file: lib\support\0.2.9/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1639] params(1) in file: lib\support\0.2.9/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator&[1640] params(1) in file: lib\support\0.2.9/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1641] params(1) in file: lib\support\0.2.9/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1642] params(1) in file: lib\support\0.2.9/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1643] params(1) in file: lib\support\0.2.9/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1644] params(1) in file: lib\support\0.2.9/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1645] params(1) in file: lib\support\0.2.9/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1646] params(1) in file: lib\support\0.2.9/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1647] params(1) in file: lib\support\0.2.9/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1648] params(1) in file: lib\support\0.2.9/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1649] params(1) in file: lib\support\0.2.9/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1650] params(1) in file: lib\support\0.2.9/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1651] params(1) in file: lib\support\0.2.9/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator|[1652] params(1) in file: lib\support\0.2.9/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1653] params(1) in file: lib\support\0.2.9/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1654] params(1) in file: lib\support\0.2.9/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1655] params(1) in file: lib\support\0.2.9/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1656] params(1) in file: lib\support\0.2.9/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1657] params(1) in file: lib\support\0.2.9/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1658] params(1) in file: lib\support\0.2.9/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1659] params(1) in file: lib\support\0.2.9/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1660] params(1) in file: lib\support\0.2.9/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1661] params(1) in file: lib\support\0.2.9/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1662] params(1) in file: lib\support\0.2.9/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1663] params(1) in file: lib\support\0.2.9/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator!=[1664] params(1) in file: lib\support\0.2.9/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator==[1665] params(1) in file: lib\support\0.2.9/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator=[1666] params(1) in file: lib\support\0.2.9/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int8>.to_string[1667] params(0) in file: lib\support\0.2.9/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3502 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int8>.parse[1668] params(1) in file: lib\support\0.2.9/primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov8 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @1896 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @3510 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @3491 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @3491 // <std#string.at>   
47 [0x2f]:           call @3132 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // app#__srt_global   
53 [0x35]:           newarry adx: 0   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // app#__srt_global   
56 [0x38]:           checknull   
57 [0x39]:           dup    
58 [0x3a]:           newstr @109 // illegal char in string:    
59 [0x3b]:           call @3469 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @3491 // <std#string.at>   
63 [0x3f]:           call @3502 // <std#string.operator+>   
64 [0x40]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov8 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @3491 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov8 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov8 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_int8>.to_ulong[1669] params(0) in file: lib\support\0.2.9/primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // app#__srt_global   
1 [0x1]:           new_class @0 // app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_long[1670] params(0) in file: lib\support\0.2.9/primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // app#__srt_global   
1 [0x1]:           movn #293   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_uint[1671] params(0) in file: lib\support\0.2.9/primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // app#__srt_global   
1 [0x1]:           sleep adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_int[1672] params(0) in file: lib\support\0.2.9/primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // app#__srt_global   
1 [0x1]:           test adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_ushort[1673] params(0) in file: lib\support\0.2.9/primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // app#__srt_global   
1 [0x1]:           tne adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_short[1674] params(0) in file: lib\support\0.2.9/primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // app#__srt_global   
1 [0x1]:           _lck    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_uchar[1675] params(0) in file: lib\support\0.2.9/primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // app#__srt_global   
1 [0x1]:           _ulck   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_char[1676] params(0) in file: lib\support\0.2.9/primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // app#__srt_global   
1 [0x1]:           movg @0 // @app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_byte[1677] params(0) in file: lib\support\0.2.9/primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // app#__srt_global   
1 [0x1]:           movnd adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_bool[1678] params(0) in file: lib\support\0.2.9/primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // app#__srt_global   
1 [0x1]:           newobj_arry adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_double[1679] params(0) in file: lib\support\0.2.9/primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // app#__srt_global   
1 [0x1]:           not adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.get_value[1680] params(0) in file: lib\support\0.2.9/primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int8>.integer[1681] params(0) in file: lib\support\0.2.9/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<var>.integer[1682] params(1) in file: lib\support\0.2.9/primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std#integer<var>.hash[1683] params(0) in file: lib\support\0.2.9/primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2430 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<var>.operator!=[1684] params(1) in file: lib\support\0.2.9/primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1685] params(1) in file: lib\support\0.2.9/primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1686] params(1) in file: lib\support\0.2.9/primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1687] params(1) in file: lib\support\0.2.9/primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1688] params(1) in file: lib\support\0.2.9/primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1689] params(1) in file: lib\support\0.2.9/primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1690] params(1) in file: lib\support\0.2.9/primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1691] params(1) in file: lib\support\0.2.9/primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1692] params(1) in file: lib\support\0.2.9/primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1693] params(1) in file: lib\support\0.2.9/primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1694] params(1) in file: lib\support\0.2.9/primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1695] params(1) in file: lib\support\0.2.9/primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1696] params(1) in file: lib\support\0.2.9/primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1697] params(1) in file: lib\support\0.2.9/primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1698] params(1) in file: lib\support\0.2.9/primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1699] params(1) in file: lib\support\0.2.9/primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1700] params(1) in file: lib\support\0.2.9/primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1701] params(1) in file: lib\support\0.2.9/primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1702] params(1) in file: lib\support\0.2.9/primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1703] params(1) in file: lib\support\0.2.9/primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1704] params(1) in file: lib\support\0.2.9/primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1705] params(1) in file: lib\support\0.2.9/primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1706] params(1) in file: lib\support\0.2.9/primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1707] params(1) in file: lib\support\0.2.9/primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1708] params(1) in file: lib\support\0.2.9/primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1709] params(1) in file: lib\support\0.2.9/primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1710] params(1) in file: lib\support\0.2.9/primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1711] params(1) in file: lib\support\0.2.9/primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1712] params(1) in file: lib\support\0.2.9/primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1713] params(1) in file: lib\support\0.2.9/primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1714] params(1) in file: lib\support\0.2.9/primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1715] params(1) in file: lib\support\0.2.9/primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1716] params(1) in file: lib\support\0.2.9/primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<var>.operator-[1717] params(1) in file: lib\support\0.2.9/primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1718] params(1) in file: lib\support\0.2.9/primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1719] params(1) in file: lib\support\0.2.9/primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1720] params(1) in file: lib\support\0.2.9/primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1721] params(1) in file: lib\support\0.2.9/primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1722] params(1) in file: lib\support\0.2.9/primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1723] params(1) in file: lib\support\0.2.9/primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1724] params(1) in file: lib\support\0.2.9/primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1725] params(1) in file: lib\support\0.2.9/primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1726] params(1) in file: lib\support\0.2.9/primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1727] params(1) in file: lib\support\0.2.9/primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1728] params(1) in file: lib\support\0.2.9/primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<var>.operator*[1729] params(1) in file: lib\support\0.2.9/primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1730] params(1) in file: lib\support\0.2.9/primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1731] params(1) in file: lib\support\0.2.9/primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1732] params(1) in file: lib\support\0.2.9/primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1733] params(1) in file: lib\support\0.2.9/primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1734] params(1) in file: lib\support\0.2.9/primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1735] params(1) in file: lib\support\0.2.9/primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1736] params(1) in file: lib\support\0.2.9/primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1737] params(1) in file: lib\support\0.2.9/primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1738] params(1) in file: lib\support\0.2.9/primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1739] params(1) in file: lib\support\0.2.9/primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1740] params(1) in file: lib\support\0.2.9/primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<var>.operator/[1741] params(1) in file: lib\support\0.2.9/primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1742] params(1) in file: lib\support\0.2.9/primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1743] params(1) in file: lib\support\0.2.9/primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1744] params(1) in file: lib\support\0.2.9/primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1745] params(1) in file: lib\support\0.2.9/primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1746] params(1) in file: lib\support\0.2.9/primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1747] params(1) in file: lib\support\0.2.9/primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1748] params(1) in file: lib\support\0.2.9/primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1749] params(1) in file: lib\support\0.2.9/primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1750] params(1) in file: lib\support\0.2.9/primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1751] params(1) in file: lib\support\0.2.9/primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1752] params(1) in file: lib\support\0.2.9/primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<var>.operator%[1753] params(1) in file: lib\support\0.2.9/primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1754] params(1) in file: lib\support\0.2.9/primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1755] params(1) in file: lib\support\0.2.9/primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1756] params(1) in file: lib\support\0.2.9/primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1757] params(1) in file: lib\support\0.2.9/primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1758] params(1) in file: lib\support\0.2.9/primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1759] params(1) in file: lib\support\0.2.9/primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1760] params(1) in file: lib\support\0.2.9/primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1761] params(1) in file: lib\support\0.2.9/primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1762] params(1) in file: lib\support\0.2.9/primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1763] params(1) in file: lib\support\0.2.9/primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator%[1764] params(1) in file: lib\support\0.2.9/primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator<[1765] params(1) in file: lib\support\0.2.9/primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1766] params(1) in file: lib\support\0.2.9/primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1767] params(1) in file: lib\support\0.2.9/primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1768] params(1) in file: lib\support\0.2.9/primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1769] params(1) in file: lib\support\0.2.9/primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1770] params(1) in file: lib\support\0.2.9/primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1771] params(1) in file: lib\support\0.2.9/primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1772] params(1) in file: lib\support\0.2.9/primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1773] params(1) in file: lib\support\0.2.9/primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1774] params(1) in file: lib\support\0.2.9/primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1775] params(1) in file: lib\support\0.2.9/primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1776] params(1) in file: lib\support\0.2.9/primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<var>.operator>[1777] params(1) in file: lib\support\0.2.9/primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1778] params(1) in file: lib\support\0.2.9/primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1779] params(1) in file: lib\support\0.2.9/primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1780] params(1) in file: lib\support\0.2.9/primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1781] params(1) in file: lib\support\0.2.9/primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1782] params(1) in file: lib\support\0.2.9/primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1783] params(1) in file: lib\support\0.2.9/primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1784] params(1) in file: lib\support\0.2.9/primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1785] params(1) in file: lib\support\0.2.9/primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1786] params(1) in file: lib\support\0.2.9/primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1787] params(1) in file: lib\support\0.2.9/primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1788] params(1) in file: lib\support\0.2.9/primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<var>.operator<=[1789] params(1) in file: lib\support\0.2.9/primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1790] params(1) in file: lib\support\0.2.9/primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1791] params(1) in file: lib\support\0.2.9/primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1792] params(1) in file: lib\support\0.2.9/primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1793] params(1) in file: lib\support\0.2.9/primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1794] params(1) in file: lib\support\0.2.9/primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1795] params(1) in file: lib\support\0.2.9/primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1796] params(1) in file: lib\support\0.2.9/primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1797] params(1) in file: lib\support\0.2.9/primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1798] params(1) in file: lib\support\0.2.9/primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1799] params(1) in file: lib\support\0.2.9/primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1800] params(1) in file: lib\support\0.2.9/primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<var>.operator**[1801] params(1) in file: lib\support\0.2.9/primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1802] params(1) in file: lib\support\0.2.9/primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1803] params(1) in file: lib\support\0.2.9/primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1804] params(1) in file: lib\support\0.2.9/primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1805] params(1) in file: lib\support\0.2.9/primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1806] params(1) in file: lib\support\0.2.9/primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1807] params(1) in file: lib\support\0.2.9/primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1808] params(1) in file: lib\support\0.2.9/primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1809] params(1) in file: lib\support\0.2.9/primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1810] params(1) in file: lib\support\0.2.9/primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1811] params(1) in file: lib\support\0.2.9/primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1812] params(1) in file: lib\support\0.2.9/primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator<<[1813] params(1) in file: lib\support\0.2.9/primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1814] params(1) in file: lib\support\0.2.9/primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1815] params(1) in file: lib\support\0.2.9/primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1816] params(1) in file: lib\support\0.2.9/primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1817] params(1) in file: lib\support\0.2.9/primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1818] params(1) in file: lib\support\0.2.9/primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1819] params(1) in file: lib\support\0.2.9/primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1820] params(1) in file: lib\support\0.2.9/primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1821] params(1) in file: lib\support\0.2.9/primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1822] params(1) in file: lib\support\0.2.9/primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1823] params(1) in file: lib\support\0.2.9/primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1824] params(1) in file: lib\support\0.2.9/primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator>>[1825] params(1) in file: lib\support\0.2.9/primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1826] params(1) in file: lib\support\0.2.9/primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1827] params(1) in file: lib\support\0.2.9/primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1828] params(1) in file: lib\support\0.2.9/primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1829] params(1) in file: lib\support\0.2.9/primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1830] params(1) in file: lib\support\0.2.9/primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1831] params(1) in file: lib\support\0.2.9/primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1832] params(1) in file: lib\support\0.2.9/primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1833] params(1) in file: lib\support\0.2.9/primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1834] params(1) in file: lib\support\0.2.9/primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1835] params(1) in file: lib\support\0.2.9/primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1836] params(1) in file: lib\support\0.2.9/primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator^[1837] params(1) in file: lib\support\0.2.9/primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1838] params(1) in file: lib\support\0.2.9/primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1839] params(1) in file: lib\support\0.2.9/primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1840] params(1) in file: lib\support\0.2.9/primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1841] params(1) in file: lib\support\0.2.9/primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1842] params(1) in file: lib\support\0.2.9/primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1843] params(1) in file: lib\support\0.2.9/primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1844] params(1) in file: lib\support\0.2.9/primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1845] params(1) in file: lib\support\0.2.9/primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1846] params(1) in file: lib\support\0.2.9/primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1847] params(1) in file: lib\support\0.2.9/primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1848] params(1) in file: lib\support\0.2.9/primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator&[1849] params(1) in file: lib\support\0.2.9/primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1850] params(1) in file: lib\support\0.2.9/primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1851] params(1) in file: lib\support\0.2.9/primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1852] params(1) in file: lib\support\0.2.9/primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1853] params(1) in file: lib\support\0.2.9/primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1854] params(1) in file: lib\support\0.2.9/primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1855] params(1) in file: lib\support\0.2.9/primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1856] params(1) in file: lib\support\0.2.9/primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1857] params(1) in file: lib\support\0.2.9/primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1858] params(1) in file: lib\support\0.2.9/primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1859] params(1) in file: lib\support\0.2.9/primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1860] params(1) in file: lib\support\0.2.9/primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator|[1861] params(1) in file: lib\support\0.2.9/primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1862] params(1) in file: lib\support\0.2.9/primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1863] params(1) in file: lib\support\0.2.9/primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1864] params(1) in file: lib\support\0.2.9/primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1865] params(1) in file: lib\support\0.2.9/primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1866] params(1) in file: lib\support\0.2.9/primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1867] params(1) in file: lib\support\0.2.9/primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1868] params(1) in file: lib\support\0.2.9/primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1869] params(1) in file: lib\support\0.2.9/primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1870] params(1) in file: lib\support\0.2.9/primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1871] params(1) in file: lib\support\0.2.9/primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1872] params(1) in file: lib\support\0.2.9/primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator!=[1873] params(1) in file: lib\support\0.2.9/primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<var>.operator==[1874] params(1) in file: lib\support\0.2.9/primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<var>.operator=[1875] params(1) in file: lib\support\0.2.9/primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std#integer<var>.to_string[1876] params(0) in file: lib\support\0.2.9/primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @3 //    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @3501 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<var>.parse[1877] params(1) in file: lib\support\0.2.9/primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 istorel 0, fp+1   
2 [0x2]: line: 231 movi #1, ebx   
4 [0x4]:           movr cmt, ebx   
5 [0x5]:           jne 12   
6 [0x6]: line: 232 pushl 0   
7 [0x7]:           call @1896 // <std#__srt_global.strtod>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   
11 [0xb]:           jmp @93   
12 [0xc]: line: 234 istorel 0, fp+2   
14 [0xe]: line: 235 istorel 0, fp+3   
16 [0x10]: line: 236 pushl 0   
17 [0x11]:           call @3510 // <std#string.size>   
18 [0x12]:           ipopl 4   
19 [0x13]: line: 238 pushl 0   
20 [0x14]:           istore 0   
22 [0x16]:           call @3491 // <std#string.at>   
23 [0x17]:           loadval ebx   
24 [0x18]:           rstore ebx   
25 [0x19]:           movi #45, ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           test ecx, ebx   
29 [0x1d]:           jne 34   
30 [0x1e]: line: 239 istorel 1, fp+3   
32 [0x20]: line: 240 istorel 1, fp+2   
34 [0x22]:           nop   
35 [0x23]: line: 243 ipushl #2   
36 [0x24]:           loadl ebx, fp+4   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 83   
42 [0x2a]: line: 244 pushl 0   
43 [0x2b]:           ipushl #2   
44 [0x2c]:           call @3491 // <std#string.at>   
45 [0x2d]:           call @3132 // <std#char.is_digit>   
46 [0x2e]:           loadval ebx   
47 [0x2f]:           not ebx, ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 64   
50 [0x32]: line: 245 new_class @0 // app#__srt_global   
51 [0x33]:           newarry adx: 0   
52 [0x34]:           dup    
53 [0x35]:           new_class @0 // app#__srt_global   
54 [0x36]:           checknull   
55 [0x37]:           dup    
56 [0x38]:           newstr @109 // illegal char in string:    
57 [0x39]:           call @3469 // <std#string.string>   
58 [0x3a]:           pushl 0   
59 [0x3b]:           ipushl #2   
60 [0x3c]:           call @3491 // <std#string.at>   
61 [0x3d]:           call @3502 // <std#string.operator+>   
62 [0x3e]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
63 [0x3f]:           throw    
64 [0x40]:           nop   
65 [0x41]: line: 249 movi #10, ebx   
67 [0x43]:           mull ebx, fp@1   
68 [0x44]: line: 250 pushl 0   
69 [0x45]:           loadl ebx, fp+2   
70 [0x46]:           movr egx, ebx   
71 [0x47]:           inc ebx   
72 [0x48]:           smovr_2 ebx, fp+2   
73 [0x49]:           rstore egx   
74 [0x4a]:           call @3491 // <std#string.at>   
75 [0x4b]:           loadval ebx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           movi #48, ebx   
79 [0x4f]:           loadval ecx   
80 [0x50]:           sub ecx, ebx -> ebx   
81 [0x51]:           addl ebx, fp@1   
82 [0x52]:           jmp @35   
83 [0x53]: line: 252 loadl ebx, fp+3   
84 [0x54]:           movr cmt, ebx   
85 [0x55]:           jne 89   
86 [0x56]: line: 253 loadl ebx, fp+1   
87 [0x57]:           neg ebx, ebx   
88 [0x58]:           smovr_2 ebx, fp+1   
89 [0x59]:           nop   
90 [0x5a]: line: 254 loadl ebx, fp+1   
91 [0x5b]:           return_val ebx   
92 [0x5c]:           ret   
93 [0x5d]:           nop   


function: std#integer<var>.to_ulong[1878] params(0) in file: lib\support\0.2.9/primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // app#__srt_global   
1 [0x1]:           new_class @0 // app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_long[1879] params(0) in file: lib\support\0.2.9/primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // app#__srt_global   
1 [0x1]:           movn #293   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_uint[1880] params(0) in file: lib\support\0.2.9/primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // app#__srt_global   
1 [0x1]:           sleep adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_int[1881] params(0) in file: lib\support\0.2.9/primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // app#__srt_global   
1 [0x1]:           test adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_ushort[1882] params(0) in file: lib\support\0.2.9/primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // app#__srt_global   
1 [0x1]:           tne adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_short[1883] params(0) in file: lib\support\0.2.9/primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // app#__srt_global   
1 [0x1]:           _lck    
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_uchar[1884] params(0) in file: lib\support\0.2.9/primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // app#__srt_global   
1 [0x1]:           _ulck   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_char[1885] params(0) in file: lib\support\0.2.9/primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // app#__srt_global   
1 [0x1]:           movg @0 // @app#__srt_global   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_byte[1886] params(0) in file: lib\support\0.2.9/primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // app#__srt_global   
1 [0x1]:           movnd adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_bool[1887] params(0) in file: lib\support\0.2.9/primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // app#__srt_global   
1 [0x1]:           newobj_arry adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_double[1888] params(0) in file: lib\support\0.2.9/primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // app#__srt_global   
1 [0x1]:           not adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<var>.get_value[1889] params(0) in file: lib\support\0.2.9/primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<var>.integer[1890] params(0) in file: lib\support\0.2.9/primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std#loopable<_int8>.get_elements[1891] params(0) in file: lib\support\0.2.9/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<_int8>.loopable[1892] params(0) in file: lib\support\0.2.9/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: app#__srt_global.channel_test[1893] params(1) in file: tests/syntax.sharp:9:4: note:  
		def channel_test(args: object[]) : var {
		   ^

0 [0x0]: line: 10 istorel -1, fp+2   
2 [0x2]:          movg @0 // @app#__srt_global   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          invoke_delegate 3646 { static=0, args=0 }   
8 [0x8]:          popl 3   
9 [0x9]:          iaddl 1, fp@2   
11 [0xb]:          movl 3   
12 [0xc]:          sizeof ecx   
13 [0xd]:          loadl ebx, fp+2   
14 [0xe]:          lt ebx, ecx   
15 [0xf]:          jne 27   
16 [0x10]:          iaload ecx, ebx   
17 [0x11]:          smovr_2 ecx, fp+1   
18 [0x12]: line: 11 new_class @0 // app#__srt_global   
19 [0x13]:          checknull   
20 [0x14]:          dup    
21 [0x15]:          newstr @4 // data:    
22 [0x16]:          call @3469 // <std#string.string>   
23 [0x17]:          ipushl #1   
24 [0x18]:          call @3501 // <std#string.operator+>   
25 [0x19]:          call @1917 // <std#__srt_global.println>   
26 [0x1a]:          jmp @9   
27 [0x1b]: line: 14 istorel 1, fp+0   
29 [0x1d]:          ret   


function: app#__srt_global.channel_test2[1894] params(1) in file: tests/syntax.sharp:17:4: note:  
		def channel_test2(args: object[]) : var {
		   ^

0 [0x0]: line: 18 istorel -1, fp+2   
2 [0x2]:          movg @0 // @app#__srt_global   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          istore 1   
8 [0x8]:          call @3663 // <std.io#channel<var>.read_next>   
9 [0x9]:          invoke_delegate 3646 { static=0, args=0 }   
11 [0xb]:          popl 3   
12 [0xc]:          iaddl 1, fp@2   
14 [0xe]:          movl 3   
15 [0xf]:          sizeof ecx   
16 [0x10]:          loadl ebx, fp+2   
17 [0x11]:          lt ebx, ecx   
18 [0x12]:          jne 30   
19 [0x13]:          iaload ecx, ebx   
20 [0x14]:          smovr_2 ecx, fp+1   
21 [0x15]: line: 19 new_class @0 // app#__srt_global   
22 [0x16]:          checknull   
23 [0x17]:          dup    
24 [0x18]:          newstr @5 // test:    
25 [0x19]:          call @3469 // <std#string.string>   
26 [0x1a]:          ipushl #1   
27 [0x1b]:          call @3501 // <std#string.operator+>   
28 [0x1c]:          call @1917 // <std#__srt_global.println>   
29 [0x1d]:          jmp @12   
30 [0x1e]: line: 22 istorel 1, fp+0   
32 [0x20]:          ret   


function: app#__srt_global.main[1895] params(1) in file: tests/syntax.sharp:25:4: note:  
		def main(args: string[]) {
		   ^

0 [0x0]: line: 26 new_class @0 // app#__srt_global   
1 [0x1]:          ifne   
2 [0x2]:          dup    
3 [0x3]:          new_class @0 // app#__srt_global   
4 [0x4]:          checknull   
5 [0x5]:          dup    
6 [0x6]:          newstr @3 //    
7 [0x7]:          call @3469 // <std#string.string>   
8 [0x8]:          istore 1893   
10 [0xa]:          call @2179 // <std.io#thread.thread>   
11 [0xb]:          call @2187 // <std.io#thread.start>   
12 [0xc]:          pop   
13 [0xd]: line: 27 new_class @0 // app#__srt_global   
14 [0xe]:          ifne   
15 [0xf]:          dup    
16 [0x10]:          new_class @0 // app#__srt_global   
17 [0x11]:          checknull   
18 [0x12]:          dup    
19 [0x13]:          newstr @3 //    
20 [0x14]:          call @3469 // <std#string.string>   
21 [0x15]:          istore 1894   
23 [0x17]:          call @2179 // <std.io#thread.thread>   
24 [0x18]:          call @2187 // <std.io#thread.start>   
25 [0x19]:          pop   
26 [0x1a]: line: 28 istorel 0, fp+1   
28 [0x1c]:          loadl ecx, fp+1   
29 [0x1d]:          movi #10, ebx   
31 [0x1f]:          lt ecx, ebx   
32 [0x20]:          movr ebx, cmt   
33 [0x21]:          movr cmt, ebx   
34 [0x22]:          jne 46   
35 [0x23]: line: 29 movg @0 // @app#__srt_global   
36 [0x24]:          movn #0   
38 [0x26]:          pushobj   
39 [0x27]:          ipushl #1   
40 [0x28]:          istore 0   
42 [0x2a]:          call @3657 // <std.io#channel<var>.send>   
43 [0x2b]:          iaddl 1, fp@1   
45 [0x2d]:          jmp @28   
46 [0x2e]: line: 32 istorel 10, fp+2   
48 [0x30]:          loadl ecx, fp+2   
49 [0x31]:          movi #15, ebx   
51 [0x33]:          lt ecx, ebx   
52 [0x34]:          movr ebx, cmt   
53 [0x35]:          movr cmt, ebx   
54 [0x36]:          jne 66   
55 [0x37]: line: 33 movg @0 // @app#__srt_global   
56 [0x38]:          movn #0   
58 [0x3a]:          pushobj   
59 [0x3b]:          ipushl #2   
60 [0x3c]:          istore 1   
62 [0x3e]:          call @3657 // <std.io#channel<var>.send>   
63 [0x3f]:          iaddl 1, fp@2   
65 [0x41]:          jmp @48   
66 [0x42]: line: 36 movg @0 // @app#__srt_global   
67 [0x43]:          movn #0   
69 [0x45]:          pushobj   
70 [0x46]:          call @3660 // <std.io#channel<var>.close>   
71 [0x47]: line: 37 istore 1000   
73 [0x49]:          call @2194 // <std.io#thread.sleep>   
74 [0x4a]:          ret   


function: std#__srt_global.strtod[1896] params(1) in file: lib\support\0.2.9/console.sharp:3:4: note:  
		def strtod(str: string) : var {
		   ^

0 [0x0]: line: 4 pushl 0   
1 [0x1]:         call @3495 // <std#string.get_data>   
2 [0x2]:         popobj2    
3 [0x3]:         smovr_3 fp+1   
4 [0x4]: line: 5 istorel 0, fp+2   
6 [0x6]: line: 7 pushl 1   : protected asm start
7 [0x7]:         int 0x43   
8 [0x8]:         smovr_2 ebx, fp+2   
9 [0x9]: line: 13 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#__srt_global.snprintf[1897] params(3) in file: lib\support\0.2.9/console.sharp:16:4: note:  
		def snprintf(fmt: var, num: var, precision: var) : var[] {
		   ^

0 [0x0]: line: 17 loadl egx, fp+0   : protected asm start
1 [0x1]:          loadl ebx, fp+1   
2 [0x2]:          loadl ecx, fp+2   
3 [0x3]:          int 0x1   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]: line: 26 pushnull    : protected asm end
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#__srt_global.sys[1898] params(1) in file: lib\support\0.2.9/console.sharp:29:4: note:  
		def sys(str: string) : var {
		   ^

0 [0x0]: line: 30 pushl 0   
1 [0x1]:          call @3495 // <std#string.get_data>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 31 istorel 0, fp+2   
6 [0x6]: line: 32 pushl 1   : protected asm start
7 [0x7]:          int 0x1a   
8 [0x8]:          smovr_2 cmt, fp+2   
9 [0x9]: line: 38 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#__srt_global.print[1899] params(1) in file: lib\support\0.2.9/console.sharp:41:4: note:  
		def print(data: _int8[]) {
		   ^

0 [0x0]: line: 42 pushl 0   
1 [0x1]:          call @1927 // <std#__srt_global.print_chars>   
2 [0x2]:          ret   


function: std#__srt_global.print[1900] params(1) in file: lib\support\0.2.9/console.sharp:45:4: note:  
		def print(str: string) {
		   ^

0 [0x0]: line: 46 pushl 0   
1 [0x1]:          call @3495 // <std#string.get_data>   
2 [0x2]:          call @1927 // <std#__srt_global.print_chars>   
3 [0x3]:          ret   


function: std#__srt_global.println[1901] params(1) in file: lib\support\0.2.9/console.sharp:49:4: note:  
		def println(data: var[]) {
		   ^

0 [0x0]: line: 50 pushl 0   
1 [0x1]:          call @1930 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 51 istore 10   
4 [0x4]:          call @1929 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1902] params(1) in file: lib\support\0.2.9/console.sharp:54:4: note:  
		def println(data: _int8[]) {
		   ^

0 [0x0]: line: 55 pushl 0   
1 [0x1]:          call @1927 // <std#__srt_global.print_chars>   
2 [0x2]: line: 56 istore 10   
4 [0x4]:          call @1929 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1903] params(1) in file: lib\support\0.2.9/console.sharp:59:4: note:  
		def println(data: _int16[]) {
		   ^

0 [0x0]: line: 60 pushl 0   
1 [0x1]:          call @1931 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 61 istore 10   
4 [0x4]:          call @1929 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1904] params(1) in file: lib\support\0.2.9/console.sharp:64:4: note:  
		def println(data: _int32[]) {
		   ^

0 [0x0]: line: 65 pushl 0   
1 [0x1]:          call @1932 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 66 istore 10   
4 [0x4]:          call @1929 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1905] params(1) in file: lib\support\0.2.9/console.sharp:69:4: note:  
		def println(data: _int64[]) {
		   ^

0 [0x0]: line: 70 pushl 0   
1 [0x1]:          call @1933 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 71 istore 10   
4 [0x4]:          call @1929 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1906] params(1) in file: lib\support\0.2.9/console.sharp:74:4: note:  
		def println(data: _uint8[]) {
		   ^

0 [0x0]: line: 75 pushl 0   
1 [0x1]:          call @1934 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 76 istore 10   
4 [0x4]:          call @1929 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1907] params(1) in file: lib\support\0.2.9/console.sharp:79:4: note:  
		def println(data: _uint16[]) {
		   ^

0 [0x0]: line: 80 pushl 0   
1 [0x1]:          call @1935 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 81 istore 10   
4 [0x4]:          call @1929 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1908] params(1) in file: lib\support\0.2.9/console.sharp:84:4: note:  
		def println(data: _uint32[]) {
		   ^

0 [0x0]: line: 85 pushl 0   
1 [0x1]:          call @1936 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 86 istore 10   
4 [0x4]:          call @1929 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1909] params(1) in file: lib\support\0.2.9/console.sharp:89:4: note:  
		def println(data: _uint64[]) {
		   ^

0 [0x0]: line: 90 pushl 0   
1 [0x1]:          call @1937 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 91 istore 10   
4 [0x4]:          call @1929 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1910] params(1) in file: lib\support\0.2.9/console.sharp:94:4: note:  
		def println(data: var) {
		   ^

0 [0x0]: line: 95 ipushl #0   
1 [0x1]:          call @1928 // <std#__srt_global.print_num>   
2 [0x2]: line: 96 istore 10   
4 [0x4]:          call @1929 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[1911] params(0) in file: lib\support\0.2.9/console.sharp:99:4: note:  
		def println() {
		   ^

0 [0x0]: line: 100 istore 10   
2 [0x2]:           call @1929 // <std#__srt_global.print_char>   
3 [0x3]:           ret   


function: std#__srt_global.println[1912] params(1) in file: lib\support\0.2.9/console.sharp:103:4: note:  
		def println(e: _enum_) {
		   ^

0 [0x0]: line: 104 pushl 0   
1 [0x1]:           call @1946 // <std#_enum_.get_name>   
2 [0x2]:           call @1927 // <std#__srt_global.print_chars>   
3 [0x3]: line: 105 istore 10   
5 [0x5]:           call @1929 // <std#__srt_global.print_char>   
6 [0x6]:           ret   


function: std#__srt_global.read_line[1913] params(0) in file: lib\support\0.2.9/console.sharp:108:4: note:  
		def read_line() : string {
		   ^

0 [0x0]: line: 109 istorel 0, fp+0   
2 [0x2]: line: 110 new_class @0 // app#__srt_global   
3 [0x3]:           checknull   
4 [0x4]:           dup    
5 [0x5]:           newstr @3 //    
6 [0x6]:           call @3469 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 112 call @1915 // <std#__srt_global.read_char>   
10 [0xa]:           loadval ebx   
11 [0xb]:           mov8 ebx, ebx   
12 [0xc]:           smovr_2 ebx, fp+0   
13 [0xd]: line: 113 ipushl #0   
14 [0xe]:           movi #13, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           skne ebx // pc = 24   
20 [0x14]:           ipushl #0   
21 [0x15]:           movi #10, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           tne ecx, ebx   
25 [0x19]:           jne 35   
26 [0x1a]: line: 114 pushl 1   
27 [0x1b]:           ipushl #0   
28 [0x1c]:           call @3476 // <std#string.append>   
29 [0x1d]:           pop   
30 [0x1e]: line: 115 call @1915 // <std#__srt_global.read_char>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           mov8 ebx, ebx   
33 [0x21]:           smovr_2 ebx, fp+0   
34 [0x22]:           jmp @13   
35 [0x23]: line: 118 movl 1   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: std#__srt_global.read_passwd[1914] params(0) in file: lib\support\0.2.9/console.sharp:121:4: note:  
		def read_passwd() : string {
		   ^

0 [0x0]: line: 122 istorel 0, fp+0   
2 [0x2]: line: 123 new_class @0 // app#__srt_global   
3 [0x3]:           checknull   
4 [0x4]:           dup    
5 [0x5]:           newstr @3 //    
6 [0x6]:           call @3469 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 125 call @1916 // <std#__srt_global.read_raw_char>   
10 [0xa]:           loadval ebx   
11 [0xb]:           mov8 ebx, ebx   
12 [0xc]:           smovr_2 ebx, fp+0   
13 [0xd]: line: 126 ipushl #0   
14 [0xe]:           movi #13, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           skne ebx // pc = 24   
20 [0x14]:           ipushl #0   
21 [0x15]:           movi #10, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           tne ecx, ebx   
25 [0x19]:           jne 35   
26 [0x1a]: line: 127 pushl 1   
27 [0x1b]:           ipushl #0   
28 [0x1c]:           call @3476 // <std#string.append>   
29 [0x1d]:           pop   
30 [0x1e]: line: 128 call @1916 // <std#__srt_global.read_raw_char>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           mov8 ebx, ebx   
33 [0x21]:           smovr_2 ebx, fp+0   
34 [0x22]:           jmp @13   
35 [0x23]: line: 131 movl 1   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: std#__srt_global.read_char[1915] params(0) in file: lib\support\0.2.9/console.sharp:134:4: note:  
		def read_char() : var {
		   ^

0 [0x0]: line: 135 istore 0   
2 [0x2]:           call @1939 // <std#__srt_global.read_ch>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#__srt_global.read_raw_char[1916] params(0) in file: lib\support\0.2.9/console.sharp:138:4: note:  
		def read_raw_char() : var {
		   ^

0 [0x0]: line: 139 istore 1   
2 [0x2]:           call @1939 // <std#__srt_global.read_ch>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#__srt_global.println[1917] params(1) in file: lib\support\0.2.9/console.sharp:142:4: note:  
		def println(str: string) {
		   ^

0 [0x0]: line: 143 pushl 0   
1 [0x1]:           call @3495 // <std#string.get_data>   
2 [0x2]:           call @1927 // <std#__srt_global.print_chars>   
3 [0x3]: line: 144 istore 10   
5 [0x5]:           call @1929 // <std#__srt_global.print_char>   
6 [0x6]:           ret   


function: std#__srt_global.println[1918] params(1) in file: lib\support\0.2.9/console.sharp:147:4: note:  
		def println(o: printable) {
		   ^

0 [0x0]: line: 148 pushl 0   
1 [0x1]:           invoke_delegate 3453 { static=0, args=0 }   
3 [0x3]:           call @3495 // <std#string.get_data>   
4 [0x4]:           call @1927 // <std#__srt_global.print_chars>   
5 [0x5]: line: 149 istore 10   
7 [0x7]:           call @1929 // <std#__srt_global.print_char>   
8 [0x8]:           ret   


function: std#__srt_global.print[1919] params(1) in file: lib\support\0.2.9/console.sharp:152:4: note:  
		def print(o: printable) {
		   ^

0 [0x0]: line: 153 pushl 0   
1 [0x1]:           invoke_delegate 3453 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1927 // <std#__srt_global.print_chars>   
8 [0x8]:           ret   


function: std#__srt_global.print[1920] params(1) in file: lib\support\0.2.9/console.sharp:156:4: note:  
		def print(data: var) {
		   ^

0 [0x0]: line: 157 ipushl #0   
1 [0x1]:           call @1928 // <std#__srt_global.print_num>   
2 [0x2]:           ret   


function: std#__srt_global.flush[1921] params(0) in file: lib\support\0.2.9/console.sharp:160:4: note:  
		def flush() {
		   ^

0 [0x0]: line: 161 int 0x34   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#__srt_global.utc_mills_time[1922] params(0) in file: lib\support\0.2.9/console.sharp:164:4: note:  
		def utc_mills_time() : var {
		   ^

0 [0x0]: line: 165 call @3578 // <std#time.mills_time>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#__srt_global.nano_time[1923] params(0) in file: lib\support\0.2.9/console.sharp:168:4: note:  
		def nano_time() : var {
		   ^

0 [0x0]: line: 169 call @3573 // <std#time.nano_time>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#__srt_global.exit[1924] params(0) in file: lib\support\0.2.9/console.sharp:172:4: note:  
		def exit() {
		   ^

0 [0x0]: line: 173 int 0x1d   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#__srt_global.sizeOf[1925] params(1) in file: lib\support\0.2.9/console.sharp:176:4: note:  
		def sizeOf(data: object) : var {
		   ^

0 [0x0]: line: 177 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 183 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


function: std#__srt_global.sizeOf[1926] params(1) in file: lib\support\0.2.9/console.sharp:186:4: note:  
		def sizeOf(data: object[]) : var {
		   ^

0 [0x0]: line: 187 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 193 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


function: std#__srt_global.print_chars[1927] params(1) in file: lib\support\0.2.9/console.sharp:196:10: note:  
		local def print_chars(str: _int8[]) {
		         ^

0 [0x0]: line: 197 istorel -1, fp+2   
2 [0x2]:           pushl 0   
3 [0x3]:           popl 3   
4 [0x4]:           iaddl 1, fp@2   
6 [0x6]:           movl 3   
7 [0x7]:           sizeof ecx   
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           lt ebx, ecx   
10 [0xa]:           jne 16   
11 [0xb]:           iaload ecx, ebx   
12 [0xc]:           smovr_2 ecx, fp+1   
13 [0xd]: line: 198 loadl ebx, fp+1   : protected asm start
14 [0xe]:           _putc ebx   
15 [0xf]:           jmp @4   : protected asm end
16 [0x10]:           ret   


function: std#__srt_global.print_num[1928] params(1) in file: lib\support\0.2.9/console.sharp:205:10: note:  
		local def print_num(val: var) {
		         ^

0 [0x0]: line: 206 loadl ebx, fp+0   : protected asm start
1 [0x1]:           put ebx   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_char[1929] params(1) in file: lib\support\0.2.9/console.sharp:212:10: note:  
		local def print_char(val: _int8) {
		         ^

0 [0x0]: line: 213 loadl ebx, fp+0   : protected asm start
1 [0x1]:           _putc ebx   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1930] params(1) in file: lib\support\0.2.9/console.sharp:219:10: note:  
		local def print_numbers(str: var[]) {
		         ^

0 [0x0]: line: 220 movi #91, ebx   : protected asm start
2 [0x2]:           movi #32, ecx   
4 [0x4]:           _putc ebx   
5 [0x5]:           _putc ecx   
6 [0x6]: line: 226 istorel 0, fp+1   : protected asm end
8 [0x8]:           ipushl #1   
9 [0x9]:           movl 0   
10 [0xa]:           sizeof ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 48   
16 [0x10]: line: 227 pushl 0   
17 [0x11]:           loadl ebx, fp+1   
18 [0x12]:           popobj2    
19 [0x13]:           movr adx, ebx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           smovr_2 ebx, fp+2   
23 [0x17]: line: 228 loadl ebx, fp+2   : protected asm start
24 [0x18]:           put ebx   
25 [0x19]: line: 233 ipushl #1   : protected asm end
26 [0x1a]:           movi #1, ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           add ecx, ebx -> ebx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movl 0   
32 [0x20]:           sizeof ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           lt ecx, ebx   
35 [0x23]:           movr ebx, cmt   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 44   
38 [0x26]: line: 234 movi #44, ebx   : protected asm start
40 [0x28]:           movi #32, ecx   
42 [0x2a]:           _putc ebx   
43 [0x2b]:           _putc ecx   
44 [0x2c]:           nop   : protected asm end
45 [0x2d]:           iaddl 1, fp@1   
47 [0x2f]:           jmp @8   
48 [0x30]: line: 242 movi #32, ebx   : protected asm start
50 [0x32]:           movi #93, ecx   
52 [0x34]:           _putc ebx   
53 [0x35]:           _putc ecx   
54 [0x36]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1931] params(1) in file: lib\support\0.2.9/console.sharp:250:10: note:  
		local def print_numbers(str: _int16[]) {
		         ^

0 [0x0]: line: 251 pushl 0   : protected asm start
1 [0x1]:           call @1930 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1932] params(1) in file: lib\support\0.2.9/console.sharp:257:10: note:  
		local def print_numbers(str: _int32[]) {
		         ^

0 [0x0]: line: 258 pushl 0   : protected asm start
1 [0x1]:           call @1930 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1933] params(1) in file: lib\support\0.2.9/console.sharp:264:10: note:  
		local def print_numbers(str: _int64[]) {
		         ^

0 [0x0]: line: 265 pushl 0   : protected asm start
1 [0x1]:           call @1930 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1934] params(1) in file: lib\support\0.2.9/console.sharp:271:10: note:  
		local def print_numbers(str: _uint8[]) {
		         ^

0 [0x0]: line: 272 pushl 0   : protected asm start
1 [0x1]:           call @1930 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1935] params(1) in file: lib\support\0.2.9/console.sharp:278:10: note:  
		local def print_numbers(str: _uint16[]) {
		         ^

0 [0x0]: line: 279 pushl 0   : protected asm start
1 [0x1]:           call @1930 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1936] params(1) in file: lib\support\0.2.9/console.sharp:285:10: note:  
		local def print_numbers(str: _uint32[]) {
		         ^

0 [0x0]: line: 286 pushl 0   : protected asm start
1 [0x1]:           call @1930 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[1937] params(1) in file: lib\support\0.2.9/console.sharp:292:10: note:  
		local def print_numbers(str: _uint64[]) {
		         ^

0 [0x0]: line: 293 pushl 0   : protected asm start
1 [0x1]:           call @1930 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_chars[1938] params(1) in file: lib\support\0.2.9/console.sharp:299:10: note:  
		local def print_chars(str: _int16[]) {
		         ^

0 [0x0]: line: 300 pushl 0   : protected asm start
1 [0x1]:           call @1927 // <std#__srt_global.print_chars>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.read_ch[1939] params(1) in file: lib\support\0.2.9/console.sharp:306:10: note:  
		local def read_ch(hide: var) : var {
		         ^

0 [0x0]: line: 307 loadl cmt, fp+0   : protected asm start
1 [0x1]:           get ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 313 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


constructor: std#_enum_._enum_[1940] params(1) in file: lib\support\0.2.9/enum.sharp:18:11: note:  
		    _enum_(ord : var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 19 ipushl #1   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          mov64 ebx, ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          ret   


constructor: std#_enum_._enum_[1941] params(1) in file: lib\support\0.2.9/enum.sharp:22:11: note:  
		    _enum_(e : _enum_) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 23 movl 1   
2 [0x2]:          movn #1   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          mov64 ebx, ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]: line: 24 movl 1   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          istore 0   
20 [0x14]:          movl 1   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          call @2094 // <std.io#__srt_global.copy>   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          popobj   
30 [0x1e]:          ret   


overload function: std#_enum_.operator!=[1942] params(1) in file: lib\support\0.2.9/enum.sharp:27:8: note:  
		    def operator!=(e : _enum_) : var {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #1   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#_enum_.operator!=[1943] params(1) in file: lib\support\0.2.9/enum.sharp:31:8: note:  
		    def operator!=(num : var) : var {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          tne ecx, ebx   
10 [0xa]:          return_val cmt   
11 [0xb]:          ret   


overload function: std#_enum_.operator==[1944] params(1) in file: lib\support\0.2.9/enum.sharp:35:8: note:  
		    def operator==(e : _enum_) : var {
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #1   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#_enum_.operator==[1945] params(1) in file: lib\support\0.2.9/enum.sharp:39:8: note:  
		    def operator==(num : var) : var {
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          test ecx, ebx   
10 [0xa]:          return_val cmt   
11 [0xb]:          ret   


function: std#_enum_.get_name[1946] params(0) in file: lib\support\0.2.9/enum.sharp:43:8: note:  
		    def get_name() : _int8[] {
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std#_enum_.get_ordinal[1947] params(0) in file: lib\support\0.2.9/enum.sharp:47:8: note:  
		    def get_ordinal() : _int64 {
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#_enum_.to_string[1948] params(0) in file: lib\support\0.2.9/enum.sharp:51:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 52 new_class @0 // app#__srt_global   
1 [0x1]:          checknull   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @3469 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


constructor: std#_enum_._enum_[1949] params(0) in file: lib\support\0.2.9/enum.sharp:14:17: note:  
		stable ext class _enum_ {
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#throwable.throwable[1950] params(1) in file: lib\support\0.2.9/exceptions.sharp:30:21: note:  
		    public throwable(message : _int8[]) {
		                    ^

0 [0x0]: line: 26 call @2295 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]: line: 31 pushl 1   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: std#throwable.throwable[1951] params(1) in file: lib\support\0.2.9/exceptions.sharp:34:21: note:  
		    public throwable(message : string) {
		                    ^

0 [0x0]: line: 26 call @2295 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]: line: 35 pushl 1   
7 [0x7]:          call @3495 // <std#string.get_data>   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          popobj   
12 [0xc]:          ret   


function: std#throwable.get_message[1952] params(0) in file: lib\support\0.2.9/exceptions.sharp:38:8: note:  
		    def get_message() : string {
		       ^

0 [0x0]: line: 39 new_class @0 // app#__srt_global   
1 [0x1]:          checknull   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @3469 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#throwable.to_string[1953] params(0) in file: lib\support\0.2.9/exceptions.sharp:42:8: note:  
		    def to_string() : string
		       ^

0 [0x0]: line: 43 new_class @0 // app#__srt_global   
1 [0x1]:          checknull   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @3469 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


constructor: std#throwable.throwable[1954] params(0) in file: lib\support\0.2.9/exceptions.sharp:10:6: note:  
		class throwable {
		     ^

0 [0x0]: line: 26 call @2295 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          ret   


constructor: std#exception.exception[1955] params(1) in file: lib\support\0.2.9/exceptions.sharp:50:21: note:  
		    public exception(message : _int8[]) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1950 // <std#throwable.throwable>   
3 [0x3]:         ret   


constructor: std#exception.exception[1956] params(1) in file: lib\support\0.2.9/exceptions.sharp:51:21: note:  
		    public exception(message : string) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1951 // <std#throwable.throwable>   
3 [0x3]:         ret   


constructor: std#exception.exception[1957] params(0) in file: lib\support\0.2.9/exceptions.sharp:49:6: note:  
		class exception base throwable {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1954 // <std#throwable.throwable>   
2 [0x2]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1958] params(1) in file: lib\support\0.2.9/exceptions.sharp:55:38: note:  
		    public illegal_argument_exception(message : _int8[]) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1959] params(1) in file: lib\support\0.2.9/exceptions.sharp:56:38: note:  
		    public illegal_argument_exception(message : string) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[1960] params(0) in file: lib\support\0.2.9/exceptions.sharp:54:6: note:  
		class illegal_argument_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1961] params(1) in file: lib\support\0.2.9/exceptions.sharp:59:35: note:  
		    public illegal_state_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1962] params(1) in file: lib\support\0.2.9/exceptions.sharp:60:35: note:  
		    public illegal_state_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[1963] params(0) in file: lib\support\0.2.9/exceptions.sharp:58:6: note:  
		class illegal_state_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1964] params(1) in file: lib\support\0.2.9/exceptions.sharp:63:35: note:  
		    public out_of_bounds_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1965] params(1) in file: lib\support\0.2.9/exceptions.sharp:64:35: note:  
		    public out_of_bounds_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[1966] params(0) in file: lib\support\0.2.9/exceptions.sharp:62:6: note:  
		class out_of_bounds_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#io_exception.io_exception[1967] params(1) in file: lib\support\0.2.9/exceptions.sharp:67:24: note:  
		    public io_exception(message : _int8[]) -> base(message) {}
		                       ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#io_exception.io_exception[1968] params(1) in file: lib\support\0.2.9/exceptions.sharp:68:24: note:  
		    public io_exception(message : string) -> base(message) {}
		                       ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#io_exception.io_exception[1969] params(0) in file: lib\support\0.2.9/exceptions.sharp:66:6: note:  
		class io_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1970] params(1) in file: lib\support\0.2.9/exceptions.sharp:71:39: note:  
		    public invalid_operation_exception(message : _int8[]) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1971] params(1) in file: lib\support\0.2.9/exceptions.sharp:72:39: note:  
		    public invalid_operation_exception(message : string) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[1972] params(0) in file: lib\support\0.2.9/exceptions.sharp:70:6: note:  
		class invalid_operation_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1973] params(1) in file: lib\support\0.2.9/exceptions.sharp:75:29: note:  
		    public nullptr_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1974] params(1) in file: lib\support\0.2.9/exceptions.sharp:76:29: note:  
		    public nullptr_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#nullptr_exception.nullptr_exception[1975] params(0) in file: lib\support\0.2.9/exceptions.sharp:74:6: note:  
		class nullptr_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#runtime_exception.runtime_exception[1976] params(1) in file: lib\support\0.2.9/exceptions.sharp:79:29: note:  
		    public runtime_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#runtime_exception.runtime_exception[1977] params(1) in file: lib\support\0.2.9/exceptions.sharp:80:29: note:  
		    public runtime_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#runtime_exception.runtime_exception[1978] params(0) in file: lib\support\0.2.9/exceptions.sharp:78:6: note:  
		class runtime_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1979] params(1) in file: lib\support\0.2.9/exceptions.sharp:83:36: note:  
		    public stack_overflow_exception(message : _int8[]) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1980] params(1) in file: lib\support\0.2.9/exceptions.sharp:84:36: note:  
		    public stack_overflow_exception(message : string) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[1981] params(0) in file: lib\support\0.2.9/exceptions.sharp:82:6: note:  
		class stack_overflow_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1982] params(1) in file: lib\support\0.2.9/exceptions.sharp:87:34: note:  
		    public thread_stack_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1983] params(1) in file: lib\support\0.2.9/exceptions.sharp:88:34: note:  
		    public thread_stack_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[1984] params(0) in file: lib\support\0.2.9/exceptions.sharp:86:6: note:  
		class thread_stack_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1985] params(1) in file: lib\support\0.2.9/exceptions.sharp:91:32: note:  
		    public class_cast_exception(message : _int8[]) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1986] params(1) in file: lib\support\0.2.9/exceptions.sharp:92:32: note:  
		    public class_cast_exception(message : string) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#class_cast_exception.class_cast_exception[1987] params(0) in file: lib\support\0.2.9/exceptions.sharp:90:6: note:  
		class class_cast_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1988] params(1) in file: lib\support\0.2.9/exceptions.sharp:95:35: note:  
		    public out_of_memory_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1989] params(1) in file: lib\support\0.2.9/exceptions.sharp:96:35: note:  
		    public out_of_memory_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[1990] params(0) in file: lib\support\0.2.9/exceptions.sharp:94:6: note:  
		class out_of_memory_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1991] params(1) in file: lib\support\0.2.9/exceptions.sharp:99:33: note:  
		    public not_implemented_error(message : _int8[]) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @2000 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1992] params(1) in file: lib\support\0.2.9/exceptions.sharp:100:33: note:  
		    public not_implemented_error(message : string) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @2001 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#not_implemented_error.not_implemented_error[1993] params(0) in file: lib\support\0.2.9/exceptions.sharp:98:6: note:  
		class not_implemented_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2002 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[1994] params(1) in file: lib\support\0.2.9/exceptions.sharp:103:34: note:  
		    public unsatisfied_link_error(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @2000 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[1995] params(1) in file: lib\support\0.2.9/exceptions.sharp:104:34: note:  
		    public unsatisfied_link_error(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @2001 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[1996] params(0) in file: lib\support\0.2.9/exceptions.sharp:102:6: note:  
		class unsatisfied_link_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2002 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#assertion_error.assertion_error[1997] params(1) in file: lib\support\0.2.9/exceptions.sharp:107:27: note:  
		    public assertion_error(message : _int8[]) -> base(message) {}
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @2000 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#assertion_error.assertion_error[1998] params(1) in file: lib\support\0.2.9/exceptions.sharp:108:27: note:  
		    public assertion_error(message : string) -> base(message) {}
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @2001 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#assertion_error.assertion_error[1999] params(0) in file: lib\support\0.2.9/exceptions.sharp:106:6: note:  
		class assertion_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2002 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#error.error[2000] params(1) in file: lib\support\0.2.9/exceptions.sharp:112:17: note:  
		    public error(message : _int8[]) -> base(message) {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1955 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#error.error[2001] params(1) in file: lib\support\0.2.9/exceptions.sharp:113:17: note:  
		    public error(message : string) -> base(message) {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1956 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#error.error[2002] params(0) in file: lib\support\0.2.9/exceptions.sharp:111:6: note:  
		class error base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1957 // <std#exception.exception>   
2 [0x2]:         ret   


function: std#__srt_global.runtime_error[2003] params(1) in file: lib\support\0.2.9/exceptions.sharp:129:4: note:  
		def runtime_error(message: string) : runtime_except {
		   ^

0 [0x0]: line: 130 new_class @0 // app#__srt_global   
1 [0x1]:           movu8 adx, adx   
2 [0x2]:           dup    
3 [0x3]:           pushl 0   
4 [0x4]:           call @1977 // <std#runtime_exception.runtime_exception>   
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: std#__srt_global.runtime_error[2004] params(0) in file: lib\support\0.2.9/exceptions.sharp:133:4: note:  
		def runtime_error() : runtime_except {
		   ^

0 [0x0]: line: 134 new_class @0 // app#__srt_global   
1 [0x1]:           movu8 adx, adx   
2 [0x2]:           dup    
3 [0x3]:           call @1978 // <std#runtime_exception.runtime_exception>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#__srt_global.todo[2005] params(1) in file: lib\support\0.2.9/exceptions.sharp:137:4: note:  
		def todo(message: string) {
		   ^

0 [0x0]: line: 138 new_class @0 // app#__srt_global   
1 [0x1]:           add adx, adx -> adx   
2 [0x2]:           dup    
3 [0x3]:           pushl 0   
4 [0x4]:           call @1992 // <std#not_implemented_error.not_implemented_error>   
5 [0x5]:           throw    
6 [0x6]:           ret   


function: std#__srt_global.assert[2006] params(1) in file: lib\support\0.2.9/exceptions.sharp:141:4: note:  
		def assert(cond : var) {
		   ^

0 [0x0]: line: 142 loadl ebx, fp+0   
1 [0x1]:           not ebx, ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 10   
4 [0x4]: line: 143 new_class @0 // app#__srt_global   
5 [0x5]:           mul adx, adx -> adx   
6 [0x6]:           dup    
7 [0x7]:           newstr @6 // assertion failed!   
8 [0x8]:           call @1997 // <std#assertion_error.assertion_error>   
9 [0x9]:           throw    
10 [0xa]:           nop   
11 [0xb]:           ret   


function: std#__srt_global.assert[2007] params(2) in file: lib\support\0.2.9/exceptions.sharp:147:4: note:  
		def assert(cond : var, message: string) {
		   ^

0 [0x0]: line: 148 loadl ebx, fp+0   
1 [0x1]:           not ebx, ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 10   
4 [0x4]: line: 149 new_class @0 // app#__srt_global   
5 [0x5]:           mul adx, adx -> adx   
6 [0x6]:           dup    
7 [0x7]:           pushl 1   
8 [0x8]:           call @1998 // <std#assertion_error.assertion_error>   
9 [0x9]:           throw    
10 [0xa]:           nop   
11 [0xb]:           ret   


function: std.io#__srt_global.critical_section[2008] params(1) in file: lib\support\0.2.9/io//critical_section.sharp:4:4: note:  
		def critical_section(block : ()()) {
		   ^

0 [0x0]: line: 5 movg @20 // @std.io#__srt_global   : protected asm start: try start: try block start
1 [0x1]: line: 6 movn #0   
3 [0x3]:         _lck    
4 [0x4]: line: 11 ipushl #0   : protected asm end
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]:          jmp @8   : try block end
8 [0x8]:          movl 1   : try end
9 [0x9]:          del   
10 [0xa]: line: 13 movg @20 // @std.io#__srt_global   : protected asm start: finally start
11 [0xb]:          movn #0   
13 [0xd]:          _ulck   
14 [0xe]:          movl 1   : protected asm end
15 [0xf]:          checknull   
16 [0x10]:          je 19   
17 [0x11]:          pushobj   
18 [0x12]:          ret ERR   
19 [0x13]:          nop   : finally end
20 [0x14]:          ret   


function: std.io#__srt_global.critical_section[2009] params(2) in file: lib\support\0.2.9/io//critical_section.sharp:21:4: note:  
		def critical_section(block : ()(), lock_obj : object) {
		   ^

0 [0x0]: line: 22 movl 1   : protected asm start: try start: try block start
1 [0x1]: line: 23 _lck    
2 [0x2]: line: 27 ipushl #0   : protected asm end
3 [0x3]:          loadval ebx   
4 [0x4]:          calld ebx   
5 [0x5]:          jmp @6   : try block end
6 [0x6]:          movl 2   : try end
7 [0x7]:          del   
8 [0x8]: line: 29 movl 1   : protected asm start: finally start
9 [0x9]:          _ulck   
10 [0xa]:          movl 2   : protected asm end
11 [0xb]:          checknull   
12 [0xc]:          je 15   
13 [0xd]:          pushobj   
14 [0xe]:          ret ERR   
15 [0xf]:          nop   : finally end
16 [0x10]:          ret   


constructor: std.io#file.file[2010] params(1) in file: lib\support\0.2.9/io//file.sharp:23:9: note:  
		    file(path: string) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 24 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @2014 // <std.io#file.update_path>   
4 [0x4]:          ret   


constructor: std.io#file.file[2011] params(1) in file: lib\support\0.2.9/io//file.sharp:27:9: note:  
		    file(path: _int8[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 28 pushl 0   
2 [0x2]:          new_class @0 // app#__srt_global   
3 [0x3]:          checknull   
4 [0x4]:          dup    
5 [0x5]:          newstr @3 //    
6 [0x6]:          call @3469 // <std#string.string>   
7 [0x7]:          pushl 1   
8 [0x8]:          call @3481 // <std#string.operator+>   
9 [0x9]:          call @2014 // <std.io#file.update_path>   
10 [0xa]:          ret   


function: std.io#file.get_name[2012] params(0) in file: lib\support\0.2.9/io//file.sharp:31:8: note:  
		    def get_name() : string {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          skpe ebx // pc = 17   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3510 // <std#string.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          jne 23   
19 [0x13]: line: 33 pushnull    
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   
23 [0x17]:          nop   
24 [0x18]: line: 36 movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          call @3510 // <std#string.size>   
29 [0x1d]:          loadval ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movi #1, ebx   
33 [0x21]:          loadval ecx   
34 [0x22]:          sub ecx, ebx -> ebx   
35 [0x23]:          smovr_2 ebx, fp+1   
36 [0x24]:          ipushl #1   
37 [0x25]:          movi #0, ebx   
39 [0x27]:          loadval ecx   
40 [0x28]:          gt ecx, ebx   
41 [0x29]:          movr ebx, cmt   
42 [0x2a]:          movr cmt, ebx   
43 [0x2b]:          jne 86   
44 [0x2c]: line: 37 movl 0   
45 [0x2d]:          movn #0   
47 [0x2f]:          pushobj   
48 [0x30]:          ipushl #1   
49 [0x31]:          call @3492 // <std#string.operator[>   
50 [0x32]:          loadval ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movg @22 // @std.io#file   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          iaload ebx, adx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          test ecx, ebx   
60 [0x3c]:          jne 80   
61 [0x3d]: line: 38 movl 0   
62 [0x3e]:          movn #0   
64 [0x40]:          pushobj   
65 [0x41]:          ipushl #1   
66 [0x42]:          movi #1, ebx   
68 [0x44]:          loadval ecx   
69 [0x45]:          add ecx, ebx -> ebx   
70 [0x46]:          rstore ebx   
71 [0x47]:          movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          call @3510 // <std#string.size>   
76 [0x4c]:          call @3524 // <std#string.substring>   
77 [0x4d]:          popobj2    
78 [0x4e]:          returnobj   
79 [0x4f]:          ret   
80 [0x50]:          nop   
81 [0x51]:          loadl ebx, fp+1   
82 [0x52]:          movr egx, ebx   
83 [0x53]:          dec ebx   
84 [0x54]:          smovr_2 ebx, fp+1   
85 [0x55]:          jmp @36   
86 [0x56]: line: 42 movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          returnobj   
90 [0x5a]:          ret   


function: std.io#file.to_string[2013] params(0) in file: lib\support\0.2.9/io//file.sharp:45:8: note:  
		    def to_string() := path;
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#file.update_path[2014] params(1) in file: lib\support\0.2.9/io//file.sharp:47:5: note:  
			def update_path(path: string) {
		    ^

0 [0x0]: line: 48 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 10   
4 [0x4]: line: 49 new_class @0 // app#__srt_global   
5 [0x5]:          mov64 adx, adx   
6 [0x6]:          dup    
7 [0x7]:          newstr @7 // file path cannot be null   
8 [0x8]:          call @1973 // <std#nullptr_exception.nullptr_exception>   
9 [0x9]:          throw    
10 [0xa]:          nop   
11 [0xb]: line: 51 pushl 1   
12 [0xc]:          call @3477 // <std#string.empty>   
13 [0xd]:          loadval ebx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 22   
16 [0x10]: line: 52 new_class @0 // app#__srt_global   
17 [0x11]:          mov64 adx, adx   
18 [0x12]:          dup    
19 [0x13]:          newstr @8 // file path cannot be empty   
20 [0x14]:          call @1973 // <std#nullptr_exception.nullptr_exception>   
21 [0x15]:          throw    
22 [0x16]:          nop   
23 [0x17]: line: 53 movg @22 // @std.io#file   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          pushl 1   
28 [0x1c]:          invoke_delegate 2053 { static=0, args=1 }   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          popobj   
34 [0x22]:          ret   


function: std.io#file.get_parent_file[2015] params(0) in file: lib\support\0.2.9/io//file.sharp:56:8: note:  
		    def get_parent_file() : file {
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          skpe ebx // pc = 17   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3510 // <std#string.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          jne 23   
19 [0x13]: line: 58 pushnull    
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   
23 [0x17]:          nop   
24 [0x18]: line: 61 movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          call @3510 // <std#string.size>   
29 [0x1d]:          loadval ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movi #1, ebx   
33 [0x21]:          loadval ecx   
34 [0x22]:          sub ecx, ebx -> ebx   
35 [0x23]:          smovr_2 ebx, fp+1   
36 [0x24]:          ipushl #1   
37 [0x25]:          movi #0, ebx   
39 [0x27]:          loadval ecx   
40 [0x28]:          gt ecx, ebx   
41 [0x29]:          movr ebx, cmt   
42 [0x2a]:          movr cmt, ebx   
43 [0x2b]:          jne 87   
44 [0x2c]: line: 62 movl 0   
45 [0x2d]:          movn #0   
47 [0x2f]:          pushobj   
48 [0x30]:          ipushl #1   
49 [0x31]:          call @3492 // <std#string.operator[>   
50 [0x32]:          loadval ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movg @22 // @std.io#file   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          iaload ebx, adx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          test ecx, ebx   
60 [0x3c]:          jne 81   
61 [0x3d]: line: 63 new_class @0 // app#__srt_global   
62 [0x3e]:          isub adx, #? (112)   
64 [0x40]:          movl 0   
65 [0x41]:          movn #0   
67 [0x43]:          pushobj   
68 [0x44]:          istore 0   
70 [0x46]:          ipushl #1   
71 [0x47]:          movi #1, ebx   
73 [0x49]:          loadval ecx   
74 [0x4a]:          add ecx, ebx -> ebx   
75 [0x4b]:          rstore ebx   
76 [0x4c]:          call @3524 // <std#string.substring>   
77 [0x4d]:          call @2010 // <std.io#file.file>   
78 [0x4e]:          popobj2    
79 [0x4f]:          returnobj   
80 [0x50]:          ret   
81 [0x51]:          nop   
82 [0x52]:          loadl ebx, fp+1   
83 [0x53]:          movr egx, ebx   
84 [0x54]:          dec ebx   
85 [0x55]:          smovr_2 ebx, fp+1   
86 [0x56]:          jmp @36   
87 [0x57]: line: 67 pushnull    
88 [0x58]:          popobj2    
89 [0x59]:          returnobj   
90 [0x5a]:          ret   


function: std.io#file.get_path[2016] params(0) in file: lib\support\0.2.9/io//file.sharp:70:8: note:  
		    def get_path() : string {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#file.get_absolute_path[2017] params(0) in file: lib\support\0.2.9/io//file.sharp:87:8: note:  
		    def get_absolute_path() : string {
		       ^

0 [0x0]: line: 88 movg @22 // @std.io#file   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @2054 // <std.io#file_system.resolve>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std.io#file.is_readable[2018] params(0) in file: lib\support\0.2.9/io//file.sharp:96:8: note:  
		    def is_readable() : var {
		       ^

0 [0x0]: line: 97 movg @22 // @std.io#file   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          istore 4   
7 [0x7]:          invoke_delegate 2056 { static=0, args=2 }   
9 [0x9]:          loadval ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


function: std.io#file.is_writeable[2019] params(0) in file: lib\support\0.2.9/io//file.sharp:105:8: note:  
		    def is_writeable() : var {
		       ^

0 [0x0]: line: 106 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           invoke_delegate 2056 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#file.exists[2020] params(0) in file: lib\support\0.2.9/io//file.sharp:114:8: note:  
		    def exists() : var {
		       ^

0 [0x0]: line: 115 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 0   
6 [0x6]:           rstore ebx   
7 [0x7]:           invoke_delegate 2056 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#file.is_directory[2021] params(0) in file: lib\support\0.2.9/io//file.sharp:123:8: note:  
		    def is_directory() : var {
		       ^

0 [0x0]: line: 124 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 2055 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #4, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#file.is_file[2022] params(0) in file: lib\support\0.2.9/io//file.sharp:133:8: note:  
		    def is_file() : var {
		       ^

0 [0x0]: line: 134 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 2055 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #2, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#file.is_hidden[2023] params(0) in file: lib\support\0.2.9/io//file.sharp:145:8: note:  
		    def is_hidden() : var {
		       ^

0 [0x0]: line: 146 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 2055 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #128, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#file.last_modified[2024] params(0) in file: lib\support\0.2.9/io//file.sharp:154:8: note:  
		    def last_modified() : var {
		       ^

0 [0x0]: line: 155 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 0   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2058 // <std.io#file_system.last_modified_time>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#file.last_status_changed[2025] params(0) in file: lib\support\0.2.9/io//file.sharp:158:8: note:  
		    def last_status_changed() : var {
		       ^

0 [0x0]: line: 159 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2058 // <std.io#file_system.last_modified_time>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#file.last_accessed[2026] params(0) in file: lib\support\0.2.9/io//file.sharp:162:8: note:  
		    def last_accessed() : var {
		       ^

0 [0x0]: line: 163 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           call @2058 // <std.io#file_system.last_modified_time>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#file.length[2027] params(0) in file: lib\support\0.2.9/io//file.sharp:171:8: note:  
		    def length() : var {
		       ^

0 [0x0]: line: 172 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @2059 // <std.io#file_system.get_length>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#file.create[2028] params(0) in file: lib\support\0.2.9/io//file.sharp:186:8: note:  
		    def create() {
		       ^

0 [0x0]: line: 187 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @2060 // <std.io#file_system.create_file>   
9 [0x9]:           ret   


function: std.io#file.delete[2029] params(0) in file: lib\support\0.2.9/io//file.sharp:196:8: note:  
		    def delete() : var {
		       ^

0 [0x0]: line: 197 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @2062 // <std.io#file_system.delete>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#file.list[2030] params(0) in file: lib\support\0.2.9/io//file.sharp:212:8: note:  
		    def list() : list<string> {
		       ^

0 [0x0]: line: 213 new_class @0 // app#__srt_global   
1 [0x1]:           smovr adx, sp+0   
2 [0x2]:           dup    
3 [0x3]:           movg @22 // @std.io#file   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           pushl 0   
8 [0x8]:           call @2063 // <std.io#file_system.list>   
9 [0x9]:           call @3593 // <std#list<std#string>.list>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


function: std.io#file.mkdir[2031] params(0) in file: lib\support\0.2.9/io//file.sharp:220:8: note:  
		    def mkdir() : var {
		       ^

0 [0x0]: line: 221 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @2064 // <std.io#file_system.create_directory>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#file.rename[2032] params(1) in file: lib\support\0.2.9/io//file.sharp:239:8: note:  
		    def rename(dest: file) : var {
		       ^

0 [0x0]: line: 240 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 9   
4 [0x4]: line: 241 new_class @0 // app#__srt_global   
5 [0x5]:           mov64 adx, adx   
6 [0x6]:           dup    
7 [0x7]:           call @1975 // <std#nullptr_exception.nullptr_exception>   
8 [0x8]:           throw    
9 [0x9]:           nop   
10 [0xa]: line: 244 movg @22 // @std.io#file   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           pushl 0   
15 [0xf]:           pushl 1   
16 [0x10]:           call @2065 // <std.io#file_system.rename>   
17 [0x11]:           ipopl 2   
18 [0x12]: line: 245 ipushl #2   
19 [0x13]:           movi #0, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           test ecx, ebx   
23 [0x17]:           jne 32   
24 [0x18]: line: 247 movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           popobj   
32 [0x20]:           nop   
33 [0x21]: line: 251 loadl ebx, fp+2   
34 [0x22]:           return_val ebx   
35 [0x23]:           ret   


function: std.io#file.set_last_modified[2033] params(1) in file: lib\support\0.2.9/io//file.sharp:266:8: note:  
		    def set_last_modified(time: var) : var {
		       ^

0 [0x0]: line: 267 loadl ebx, fp+1   
1 [0x1]:           mov32 ebx, ebx   
2 [0x2]:           rstore ebx   
3 [0x3]:           movi #0, ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           lt ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 16   
10 [0xa]:           new_class @0 // app#__srt_global   
11 [0xb]:           newarry adx: 0   
12 [0xc]:           dup    
13 [0xd]:           newstr @9 // Negative time   
14 [0xe]:           call @1958 // <std#illegal_argument_exception.illegal_argument_exception>   
15 [0xf]:           throw    
16 [0x10]:           nop   
17 [0x11]: line: 268 movg @22 // @std.io#file   
18 [0x12]:           movn #0   
20 [0x14]:           pushobj   
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @2068 // <std.io#file_system.set_last_modified_time>   
24 [0x18]:           loadval ebx   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   


function: std.io#file.set_read_only[2034] params(0) in file: lib\support\0.2.9/io//file.sharp:279:8: note:  
		    def set_read_only() : var {
		       ^

0 [0x0]: line: 280 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @2069 // <std.io#file_system.set_read_only>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#file.set_writable[2035] params(2) in file: lib\support\0.2.9/io//file.sharp:288:8: note:  
		    def set_writable(writable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 289 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @2057 // <std.io#file_system.set_permission>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.set_writable[2036] params(1) in file: lib\support\0.2.9/io//file.sharp:297:8: note:  
		    def set_writable(writable: var) : var {
		       ^

0 [0x0]: line: 298 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @2035 // <std.io#file.set_writable>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#file.set_readable[2037] params(2) in file: lib\support\0.2.9/io//file.sharp:306:8: note:  
		    def set_readable(readable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 307 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 4   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @2057 // <std.io#file_system.set_permission>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.set_readable[2038] params(1) in file: lib\support\0.2.9/io//file.sharp:315:8: note:  
		    def set_readable(readable: var) : var {
		       ^

0 [0x0]: line: 316 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @2037 // <std.io#file.set_readable>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#file.set_executable[2039] params(2) in file: lib\support\0.2.9/io//file.sharp:324:8: note:  
		    def set_executable(executable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 325 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @2057 // <std.io#file_system.set_permission>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.set_executable[2040] params(1) in file: lib\support\0.2.9/io//file.sharp:333:8: note:  
		    def set_executable(executable: var) : var {
		       ^

0 [0x0]: line: 334 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @2039 // <std.io#file.set_executable>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#file.is_executable[2041] params(0) in file: lib\support\0.2.9/io//file.sharp:342:8: note:  
		    def is_executable() : var {
		       ^

0 [0x0]: line: 343 movg @22 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           invoke_delegate 2056 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#file.get_total_space[2042] params(0) in file: lib\support\0.2.9/io//file.sharp:354:8: note:  
		    def get_total_space() : var {
		       ^

0 [0x0]: line: 355 ldc ebx // 0   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @2070 // <std.io#file_system.get_space_available>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.get_free_space[2043] params(0) in file: lib\support\0.2.9/io//file.sharp:363:8: note:  
		    def get_free_space() : var {
		       ^

0 [0x0]: line: 364 ldc ebx // 1   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @2070 // <std.io#file_system.get_space_available>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.get_usable_space[2044] params(0) in file: lib\support\0.2.9/io//file.sharp:386:8: note:  
		    def get_usable_space() : var {
		       ^

0 [0x0]: line: 387 istore 2   
2 [0x2]:           call @2070 // <std.io#file_system.get_space_available>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.generate_temp_file[2045] params(3) in file: lib\support\0.2.9/io//file.sharp:393:22: note:  
		    private static def generate_temp_file(prefix: string, suffix: string, dir: file) : file
		                     ^

0 [0x0]: line: 405 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#file.create_temp_file[2046] params(3) in file: lib\support\0.2.9/io//file.sharp:414:15: note:  
		    static def create_temp_file(prefix: string, suffix: string,
		              ^

0 [0x0]: line: 437 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#file.create_temp_file[2047] params(2) in file: lib\support\0.2.9/io//file.sharp:448:15: note:  
		    static def create_temp_file(prefix: string, suffix: string) : file
		              ^

0 [0x0]: line: 451 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           pushnull    
3 [0x3]:           call @2046 // <std.io#file.create_temp_file>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std.io#file.read_all_text[2048] params(0) in file: lib\support\0.2.9/io//file.sharp:454:8: note:  
		    def read_all_text() := fs.read(self);
		       ^

0 [0x0]: line: 454 pushl 0   
1 [0x1]:           call @2066 // <std.io#file_system.read>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#file.write[2049] params(1) in file: lib\support\0.2.9/io//file.sharp:456:8: note:  
		    def write(data: string) := fs.write(self, data);
		       ^

0 [0x0]: line: 456 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2067 // <std.io#file_system.write>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.get_file_system[2050] params(0) in file: lib\support\0.2.9/io//file.sharp:458:23: note:  
		    private static def get_file_system() : file_system {
		                      ^

0 [0x0]: line: 459 call @2279 // <platform#build.is_windows>   
1 [0x1]:           loadval ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 12   
4 [0x4]: line: 460 new_class @0 // app#__srt_global   
5 [0x5]:           movsl #0   
6 [0x6]:           dup    
7 [0x7]:           call @2241 // <std.io#win_fs.win_fs>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   
11 [0xb]:           jmp @19   
12 [0xc]: line: 462 new_class @0 // app#__srt_global   
13 [0xd]:           movl 0   
14 [0xe]:           dup    
15 [0xf]:           call @2236 // <std.io#unix_fs.unix_fs>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   
19 [0x13]:           nop   


constructor: std.io#file.file[2051] params(0) in file: lib\support\0.2.9/io//file.sharp:17:13: note:  
		public class file {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std.io#file_system.path_separator[2052] params(0) in file: lib\support\0.2.9/io//file_system.sharp:18:8: note:  
		    def path_separator() : var;
		       ^



std.io#file_system.normalize[2053] params(1) in file: lib\support\0.2.9/io//file_system.sharp:24:8: note:  
		    def normalize(path: string) : string;
		       ^



function: std.io#file_system.resolve[2054] params(1) in file: lib\support\0.2.9/io//file_system.sharp:30:9: note:  
		     def resolve(f: file) : string {
		        ^

0 [0x0]: line: 32 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3495 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 38 pushl 2   : protected asm start
8 [0x8]:          int 0x20   
9 [0x9]:          popl 2   : protected asm end
10 [0xa]: line: 44 movl 2   
11 [0xb]:          checknull   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 29   
14 [0xe]: line: 45 new_class @0 // app#__srt_global   
15 [0xf]:          mov16 adx, adx   
16 [0x10]:          dup    
17 [0x11]:          new_class @0 // app#__srt_global   
18 [0x12]:          checknull   
19 [0x13]:          dup    
20 [0x14]:          newstr @10 // file could not be resolved:    
21 [0x15]:          call @3469 // <std#string.string>   
22 [0x16]:          movl 1   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3484 // <std#string.operator+>   
27 [0x1b]:          call @1968 // <std#io_exception.io_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 48 new_class @0 // app#__srt_global   
31 [0x1f]:          checknull   
32 [0x20]:          dup    
33 [0x21]:          newstr @3 //    
34 [0x22]:          call @3469 // <std#string.string>   
35 [0x23]:          pushl 2   
36 [0x24]:          call @3481 // <std#string.operator+>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   


std.io#file_system.get_attributes[2055] params(1) in file: lib\support\0.2.9/io//file_system.sharp:67:9: note:  
		     def get_attributes(f: file) : var;
		        ^



std.io#file_system.check_access[2056] params(2) in file: lib\support\0.2.9/io//file_system.sharp:81:9: note:  
		     def check_access(f: file, access: var) : var;
		        ^



function: std.io#file_system.set_permission[2057] params(4) in file: lib\support\0.2.9/io//file_system.sharp:88:9: note:  
		     def set_permission(f: file, access: var, enable: var, owneronly: var) : var {
		        ^

0 [0x0]: line: 90 pushl 1   
1 [0x1]:          call @2017 // <std.io#file.get_absolute_path>   
2 [0x2]:          call @3495 // <std#string.get_data>   
3 [0x3]:          popobj2    
4 [0x4]:          smovr_3 fp+5   
5 [0x5]: line: 91 istorel 0, fp+6   
7 [0x7]: line: 93 call @2279 // <platform#build.is_windows>   
8 [0x8]:          loadval ebx   
9 [0x9]:          skne ebx // pc = 13   
10 [0xa]:          ipushl #2   
11 [0xb]:          ldc ebx // 1   
12 [0xc]:          loadval ecx   
13 [0xd]:          test ecx, ebx   
14 [0xe]:          jne 18   
15 [0xf]: line: 94 istorel -1, fp+0   
17 [0x11]:          ret   
18 [0x12]:          nop   
19 [0x13]: line: 100 pushl 5   : protected asm start
20 [0x14]:           loadl ebx, fp+2   
21 [0x15]:           loadl egx, fp+3   
22 [0x16]:           loadl ecx, fp+4   
23 [0x17]:           int 0x2e   
24 [0x18]:           smovr_2 ebx, fp+6   
25 [0x19]: line: 109 loadl ebx, fp+6   : protected asm end
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   


function: std.io#file_system.last_modified_time[2058] params(2) in file: lib\support\0.2.9/io//file_system.sharp:121:9: note:  
		     def last_modified_time(f: file, stat_id: var) : var {
		        ^

0 [0x0]: line: 123 pushl 1   
1 [0x1]:           call @2017 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 124 istorel 0, fp+4   
7 [0x7]: line: 130 pushl 3   : protected asm start
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           int 0x26   
10 [0xa]:           smovr_2 ebx, fp+4   
11 [0xb]: line: 137 loadl ebx, fp+4   : protected asm end
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


function: std.io#file_system.get_length[2059] params(1) in file: lib\support\0.2.9/io//file_system.sharp:145:9: note:  
		     def get_length(f: file) : var {
		        ^

0 [0x0]: line: 147 pushl 1   
1 [0x1]:           call @2017 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 148 istorel 0, fp+3   
7 [0x7]: line: 154 pushl 2   : protected asm start
8 [0x8]:           int 0x27   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 160 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file_system.create_file[2060] params(1) in file: lib\support\0.2.9/io//file_system.sharp:170:8: note:  
		    def create_file(pathname: string) {
		       ^

0 [0x0]: line: 172 pushl 1   
1 [0x1]:           call @3495 // <std#string.get_data>   
2 [0x2]:           popobj2    
3 [0x3]:           smovr_3 fp+2   
4 [0x4]: line: 178 pushl 2   : protected asm start
5 [0x5]:           int 0x28   
6 [0x6]:           ret   : protected asm end


function: std.io#file_system.delete_directory[2061] params(1) in file: lib\support\0.2.9/io//file_system.sharp:188:16: note:  
		    private def delete_directory(f: file) : var {
		               ^

0 [0x0]: line: 190 pushl 1   
1 [0x1]:           call @2017 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 191 istorel 0, fp+3   
7 [0x7]: line: 197 pushl 2   : protected asm start
8 [0x8]:           int 0x2c   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 203 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file_system.delete[2062] params(1) in file: lib\support\0.2.9/io//file_system.sharp:210:8: note:  
		    def delete(f: file) : var {
		       ^

0 [0x0]: line: 212 pushl 1   
1 [0x1]:           call @2017 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 213 istorel 0, fp+3   
7 [0x7]: line: 215 pushl 1   
8 [0x8]:           call @2021 // <std.io#file.is_directory>   
9 [0x9]:           loadval ebx   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           jne 18   
12 [0xc]: line: 216 pushl 0   
13 [0xd]:           pushl 1   
14 [0xe]:           call @2061 // <std.io#file_system.delete_directory>   
15 [0xf]:           loadval ebx   
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   
18 [0x12]:           nop   
19 [0x13]: line: 222 pushl 2   : protected asm start
20 [0x14]:           int 0x29   
21 [0x15]:           smovr_2 ebx, fp+3   
22 [0x16]: line: 228 loadl ebx, fp+3   : protected asm end
23 [0x17]:           return_val ebx   
24 [0x18]:           ret   


function: std.io#file_system.list[2063] params(1) in file: lib\support\0.2.9/io//file_system.sharp:236:8: note:  
		    def list(f: file) : string[] {
		       ^

0 [0x0]: line: 238 pushl 1   
1 [0x1]:           call @2017 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 239 movl 3   
6 [0x6]:           del   
7 [0x7]: line: 241 pushl 1   
8 [0x8]:           call @2021 // <std.io#file.is_directory>   
9 [0x9]:           loadval ebx   
10 [0xa]:           not ebx, ebx   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 17   
13 [0xd]: line: 242 pushnull    
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   
17 [0x11]:           nop   
18 [0x12]: line: 248 pushl 2   : protected asm start
19 [0x13]:           int 0x2a   
20 [0x14]:           popl 3   
21 [0x15]: line: 254 movl 3   : protected asm end
22 [0x16]:           returnobj   
23 [0x17]:           ret   


function: std.io#file_system.create_directory[2064] params(1) in file: lib\support\0.2.9/io//file_system.sharp:261:8: note:  
		    def create_directory(f: file) : var {
		       ^

0 [0x0]: line: 263 pushl 1   
1 [0x1]:           call @2016 // <std.io#file.get_path>   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 264 istorel 0, fp+3   
7 [0x7]: line: 270 pushl 2   : protected asm start
8 [0x8]:           int 0x2b   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 276 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file_system.rename[2065] params(2) in file: lib\support\0.2.9/io//file_system.sharp:284:8: note:  
		    def rename(f1: file, f2: file) : var {
		       ^

0 [0x0]: line: 286 pushl 1   
1 [0x1]:           call @2017 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 287 pushl 2   
6 [0x6]:           call @2016 // <std.io#file.get_path>   
7 [0x7]:           call @3495 // <std#string.get_data>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+4   
10 [0xa]: line: 288 istorel 0, fp+5   
12 [0xc]: line: 294 pushl 4   : protected asm start
13 [0xd]:           pushl 3   
14 [0xe]:           int 0x30   
15 [0xf]:           smovr_2 ebx, fp+5   
16 [0x10]: line: 301 loadl ebx, fp+5   : protected asm end
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


function: std.io#file_system.read[2066] params(1) in file: lib\support\0.2.9/io//file_system.sharp:305:15: note:  
		    static def read(f: file) : string {
		              ^

0 [0x0]: line: 306 pushl 0   
1 [0x1]:           call @2017 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 307 movl 2   
6 [0x6]:           del   
7 [0x7]: line: 308 istorel 0, fp+3   
9 [0x9]: line: 314 pushl 1   : protected asm start
10 [0xa]:           int 0x2f   
11 [0xb]:           popl 2   
12 [0xc]: line: 320 movl 2   : protected asm end
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std.io#file_system.write[2067] params(2) in file: lib\support\0.2.9/io//file_system.sharp:324:15: note:  
		    static def write(f: file, data: string) : var {
		              ^

0 [0x0]: line: 325 pushl 0   
1 [0x1]:           call @2017 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 326 pushl 1   
6 [0x6]:           call @3495 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+3   
9 [0x9]: line: 327 istorel 0, fp+4   
11 [0xb]: line: 333 pushl 3   : protected asm start
12 [0xc]:           pushl 2   
13 [0xd]:           int 0x31   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 340 loadl ebx, fp+4   : protected asm end
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   


function: std.io#file_system.set_last_modified_time[2068] params(2) in file: lib\support\0.2.9/io//file_system.sharp:348:15: note:  
		    public def set_last_modified_time(f: file, time: var) : var {
		              ^

0 [0x0]: line: 350 pushl 1   
1 [0x1]:           call @2017 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 351 istorel 0, fp+4   
7 [0x7]: line: 357 pushl 3   : protected asm start
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           int 0x2d   
10 [0xa]:           smovr_2 ebx, fp+4   
11 [0xb]: line: 364 loadl ebx, fp+4   : protected asm end
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


function: std.io#file_system.set_read_only[2069] params(1) in file: lib\support\0.2.9/io//file_system.sharp:372:15: note:  
		    public def set_read_only(f: file) : var {
		              ^

0 [0x0]: line: 373 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           istore 2   
4 [0x4]:           movi #0, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           istore 1   
9 [0x9]:           call @2057 // <std.io#file_system.set_permission>   
10 [0xa]:           pop   
11 [0xb]: line: 374 pushl 0   
12 [0xc]:           pushl 1   
13 [0xd]:           istore 4   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           rstore ebx   
18 [0x12]:           istore 1   
20 [0x14]:           call @2057 // <std.io#file_system.set_permission>   
21 [0x15]:           loadval ebx   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   


function: std.io#file_system.get_space_available[2070] params(1) in file: lib\support\0.2.9/io//file_system.sharp:382:15: note:  
		    static def get_space_available(request: var) : var {
		              ^

0 [0x0]: line: 384 istorel 0, fp+1   
2 [0x2]: line: 390 loadl ebx, fp+0   : protected asm start
3 [0x3]:           int 0x32   
4 [0x4]:           smovr_2 ebx, fp+1   
5 [0x5]: line: 396 loadl ebx, fp+1   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std.io#file_system.file_system[2071] params(0) in file: lib\support\0.2.9/io//file_system.sharp:10:16: note:  
		protected class file_system {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std.io#__srt_global.realloc[2072] params(2) in file: lib\support\0.2.9/io//memory.sharp:4:4: note:  
		def realloc(data: object[], size: var) {
		   ^

0 [0x0]: line: 5 pushl 0   : protected asm start
1 [0x1]:         ipushl #1   
2 [0x2]:         int 0x23   
3 [0x3]:         ret   : protected asm end


function: std.io#__srt_global.realloc[2073] params(2) in file: lib\support\0.2.9/io//memory.sharp:12:4: note:  
		def realloc(data: var[], size: var) {
		   ^

0 [0x0]: line: 13 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2074] params(2) in file: lib\support\0.2.9/io//memory.sharp:20:4: note:  
		def realloc(data: _int8[], size: var) {
		   ^

0 [0x0]: line: 21 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2075] params(2) in file: lib\support\0.2.9/io//memory.sharp:28:4: note:  
		def realloc(data: _int16[], size: var) {
		   ^

0 [0x0]: line: 29 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2076] params(2) in file: lib\support\0.2.9/io//memory.sharp:36:4: note:  
		def realloc(data: _int32[], size: var) {
		   ^

0 [0x0]: line: 37 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2077] params(2) in file: lib\support\0.2.9/io//memory.sharp:44:4: note:  
		def realloc(data: _int64[], size: var) {
		   ^

0 [0x0]: line: 45 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2078] params(2) in file: lib\support\0.2.9/io//memory.sharp:52:4: note:  
		def realloc(data: _uint8[], size: var) {
		   ^

0 [0x0]: line: 53 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2079] params(2) in file: lib\support\0.2.9/io//memory.sharp:60:4: note:  
		def realloc(data: _uint16[], size: var) {
		   ^

0 [0x0]: line: 61 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2080] params(2) in file: lib\support\0.2.9/io//memory.sharp:68:4: note:  
		def realloc(data: _uint32[], size: var) {
		   ^

0 [0x0]: line: 69 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2081] params(2) in file: lib\support\0.2.9/io//memory.sharp:76:4: note:  
		def realloc(data: _uint64[], size: var) {
		   ^

0 [0x0]: line: 77 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[2082] params(5) in file: lib\support\0.2.9/io//memory.sharp:84:4: note:  
		def memcopy(src: object[], dest: object[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 85 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[2083] params(5) in file: lib\support\0.2.9/io//memory.sharp:95:4: note:  
		def memcopy(src: var[], dest: var[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 96 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[2084] params(5) in file: lib\support\0.2.9/io//memory.sharp:106:4: note:  
		def memcopy(src: _int8[], dest: _int8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 107 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2085] params(5) in file: lib\support\0.2.9/io//memory.sharp:117:4: note:  
		def memcopy(src: _int16[], dest: _int16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 118 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2086] params(5) in file: lib\support\0.2.9/io//memory.sharp:128:4: note:  
		def memcopy(src: _int32[], dest: _int32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 129 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2087] params(5) in file: lib\support\0.2.9/io//memory.sharp:139:4: note:  
		def memcopy(src: _int64[], dest: _int64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 140 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2088] params(5) in file: lib\support\0.2.9/io//memory.sharp:150:4: note:  
		def memcopy(src: _uint8[], dest: _uint8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 151 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2089] params(5) in file: lib\support\0.2.9/io//memory.sharp:161:4: note:  
		def memcopy(src: _uint16[], dest: _uint16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 162 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2090] params(5) in file: lib\support\0.2.9/io//memory.sharp:172:4: note:  
		def memcopy(src: _uint32[], dest: _uint32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 173 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2091] params(5) in file: lib\support\0.2.9/io//memory.sharp:183:4: note:  
		def memcopy(src: _uint64[], dest: _uint64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 184 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.copy[2092] params(3) in file: lib\support\0.2.9/io//memory.sharp:194:4: note:  
		def copy(src: object[], srcStart: var, srcEnd: var) : object[] {
		   ^

0 [0x0]: line: 195 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 204 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2093] params(3) in file: lib\support\0.2.9/io//memory.sharp:207:4: note:  
		def copy(src: var[], srcStart: var, srcEnd: var) : var[] {
		   ^

0 [0x0]: line: 208 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 217 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2094] params(3) in file: lib\support\0.2.9/io//memory.sharp:220:4: note:  
		def copy(src: _int8[], srcStart: var, srcEnd: var) : _int8[] {
		   ^

0 [0x0]: line: 221 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 230 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2095] params(3) in file: lib\support\0.2.9/io//memory.sharp:233:4: note:  
		def copy(src: _int16[], srcStart: var, srcEnd: var) : _int16[] {
		   ^

0 [0x0]: line: 234 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 243 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2096] params(3) in file: lib\support\0.2.9/io//memory.sharp:246:4: note:  
		def copy(src: _int32[], srcStart: var, srcEnd: var) : _int32[] {
		   ^

0 [0x0]: line: 247 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 256 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2097] params(3) in file: lib\support\0.2.9/io//memory.sharp:259:4: note:  
		def copy(src: _uint8[], srcStart: var, srcEnd: var) : _uint8[] {
		   ^

0 [0x0]: line: 260 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 269 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2098] params(3) in file: lib\support\0.2.9/io//memory.sharp:272:4: note:  
		def copy(src: _uint16[], srcStart: var, srcEnd: var) : _uint16[] {
		   ^

0 [0x0]: line: 273 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 282 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2099] params(3) in file: lib\support\0.2.9/io//memory.sharp:285:4: note:  
		def copy(src: _uint32[], srcStart: var, srcEnd: var) : _uint32[] {
		   ^

0 [0x0]: line: 286 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 295 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2100] params(3) in file: lib\support\0.2.9/io//memory.sharp:298:4: note:  
		def copy(src: _uint64[], srcStart: var, srcEnd: var) : _uint64[] {
		   ^

0 [0x0]: line: 299 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 308 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2101] params(3) in file: lib\support\0.2.9/io//memory.sharp:311:4: note:  
		def copy(src: _int64[], srcStart: var, srcEnd: var) : _int64[] {
		   ^

0 [0x0]: line: 312 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 321 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2102] params(3) in file: lib\support\0.2.9/io//memory.sharp:325:4: note:  
		def invert(src: object[], start: var, len: var) : object[] {
		   ^

0 [0x0]: line: 326 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 335 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2103] params(3) in file: lib\support\0.2.9/io//memory.sharp:338:4: note:  
		def invert(src: var[], start: var, len: var) : var[] {
		   ^

0 [0x0]: line: 339 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 348 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2104] params(3) in file: lib\support\0.2.9/io//memory.sharp:351:4: note:  
		def invert(src: _int8[], start: var, len: var) : _int8[] {
		   ^

0 [0x0]: line: 352 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 361 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2105] params(3) in file: lib\support\0.2.9/io//memory.sharp:364:4: note:  
		def invert(src: _int16[], start: var, len: var) : _int16[] {
		   ^

0 [0x0]: line: 365 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 374 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2106] params(3) in file: lib\support\0.2.9/io//memory.sharp:377:4: note:  
		def invert(src: _int32[], start: var, len: var) : _int32[] {
		   ^

0 [0x0]: line: 378 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 387 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2107] params(3) in file: lib\support\0.2.9/io//memory.sharp:390:4: note:  
		def invert(src: _int64[], start: var, len: var) : _int64[] {
		   ^

0 [0x0]: line: 391 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 400 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2108] params(3) in file: lib\support\0.2.9/io//memory.sharp:403:4: note:  
		def invert(src: _uint8[], start: var, len: var) : _uint8[] {
		   ^

0 [0x0]: line: 404 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 413 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2109] params(3) in file: lib\support\0.2.9/io//memory.sharp:416:4: note:  
		def invert(src: _uint16[], start: var, len: var) : _uint16[] {
		   ^

0 [0x0]: line: 417 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 426 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2110] params(3) in file: lib\support\0.2.9/io//memory.sharp:429:4: note:  
		def invert(src: _uint32[], start: var, len: var) : _uint32[] {
		   ^

0 [0x0]: line: 430 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 439 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2111] params(3) in file: lib\support\0.2.9/io//memory.sharp:442:4: note:  
		def invert(src: _uint64[], start: var, len: var) : _uint64[] {
		   ^

0 [0x0]: line: 443 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 452 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[2112] params(1) in file: lib\support\0.2.9/io//task//cancellation_exception.sharp:4:34: note:  
		    public cancellation_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1976 // <std#runtime_exception.runtime_exception>   
3 [0x3]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[2113] params(1) in file: lib\support\0.2.9/io//task//cancellation_exception.sharp:5:34: note:  
		    public cancellation_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @1977 // <std#runtime_exception.runtime_exception>   
3 [0x3]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[2114] params(0) in file: lib\support\0.2.9/io//task//cancellation_exception.sharp:3:6: note:  
		class cancellation_exception base runtime_except {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1978 // <std#runtime_exception.runtime_exception>   
2 [0x2]:         ret   


constructor: std.io.task#job.job[2115] params(0) in file: lib\support\0.2.9/io//task//job.sharp:7:13: note:  
			private job() {}
		            ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #14   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #15   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movi #0, ebx   
58 [0x3a]:         movl 0   
59 [0x3b]:         movn #16   
61 [0x3d]:         movi #0, adx   
63 [0x3f]:         rmov adx, ebx   
64 [0x40]:         movi #0, ebx   
66 [0x42]:         movl 0   
67 [0x43]:         movn #17   
69 [0x45]:         movi #0, adx   
71 [0x47]:         rmov adx, ebx   
72 [0x48]:         movg @30 // @std.io.task#job_state   
73 [0x49]:         movn #0   
75 [0x4b]:         pushobj   
76 [0x4c]:         movl 0   
77 [0x4d]:         movn #18   
79 [0x4f]:         popobj   
80 [0x50]:         new_class @0 // app#__srt_global   
81 [0x51]:         istorel 112, fp+0   
83 [0x53]:         call @3668 // <std#list<std.io#thread>.list>   
84 [0x54]:         movl 0   
85 [0x55]:         movn #20   
87 [0x57]:         popobj   
88 [0x58]:         pushl 0   
89 [0x59]:         ret   


constructor: std.io.task#job.job[2116] params(1) in file: lib\support\0.2.9/io//task//job.sharp:9:5: note:  
			job(name : string) {
		    ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #14   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #15   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movi #0, ebx   
58 [0x3a]:         movl 0   
59 [0x3b]:         movn #16   
61 [0x3d]:         movi #0, adx   
63 [0x3f]:         rmov adx, ebx   
64 [0x40]:         movi #0, ebx   
66 [0x42]:         movl 0   
67 [0x43]:         movn #17   
69 [0x45]:         movi #0, adx   
71 [0x47]:         rmov adx, ebx   
72 [0x48]:         movg @30 // @std.io.task#job_state   
73 [0x49]:         movn #0   
75 [0x4b]:         pushobj   
76 [0x4c]:         movl 0   
77 [0x4d]:         movn #18   
79 [0x4f]:         popobj   
80 [0x50]:         new_class @0 // app#__srt_global   
81 [0x51]:         istorel 112, fp+0   
83 [0x53]:         call @3668 // <std#list<std.io#thread>.list>   
84 [0x54]:         movl 0   
85 [0x55]:         movn #20   
87 [0x57]:         popobj   
88 [0x58]:         pushl 0   
89 [0x59]: line: 10 pushl 1   
90 [0x5a]:          movl 0   
91 [0x5b]:          movn #5   
93 [0x5d]:          popobj   
94 [0x5e]: line: 11 movg @24 // @std.io.task#__srt_global   
95 [0x5f]:          movn #5   
97 [0x61]:          _lck    
98 [0x62]: line: 12 movg @26 // @std.io.task#job   
99 [0x63]:          movn #0   
101 [0x65]:          movi #0, adx   
103 [0x67]:          iaload ebx, adx   
104 [0x68]:          movr egx, ebx   
105 [0x69]:          inc ebx   
106 [0x6a]:          movi #0, adx   
108 [0x6c]:          rmov adx, ebx   
109 [0x6d]:          rstore egx   
110 [0x6e]:          movl 0   
111 [0x6f]:          movn #15   
113 [0x71]:          loadval ebx   
114 [0x72]:          movi #0, adx   
116 [0x74]:          rmov adx, ebx   
117 [0x75]:          movg @24 // @std.io.task#__srt_global   
118 [0x76]:          movn #5   
120 [0x78]:          _ulck   
121 [0x79]:          ret   


function: std.io.task#job.execute_async[2117] params(0) in file: lib\support\0.2.9/io//task//job.sharp:16:15: note:  
			protected def execute_async() : var {
		              ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          pushobj   
4 [0x4]:          movg @30 // @std.io.task#job_state   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @1944 // <std#_enum_.operator==>   
9 [0x9]:          loadval ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 82   
12 [0xc]: line: 18 pushl 0   
13 [0xd]:          movl 0   
14 [0xe]:          movn #19   
16 [0x10]:          movn #0   
18 [0x12]:          popobj   
19 [0x13]: line: 19 call @3578 // <std#time.mills_time>   
20 [0x14]:          movl 0   
21 [0x15]:          movn #19   
23 [0x17]:          movn #1   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 21 movl 0   
30 [0x1e]:          movn #4   
32 [0x20]:          pushobj   
33 [0x21]:          call @2211 // <std.io#thread.is_active>   
34 [0x22]:          loadval ebx   
35 [0x23]:          not ebx, ebx   
36 [0x24]:          movr cmt, ebx   
37 [0x25]:          jne 72   
38 [0x26]: line: 22 movl 0   
39 [0x27]:          movn #4   
41 [0x29]:          pushobj   
42 [0x2a]:          movi #1, ebx   
44 [0x2c]:          newobj_arry ebx   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #19   
48 [0x30]:          pushobj   
49 [0x31]:          movsl #-1   
50 [0x32]:          movn #0   
52 [0x34]:          popobj   
53 [0x35]:          call @2186 // <std.io#thread.start>   
54 [0x36]:          movg @35 // @std.io#thread_result   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          call @1942 // <std#_enum_.operator!=>   
59 [0x3b]:          loadval ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 71   
62 [0x3e]: line: 24 movl 0   
63 [0x3f]:          movn #19   
65 [0x41]:          movn #0   
67 [0x43]:          del   
68 [0x44]: line: 25 istorel 2, fp+0   
70 [0x46]:          ret   
71 [0x47]:          nop   
72 [0x48]:          nop   
73 [0x49]: line: 29 movl 0   
74 [0x4a]:          movn #19   
76 [0x4c]:          pushobj   
77 [0x4d]:          call @2272 // <std#_object_.notify>   
78 [0x4e]: line: 30 istorel 0, fp+0   
80 [0x50]:          ret   
81 [0x51]:          jmp @97   
82 [0x52]:          movl 0   
83 [0x53]:          movn #18   
85 [0x55]:          pushobj   
86 [0x56]:          movg @30 // @std.io.task#job_state   
87 [0x57]:          movn #1   
89 [0x59]:          pushobj   
90 [0x5a]:          call @1944 // <std#_enum_.operator==>   
91 [0x5b]:          loadval ebx   
92 [0x5c]:          movr cmt, ebx   
93 [0x5d]:          jne 97   
94 [0x5e]: line: 32 istorel 1, fp+0   
96 [0x60]:          ret   
97 [0x61]:          nop   
98 [0x62]: line: 35 istorel 2, fp+0   
100 [0x64]:          ret   


function: std.io.task#job.cancel[2118] params(0) in file: lib\support\0.2.9/io//task//job.sharp:38:12: note:  
			public def cancel() {
		           ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 40 movl 0   
3 [0x3]:          movn #18   
5 [0x5]:          pushobj   
6 [0x6]:          movg @30 // @std.io.task#job_state   
7 [0x7]:          movn #1   
9 [0x9]:          pushobj   
10 [0xa]:          call @1944 // <std#_enum_.operator==>   
11 [0xb]:          loadval ebx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 50   
14 [0xe]: line: 41 movg @30 // @std.io.task#job_state   
15 [0xf]:          movn #3   
17 [0x11]:          pushobj   
18 [0x12]:          movl 0   
19 [0x13]:          movn #18   
21 [0x15]:          popobj   
22 [0x16]: line: 43 call @2193 // <std.io#thread.current>   
23 [0x17]:          movl 0   
24 [0x18]:          movn #4   
26 [0x1a]:          pushobj   
27 [0x1b]:          itest ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 44   
31 [0x1f]: line: 44 movl 0   
32 [0x20]:          movn #4   
34 [0x22]:          pushobj   
35 [0x23]:          call @2192 // <std.io#thread.interrupt>   
36 [0x24]:          pop   
37 [0x25]: line: 45 movg @24 // @std.io.task#__srt_global   
38 [0x26]:          movn #5   
40 [0x28]:          pushobj   
41 [0x29]:          pushl 0   
42 [0x2a]:          call @2156 // <std.io.task#job_master.cleanup_job>   
43 [0x2b]:          jmp @49   
44 [0x2c]: line: 48 new_class @0 // app#__srt_global   
45 [0x2d]:          imod adx, #? (112)   
47 [0x2f]:          call @2114 // <std.io.task#cancellation_exception.cancellation_exception>   
48 [0x30]:          throw    
49 [0x31]:          nop   
50 [0x32]:          nop   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]:          ret   


function: std.io.task#job.cancel_future[2119] params(0) in file: lib\support\0.2.9/io//task//job.sharp:54:15: note:  
			protected def cancel_future() {
		              ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 movl 0   
3 [0x3]:          movn #14   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 32   
10 [0xa]: line: 57 movl 0   
11 [0xb]:          movn #13   
13 [0xd]:          smovr_3 fp+1   
14 [0xe]: line: 58 movl 1   
15 [0xf]:          checknull   
16 [0x10]:          not ebx, ebx   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 32   
19 [0x13]: line: 59 pushl 1   
20 [0x14]:          call @2118 // <std.io.task#job.cancel>   
21 [0x15]: line: 60 movg @24 // @std.io.task#__srt_global   
22 [0x16]:          movn #5   
24 [0x18]:          pushobj   
25 [0x19]:          pushl 1   
26 [0x1a]:          call @2156 // <std.io.task#job_master.cleanup_job>   
27 [0x1b]: line: 62 movl 1   
28 [0x1c]:          movn #13   
30 [0x1e]:          smovr_3 fp+1   
31 [0x1f]:          jmp @14   
32 [0x20]:          nop   
33 [0x21]:          movl 0   
34 [0x22]:          _ulck   
35 [0x23]:          ret   


function: std.io.task#job.join[2120] params(0) in file: lib\support\0.2.9/io//task//job.sharp:68:12: note:  
			public def join() {
		           ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #16   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          skpe ebx // pc = 28   
7 [0x7]:          movl 0   
8 [0x8]:          movn #18   
10 [0xa]:          pushobj   
11 [0xb]:          movg @30 // @std.io.task#job_state   
12 [0xc]:          movn #3   
14 [0xe]:          pushobj   
15 [0xf]:          call @1944 // <std#_enum_.operator==>   
16 [0x10]:          loadval ebx   
17 [0x11]:          skpe ebx // pc = 28   
18 [0x12]:          movl 0   
19 [0x13]:          movn #18   
21 [0x15]:          pushobj   
22 [0x16]:          movg @30 // @std.io.task#job_state   
23 [0x17]:          movn #2   
25 [0x19]:          pushobj   
26 [0x1a]:          call @1944 // <std#_enum_.operator==>   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 31   
30 [0x1e]: line: 72 ret   
31 [0x1f]:          nop   
32 [0x20]: line: 74 istorel 0, fp+1   
34 [0x22]: line: 75 movl 0   
35 [0x23]:          _lck    
36 [0x24]: line: 76 pushl 0   
37 [0x25]:          call @2130 // <std.io.task#job.is_finished>   
38 [0x26]:          loadval ebx   
39 [0x27]:          not ebx, ebx   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 50   
42 [0x2a]: line: 77 istorel 1, fp+1   
44 [0x2c]: line: 78 movl 0   
45 [0x2d]:          movn #20   
47 [0x2f]:          pushobj   
48 [0x30]:          call @2193 // <std.io#thread.current>   
49 [0x31]:          call @3682 // <std#list<std.io#thread>.add>   
50 [0x32]:          nop   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]: line: 82 loadl ebx, fp+1   
54 [0x36]:          movr cmt, ebx   
55 [0x37]:          jne 58   
56 [0x38]: line: 83 call @2193 // <std.io#thread.current>   
57 [0x39]:          call @2271 // <std#_object_.wait>   
58 [0x3a]:          nop   
59 [0x3b]:          ret   


function: std.io.task#job.get_state[2121] params(0) in file: lib\support\0.2.9/io//task//job.sharp:87:12: note:  
			public def get_state() := state;
		           ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io.task#job.get_name[2122] params(0) in file: lib\support\0.2.9/io//task//job.sharp:88:12: note:  
			public def get_name() := name;
		           ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #5   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io.task#job.get_id[2123] params(0) in file: lib\support\0.2.9/io//task//job.sharp:89:12: note:  
			public def get_id() := id;
		           ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


overload function: std.io.task#job.operator=[2124] params(1) in file: lib\support\0.2.9/io//task//job.sharp:91:15: note:  
			protected def operator=(block: ()()) {
		              ^

0 [0x0]: line: 92 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: std.io.task#job.operator=[2125] params(1) in file: lib\support\0.2.9/io//task//job.sharp:95:15: note:  
			protected def operator=(block: (args : object[])()) {
		              ^

0 [0x0]: line: 96 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: std.io.task#job.operator=[2126] params(1) in file: lib\support\0.2.9/io//task//job.sharp:99:15: note:  
			protected def operator=(block: (deferred : object, args : object[])()) {
		              ^

0 [0x0]: line: 100 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #2   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


overload function: std.io.task#job.operator=[2127] params(1) in file: lib\support\0.2.9/io//task//job.sharp:103:15: note:  
			protected def operator=(block: (deferred : object)()) {
		              ^

0 [0x0]: line: 104 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


function: std.io.task#job.job_main[2128] params(1) in file: lib\support\0.2.9/io//task//job.sharp:107:22: note:  
			protected static def job_main(args : object[]) : var {
		                     ^

0 [0x0]: line: 108 pushl 0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           popobj2    
4 [0x4]:           movr adx, ebx   
5 [0x5]:           chklen adx   
6 [0x6]:           movnd adx   
7 [0x7]:           movi #28, cmt   
9 [0x9]:           cast cmt   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]: line: 110 pushl 1   
12 [0xc]: line: 111 call @2271 // <std#_object_.wait>   
13 [0xd]: line: 113 movl 1   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           pushnull    
18 [0x12]:           itest ebx   
19 [0x13]:           not ebx, ebx   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 105   
22 [0x16]: line: 114 movl 1   : try start: try block start
23 [0x17]: line: 115 movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           call @2129 // <std.io.task#job.execute>   
27 [0x1b]:           jmp @100   : try block end
28 [0x1c]: line: 117 movg @30 // @std.io.task#job_state   : catch(std.io.task#cancellation_exception)
29 [0x1d]:           movn #3   
31 [0x1f]:           pushobj   
32 [0x20]:           movl 1   
33 [0x21]:           movn #0   
35 [0x23]:           movn #18   
37 [0x25]:           popobj   
38 [0x26]: line: 118 movg @24 // @std.io.task#__srt_global   
39 [0x27]:           movn #5   
41 [0x29]:           pushobj   
42 [0x2a]:           movl 1   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           call @2156 // <std.io.task#job_master.cleanup_job>   
47 [0x2f]:           jmp @100   
48 [0x30]: line: 120 movg @30 // @std.io.task#job_state   : catch(std#error)
49 [0x31]:           movn #3   
51 [0x33]:           pushobj   
52 [0x34]:           movl 1   
53 [0x35]:           movn #0   
55 [0x37]:           movn #18   
57 [0x39]:           popobj   
58 [0x3a]: line: 121 movg @24 // @std.io.task#__srt_global   
59 [0x3b]:           movn #5   
61 [0x3d]:           pushobj   
62 [0x3e]:           movl 1   
63 [0x3f]:           movn #0   
65 [0x41]:           pushobj   
66 [0x42]:           call @2156 // <std.io.task#job_master.cleanup_job>   
67 [0x43]: line: 122 movl 1   
68 [0x44]:           movn #0   
70 [0x46]:           del   
71 [0x47]: line: 123 pushl 2   
72 [0x48]:           throw    
73 [0x49]:           jmp @100   
74 [0x4a]: line: 125 movg @30 // @std.io.task#job_state   : catch(std#exception)
75 [0x4b]:           movn #3   
77 [0x4d]:           pushobj   
78 [0x4e]:           movl 1   
79 [0x4f]:           movn #0   
81 [0x51]:           movn #18   
83 [0x53]:           popobj   
84 [0x54]: line: 126 movg @24 // @std.io.task#__srt_global   
85 [0x55]:           movn #5   
87 [0x57]:           pushobj   
88 [0x58]:           movl 1   
89 [0x59]:           movn #0   
91 [0x5b]:           pushobj   
92 [0x5c]:           call @2156 // <std.io.task#job_master.cleanup_job>   
93 [0x5d]: line: 127 movl 1   
94 [0x5e]:           movn #0   
96 [0x60]:           del   
97 [0x61]: line: 128 pushl 3   
98 [0x62]:           throw    
99 [0x63]:           jmp @100   
100 [0x64]:           nop   : try end
101 [0x65]: line: 131 movl 1   
102 [0x66]:           movn #0   
104 [0x68]:           del   
105 [0x69]:           nop   
106 [0x6a]:           jmp @11   
107 [0x6b]: line: 135 istorel 0, fp+0   
109 [0x6d]:           ret   


function: std.io.task#job.execute[2129] params(0) in file: lib\support\0.2.9/io//task//job.sharp:138:15: note:  
			protected def execute() {
		              ^

0 [0x0]: line: 139 call @3578 // <std#time.mills_time>   
1 [0x1]:           movl 0   
2 [0x2]:           movn #10   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 140 movg @30 // @std.io.task#job_state   
9 [0x9]:           movn #1   
11 [0xb]:           pushobj   
12 [0xc]:           movl 0   
13 [0xd]:           movn #18   
15 [0xf]:           popobj   
16 [0x10]: line: 141 movl 0   
17 [0x11]:           movn #14   
19 [0x13]:           movi #0, adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 26   
24 [0x18]: line: 142 pushl 0   
25 [0x19]:           call @2134 // <std.io.task#job.reschedule>   
26 [0x1a]:           nop   
27 [0x1b]: line: 144 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 45   
35 [0x23]: line: 145 movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           movi #0, adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           loadval ebx   
43 [0x2b]:           calld ebx   
44 [0x2c]:           jmp @114   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #1   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           movr cmt, ebx   
52 [0x34]:           jne 67   
53 [0x35]: line: 146 movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           iaload ebx, adx   
59 [0x3b]:           rstore ebx   
60 [0x3c]:           movl 0   
61 [0x3d]:           movn #6   
63 [0x3f]:           pushobj   
64 [0x40]:           smov ebx, sp+[-1]   
65 [0x41]:           calld ebx   
66 [0x42]:           jmp @114   
67 [0x43]:           movl 0   
68 [0x44]:           movn #2   
70 [0x46]:           movi #0, adx   
72 [0x48]:           iaload ebx, adx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 93   
75 [0x4b]: line: 147 movl 0   
76 [0x4c]:           movn #2   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movl 0   
83 [0x53]:           movn #7   
85 [0x55]:           pushobj   
86 [0x56]:           movl 0   
87 [0x57]:           movn #6   
89 [0x59]:           pushobj   
90 [0x5a]:           smov ebx, sp+[-2]   
91 [0x5b]:           calld ebx   
92 [0x5c]:           jmp @114   
93 [0x5d]:           movl 0   
94 [0x5e]:           movn #3   
96 [0x60]:           movi #0, adx   
98 [0x62]:           iaload ebx, adx   
99 [0x63]:           movr cmt, ebx   
100 [0x64]:           jne 114   
101 [0x65]: line: 148 movl 0   
102 [0x66]:           movn #3   
104 [0x68]:           movi #0, adx   
106 [0x6a]:           iaload ebx, adx   
107 [0x6b]:           rstore ebx   
108 [0x6c]:           movl 0   
109 [0x6d]:           movn #7   
111 [0x6f]:           pushobj   
112 [0x70]:           smov ebx, sp+[-1]   
113 [0x71]:           calld ebx   
114 [0x72]:           nop   
115 [0x73]: line: 151 movg @30 // @std.io.task#job_state   
116 [0x74]:           movn #2   
118 [0x76]:           pushobj   
119 [0x77]:           movl 0   
120 [0x78]:           movn #18   
122 [0x7a]:           popobj   
123 [0x7b]: line: 152 movg @24 // @std.io.task#__srt_global   
124 [0x7c]:           movn #5   
126 [0x7e]:           pushobj   
127 [0x7f]:           pushl 0   
128 [0x80]:           call @2156 // <std.io.task#job_master.cleanup_job>   
129 [0x81]:           ret   


function: std.io.task#job.is_finished[2130] params(0) in file: lib\support\0.2.9/io//task//job.sharp:155:8: note:  
		    def is_finished() := state == completed || state == cancelled;
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @30 // @std.io.task#job_state   
5 [0x5]:           movn #2   
7 [0x7]:           pushobj   
8 [0x8]:           call @1944 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           skpe ebx // pc = 21   
11 [0xb]:           movl 0   
12 [0xc]:           movn #18   
14 [0xe]:           pushobj   
15 [0xf]:           movg @30 // @std.io.task#job_state   
16 [0x10]:           movn #3   
18 [0x12]:           pushobj   
19 [0x13]:           call @1944 // <std#_enum_.operator==>   
20 [0x14]:           loadval ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


function: std.io.task#job.is_active[2131] params(0) in file: lib\support\0.2.9/io//task//job.sharp:156:8: note:  
		    def is_active() := state == active;
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @30 // @std.io.task#job_state   
5 [0x5]:           movn #1   
7 [0x7]:           pushobj   
8 [0x8]:           call @1944 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: std.io.task#job.update_timeout[2132] params(1) in file: lib\support\0.2.9/io//task//job.sharp:158:15: note:  
		    public def update_timeout(tm: var) {
		              ^

0 [0x0]: line: 159 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #9   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


function: std.io.task#job.update_interval[2133] params(2) in file: lib\support\0.2.9/io//task//job.sharp:162:15: note:  
		    public def update_interval(tm: var, interval: time_unit) {
		              ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #14   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 15   
9 [0x9]: line: 164 new_class @0 // app#__srt_global   
10 [0xa]:           cast adx   
11 [0xb]:           dup    
12 [0xc]:           newstr @11 // cannot set update restart interval on non-recurring job   
13 [0xd]:           call @1961 // <std#illegal_state_exception.illegal_state_exception>   
14 [0xe]:           throw    
15 [0xf]:           nop   
16 [0x10]: line: 166 movl 0   
17 [0x11]:           movn #18   
19 [0x13]:           pushobj   
20 [0x14]:           movg @30 // @std.io.task#job_state   
21 [0x15]:           movn #1   
23 [0x17]:           pushobj   
24 [0x18]:           call @1944 // <std#_enum_.operator==>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 34   
28 [0x1c]: line: 167 pushl 0   
29 [0x1d]:           call @2119 // <std.io.task#job.cancel_future>   
30 [0x1e]: line: 168 movl 0   
31 [0x1f]:           movn #13   
33 [0x21]:           del   
34 [0x22]:           nop   
35 [0x23]: line: 171 pushl 2   
36 [0x24]:           movg @74 // @std#time_unit   
37 [0x25]:           movn #3   
39 [0x27]:           pushobj   
40 [0x28]:           call @1944 // <std#_enum_.operator==>   
41 [0x29]:           loadval ebx   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 54   
44 [0x2c]: line: 172 ipushl #1   
45 [0x2d]:           call @3576 // <std#time.nano_to_mills>   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #11   
49 [0x31]:           loadval ebx   
50 [0x32]:           movi #0, adx   
52 [0x34]:           rmov adx, ebx   
53 [0x35]:           jmp @113   
54 [0x36]:           pushl 2   
55 [0x37]:           movg @74 // @std#time_unit   
56 [0x38]:           movn #2   
58 [0x3a]:           pushobj   
59 [0x3b]:           call @1944 // <std#_enum_.operator==>   
60 [0x3c]:           loadval ebx   
61 [0x3d]:           movr cmt, ebx   
62 [0x3e]:           jne 75   
63 [0x3f]: line: 174 ipushl #1   
64 [0x40]:           movi #1000, ebx   
66 [0x42]:           loadval ecx   
67 [0x43]:           div ecx, ebx -> ebx   
68 [0x44]:           movl 0   
69 [0x45]:           movn #11   
71 [0x47]:           movi #0, adx   
73 [0x49]:           rmov adx, ebx   
74 [0x4a]:           jmp @113   
75 [0x4b]:           pushl 2   
76 [0x4c]:           movg @74 // @std#time_unit   
77 [0x4d]:           movn #1   
79 [0x4f]:           pushobj   
80 [0x50]:           call @1944 // <std#_enum_.operator==>   
81 [0x51]:           loadval ebx   
82 [0x52]:           movr cmt, ebx   
83 [0x53]:           jne 93   
84 [0x54]: line: 176 ipushl #1   
85 [0x55]:           movl 0   
86 [0x56]:           movn #11   
88 [0x58]:           loadval ebx   
89 [0x59]:           movi #0, adx   
91 [0x5b]:           rmov adx, ebx   
92 [0x5c]:           jmp @113   
93 [0x5d]:           pushl 2   
94 [0x5e]:           movg @74 // @std#time_unit   
95 [0x5f]:           movn #0   
97 [0x61]:           pushobj   
98 [0x62]:           call @1944 // <std#_enum_.operator==>   
99 [0x63]:           loadval ebx   
100 [0x64]:           movr cmt, ebx   
101 [0x65]:           jne 113   
102 [0x66]: line: 178 ipushl #1   
103 [0x67]:           movi #1000, ebx   
105 [0x69]:           loadval ecx   
106 [0x6a]:           mul ecx, ebx -> ebx   
107 [0x6b]:           movl 0   
108 [0x6c]:           movn #11   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           rmov adx, ebx   
113 [0x71]:           nop   
114 [0x72]: line: 181 movl 0   
115 [0x73]:           movn #18   
117 [0x75]:           pushobj   
118 [0x76]:           movg @30 // @std.io.task#job_state   
119 [0x77]:           movn #1   
121 [0x79]:           pushobj   
122 [0x7a]:           call @1944 // <std#_enum_.operator==>   
123 [0x7b]:           loadval ebx   
124 [0x7c]:           movr cmt, ebx   
125 [0x7d]:           jne 128   
126 [0x7e]: line: 182 pushl 0   
127 [0x7f]:           call @2134 // <std.io.task#job.reschedule>   
128 [0x80]:           nop   
129 [0x81]:           ret   


function: std.io.task#job.reschedule[2134] params(0) in file: lib\support\0.2.9/io//task//job.sharp:185:18: note:  
		    protected def reschedule() {
		                 ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #11   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3578 // <std#time.mills_time>   
17 [0x11]:           loadval ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           sub ecx, ebx -> ebx   
20 [0x14]:           smovr_2 ebx, fp+1   
21 [0x15]: line: 188 call @2175 // <std.io.task#task.builder>   
22 [0x16]:           movl 0   
23 [0x17]:           movn #5   
25 [0x19]:           pushobj   
26 [0x1a]:           call @2140 // <std.io.task#job_builder.with_name>   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #11   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movg @74 // @std#time_unit   
35 [0x23]:           movn #1   
37 [0x25]:           pushobj   
38 [0x26]:           call @2139 // <std.io.task#job_builder.recurring>   
39 [0x27]:           popobj2    
40 [0x28]:           smovr_3 fp+2   
41 [0x29]: line: 192 movl 0   
42 [0x2a]:           movn #6   
44 [0x2c]:           sizeof ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           movi #1, ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           sub ecx, ebx -> ebx   
50 [0x32]:           newobj_arry ebx   
51 [0x33]:           popobj2    
52 [0x34]:           smovr_3 fp+3   
53 [0x35]: line: 193 istorel 0, fp+4   
55 [0x37]: line: 194 istorel 1, fp+5   
57 [0x39]:           ipushl #5   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #6   
61 [0x3d]:           sizeof ebx   
62 [0x3e]:           loadval ecx   
63 [0x3f]:           lt ecx, ebx   
64 [0x40]:           movr ebx, cmt   
65 [0x41]:           movr cmt, ebx   
66 [0x42]:           jne 91   
67 [0x43]: line: 195 movl 0   
68 [0x44]:           movn #6   
70 [0x46]:           pushobj   
71 [0x47]:           loadl ebx, fp+5   
72 [0x48]:           popobj2    
73 [0x49]:           movr adx, ebx   
74 [0x4a]:           chklen adx   
75 [0x4b]:           movnd adx   
76 [0x4c]:           pushobj   
77 [0x4d]:           pushl 3   
78 [0x4e]:           loadl ebx, fp+4   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+4   
82 [0x52]:           movr ebx, egx   
83 [0x53]:           popobj2    
84 [0x54]:           movr adx, ebx   
85 [0x55]:           chklen adx   
86 [0x56]:           movnd adx   
87 [0x57]:           popobj   
88 [0x58]:           iaddl 1, fp@5   
90 [0x5a]:           jmp @57   
91 [0x5b]: line: 198 movl 0   
92 [0x5c]:           movn #17   
94 [0x5e]:           movi #0, adx   
96 [0x60]:           iaload ebx, adx   
97 [0x61]:           movr cmt, ebx   
98 [0x62]:           jne 102   
99 [0x63]: line: 199 pushl 2   
100 [0x64]:           call @2143 // <std.io.task#job_builder.long_term>   
101 [0x65]:           pop   
102 [0x66]:           nop   
103 [0x67]: line: 200 pushl 2   
104 [0x68]:           pushl 3   
105 [0x69]:           call @2141 // <std.io.task#job_builder.with_args>   
106 [0x6a]:           pop   
107 [0x6b]: line: 202 movl 0   
108 [0x6c]:           movn #0   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           iaload ebx, adx   
113 [0x71]:           movr cmt, ebx   
114 [0x72]:           jne 132   
115 [0x73]: line: 203 movl 0   
116 [0x74]:           movn #0   
118 [0x76]:           movi #0, adx   
120 [0x78]:           iaload ebx, adx   
121 [0x79]:           rstore ebx   
122 [0x7a]:           movl 2   
123 [0x7b]:           movn #1   
125 [0x7d]:           movn #0   
127 [0x7f]:           loadval ebx   
128 [0x80]:           movi #0, adx   
130 [0x82]:           rmov adx, ebx   
131 [0x83]:           jmp @206   
132 [0x84]:           movl 0   
133 [0x85]:           movn #1   
135 [0x87]:           movi #0, adx   
137 [0x89]:           iaload ebx, adx   
138 [0x8a]:           movr cmt, ebx   
139 [0x8b]:           jne 157   
140 [0x8c]: line: 204 movl 0   
141 [0x8d]:           movn #1   
143 [0x8f]:           movi #0, adx   
145 [0x91]:           iaload ebx, adx   
146 [0x92]:           rstore ebx   
147 [0x93]:           movl 2   
148 [0x94]:           movn #1   
150 [0x96]:           movn #1   
152 [0x98]:           loadval ebx   
153 [0x99]:           movi #0, adx   
155 [0x9b]:           rmov adx, ebx   
156 [0x9c]:           jmp @206   
157 [0x9d]:           movl 0   
158 [0x9e]:           movn #2   
160 [0xa0]:           movi #0, adx   
162 [0xa2]:           iaload ebx, adx   
163 [0xa3]:           movr cmt, ebx   
164 [0xa4]:           jne 182   
165 [0xa5]: line: 205 movl 0   
166 [0xa6]:           movn #2   
168 [0xa8]:           movi #0, adx   
170 [0xaa]:           iaload ebx, adx   
171 [0xab]:           rstore ebx   
172 [0xac]:           movl 2   
173 [0xad]:           movn #1   
175 [0xaf]:           movn #2   
177 [0xb1]:           loadval ebx   
178 [0xb2]:           movi #0, adx   
180 [0xb4]:           rmov adx, ebx   
181 [0xb5]:           jmp @206   
182 [0xb6]:           movl 0   
183 [0xb7]:           movn #3   
185 [0xb9]:           movi #0, adx   
187 [0xbb]:           iaload ebx, adx   
188 [0xbc]:           movr cmt, ebx   
189 [0xbd]:           jne 206   
190 [0xbe]: line: 206 movl 0   
191 [0xbf]:           movn #3   
193 [0xc1]:           movi #0, adx   
195 [0xc3]:           iaload ebx, adx   
196 [0xc4]:           rstore ebx   
197 [0xc5]:           movl 2   
198 [0xc6]:           movn #1   
200 [0xc8]:           movn #3   
202 [0xca]:           loadval ebx   
203 [0xcb]:           movi #0, adx   
205 [0xcd]:           rmov adx, ebx   
206 [0xce]:           nop   
207 [0xcf]: line: 209 ipushl #1   
208 [0xd0]:           movi #0, ebx   
210 [0xd2]:           loadval ecx   
211 [0xd3]:           gt ecx, ebx   
212 [0xd4]:           movr ebx, cmt   
213 [0xd5]:           movr cmt, ebx   
214 [0xd6]:           jne 219   
215 [0xd7]: line: 210 pushl 2   
216 [0xd8]:           ipushl #1   
217 [0xd9]:           call @2138 // <std.io.task#job_builder.schedule>   
218 [0xda]:           pop   
219 [0xdb]:           nop   
220 [0xdc]: line: 211 movl 0   
221 [0xdd]:           movn #8   
223 [0xdf]:           movi #0, adx   
225 [0xe1]:           iaload ebx, adx   
226 [0xe2]:           movr cmt, ebx   
227 [0xe3]:           jne 238   
228 [0xe4]: line: 212 pushl 2   
229 [0xe5]:           movl 0   
230 [0xe6]:           movn #9   
232 [0xe8]:           movi #0, adx   
234 [0xea]:           iaload ebx, adx   
235 [0xeb]:           rstore ebx   
236 [0xec]:           call @2137 // <std.io.task#job_builder.with_timeout>   
237 [0xed]:           pop   
238 [0xee]:           nop   
239 [0xef]: line: 214 movl 2   
240 [0xf0]:           movn #1   
242 [0xf2]:           pushobj   
243 [0xf3]:           movl 0   
244 [0xf4]:           movn #13   
246 [0xf6]:           popobj   
247 [0xf7]: line: 215 movl 2   
248 [0xf8]:           movn #0   
250 [0xfa]:           pushobj   
251 [0xfb]:           movl 2   
252 [0xfc]:           movn #1   
254 [0xfe]:           pushobj   
255 [0xff]:           call @2154 // <std.io.task#job_master.start_job>   
256 [0x100]:           ret   


constructor: std.io.task#job_builder.job_builder[2135] params(0) in file: lib\support\0.2.9/io//task//job_builder.sharp:6:21: note:  
			private job_builder() {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io.task#job_builder.job_builder[2136] params(2) in file: lib\support\0.2.9/io//task//job_builder.sharp:8:23: note:  
			protected job_builder(scheduled_job : job, master : job_master) {
		                      ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 pushl 1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         popobj   
6 [0x6]: line: 10 pushl 2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          popobj   
11 [0xb]: line: 12 movi #1, ebx   
13 [0xd]:          newobj_arry ebx   
14 [0xe]:          popobj2    
15 [0xf]:          smovr_3 fp+3   
16 [0x10]: line: 13 movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          pushobj   
20 [0x14]:          pushl 3   
21 [0x15]:          movi #0, ebx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          popobj   
28 [0x1c]: line: 14 pushl 3   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          movn #6   
34 [0x22]:          popobj   
35 [0x23]:          ret   


function: std.io.task#job_builder.with_timeout[2137] params(1) in file: lib\support\0.2.9/io//task//job_builder.sharp:17:5: note:  
			def with_timeout(mills_time : var) : job_builder {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #16   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 19 new_class @0 // app#__srt_global   
11 [0xb]:          cast adx   
12 [0xc]:          dup    
13 [0xd]:          newstr @12 // cannot set a timeout on a job that's blocking the calling thread   
14 [0xe]:          call @1961 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 22 ipushl #1   
18 [0x12]:          movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          movn #9   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]: line: 23 istore 1   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          movn #8   
34 [0x22]:          loadval ebx   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 24 movl 0   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std.io.task#job_builder.schedule[2138] params(1) in file: lib\support\0.2.9/io//task//job_builder.sharp:27:5: note:  
			def schedule(future : var) : job_builder {
		    ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #12   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 29 movl 0   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io.task#job_builder.recurring[2139] params(2) in file: lib\support\0.2.9/io//task//job_builder.sharp:32:5: note:  
			def recurring(tm : var, interval: time_unit) : job_builder {
		    ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #16   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 34 new_class @0 // app#__srt_global   
11 [0xb]:          cast adx   
12 [0xc]:          dup    
13 [0xd]:          newstr @13 // cannot set a job recurring that's blocking the calling thread   
14 [0xe]:          call @1961 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 37 istore 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          movn #14   
24 [0x18]:          loadval ebx   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          rmov adx, ebx   
28 [0x1c]: line: 38 movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          ipushl #1   
33 [0x21]:          pushl 2   
34 [0x22]:          call @2133 // <std.io.task#job.update_interval>   
35 [0x23]: line: 39 movl 0   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std.io.task#job_builder.with_name[2140] params(1) in file: lib\support\0.2.9/io//task//job_builder.sharp:42:5: note:  
			def with_name(job_name : string) : job_builder {
		    ^

0 [0x0]: line: 43 pushl 1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #5   
6 [0x6]:          popobj   
7 [0x7]: line: 44 movl 0   
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: std.io.task#job_builder.with_args[2141] params(1) in file: lib\support\0.2.9/io//task//job_builder.sharp:47:5: note:  
			def with_args(args : object[]) : job_builder {
		    ^

0 [0x0]: line: 48 istore 1   
2 [0x2]:          movl 1   
3 [0x3]:          sizeof ebx   
4 [0x4]:          loadval ecx   
5 [0x5]:          add ecx, ebx -> ebx   
6 [0x6]:          newobj_arry ebx   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+2   
9 [0x9]: line: 49 movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          pushobj   
13 [0xd]:          pushl 2   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          movr adx, ebx   
18 [0x12]:          chklen adx   
19 [0x13]:          movnd adx   
20 [0x14]:          popobj   
21 [0x15]: line: 51 istorel 0, fp+3   
23 [0x17]: line: 52 istorel -1, fp+5   
25 [0x19]:          pushl 1   
26 [0x1a]:          popl 6   
27 [0x1b]:          iaddl 1, fp@5   
29 [0x1d]:          movl 6   
30 [0x1e]:          sizeof ecx   
31 [0x1f]:          loadl ebx, fp+5   
32 [0x20]:          lt ebx, ecx   
33 [0x21]:          jne 48   
34 [0x22]:          movnd ebx   
35 [0x23]:          pushobj   
36 [0x24]:          popl 4   
37 [0x25]: line: 53 pushl 4   
38 [0x26]:          pushl 2   
39 [0x27]:          loadl ebx, fp+3   
40 [0x28]:          inc ebx   
41 [0x29]:          smovr_2 ebx, fp+3   
42 [0x2a]:          popobj2    
43 [0x2b]:          movr adx, ebx   
44 [0x2c]:          chklen adx   
45 [0x2d]:          movnd adx   
46 [0x2e]:          popobj   
47 [0x2f]:          jmp @27   
48 [0x30]: line: 56 pushl 2   
49 [0x31]:          movl 0   
50 [0x32]:          movn #1   
52 [0x34]:          movn #6   
54 [0x36]:          popobj   
55 [0x37]: line: 57 movl 0   
56 [0x38]:          returnobj   
57 [0x39]:          ret   


function: std.io.task#job_builder.block[2142] params(0) in file: lib\support\0.2.9/io//task//job_builder.sharp:60:5: note:  
			def block() : job_builder {
		    ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #8   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 62 new_class @0 // app#__srt_global   
11 [0xb]:          cast adx   
12 [0xc]:          dup    
13 [0xd]:          newstr @14 // cannot block calling thread on job that has a timeout   
14 [0xe]:          call @1961 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 65 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          movn #14   
22 [0x16]:          movi #0, adx   
24 [0x18]:          iaload ebx, adx   
25 [0x19]:          movr cmt, ebx   
26 [0x1a]:          jne 33   
27 [0x1b]: line: 66 new_class @0 // app#__srt_global   
28 [0x1c]:          cast adx   
29 [0x1d]:          dup    
30 [0x1e]:          newstr @15 // cannot block calling thread on a recurring job   
31 [0x1f]:          call @1961 // <std#illegal_state_exception.illegal_state_exception>   
32 [0x20]:          throw    
33 [0x21]:          nop   
34 [0x22]: line: 69 istore 1   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          movn #16   
41 [0x29]:          loadval ebx   
42 [0x2a]:          movi #0, adx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]: line: 70 movl 0   
46 [0x2e]:          returnobj   
47 [0x2f]:          ret   


function: std.io.task#job_builder.long_term[2143] params(0) in file: lib\support\0.2.9/io//task//job_builder.sharp:73:5: note:  
			def long_term() : job_builder {
		    ^

0 [0x0]: line: 74 istore 1   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          movn #17   
7 [0x7]:          loadval ebx   
8 [0x8]:          movi #0, adx   
10 [0xa]:          rmov adx, ebx   
11 [0xb]: line: 75 movl 0   
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std.io.task#job_builder.operator=[2144] params(1) in file: lib\support\0.2.9/io//task//job_builder.sharp:78:12: note:  
			public def operator=(main: ()()) : job {
		           ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @2124 // <std.io.task#job.operator=>   
6 [0x6]: line: 80 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @2154 // <std.io.task#job_master.start_job>   
15 [0xf]: line: 81 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: std.io.task#job_builder.operator=[2145] params(1) in file: lib\support\0.2.9/io//task//job_builder.sharp:84:12: note:  
			public def operator=(main: (args : object[])()) : job {
		           ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @2125 // <std.io.task#job.operator=>   
6 [0x6]: line: 86 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @2154 // <std.io.task#job_master.start_job>   
15 [0xf]: line: 87 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: std.io.task#job_builder.operator=[2146] params(1) in file: lib\support\0.2.9/io//task//job_builder.sharp:90:18: note:  
		    protected def operator=(main: (deferred : object, args : object[])()) : job {
		                 ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @2126 // <std.io.task#job.operator=>   
6 [0x6]: line: 92 movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          movn #14   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 22   
16 [0x10]: line: 93 new_class @0 // app#__srt_global   
17 [0x11]:          cast adx   
18 [0x12]:          dup    
19 [0x13]:          newstr @16 // recurring jobs cannot be deferred tasks   
20 [0x14]:          call @1961 // <std#illegal_state_exception.illegal_state_exception>   
21 [0x15]:          throw    
22 [0x16]:          nop   
23 [0x17]: line: 96 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          call @2154 // <std.io.task#job_master.start_job>   
32 [0x20]: line: 97 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          returnobj   
36 [0x24]:          ret   


overload function: std.io.task#job_builder.operator=[2147] params(1) in file: lib\support\0.2.9/io//task//job_builder.sharp:100:18: note:  
		    protected def operator=(main: (deferred : object)()) : job {
		                 ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           ipushl #1   
5 [0x5]:           call @2127 // <std.io.task#job.operator=>   
6 [0x6]: line: 102 movl 0   
7 [0x7]:           movn #1   
9 [0x9]:           movn #14   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 22   
16 [0x10]: line: 103 new_class @0 // app#__srt_global   
17 [0x11]:           cast adx   
18 [0x12]:           dup    
19 [0x13]:           newstr @16 // recurring jobs cannot be deferred tasks   
20 [0x14]:           call @1961 // <std#illegal_state_exception.illegal_state_exception>   
21 [0x15]:           throw    
22 [0x16]:           nop   
23 [0x17]: line: 106 movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           pushobj   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           call @2154 // <std.io.task#job_master.start_job>   
32 [0x20]: line: 107 movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           returnobj   
36 [0x24]:           ret   


function: std.io.task#job_builder.get_job[2148] params(0) in file: lib\support\0.2.9/io//task//job_builder.sharp:110:12: note:  
			public def get_job() := scheduled_job;
		           ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


constructor: std.io.task#job_controller.job_controller[2149] params(0) in file: lib\support\0.2.9/io//task//job_controller.sharp:5:6: note:  
		class job_controller {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io.task#job_master.job_master[2150] params(0) in file: lib\support\0.2.9/io//task//job_master.sharp:7:12: note:  
			job_master() {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 8 new_class @0 // app#__srt_global   
2 [0x2]:         lt adx, adx   
3 [0x3]:         dup    
4 [0x4]:         new_class @0 // app#__srt_global   
5 [0x5]:         checknull   
6 [0x6]:         dup    
7 [0x7]:         newstr @17 // Long term jobs   
8 [0x8]:         call @3469 // <std#string.string>   
9 [0x9]:         movg @34 // @std.io#thread_priority   
10 [0xa]:         movn #0   
12 [0xc]:         pushobj   
13 [0xd]:         call @2216 // <std.io#thread_group.thread_group>   
14 [0xe]:         movl 0   
15 [0xf]:         movn #2   
17 [0x11]:         popobj   
18 [0x12]: line: 9 new_class @0 // app#__srt_global   
19 [0x13]:         lt adx, adx   
20 [0x14]:         dup    
21 [0x15]:         new_class @0 // app#__srt_global   
22 [0x16]:         checknull   
23 [0x17]:         dup    
24 [0x18]:         newstr @18 // Short term jobs   
25 [0x19]:         call @3469 // <std#string.string>   
26 [0x1a]:         movg @34 // @std.io#thread_priority   
27 [0x1b]:         movn #2   
29 [0x1d]:         pushobj   
30 [0x1e]:         call @2216 // <std.io#thread_group.thread_group>   
31 [0x1f]:         movl 0   
32 [0x20]:         movn #3   
34 [0x22]:         popobj   
35 [0x23]: line: 10 new_class @0 // app#__srt_global   
36 [0x24]:          popl 0   
37 [0x25]:          dup    
38 [0x26]:          call @3698 // <std#synced_list<std.io.task#job>.synced_list>   
39 [0x27]:          movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          popobj   
43 [0x2b]: line: 11 new_class @0 // app#__srt_global   
44 [0x2c]:          orl adx, 0   
45 [0x2d]:          dup    
46 [0x2e]:          call @3620 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable>   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #1   
50 [0x32]:          popobj   
51 [0x33]:          ret   


overload function: std.io.task#job_master.operator=[2151] params(1) in file: lib\support\0.2.9/io//task//job_master.sharp:14:5: note:  
			def operator=(main: ()()) : job {
		    ^

0 [0x0]: line: 15 pushl 0   
1 [0x1]:          call @2152 // <std.io.task#job_master.create_job>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 16 pushl 2   
5 [0x5]:          ipushl #1   
6 [0x6]:          call @2124 // <std.io.task#job.operator=>   
7 [0x7]: line: 17 pushl 0   
8 [0x8]:          pushl 2   
9 [0x9]:          call @2154 // <std.io.task#job_master.start_job>   
10 [0xa]: line: 18 movl 2   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io.task#job_master.create_job[2152] params(0) in file: lib\support\0.2.9/io//task//job_master.sharp:21:15: note:  
			protected def create_job() := new job("job#${job.guid}");
		              ^

0 [0x0]: line: 21 new_class @0 // app#__srt_global   
1 [0x1]:          pop   
2 [0x2]:          dup    
3 [0x3]:          new_class @0 // app#__srt_global   
4 [0x4]:          checknull   
5 [0x5]:          dup    
6 [0x6]:          newstr @0 // job#   
7 [0x7]:          call @3469 // <std#string.string>   
8 [0x8]:          movg @26 // @std.io.task#job   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3501 // <std#string.operator+>   
16 [0x10]:          call @2116 // <std.io.task#job.job>   
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   


function: std.io.task#job_master.create_job[2153] params(1) in file: lib\support\0.2.9/io//task//job_master.sharp:23:15: note:  
			protected def create_job(name : string) := new job(name);
		              ^

0 [0x0]: line: 23 new_class @0 // app#__srt_global   
1 [0x1]:          pop   
2 [0x2]:          dup    
3 [0x3]:          pushl 1   
4 [0x4]:          call @2116 // <std.io.task#job.job>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: std.io.task#job_master.start_job[2154] params(1) in file: lib\support\0.2.9/io//task//job_master.sharp:25:15: note:  
			protected def start_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 27 movl 0   
3 [0x3]:          movn #4   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          not ebx, ebx   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 20   
11 [0xb]: line: 28 call @2158 // <std.io.task#__srt_global.start_scheduler>   
12 [0xc]: line: 29 movi #1, ebx   
14 [0xe]:          movl 0   
15 [0xf]:          movn #4   
17 [0x11]:          movi #0, adx   
19 [0x13]:          rmov adx, ebx   
20 [0x14]:          nop   
21 [0x15]:          movl 0   
22 [0x16]:          _ulck   
23 [0x17]: line: 33 movl 1   
24 [0x18]:          movn #12   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 48   
31 [0x1f]: line: 34 movl 1   
32 [0x20]:          movn #12   
34 [0x22]:          movi #0, adx   
36 [0x24]:          iaload ebx, adx   
37 [0x25]:          rstore ebx   
38 [0x26]:          call @3578 // <std#time.mills_time>   
39 [0x27]:          loadval ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          movl 1   
43 [0x2b]:          movn #12   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]:          nop   
49 [0x31]: line: 36 movl 1   
50 [0x32]:          movn #16   
52 [0x34]:          movi #0, adx   
54 [0x36]:          iaload ebx, adx   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 60   
57 [0x39]: line: 37 pushl 1   
58 [0x3a]:          call @2165 // <std.io.task#__srt_global.execute_synchronous>   
59 [0x3b]:          jmp @66   
60 [0x3c]: line: 40 movl 0   
61 [0x3d]:          movn #0   
63 [0x3f]:          pushobj   
64 [0x40]:          pushl 1   
65 [0x41]:          call @3737 // <std#synced_list<std.io.task#job>.add>   
66 [0x42]:          nop   
67 [0x43]:          ret   


function: std.io.task#job_master.get_host_controller[2155] params(1) in file: lib\support\0.2.9/io//task//job_master.sharp:44:15: note:  
			protected def get_host_controller(host: thread) := controllers.at(host);
		              ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 1   
5 [0x5]:          call @3624 // <std#hashtable<std.io#thread,std.io.task#job_controller>.at>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std.io.task#job_master.cleanup_job[2156] params(1) in file: lib\support\0.2.9/io//task//job_master.sharp:46:15: note:  
			protected def cleanup_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 47 movl 1   
1 [0x1]:          movn #7   
3 [0x3]:          del   
4 [0x4]: line: 48 movl 1   
5 [0x5]:          movn #4   
7 [0x7]:          del   
8 [0x8]: line: 49 movl 1   
9 [0x9]:          movn #13   
11 [0xb]:          del   
12 [0xc]: line: 50 movl 1   
13 [0xd]:          movn #6   
15 [0xf]:          del   
16 [0x10]: line: 51 movl 1   
17 [0x11]:          movn #5   
19 [0x13]:          del   
20 [0x14]: line: 53 movl 1   
21 [0x15]: line: 54 _lck    
22 [0x16]: line: 55 movl 1   
23 [0x17]:          movn #20   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3671 // <std#list<std.io#thread>.empty>   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 53   
31 [0x1f]: line: 56 istorel -1, fp+3   
33 [0x21]:          movl 1   
34 [0x22]:          movn #20   
36 [0x24]:          pushobj   
37 [0x25]:          invoke_delegate 8 { static=0, args=0 }   
39 [0x27]:          popl 4   
40 [0x28]:          iaddl 1, fp@3   
42 [0x2a]:          movl 4   
43 [0x2b]:          sizeof ecx   
44 [0x2c]:          loadl ebx, fp+3   
45 [0x2d]:          lt ebx, ecx   
46 [0x2e]:          jne 53   
47 [0x2f]:          movnd ebx   
48 [0x30]:          pushobj   
49 [0x31]:          popl 2   
50 [0x32]: line: 57 pushl 2   
51 [0x33]:          call @2272 // <std#_object_.notify>   
52 [0x34]:          jmp @40   
53 [0x35]:          nop   
54 [0x36]: line: 61 movl 1   
55 [0x37]:          movn #20   
57 [0x39]:          pushobj   
58 [0x3a]:          call @3679 // <std#list<std.io#thread>.clear>   
59 [0x3b]:          movl 1   
60 [0x3c]:          _ulck   
61 [0x3d]: line: 64 movl 1   
62 [0x3e]:          _lck    
63 [0x3f]: line: 65 movl 1   
64 [0x40]:          movn #20   
66 [0x42]:          pushobj   
67 [0x43]:          call @3671 // <std#list<std.io#thread>.empty>   
68 [0x44]:          loadval ebx   
69 [0x45]:          not ebx, ebx   
70 [0x46]:          movr cmt, ebx   
71 [0x47]:          jne 75   
72 [0x48]: line: 66 movl 1   
73 [0x49]:          _ulck   
74 [0x4a]:          jmp @20   
75 [0x4b]:          nop   
76 [0x4c]:          movl 1   
77 [0x4d]:          _ulck   
78 [0x4e]: line: 70 movl 1   
79 [0x4f]:          movn #20   
81 [0x51]:          del   
82 [0x52]: line: 71 movl 0   
83 [0x53]:          movn #0   
85 [0x55]:          pushobj   
86 [0x56]:          pushl 1   
87 [0x57]:          istore 3841   
89 [0x59]:          call @3744 // <std#synced_list<std.io.task#job>.remove>   
90 [0x5a]:          ret   


function: std.io.task#job_master.cancel_jobs_by_name[2157] params(1) in file: lib\support\0.2.9/io//task//job_master.sharp:74:15: note:  
			protected def cancel_jobs_by_name(name: string) {
		              ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          _lck    
4 [0x4]: line: 76 istorel 0, fp+2   
6 [0x6]:          ipushl #2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3740 // <std#synced_list<std.io.task#job>.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 45   
18 [0x12]: line: 77 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          ipushl #2   
23 [0x17]:          call @3703 // <std#synced_list<std.io.task#job>.at>   
24 [0x18]:          popobj2    
25 [0x19]:          movn #5   
27 [0x1b]:          pushobj   
28 [0x1c]:          pushl 1   
29 [0x1d]:          call @3487 // <std#string.operator==>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 41   
33 [0x21]: line: 78 movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          ipushl #2   
38 [0x26]:          call @3745 // <std#synced_list<std.io.task#job>.remove_at>   
39 [0x27]: line: 79 istorel 0, fp+2   
41 [0x29]:          nop   
42 [0x2a]:          iaddl 1, fp@2   
44 [0x2c]:          jmp @6   
45 [0x2d]: line: 83 istorel -1, fp+4   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #3   
50 [0x32]:          pushobj   
51 [0x33]:          invoke_delegate 8 { static=0, args=0 }   
53 [0x35]:          popl 5   
54 [0x36]:          iaddl 1, fp@4   
56 [0x38]:          movl 5   
57 [0x39]:          sizeof ecx   
58 [0x3a]:          loadl ebx, fp+4   
59 [0x3b]:          lt ebx, ecx   
60 [0x3c]:          jne 88   
61 [0x3d]:          movnd ebx   
62 [0x3e]:          pushobj   
63 [0x3f]:          popl 3   
64 [0x40]: line: 84 pushl 0   
65 [0x41]:          pushl 3   
66 [0x42]:          call @2155 // <std.io.task#job_master.get_host_controller>   
67 [0x43]:          popobj2    
68 [0x44]:          movn #0   
70 [0x46]:          smovr_3 fp+6   
71 [0x47]: line: 85 movl 6   
72 [0x48]:          checknull   
73 [0x49]:          not ebx, ebx   
74 [0x4a]:          skne ebx // pc = 82   
75 [0x4b]:          movl 6   
76 [0x4c]:          movn #5   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 1   
80 [0x50]:          call @3487 // <std#string.operator==>   
81 [0x51]:          loadval ebx   
82 [0x52]:          movr cmt, ebx   
83 [0x53]:          jne 86   
84 [0x54]: line: 86 pushl 6   
85 [0x55]:          call @2118 // <std.io.task#job.cancel>   
86 [0x56]:          nop   
87 [0x57]:          jmp @54   
88 [0x58]: line: 90 istorel -1, fp+8   
90 [0x5a]:          movl 0   
91 [0x5b]:          movn #2   
93 [0x5d]:          pushobj   
94 [0x5e]:          invoke_delegate 8 { static=0, args=0 }   
96 [0x60]:          popl 9   
97 [0x61]:          iaddl 1, fp@8   
99 [0x63]:          movl 9   
100 [0x64]:          sizeof ecx   
101 [0x65]:          loadl ebx, fp+8   
102 [0x66]:          lt ebx, ecx   
103 [0x67]:          jne 142   
104 [0x68]:          movnd ebx   
105 [0x69]:          pushobj   
106 [0x6a]:          popl 7   
107 [0x6b]: line: 91 pushl 7   
108 [0x6c]:          movg @24 // @std.io.task#__srt_global   
109 [0x6d]:          movn #3   
111 [0x6f]:          pushobj   
112 [0x70]:          call @2214 // <std.io#thread.operator==>   
113 [0x71]:          loadval ebx   
114 [0x72]:          movr cmt, ebx   
115 [0x73]:          jne 117   
116 [0x74]:          jmp @97   
117 [0x75]:          nop   
118 [0x76]: line: 93 pushl 0   
119 [0x77]:          pushl 7   
120 [0x78]:          call @2155 // <std.io.task#job_master.get_host_controller>   
121 [0x79]:          popobj2    
122 [0x7a]:          movn #0   
124 [0x7c]:          smovr_3 fp+10   
125 [0x7d]: line: 94 movl 10   
126 [0x7e]:          checknull   
127 [0x7f]:          not ebx, ebx   
128 [0x80]:          skne ebx // pc = 136   
129 [0x81]:          movl 10   
130 [0x82]:          movn #5   
132 [0x84]:          pushobj   
133 [0x85]:          pushl 1   
134 [0x86]:          call @3487 // <std#string.operator==>   
135 [0x87]:          loadval ebx   
136 [0x88]:          movr cmt, ebx   
137 [0x89]:          jne 140   
138 [0x8a]: line: 95 pushl 10   
139 [0x8b]:          call @2118 // <std.io.task#job.cancel>   
140 [0x8c]:          nop   
141 [0x8d]:          jmp @97   
142 [0x8e]:          movl 0   
143 [0x8f]:          movn #0   
145 [0x91]:          _ulck   
146 [0x92]:          ret   


function: std.io.task#__srt_global.start_scheduler[2158] params(0) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:12:14: note:  
		protected def start_scheduler() {
		             ^

0 [0x0]: line: 13 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 14 movg @24 // @std.io.task#__srt_global   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 17   
16 [0x10]: line: 15 call @2159 // <std.io.task#__srt_global.calculate_max_threads>   
17 [0x11]:          nop   
18 [0x12]: line: 16 new_class @0 // app#__srt_global   
19 [0x13]:          ifne   
20 [0x14]:          dup    
21 [0x15]:          new_class @0 // app#__srt_global   
22 [0x16]:          checknull   
23 [0x17]:          dup    
24 [0x18]:          newstr @19 // task_scheduler   
25 [0x19]:          call @3469 // <std#string.string>   
26 [0x1a]:          istore 2162   
28 [0x1c]:          movg @24 // @std.io.task#__srt_global   
29 [0x1d]:          movn #5   
31 [0x1f]:          movn #2   
33 [0x21]:          pushobj   
34 [0x22]:          call @2184 // <std.io#thread.thread>   
35 [0x23]:          movg @24 // @std.io.task#__srt_global   
36 [0x24]:          movn #3   
38 [0x26]:          popobj   
39 [0x27]: line: 17 movg @24 // @std.io.task#__srt_global   
40 [0x28]:          movn #3   
42 [0x2a]:          pushobj   
43 [0x2b]:          pushnull    
44 [0x2c]:          call @2186 // <std.io#thread.start>   
45 [0x2d]:          pop   
46 [0x2e]:          movg @24 // @std.io.task#__srt_global   
47 [0x2f]:          movn #5   
49 [0x31]:          _ulck   
50 [0x32]:          ret   


function: std.io.task#__srt_global.calculate_max_threads[2159] params(0) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:21:12: note:  
		private def calculate_max_threads() {
		           ^

0 [0x0]: line: 22 call @2310 // <platform.kernel#vm.cores>   
1 [0x1]:          ipopl 0   
2 [0x2]: line: 23 movi #2, ebx   
4 [0x4]:          mull ebx, fp@0   
5 [0x5]: line: 24 movi #4, ebx   
7 [0x7]:          subl ebx, fp@0   
8 [0x8]: line: 26 ipushl #0   
9 [0x9]:          movi #2, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 42   
16 [0x10]: line: 27 ipushl #0   
17 [0x11]:          ldc ebx // 0.75   
18 [0x12]:          loadval ecx   
19 [0x13]:          mul ecx, ebx -> ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          call @2265 // <std.math#__srt_global.round>   
22 [0x16]:          movg @24 // @std.io.task#__srt_global   
23 [0x17]:          movn #0   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 28 ipushl #0   
30 [0x1e]:          ldc ebx // 0.25   
31 [0x1f]:          loadval ecx   
32 [0x20]:          mul ecx, ebx -> ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @2265 // <std.math#__srt_global.round>   
35 [0x23]:          movg @24 // @std.io.task#__srt_global   
36 [0x24]:          movn #1   
38 [0x26]:          loadval ebx   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          nop   
43 [0x2b]: line: 31 movg @24 // @std.io.task#__srt_global   
44 [0x2c]:          movn #0   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          iaload ebx, adx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movi #0, ebx   
52 [0x34]:          loadval ecx   
53 [0x35]:          test ecx, ebx   
54 [0x36]:          jne 64   
55 [0x37]: line: 32 istore 1   
57 [0x39]:          movg @24 // @std.io.task#__srt_global   
58 [0x3a]:          movn #0   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]:          nop   
65 [0x41]: line: 34 movg @24 // @std.io.task#__srt_global   
66 [0x42]:          movn #1   
68 [0x44]:          movi #0, adx   
70 [0x46]:          iaload ebx, adx   
71 [0x47]:          rstore ebx   
72 [0x48]:          movi #0, ebx   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          test ecx, ebx   
76 [0x4c]:          jne 86   
77 [0x4d]: line: 35 istore 1   
79 [0x4f]:          movg @24 // @std.io.task#__srt_global   
80 [0x50]:          movn #1   
82 [0x52]:          loadval ebx   
83 [0x53]:          movi #0, adx   
85 [0x55]:          rmov adx, ebx   
86 [0x56]:          nop   
87 [0x57]: line: 36 movg @24 // @std.io.task#__srt_global   
88 [0x58]:          movn #0   
90 [0x5a]:          movi #0, adx   
92 [0x5c]:          iaload ebx, adx   
93 [0x5d]:          rstore ebx   
94 [0x5e]:          movg @24 // @std.io.task#__srt_global   
95 [0x5f]:          movn #1   
97 [0x61]:          movi #0, adx   
99 [0x63]:          iaload ebx, adx   
100 [0x64]:          loadval ecx   
101 [0x65]:          add ecx, ebx -> ebx   
102 [0x66]:          rstore ebx   
103 [0x67]:          movg @24 // @std.io.task#__srt_global   
104 [0x68]:          movn #2   
106 [0x6a]:          loadval ebx   
107 [0x6b]:          movi #0, adx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          ret   


function: std.io.task#__srt_global.set_thread_max[2160] params(1) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:39:4: note:  
		def set_thread_max(max: var) {
		   ^

0 [0x0]: line: 40 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 41 movg @24 // @std.io.task#__srt_global   
5 [0x5]:          movn #3   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          not ebx, ebx   
11 [0xb]:          movr cmt, ebx   
12 [0xc]:          jne 19   
13 [0xd]: line: 42 new_class @0 // app#__srt_global   
14 [0xe]:          newarry adx: 0   
15 [0xf]:          dup    
16 [0x10]:          newstr @22 // cannot modify max thread count after task library has started, try calling this before your first task   
17 [0x11]:          call @1958 // <std#illegal_argument_exception.illegal_argument_exception>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 46 ipushl #0   
21 [0x15]:          movi #2, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          gte ecx, ebx   
25 [0x19]:          movr ebx, cmt   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 116   
28 [0x1c]: line: 47 ipushl #0   
29 [0x1d]:          movi #2, ebx   
31 [0x1f]:          loadval ecx   
32 [0x20]:          gt ecx, ebx   
33 [0x21]:          movr ebx, cmt   
34 [0x22]:          movr cmt, ebx   
35 [0x23]:          jne 62   
36 [0x24]: line: 48 ipushl #0   
37 [0x25]:          ldc ebx // 0.75   
38 [0x26]:          loadval ecx   
39 [0x27]:          mul ecx, ebx -> ebx   
40 [0x28]:          rstore ebx   
41 [0x29]:          call @2265 // <std.math#__srt_global.round>   
42 [0x2a]:          movg @24 // @std.io.task#__srt_global   
43 [0x2b]:          movn #0   
45 [0x2d]:          loadval ebx   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          rmov adx, ebx   
49 [0x31]: line: 49 ipushl #0   
50 [0x32]:          ldc ebx // 0.25   
51 [0x33]:          loadval ecx   
52 [0x34]:          mul ecx, ebx -> ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @2265 // <std.math#__srt_global.round>   
55 [0x37]:          movg @24 // @std.io.task#__srt_global   
56 [0x38]:          movn #1   
58 [0x3a]:          loadval ebx   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          rmov adx, ebx   
62 [0x3e]:          nop   
63 [0x3f]: line: 52 movg @24 // @std.io.task#__srt_global   
64 [0x40]:          movn #0   
66 [0x42]:          movi #0, adx   
68 [0x44]:          iaload ebx, adx   
69 [0x45]:          rstore ebx   
70 [0x46]:          movi #0, ebx   
72 [0x48]:          loadval ecx   
73 [0x49]:          test ecx, ebx   
74 [0x4a]:          jne 84   
75 [0x4b]: line: 53 istore 1   
77 [0x4d]:          movg @24 // @std.io.task#__srt_global   
78 [0x4e]:          movn #0   
80 [0x50]:          loadval ebx   
81 [0x51]:          movi #0, adx   
83 [0x53]:          rmov adx, ebx   
84 [0x54]:          nop   
85 [0x55]: line: 55 movg @24 // @std.io.task#__srt_global   
86 [0x56]:          movn #1   
88 [0x58]:          movi #0, adx   
90 [0x5a]:          iaload ebx, adx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          movi #0, ebx   
94 [0x5e]:          loadval ecx   
95 [0x5f]:          test ecx, ebx   
96 [0x60]:          jne 106   
97 [0x61]: line: 56 istore 1   
99 [0x63]:          movg @24 // @std.io.task#__srt_global   
100 [0x64]:          movn #1   
102 [0x66]:          loadval ebx   
103 [0x67]:          movi #0, adx   
105 [0x69]:          rmov adx, ebx   
106 [0x6a]:          nop   
107 [0x6b]: line: 57 ipushl #0   
108 [0x6c]:          movg @24 // @std.io.task#__srt_global   
109 [0x6d]:          movn #2   
111 [0x6f]:          loadval ebx   
112 [0x70]:          movi #0, adx   
114 [0x72]:          rmov adx, ebx   
115 [0x73]:          jmp @122   
116 [0x74]: line: 59 new_class @0 // app#__srt_global   
117 [0x75]:          newarry adx: 0   
118 [0x76]:          dup    
119 [0x77]:          newstr @23 // cannot have less than 2 max threads   
120 [0x78]:          call @1958 // <std#illegal_argument_exception.illegal_argument_exception>   
121 [0x79]:          throw    
122 [0x7a]:          nop   
123 [0x7b]:          movg @24 // @std.io.task#__srt_global   
124 [0x7c]:          movn #5   
126 [0x7e]:          _ulck   
127 [0x7f]:          ret   


function: std.io.task#__srt_global.get_thread_max[2161] params(0) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:64:4: note:  
		def get_thread_max() : var {
		   ^

0 [0x0]: line: 65 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          _lck    
4 [0x4]: line: 66 movg @24 // @std.io.task#__srt_global   
5 [0x5]:          movn #2   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 17   
16 [0x10]: line: 67 call @2159 // <std.io.task#__srt_global.calculate_max_threads>   
17 [0x11]:          nop   
18 [0x12]: line: 68 movg @24 // @std.io.task#__srt_global   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          return_val ebx   
25 [0x19]:          movg @24 // @std.io.task#__srt_global   
26 [0x1a]:          movn #5   
28 [0x1c]:          _ulck   
29 [0x1d]:          ret   
30 [0x1e]:          movg @24 // @std.io.task#__srt_global   
31 [0x1f]:          movn #5   
33 [0x21]:          _ulck   


function: std.io.task#__srt_global.scheduler_main[2162] params(1) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:72:12: note:  
		private def scheduler_main(args : object[]) : var
		           ^

0 [0x0]: line: 74 istorel 36000, fp+1   
2 [0x2]: line: 75 movg @24 // @std.io.task#__srt_global   
3 [0x3]: line: 76 movn #5   
5 [0x5]:          movn #0   
7 [0x7]:          smovr_3 fp+2   
8 [0x8]: line: 77 movi #1, ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 194   
12 [0xc]: line: 79 call @2198 // <std.io#thread.yield>   
13 [0xd]: line: 80 istorel 0, fp+3   
15 [0xf]:          ipushl #3   
16 [0x10]:          pushl 2   
17 [0x11]:          call @3740 // <std#synced_list<std.io.task#job>.size>   
18 [0x12]:          loadval ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          lt ecx, ebx   
21 [0x15]:          movr ebx, cmt   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 173   
24 [0x18]: line: 81 pushl 2   
25 [0x19]:          ipushl #3   
26 [0x1a]:          call @3703 // <std#synced_list<std.io.task#job>.at>   
27 [0x1b]:          popobj2    
28 [0x1c]:          smovr_3 fp+4   
29 [0x1d]: line: 83 movl 4   
30 [0x1e]:          movn #12   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          movi #0, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          tne ecx, ebx   
40 [0x28]:          jne 85   
41 [0x29]: line: 84 call @3578 // <std#time.mills_time>   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          rstore ebx   
44 [0x2c]:          movl 4   
45 [0x2d]:          movn #12   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          iaload ebx, adx   
50 [0x32]:          loadval ecx   
51 [0x33]:          gte ecx, ebx   
52 [0x34]:          movr ebx, cmt   
53 [0x35]:          movr cmt, ebx   
54 [0x36]:          jne 83   
55 [0x37]: line: 85 movi #0, ebx   
57 [0x39]:          movl 4   
58 [0x3a]:          movn #12   
60 [0x3c]:          movi #0, adx   
62 [0x3e]:          rmov adx, ebx   
63 [0x3f]: line: 86 pushl 4   
64 [0x40]:          call @2166 // <std.io.task#__srt_global.execute_job>   
65 [0x41]:          ipopl 5   
66 [0x42]: line: 88 loadl ebx, fp+5   
67 [0x43]:          skne ebx // pc = 75   
68 [0x44]:          movl 4   
69 [0x45]:          movn #8   
71 [0x47]:          movi #0, adx   
73 [0x49]:          iaload ebx, adx   
74 [0x4a]:          not ebx, ebx   
75 [0x4b]:          movr cmt, ebx   
76 [0x4c]:          jne 82   
77 [0x4d]: line: 89 pushl 2   
78 [0x4e]:          pushl 4   
79 [0x4f]:          istore 3842   
81 [0x51]:          call @3744 // <std#synced_list<std.io.task#job>.remove>   
82 [0x52]:          nop   
83 [0x53]:          nop   
84 [0x54]:          jmp @169   
85 [0x55]:          movl 4   
86 [0x56]:          movn #8   
88 [0x58]:          movi #0, adx   
90 [0x5a]:          iaload ebx, adx   
91 [0x5b]:          movr cmt, ebx   
92 [0x5c]:          jne 158   
93 [0x5d]: line: 93 movl 4   
94 [0x5e]:          movn #4   
96 [0x60]:          pushobj   
97 [0x61]:          pushnull    
98 [0x62]:          itest ebx   
99 [0x63]:          movr cmt, ebx   
100 [0x64]:          jne 104   
101 [0x65]: line: 94 pushl 4   
102 [0x66]:          call @2166 // <std.io.task#__srt_global.execute_job>   
103 [0x67]:          pop   
104 [0x68]:          nop   
105 [0x69]: line: 97 movl 4   
106 [0x6a]:          movn #18   
108 [0x6c]:          pushobj   
109 [0x6d]:          movg @30 // @std.io.task#job_state   
110 [0x6e]:          movn #1   
112 [0x70]:          pushobj   
113 [0x71]:          call @1944 // <std#_enum_.operator==>   
114 [0x72]:          loadval ebx   
115 [0x73]:          skne ebx // pc = 137   
116 [0x74]:          call @3578 // <std#time.mills_time>   
117 [0x75]:          loadval ebx   
118 [0x76]:          rstore ebx   
119 [0x77]:          movl 4   
120 [0x78]:          movn #10   
122 [0x7a]:          movi #0, adx   
124 [0x7c]:          iaload ebx, adx   
125 [0x7d]:          rstore ebx   
126 [0x7e]:          movl 4   
127 [0x7f]:          movn #9   
129 [0x81]:          movi #0, adx   
131 [0x83]:          iaload ebx, adx   
132 [0x84]:          loadval ecx   
133 [0x85]:          add ecx, ebx -> ebx   
134 [0x86]:          loadval ecx   
135 [0x87]:          gte ecx, ebx   
136 [0x88]:          movr ebx, cmt   
137 [0x89]:          movr cmt, ebx   
138 [0x8a]:          jne 156   
139 [0x8b]: line: 98 movl 4   
140 [0x8c]:          movn #13   
142 [0x8e]:          pushobj   
143 [0x8f]:          pushnull    
144 [0x90]:          itest ebx   
145 [0x91]:          movr cmt, ebx   
146 [0x92]:          jne 148   
147 [0x93]:          jmp @139   
148 [0x94]: line: 99 pushl 4   
149 [0x95]:          call @2118 // <std.io.task#job.cancel>   
150 [0x96]: line: 100 movg @24 // @std.io.task#__srt_global   
151 [0x97]:           movn #5   
153 [0x99]:           pushobj   
154 [0x9a]:           pushl 4   
155 [0x9b]:           call @2156 // <std.io.task#job_master.cleanup_job>   
156 [0x9c]:           nop   
157 [0x9d]:           jmp @169   
158 [0x9e]: line: 103 pushl 4   
159 [0x9f]:           call @2166 // <std.io.task#__srt_global.execute_job>   
160 [0xa0]:           loadval ebx   
161 [0xa1]:           movr cmt, ebx   
162 [0xa2]:           jne 168   
163 [0xa3]: line: 104 pushl 2   
164 [0xa4]:           pushl 4   
165 [0xa5]:           istore 3843   
167 [0xa7]:           call @3744 // <std#synced_list<std.io.task#job>.remove>   
168 [0xa8]:           nop   
169 [0xa9]:           nop   
170 [0xaa]:           iaddl 1, fp@3   
172 [0xac]:           jmp @15   
173 [0xad]: line: 109 loadl ebx, fp+1   
174 [0xae]:           movr egx, ebx   
175 [0xaf]:           dec ebx   
176 [0xb0]:           smovr_2 ebx, fp+1   
177 [0xb1]:           movr ebx, egx   
178 [0xb2]:           rstore ebx   
179 [0xb3]:           movi #0, ebx   
181 [0xb5]:           loadval ecx   
182 [0xb6]:           lte ecx, ebx   
183 [0xb7]:           movr ebx, cmt   
184 [0xb8]:           movr cmt, ebx   
185 [0xb9]:           jne 189   
186 [0xba]: line: 110 istorel 36000, fp+1   
188 [0xbc]: line: 111 call @2164 // <std.io.task#__srt_global.kill_threads>   
189 [0xbd]:           nop   
190 [0xbe]: line: 114 istore 5   
192 [0xc0]:           call @2194 // <std.io#thread.sleep>   
193 [0xc1]:           jmp @8   
194 [0xc2]: line: 116 istorel 0, fp+0   
196 [0xc4]:           ret   


function: std.io.task#__srt_global.get_host[2163] params(1) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:119:12: note:  
		private def get_host(long_running : var) : thread {
		           ^

0 [0x0]: line: 120 movl 1   
1 [0x1]:           del   
2 [0x2]: line: 121 loadl ebx, fp+0   
3 [0x3]:           movr cmt, ebx   
4 [0x4]:           jne 12   
5 [0x5]: line: 122 movg @24 // @std.io.task#__srt_global   
6 [0x6]:           movn #5   
8 [0x8]:           movn #2   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]:           jmp @18   
12 [0xc]: line: 124 movg @24 // @std.io.task#__srt_global   
13 [0xd]:           movn #5   
15 [0xf]:           movn #3   
17 [0x11]:           smovr_3 fp+1   
18 [0x12]:           nop   
19 [0x13]: line: 127 pushl 1   
20 [0x14]:           istore 3844   
22 [0x16]:           call @2224 // <std.io#thread_group.find>   
23 [0x17]:           popobj2    
24 [0x18]:           smovr_3 fp+2   
25 [0x19]: line: 135 movl 2   
26 [0x1a]:           checknull   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 166   
29 [0x1d]: line: 136 loadl ebx, fp+0   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 99   
32 [0x20]: line: 137 movg @24 // @std.io.task#__srt_global   
33 [0x21]:           movn #1   
35 [0x23]:           movi #0, adx   
37 [0x25]:           iaload ebx, adx   
38 [0x26]:           rstore ebx   
39 [0x27]:           movi #0, ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           gt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 97   
46 [0x2e]: line: 138 movg @24 // @std.io.task#__srt_global   
47 [0x2f]:           movn #1   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           movr egx, ebx   
53 [0x35]:           dec ebx   
54 [0x36]:           movi #0, adx   
56 [0x38]:           rmov adx, ebx   
57 [0x39]: line: 139 new_class @0 // app#__srt_global   
58 [0x3a]:           dec adx   
59 [0x3b]:           dup    
60 [0x3c]:           call @2149 // <std.io.task#job_controller.job_controller>   
61 [0x3d]:           popobj2    
62 [0x3e]:           smovr_3 fp+3   
63 [0x3f]: line: 140 new_class @0 // app#__srt_global   
64 [0x40]:           ifne   
65 [0x41]:           dup    
66 [0x42]:           new_class @0 // app#__srt_global   
67 [0x43]:           checknull   
68 [0x44]:           dup    
69 [0x45]:           newstr @24 // long_term_worker_thread#   
70 [0x46]:           call @3469 // <std#string.string>   
71 [0x47]:           pushl 1   
72 [0x48]:           call @2219 // <std.io#thread_group.size>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movi #1, ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           add ecx, ebx -> ebx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           call @3501 // <std#string.operator+>   
81 [0x51]:           istore 2128   
83 [0x53]:           pushl 1   
84 [0x54]:           call @2184 // <std.io#thread.thread>   
85 [0x55]:           popobj2    
86 [0x56]:           smovr_3 fp+2   
87 [0x57]: line: 141 movg @24 // @std.io.task#__srt_global   
88 [0x58]:           movn #5   
90 [0x5a]:           movn #1   
92 [0x5c]:           pushobj   
93 [0x5d]:           pushl 2   
94 [0x5e]:           pushl 3   
95 [0x5f]:           call @3625 // <std#hashtable<std.io#thread,std.io.task#job_controller>.put>   
96 [0x60]:           pop   
97 [0x61]:           nop   
98 [0x62]:           jmp @165   
99 [0x63]: line: 144 movg @24 // @std.io.task#__srt_global   
100 [0x64]:           movn #0   
102 [0x66]:           movi #0, adx   
104 [0x68]:           iaload ebx, adx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           movi #0, ebx   
108 [0x6c]:           loadval ecx   
109 [0x6d]:           gt ecx, ebx   
110 [0x6e]:           movr ebx, cmt   
111 [0x6f]:           movr cmt, ebx   
112 [0x70]:           jne 164   
113 [0x71]: line: 145 movg @24 // @std.io.task#__srt_global   
114 [0x72]:           movn #0   
116 [0x74]:           movi #0, adx   
118 [0x76]:           iaload ebx, adx   
119 [0x77]:           movr egx, ebx   
120 [0x78]:           dec ebx   
121 [0x79]:           movi #0, adx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]: line: 146 new_class @0 // app#__srt_global   
125 [0x7d]:           dec adx   
126 [0x7e]:           dup    
127 [0x7f]:           call @2149 // <std.io.task#job_controller.job_controller>   
128 [0x80]:           popobj2    
129 [0x81]:           smovr_3 fp+4   
130 [0x82]: line: 147 new_class @0 // app#__srt_global   
131 [0x83]:           ifne   
132 [0x84]:           dup    
133 [0x85]:           new_class @0 // app#__srt_global   
134 [0x86]:           checknull   
135 [0x87]:           dup    
136 [0x88]:           newstr @25 // worker_thread#   
137 [0x89]:           call @3469 // <std#string.string>   
138 [0x8a]:           pushl 1   
139 [0x8b]:           call @2219 // <std.io#thread_group.size>   
140 [0x8c]:           loadval ebx   
141 [0x8d]:           rstore ebx   
142 [0x8e]:           movi #1, ebx   
144 [0x90]:           loadval ecx   
145 [0x91]:           add ecx, ebx -> ebx   
146 [0x92]:           rstore ebx   
147 [0x93]:           call @3501 // <std#string.operator+>   
148 [0x94]:           istore 2128   
150 [0x96]:           pushl 1   
151 [0x97]:           call @2184 // <std.io#thread.thread>   
152 [0x98]:           popobj2    
153 [0x99]:           smovr_3 fp+2   
154 [0x9a]: line: 148 movg @24 // @std.io.task#__srt_global   
155 [0x9b]:           movn #5   
157 [0x9d]:           movn #1   
159 [0x9f]:           pushobj   
160 [0xa0]:           pushl 2   
161 [0xa1]:           pushl 4   
162 [0xa2]:           call @3625 // <std#hashtable<std.io#thread,std.io.task#job_controller>.put>   
163 [0xa3]:           pop   
164 [0xa4]:           nop   
165 [0xa5]:           nop   
166 [0xa6]:           nop   
167 [0xa7]: line: 153 movl 2   
168 [0xa8]:           returnobj   
169 [0xa9]:           ret   


function: std.io.task#__srt_global.kill_threads[2164] params(0) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:157:12: note:  
		private def kill_threads() {
		           ^

0 [0x0]: line: 158 movg @24 // @std.io.task#__srt_global   
1 [0x1]:           movn #5   
3 [0x3]:           movn #2   
5 [0x5]:           smovr_3 fp+0   
6 [0x6]: line: 160 call @3578 // <std#time.mills_time>   
7 [0x7]:           movg @24 // @std.io.task#__srt_global   
8 [0x8]:           movn #4   
10 [0xa]:           loadval ebx   
11 [0xb]:           movi #0, adx   
13 [0xd]:           rmov adx, ebx   
14 [0xe]: line: 161 pushl 0   
15 [0xf]:           istore 3845   
17 [0x11]:           call @2224 // <std.io#thread_group.find>   
18 [0x12]:           popobj2    
19 [0x13]:           smovr_3 fp+1   
20 [0x14]: line: 170 movl 1   
21 [0x15]:           checknull   
22 [0x16]:           not ebx, ebx   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 28   
25 [0x19]: line: 171 pushl 1   
26 [0x1a]:           call @2192 // <std.io#thread.interrupt>   
27 [0x1b]:           pop   
28 [0x1c]:           nop   
29 [0x1d]: line: 174 movg @24 // @std.io.task#__srt_global   
30 [0x1e]:           movn #5   
32 [0x20]:           movn #3   
34 [0x22]:           smovr_3 fp+0   
35 [0x23]: line: 176 pushl 0   
36 [0x24]:           istore 3846   
38 [0x26]:           call @2224 // <std.io#thread_group.find>   
39 [0x27]:           popobj2    
40 [0x28]:           smovr_3 fp+1   
41 [0x29]: line: 183 movl 1   
42 [0x2a]:           checknull   
43 [0x2b]:           not ebx, ebx   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 49   
46 [0x2e]: line: 184 pushl 1   
47 [0x2f]:           call @2192 // <std.io#thread.interrupt>   
48 [0x30]:           pop   
49 [0x31]:           nop   
50 [0x32]:           ret   


function: std.io.task#__srt_global.execute_synchronous[2165] params(1) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:188:14: note:  
		protected def execute_synchronous(scheduled_job : job) {
		             ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 35   
12 [0xc]: line: 190 movl 0   
13 [0xd]:           movn #12   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @3578 // <std#time.mills_time>   
20 [0x14]:           loadval ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           sub ecx, ebx -> ebx   
23 [0x17]:           smovr_2 ebx, fp+1   
24 [0x18]: line: 191 ipushl #1   
25 [0x19]:           movi #0, ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           gt ecx, ebx   
29 [0x1d]:           movr ebx, cmt   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 34   
32 [0x20]:           ipushl #1   
33 [0x21]:           call @2194 // <std.io#thread.sleep>   
34 [0x22]:           nop   
35 [0x23]:           nop   
36 [0x24]: line: 193 pushl 0   
37 [0x25]:           call @2129 // <std.io.task#job.execute>   
38 [0x26]:           ret   


function: std.io.task#__srt_global.execute_job[2166] params(1) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:196:14: note:  
		protected def execute_job(scheduled_job : job) : var {
		             ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #17   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2163 // <std.io.task#__srt_global.get_host>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+1   
10 [0xa]: line: 199 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 55   
15 [0xf]: line: 200 pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #4   
19 [0x13]:           popobj   
20 [0x14]: line: 201 movg @24 // @std.io.task#__srt_global   
21 [0x15]:           movn #5   
23 [0x17]:           pushobj   
24 [0x18]:           pushl 1   
25 [0x19]:           call @2155 // <std.io.task#job_master.get_host_controller>   
26 [0x1a]:           movl 0   
27 [0x1b]:           movn #19   
29 [0x1d]:           popobj   
30 [0x1e]: line: 202 pushl 0   
31 [0x1f]:           call @2117 // <std.io.task#job.execute_async>   
32 [0x20]:           loadval ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           tne ecx, ebx   
38 [0x26]:           jne 50   
39 [0x27]: line: 203 movl 0   
40 [0x28]:           movn #4   
42 [0x2a]:           del   
43 [0x2b]: line: 204 movl 0   
44 [0x2c]:           movn #19   
46 [0x2e]:           del   
47 [0x2f]: line: 205 istorel 0, fp+0   
49 [0x31]:           ret   
50 [0x32]:           nop   
51 [0x33]: line: 208 istorel 1, fp+0   
53 [0x35]:           ret   
54 [0x36]:           jmp @58   
55 [0x37]: line: 209 istorel 0, fp+0   
57 [0x39]:           ret   
58 [0x3a]:           nop   


function: std.io.task#__srt_global.finish[2167] params(0) in file: lib\support\0.2.9/io//task//task.sharp:5:4: note:  
		def finish() {
		   ^

0 [0x0]: line: 6 new_class @0 // app#__srt_global   
1 [0x1]:         imod adx, #? (112)   
3 [0x3]:         call @2114 // <std.io.task#cancellation_exception.cancellation_exception>   
4 [0x4]:         throw    
5 [0x5]:         ret   


function: std.io.task#task.with_timeout[2168] params(1) in file: lib\support\0.2.9/io//task//task.sharp:10:15: note:  
		    static def with_timeout(mills_time : var) : job_builder {
		              ^

0 [0x0]: line: 11 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2152 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 12 new_class @0 // app#__srt_global   
8 [0x8]:          inc adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @24 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2136 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 13 pushl 2   
19 [0x13]:          ipushl #0   
20 [0x14]:          call @2137 // <std.io.task#job_builder.with_timeout>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: std.io.task#task.schedule[2169] params(1) in file: lib\support\0.2.9/io//task//task.sharp:16:15: note:  
		    static def schedule(future : var) : job_builder {
		              ^

0 [0x0]: line: 17 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2152 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 18 new_class @0 // app#__srt_global   
8 [0x8]:          inc adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @24 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2136 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 19 pushl 2   
19 [0x13]:          ipushl #0   
20 [0x14]:          call @2138 // <std.io.task#job_builder.schedule>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: std.io.task#task.with_name[2170] params(1) in file: lib\support\0.2.9/io//task//task.sharp:22:15: note:  
		    static def with_name(job_name : string) : job_builder {
		              ^

0 [0x0]: line: 23 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @2153 // <std.io.task#job_master.create_job>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 24 new_class @0 // app#__srt_global   
9 [0x9]:          inc adx   
10 [0xa]:          dup    
11 [0xb]:          pushl 1   
12 [0xc]:          movg @24 // @std.io.task#__srt_global   
13 [0xd]:          movn #5   
15 [0xf]:          pushobj   
16 [0x10]:          call @2136 // <std.io.task#job_builder.job_builder>   
17 [0x11]:          popobj2    
18 [0x12]:          smovr_3 fp+2   
19 [0x13]: line: 25 pushl 2   
20 [0x14]:          pushl 0   
21 [0x15]:          call @2140 // <std.io.task#job_builder.with_name>   
22 [0x16]:          popobj2    
23 [0x17]:          returnobj   
24 [0x18]:          ret   


function: std.io.task#task.with_args[2171] params(1) in file: lib\support\0.2.9/io//task//task.sharp:28:15: note:  
		    static def with_args(args : object[]) : job_builder {
		              ^

0 [0x0]: line: 29 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2152 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 30 new_class @0 // app#__srt_global   
8 [0x8]:          inc adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @24 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2136 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 31 pushl 2   
19 [0x13]:          pushl 0   
20 [0x14]:          call @2141 // <std.io.task#job_builder.with_args>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: std.io.task#task.recurring[2172] params(2) in file: lib\support\0.2.9/io//task//task.sharp:34:5: note:  
			def recurring(tm : var, interval: time_unit) : job_builder {
		    ^

0 [0x0]: line: 35 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2152 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 36 new_class @0 // app#__srt_global   
8 [0x8]:          inc adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 3   
11 [0xb]:          movg @24 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2136 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+4   
18 [0x12]: line: 37 pushl 4   
19 [0x13]:          ipushl #1   
20 [0x14]:          pushl 2   
21 [0x15]:          call @2139 // <std.io.task#job_builder.recurring>   
22 [0x16]:          popobj2    
23 [0x17]:          returnobj   
24 [0x18]:          ret   


function: std.io.task#task.block[2173] params(0) in file: lib\support\0.2.9/io//task//task.sharp:40:12: note:  
			static def block() : job_builder {
		           ^

0 [0x0]: line: 41 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2152 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 42 new_class @0 // app#__srt_global   
8 [0x8]:          inc adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @24 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2136 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 43 pushl 1   
19 [0x13]:          call @2142 // <std.io.task#job_builder.block>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.long_term[2174] params(0) in file: lib\support\0.2.9/io//task//task.sharp:46:12: note:  
			static def long_term() : job_builder {
		           ^

0 [0x0]: line: 47 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2152 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 48 new_class @0 // app#__srt_global   
8 [0x8]:          inc adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @24 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2136 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 49 pushl 1   
19 [0x13]:          call @2143 // <std.io.task#job_builder.long_term>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.builder[2175] params(0) in file: lib\support\0.2.9/io//task//task.sharp:52:15: note:  
		    static def builder() : job_builder {
		              ^

0 [0x0]: line: 53 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          call @2152 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 54 new_class @0 // app#__srt_global   
8 [0x8]:          inc adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @24 // @std.io.task#__srt_global   
12 [0xc]:          movn #5   
14 [0xe]:          pushobj   
15 [0xf]:          call @2136 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 55 movl 1   
19 [0x13]:          returnobj   
20 [0x14]:          ret   


function: std.io.task#task.cancel_all_jobs_by_name[2176] params(1) in file: lib\support\0.2.9/io//task//task.sharp:58:19: note:  
			public static def cancel_all_jobs_by_name(name: string) {
		                  ^

0 [0x0]: line: 59 movg @24 // @std.io.task#__srt_global   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @2157 // <std.io.task#job_master.cancel_jobs_by_name>   
6 [0x6]:          ret   


constructor: std.io.task#task.task[2177] params(0) in file: lib\support\0.2.9/io//task//task.sharp:9:6: note:  
		class task {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io#thread.thread[2178] params(0) in file: lib\support\0.2.9/io//thread.sharp:7:19: note:  
		    private thread() {} // the user must use standardized constructor
		                  ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         checknull   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3469 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]:         ret   


constructor: std.io#thread.thread[2179] params(2) in file: lib\support\0.2.9/io//thread.sharp:9:15: note:  
			public thread(name : string, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         checknull   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3469 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 10 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 11 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movg @33 // @std.io#thread_group   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #7   
30 [0x1e]:          popobj   
31 [0x1f]: line: 13 movl 0   
32 [0x20]:          movn #7   
34 [0x22]:          pushobj   
35 [0x23]:          call @2221 // <std.io#thread_group.get_priority>   
36 [0x24]:          movl 0   
37 [0x25]:          movn #3   
39 [0x27]:          popobj   
40 [0x28]: line: 14 movi #-1, ebx   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]: line: 15 movg @32 // @std.io#thread   
49 [0x31]:          movn #0   
51 [0x33]:          movi #0, adx   
53 [0x35]:          iaload ebx, adx   
54 [0x36]:          movr egx, ebx   
55 [0x37]:          inc ebx   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          rmov adx, ebx   
59 [0x3b]:          rstore egx   
60 [0x3c]:          movl 0   
61 [0x3d]:          movn #2   
63 [0x3f]:          loadval ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]: line: 17 movl 0   
68 [0x44]:          movn #7   
70 [0x46]:          pushobj   
71 [0x47]:          pushl 0   
72 [0x48]:          call @2218 // <std.io#thread_group.add>   
73 [0x49]:          ret   


constructor: std.io#thread.thread[2180] params(3) in file: lib\support\0.2.9/io//thread.sharp:20:15: note:  
			public thread(name : string, daemon: var, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         checknull   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3469 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 21 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 22 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 23 ipushl #2   
24 [0x18]:          movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 24 movg @33 // @std.io#thread_group   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #7   
38 [0x26]:          popobj   
39 [0x27]: line: 25 movl 0   
40 [0x28]:          movn #7   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @2221 // <std.io#thread_group.get_priority>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          popobj   
48 [0x30]: line: 26 movi #-1, ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]: line: 27 movg @32 // @std.io#thread   
57 [0x39]:          movn #0   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          movr egx, ebx   
63 [0x3f]:          inc ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]:          rstore egx   
68 [0x44]:          movl 0   
69 [0x45]:          movn #2   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 29 movl 0   
76 [0x4c]:          movn #7   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 0   
80 [0x50]:          call @2218 // <std.io#thread_group.add>   
81 [0x51]:          ret   


constructor: std.io#thread.thread[2181] params(3) in file: lib\support\0.2.9/io//thread.sharp:32:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         checknull   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3469 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 33 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 34 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 35 ipushl #3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 36 movg @33 // @std.io#thread_group   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #7   
38 [0x26]:          popobj   
39 [0x27]: line: 37 movl 0   
40 [0x28]:          movn #7   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @2221 // <std.io#thread_group.get_priority>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          popobj   
48 [0x30]: line: 38 movi #-1, ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]: line: 39 movg @32 // @std.io#thread   
57 [0x39]:          movn #0   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          movr egx, ebx   
63 [0x3f]:          inc ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]:          rstore egx   
68 [0x44]:          movl 0   
69 [0x45]:          movn #2   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 41 movl 0   
76 [0x4c]:          movn #7   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 0   
80 [0x50]:          call @2218 // <std.io#thread_group.add>   
81 [0x51]:          ret   


constructor: std.io#thread.thread[2182] params(4) in file: lib\support\0.2.9/io//thread.sharp:44:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         checknull   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3469 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 45 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 46 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 47 ipushl #4   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 48 ipushl #2   
32 [0x20]:          movl 0   
33 [0x21]:          movn #4   
35 [0x23]:          loadval ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 49 movg @33 // @std.io#thread_group   
40 [0x28]:          movn #0   
42 [0x2a]:          pushobj   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #7   
46 [0x2e]:          popobj   
47 [0x2f]: line: 50 movl 0   
48 [0x30]:          movn #7   
50 [0x32]:          pushobj   
51 [0x33]:          call @2221 // <std.io#thread_group.get_priority>   
52 [0x34]:          movl 0   
53 [0x35]:          movn #3   
55 [0x37]:          popobj   
56 [0x38]: line: 51 movi #-1, ebx   
58 [0x3a]:          movl 0   
59 [0x3b]:          movn #1   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]: line: 52 movg @32 // @std.io#thread   
65 [0x41]:          movn #0   
67 [0x43]:          movi #0, adx   
69 [0x45]:          iaload ebx, adx   
70 [0x46]:          movr egx, ebx   
71 [0x47]:          inc ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]:          rstore egx   
76 [0x4c]:          movl 0   
77 [0x4d]:          movn #2   
79 [0x4f]:          loadval ebx   
80 [0x50]:          movi #0, adx   
82 [0x52]:          rmov adx, ebx   
83 [0x53]: line: 54 movl 0   
84 [0x54]:          movn #7   
86 [0x56]:          pushobj   
87 [0x57]:          pushl 0   
88 [0x58]:          call @2218 // <std.io#thread_group.add>   
89 [0x59]:          ret   


constructor: std.io#thread.thread[2183] params(4) in file: lib\support\0.2.9/io//thread.sharp:57:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         checknull   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3469 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 58 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 59 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 60 ipushl #3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 61 pushl 4   
32 [0x20]:          movl 0   
33 [0x21]:          movn #7   
35 [0x23]:          popobj   
36 [0x24]: line: 62 pushl 4   
37 [0x25]:          call @2221 // <std.io#thread_group.get_priority>   
38 [0x26]:          movl 0   
39 [0x27]:          movn #3   
41 [0x29]:          popobj   
42 [0x2a]: line: 63 movi #-1, ebx   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          rmov adx, ebx   
50 [0x32]: line: 64 movg @32 // @std.io#thread   
51 [0x33]:          movn #0   
53 [0x35]:          movi #0, adx   
55 [0x37]:          iaload ebx, adx   
56 [0x38]:          movr egx, ebx   
57 [0x39]:          inc ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]:          rstore egx   
62 [0x3e]:          movl 0   
63 [0x3f]:          movn #2   
65 [0x41]:          loadval ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]: line: 66 movl 0   
70 [0x46]:          movn #7   
72 [0x48]:          pushobj   
73 [0x49]:          pushl 0   
74 [0x4a]:          call @2218 // <std.io#thread_group.add>   
75 [0x4b]:          ret   


constructor: std.io#thread.thread[2184] params(3) in file: lib\support\0.2.9/io//thread.sharp:69:18: note:  
		    public thread(name : string, main: (object[])(var), group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         checknull   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3469 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 70 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 71 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 72 pushl 3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #7   
27 [0x1b]:          popobj   
28 [0x1c]: line: 73 pushl 3   
29 [0x1d]:          call @2221 // <std.io#thread_group.get_priority>   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #3   
33 [0x21]:          popobj   
34 [0x22]: line: 74 movi #-1, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 75 movg @32 // @std.io#thread   
43 [0x2b]:          movn #0   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]:          rstore egx   
54 [0x36]:          movl 0   
55 [0x37]:          movn #2   
57 [0x39]:          loadval ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 77 movl 0   
62 [0x3e]:          movn #7   
64 [0x40]:          pushobj   
65 [0x41]:          pushl 0   
66 [0x42]:          call @2218 // <std.io#thread_group.add>   
67 [0x43]:          ret   


constructor: std.io#thread.thread[2185] params(5) in file: lib\support\0.2.9/io//thread.sharp:80:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         checknull   
2 [0x2]:         dup    
3 [0x3]:         newstr @3 //    
4 [0x4]:         call @3469 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 81 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 82 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 83 ipushl #2   
24 [0x18]:          movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 84 ipushl #4   
32 [0x20]:          movl 0   
33 [0x21]:          movn #10   
35 [0x23]:          loadval ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 85 pushl 5   
40 [0x28]:          movl 0   
41 [0x29]:          movn #7   
43 [0x2b]:          popobj   
44 [0x2c]: line: 86 pushl 5   
45 [0x2d]:          call @2221 // <std.io#thread_group.get_priority>   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #3   
49 [0x31]:          popobj   
50 [0x32]: line: 87 movi #-1, ebx   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          rmov adx, ebx   
58 [0x3a]: line: 88 movg @32 // @std.io#thread   
59 [0x3b]:          movn #0   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          iaload ebx, adx   
64 [0x40]:          movr egx, ebx   
65 [0x41]:          inc ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]:          rstore egx   
70 [0x46]:          movl 0   
71 [0x47]:          movn #2   
73 [0x49]:          loadval ebx   
74 [0x4a]:          movi #0, adx   
76 [0x4c]:          rmov adx, ebx   
77 [0x4d]: line: 90 movl 0   
78 [0x4e]:          movn #7   
80 [0x50]:          pushobj   
81 [0x51]:          pushl 0   
82 [0x52]:          call @2218 // <std.io#thread_group.add>   
83 [0x53]:          ret   


function: std.io#thread.start[2186] params(1) in file: lib\support\0.2.9/io//thread.sharp:93:15: note:  
		    public def start(args : object[]) : thread_result {
		              ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #-1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 27   
12 [0xc]: line: 95 movl 0   
13 [0xd]:          movn #4   
15 [0xf]:          movi #0, adx   
17 [0x11]:          iaload ebx, adx   
18 [0x12]:          rstore ebx   
19 [0x13]:          call @2297 // <platform.kernel#vm.thread_create>   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]:          nop   
28 [0x1c]: line: 96 pushl 0   
29 [0x1d]:          pushl 1   
30 [0x1e]:          call @2306 // <platform.kernel#vm.thread_start>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   


function: std.io#thread.start[2187] params(0) in file: lib\support\0.2.9/io//thread.sharp:99:15: note:  
		    public def start() : thread_result {
		              ^

0 [0x0]: line: 100 pushl 0   
1 [0x1]:           pushnull    
2 [0x2]:           call @2186 // <std.io#thread.start>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std.io#thread.suspend[2188] params(0) in file: lib\support\0.2.9/io//thread.sharp:103:12: note:  
			public def suspend() : thread_result {
		           ^

0 [0x0]: line: 104 pushl 0   
1 [0x1]:           call @2298 // <platform.kernel#vm.suspend>   
2 [0x2]:           popobj2    
3 [0x3]:           smovr_3 fp+1   
4 [0x4]: line: 105 pushl 1   
5 [0x5]:           movg @35 // @std.io#thread_result   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @1944 // <std#_enum_.operator==>   
10 [0xa]:           loadval ebx   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 21   
13 [0xd]: line: 106 movi #1, ebx   
15 [0xf]:           movl 0   
16 [0x10]:           movn #9   
18 [0x12]:           movi #0, adx   
20 [0x14]:           rmov adx, ebx   
21 [0x15]:           nop   
22 [0x16]: line: 107 movl 1   
23 [0x17]:           returnobj   
24 [0x18]:           ret   


function: std.io#thread.unsuspend[2189] params(0) in file: lib\support\0.2.9/io//thread.sharp:110:12: note:  
			public def unsuspend() : thread_result {
		           ^

0 [0x0]: line: 111 pushl 0   
1 [0x1]:           istore 0   
3 [0x3]:           call @2299 // <platform.kernel#vm.unsuspend>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 112 pushl 1   
7 [0x7]:           movg @35 // @std.io#thread_result   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @1944 // <std#_enum_.operator==>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 113 movi #0, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #9   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           nop   
24 [0x18]: line: 114 movl 1   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std.io#thread.unsuspend_and_wait[2190] params(0) in file: lib\support\0.2.9/io//thread.sharp:117:12: note:  
			public def unsuspend_and_wait() : thread_result {
		           ^

0 [0x0]: line: 118 pushl 0   
1 [0x1]:           istore 1   
3 [0x3]:           call @2299 // <platform.kernel#vm.unsuspend>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 119 pushl 1   
7 [0x7]:           movg @35 // @std.io#thread_result   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @1944 // <std#_enum_.operator==>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 120 movi #0, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #9   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           nop   
24 [0x18]: line: 121 movl 1   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std.io#thread.join[2191] params(0) in file: lib\support\0.2.9/io//thread.sharp:124:15: note:  
		    public def join() := vm.thread_join(self);
		              ^

0 [0x0]: line: 124 pushl 0   
1 [0x1]:           call @2301 // <platform.kernel#vm.thread_join>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.interrupt[2192] params(0) in file: lib\support\0.2.9/io//thread.sharp:126:15: note:  
		    public def interrupt() := vm.kill(self);
		              ^

0 [0x0]: line: 126 pushl 0   
1 [0x1]:           call @2302 // <platform.kernel#vm.kill>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.current[2193] params(0) in file: lib\support\0.2.9/io//thread.sharp:128:22: note:  
		    public static def current() := vm.current_thread();
		                     ^

0 [0x0]: line: 128 call @2303 // <platform.kernel#vm.current_thread>   
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#thread.sleep[2194] params(1) in file: lib\support\0.2.9/io//thread.sharp:130:22: note:  
		    public static def sleep(mills_time : var) := time.sleep(milliseconds, mills_time);
		                     ^

0 [0x0]: line: 130 movg @74 // @std#time_unit   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           ipushl #0   
5 [0x5]:           call @3580 // <std#time.sleep>   
6 [0x6]:           ret   


function: std.io#thread.suspend_for[2195] params(1) in file: lib\support\0.2.9/io//thread.sharp:132:22: note:  
		    public static def suspend_for(mills_time : var) {
		                     ^

0 [0x0]: line: 133 istore 1   
2 [0x2]:           call @2303 // <platform.kernel#vm.current_thread>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #9   
6 [0x6]:           loadval ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]: line: 134 movg @74 // @std#time_unit   
11 [0xb]:           movn #1   
13 [0xd]:           pushobj   
14 [0xe]:           ipushl #0   
15 [0xf]:           call @3581 // <std#time.wait>   
16 [0x10]: line: 135 istore 0   
18 [0x12]:           call @2303 // <platform.kernel#vm.current_thread>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #9   
22 [0x16]:           loadval ebx   
23 [0x17]:           movi #0, adx   
25 [0x19]:           rmov adx, ebx   
26 [0x1a]:           ret   


function: std.io#thread.exit[2196] params(1) in file: lib\support\0.2.9/io//thread.sharp:138:22: note:  
		    public static def exit(code : var) {
		                     ^

0 [0x0]: line: 139 call @2193 // <std.io#thread.current>   
1 [0x1]:           ipushl #0   
2 [0x2]:           call @2304 // <platform.kernel#vm.exit_thread>   
3 [0x3]: line: 140 hlt   : protected asm start
4 [0x4]:           ret   : protected asm end


function: std.io#thread.hash[2197] params(0) in file: lib\support\0.2.9/io//thread.sharp:143:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 144 new_class @0 // app#__srt_global   
1 [0x1]:           movn #112   
3 [0x3]:           movl 0   
4 [0x4]:           movn #2   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           call @2430 // <std#long.long>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: std.io#thread.yield[2198] params(0) in file: lib\support\0.2.9/io//thread.sharp:147:22: note:  
		    public static def yield() := vm.thread_yield();
		                     ^

0 [0x0]: line: 147 call @2305 // <platform.kernel#vm.thread_yield>   
1 [0x1]:           ret   


function: std.io#thread.set_exception_handler[2199] params(1) in file: lib\support\0.2.9/io//thread.sharp:149:15: note:  
		    public def set_exception_handler(error_handler: uncaught_exception_handler) {
		              ^

0 [0x0]: line: 150 pushl 1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #12   
4 [0x4]:           popobj   
5 [0x5]:           ret   


function: std.io#thread.set_priority[2200] params(1) in file: lib\support\0.2.9/io//thread.sharp:153:15: note:  
		    public def set_priority(priority : thread_priority) : thread_result {
		              ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 155 pushl 1   
3 [0x3]:           movg @34 // @std.io#thread_priority   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1944 // <std#_enum_.operator==>   
8 [0x8]:           loadval ebx   
9 [0x9]:           movr cmt, ebx   
10 [0xa]:           je 29   
11 [0xb]:           pushl 1   
12 [0xc]:           movg @34 // @std.io#thread_priority   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @1944 // <std#_enum_.operator==>   
17 [0x11]:           loadval ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           je 29   
20 [0x14]:           pushl 1   
21 [0x15]:           movg @34 // @std.io#thread_priority   
22 [0x16]:           movn #2   
24 [0x18]:           pushobj   
25 [0x19]:           call @1944 // <std#_enum_.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 41   
29 [0x1d]: line: 159 pushl 0   
30 [0x1e]:           pushl 1   
31 [0x1f]:           call @1947 // <std#_enum_.get_ordinal>   
32 [0x20]:           call @2307 // <platform.kernel#vm.set_thread_priority>   
33 [0x21]:           popobj2    
34 [0x22]:           pushobj   
35 [0x23]:           movl 0   
36 [0x24]:           _ulck   
37 [0x25]:           popobj2    
38 [0x26]:           returnobj   
39 [0x27]:           ret   
40 [0x28]:           jmp @53   
41 [0x29]: line: 162 new_class @0 // app#__srt_global   
42 [0x2a]:           newarry adx: 0   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @0 // app#__srt_global   
45 [0x2d]:           checknull   
46 [0x2e]:           dup    
47 [0x2f]:           newstr @26 // invalid thread priority    
48 [0x30]:           call @3469 // <std#string.string>   
49 [0x31]:           pushl 1   
50 [0x32]:           call @3483 // <std#string.operator+>   
51 [0x33]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
52 [0x34]:           throw    
53 [0x35]:           nop   
54 [0x36]:           movl 0   
55 [0x37]:           _ulck   


function: std.io#thread.remove_thread[2201] params(1) in file: lib\support\0.2.9/io//thread.sharp:168:16: note:  
		    private def remove_thread(t : thread) {
		               ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #7   
3 [0x3]:           pushobj   
4 [0x4]:           movl 1   
5 [0x5]:           movn #1   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @2222 // <std.io#thread_group.remove>   
12 [0xc]:           pop   
13 [0xd]:           ret   


function: std.io#thread.get_id[2202] params(0) in file: lib\support\0.2.9/io//thread.sharp:172:15: note:  
		    public def get_id() := id;
		              ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_native_handle[2203] params(0) in file: lib\support\0.2.9/io//thread.sharp:173:15: note:  
		    public def get_native_handle() := native_handle;
		              ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_stack_size[2204] params(0) in file: lib\support\0.2.9/io//thread.sharp:174:15: note:  
		    public def get_stack_size() := stack_size;
		              ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_name[2205] params(0) in file: lib\support\0.2.9/io//thread.sharp:175:15: note:  
		    public def get_name() := name;
		              ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #6   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.is_exited[2206] params(0) in file: lib\support\0.2.9/io//thread.sharp:176:15: note:  
		    public def is_exited() := exited;
		              ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #5   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_daemon[2207] params(0) in file: lib\support\0.2.9/io//thread.sharp:177:15: note:  
		    public def is_daemon() := daemon;
		              ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_started[2208] params(0) in file: lib\support\0.2.9/io//thread.sharp:178:15: note:  
		    public def is_started() := started;
		              ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_suspended[2209] params(0) in file: lib\support\0.2.9/io//thread.sharp:179:15: note:  
		    public def is_suspended() := suspended;
		              ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #9   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.set_main[2210] params(1) in file: lib\support\0.2.9/io//thread.sharp:180:12: note:  
			public def set_main(main: (object[])(var)) := self->main = main;
		           ^

0 [0x0]: line: 180 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #11   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std.io#thread.is_active[2211] params(0) in file: lib\support\0.2.9/io//thread.sharp:181:12: note:  
			public def is_active() := started && !exited;
		           ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           skne ebx // pc = 14   
7 [0x7]:           movl 0   
8 [0x8]:           movn #5   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


function: std.io#thread.get_exit_code[2212] params(0) in file: lib\support\0.2.9/io//thread.sharp:182:12: note:  
			public def get_exit_code() := exit_code;
		           ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_exception_handler[2213] params(0) in file: lib\support\0.2.9/io//thread.sharp:183:12: note:  
			public def get_exception_handler() := error_handler;
		           ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std.io#thread.operator==[2214] params(1) in file: lib\support\0.2.9/io//thread.sharp:185:15: note:  
		    public def operator==(t : thread) : var = native_handle==t.native_handle;
		              ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #1   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


constructor: std.io#thread_group.thread_group[2215] params(1) in file: lib\support\0.2.9/io//thread_group.sharp:5:21: note:  
			public thread_group(name : string) {
		                    ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         xorl adx, 0   
2 [0x2]:         dup    
3 [0x3]:         call @3628 // <std#hashtable<std#int,std.io#thread>.hashtable>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // app#__srt_global   
9 [0x9]:         pushl 0   
10 [0xa]:         dup    
11 [0xb]:         call @3752 // <std#list<var>.list>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         pushl 0   
25 [0x19]: line: 6 pushl 1   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #2   
29 [0x1d]:         popobj   
30 [0x1e]: line: 7 movg @34 // @std.io#thread_priority   
31 [0x1f]:         movn #1   
33 [0x21]:         pushobj   
34 [0x22]:         movl 0   
35 [0x23]:         movn #3   
37 [0x25]:         popobj   
38 [0x26]:         ret   


constructor: std.io#thread_group.thread_group[2216] params(2) in file: lib\support\0.2.9/io//thread_group.sharp:10:21: note:  
			public thread_group(name : string, priority : thread_priority) {
		                    ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         xorl adx, 0   
2 [0x2]:         dup    
3 [0x3]:         call @3628 // <std#hashtable<std#int,std.io#thread>.hashtable>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // app#__srt_global   
9 [0x9]:         pushl 0   
10 [0xa]:         dup    
11 [0xb]:         call @3752 // <std#list<var>.list>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         pushl 0   
25 [0x19]: line: 11 pushl 1   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #2   
29 [0x1d]:          popobj   
30 [0x1e]: line: 12 pushl 2   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #3   
34 [0x22]:          popobj   
35 [0x23]:          ret   


function: std.io#thread_group.at[2217] params(1) in file: lib\support\0.2.9/io//thread_group.sharp:15:5: note:  
			def at(id : var) := handles.at(id);
		    ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          new_class @0 // app#__srt_global   
5 [0x5]:          test adx, adx   
6 [0x6]:          dup    
7 [0x7]:          ipushl #1   
8 [0x8]:          call @2634 // <std#int.int>   
9 [0x9]:          call @3632 // <std#hashtable<std#int,std.io#thread>.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io#thread_group.add[2218] params(1) in file: lib\support\0.2.9/io//thread_group.sharp:17:5: note:  
			def add(t : thread) {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 19 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @0 // app#__srt_global   
7 [0x7]:          test adx, adx   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          call @2202 // <std.io#thread.get_id>   
11 [0xb]:          call @2634 // <std#int.int>   
12 [0xc]:          pushl 1   
13 [0xd]:          call @3633 // <std#hashtable<std#int,std.io#thread>.put>   
14 [0xe]:          loadval ebx   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 24   
17 [0x11]: line: 20 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          pushl 1   
22 [0x16]:          call @2202 // <std.io#thread.get_id>   
23 [0x17]:          call @3766 // <std#list<var>.add>   
24 [0x18]:          nop   
25 [0x19]: line: 22 movl 0   
26 [0x1a]:          movn #4   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movr egx, ebx   
32 [0x20]:          dec ebx   
33 [0x21]:          movi #0, adx   
35 [0x23]:          rmov adx, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          _ulck   
38 [0x26]:          ret   


function: std.io#thread_group.size[2219] params(0) in file: lib\support\0.2.9/io//thread_group.sharp:26:5: note:  
			def size() := n_threads;
		    ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #4   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#thread_group.get_name[2220] params(0) in file: lib\support\0.2.9/io//thread_group.sharp:27:5: note:  
			def get_name() := name;
		    ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#thread_group.get_priority[2221] params(0) in file: lib\support\0.2.9/io//thread_group.sharp:28:5: note:  
			def get_priority() := default_priority;
		    ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#thread_group.remove[2222] params(1) in file: lib\support\0.2.9/io//thread_group.sharp:29:5: note:  
			def remove(id : var) : var {
		    ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 31 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @0 // app#__srt_global   
7 [0x7]:          test adx, adx   
8 [0x8]:          dup    
9 [0x9]:          ipushl #1   
10 [0xa]:          call @2634 // <std#int.int>   
11 [0xb]:          call @3634 // <std#hashtable<std#int,std.io#thread>.remove>   
12 [0xc]:          loadval ebx   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 37   
15 [0xf]: line: 32 movl 0   
16 [0x10]:          movn #4   
18 [0x12]:          movi #0, adx   
20 [0x14]:          iaload ebx, adx   
21 [0x15]:          movr egx, ebx   
22 [0x16]:          dec ebx   
23 [0x17]:          movi #0, adx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 33 movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          pushobj   
30 [0x1e]:          ipushl #1   
31 [0x1f]:          call @3772 // <std#list<var>.remove>   
32 [0x20]: line: 34 istorel 1, fp+0   
34 [0x22]:          movl 0   
35 [0x23]:          _ulck   
36 [0x24]:          ret   
37 [0x25]:          nop   
38 [0x26]: line: 37 istorel 0, fp+0   
40 [0x28]:          movl 0   
41 [0x29]:          _ulck   
42 [0x2a]:          ret   
43 [0x2b]:          movl 0   
44 [0x2c]:          _ulck   


function: std.io#thread_group.get_elements[2223] params(0) in file: lib\support\0.2.9/io//thread_group.sharp:41:8: note:  
		    def get_elements() : thread[] {
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          call @3769 // <std#list<var>.size>   
5 [0x5]:          loadval ebx   
6 [0x6]:          new_classarray ebx  // std.io#thread[]   
8 [0x8]:          popobj2    
9 [0x9]:          smovr_3 fp+1   
10 [0xa]: line: 43 istorel 0, fp+2   
12 [0xc]: line: 45 istorel -1, fp+4   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          pushobj   
18 [0x12]:          invoke_delegate 3646 { static=0, args=0 }   
20 [0x14]:          popl 5   
21 [0x15]:          iaddl 1, fp@4   
23 [0x17]:          movl 5   
24 [0x18]:          sizeof ecx   
25 [0x19]:          loadl ebx, fp+4   
26 [0x1a]:          lt ebx, ecx   
27 [0x1b]:          jne 52   
28 [0x1c]:          iaload ecx, ebx   
29 [0x1d]:          smovr_2 ecx, fp+3   
30 [0x1e]: line: 46 movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          pushobj   
34 [0x22]:          new_class @0 // app#__srt_global   
35 [0x23]:          test adx, adx   
36 [0x24]:          dup    
37 [0x25]:          ipushl #3   
38 [0x26]:          call @2634 // <std#int.int>   
39 [0x27]:          call @3632 // <std#hashtable<std#int,std.io#thread>.at>   
40 [0x28]:          pushl 1   
41 [0x29]:          loadl ebx, fp+2   
42 [0x2a]:          movr egx, ebx   
43 [0x2b]:          inc ebx   
44 [0x2c]:          smovr_2 ebx, fp+2   
45 [0x2d]:          movr ebx, egx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          popobj   
51 [0x33]:          jmp @21   
52 [0x34]: line: 49 movl 1   
53 [0x35]:          returnobj   
54 [0x36]:          ret   


function: std.io#thread_group.find[2224] params(1) in file: lib\support\0.2.9/io//thread_group.sharp:52:8: note:  
		    def find(find_func: (thread)(var)) : thread {
		       ^

0 [0x0]: line: 53 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          pushobj   
7 [0x7]:          call @3769 // <std#list<var>.size>   
8 [0x8]:          loadval ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 49   
14 [0xe]: line: 54 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          new_class @0 // app#__srt_global   
19 [0x13]:          test adx, adx   
20 [0x14]:          dup    
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          ipushl #2   
26 [0x1a]:          call @3759 // <std#list<var>.at>   
27 [0x1b]:          call @2634 // <std#int.int>   
28 [0x1c]:          call @3632 // <std#hashtable<std#int,std.io#thread>.at>   
29 [0x1d]:          popobj2    
30 [0x1e]:          smovr_3 fp+3   
31 [0x1f]: line: 55 movl 3   
32 [0x20]:          checknull   
33 [0x21]:          not ebx, ebx   
34 [0x22]:          skne ebx // pc = 40   
35 [0x23]:          ipushl #1   
36 [0x24]:          pushl 3   
37 [0x25]:          smov ebx, sp+[-1]   
38 [0x26]:          calld ebx   
39 [0x27]:          loadval ebx   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 45   
42 [0x2a]: line: 56 movl 3   
43 [0x2b]:          returnobj   
44 [0x2c]:          ret   
45 [0x2d]:          nop   
46 [0x2e]:          iaddl 1, fp@2   
48 [0x30]:          jmp @2   
49 [0x31]: line: 60 pushnull    
50 [0x32]:          popobj2    
51 [0x33]:          returnobj   
52 [0x34]:          ret   


function: std.io#thread_group.kill_all[2225] params(0) in file: lib\support\0.2.9/io//thread_group.sharp:63:5: note:  
			def kill_all() {
		    ^

0 [0x0]: line: 64 istorel -1, fp+2   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          invoke_delegate 3646 { static=0, args=0 }   
8 [0x8]:          popl 3   
9 [0x9]:          iaddl 1, fp@2   
11 [0xb]:          movl 3   
12 [0xc]:          sizeof ecx   
13 [0xd]:          loadl ebx, fp+2   
14 [0xe]:          lt ebx, ecx   
15 [0xf]:          jne 31   
16 [0x10]:          iaload ecx, ebx   
17 [0x11]:          smovr_2 ecx, fp+1   
18 [0x12]: line: 65 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          new_class @0 // app#__srt_global   
23 [0x17]:          test adx, adx   
24 [0x18]:          dup    
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @2634 // <std#int.int>   
27 [0x1b]:          call @3632 // <std#hashtable<std#int,std.io#thread>.at>   
28 [0x1c]:          call @2192 // <std.io#thread.interrupt>   
29 [0x1d]:          pop   
30 [0x1e]:          jmp @9   
31 [0x1f]:          ret   


constructor: std.io#thread_group.thread_group[2226] params(0) in file: lib\support\0.2.9/io//thread_group.sharp:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         xorl adx, 0   
2 [0x2]:         dup    
3 [0x3]:         call @3628 // <std#hashtable<std#int,std.io#thread>.hashtable>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // app#__srt_global   
9 [0x9]:         pushl 0   
10 [0xa]:         dup    
11 [0xb]:         call @3752 // <std#list<var>.list>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         ret   


function: std.io#__srt_global._srt_thread_start[2227] params(0) in file: lib\support\0.2.9/io//thread_kernel.sharp:5:4: note:  
		def _srt_thread_start() {
		   ^

0 [0x0]: line: 6 call @2303 // <platform.kernel#vm.current_thread>   
1 [0x1]:         popobj2    
2 [0x2]:         smovr_3 fp+0   
3 [0x3]: line: 7 pushl 0   
4 [0x4]:         call @2272 // <std#_object_.notify>   
5 [0x5]: line: 9 movi #1, ebx   : protected asm start
7 [0x7]:         movi #0, egx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         movl 0   
12 [0xc]:         movn #5   
14 [0xe]:         rmov adx, egx   
15 [0xf]:         movl 0   
16 [0x10]:         movn #8   
18 [0x12]:         rmov adx, ebx   : protected asm end
19 [0x13]: line: 22 istorel 1, fp+1   
21 [0x15]: line: 23 movl 0   : try start: try block start
22 [0x16]: line: 25 movn #11   
24 [0x18]: line: 26 movi #0, adx   
26 [0x1a]:          iaload ebx, adx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @2309 // <platform.kernel#vm.thread_args>   
29 [0x1d]:          smov ebx, sp+[-1]   
30 [0x1e]:          calld ebx   
31 [0x1f]:          ipopl 1   
32 [0x20]:          jmp @53   : try block end
33 [0x21]: line: 28 pushl 0   : catch(std#throwable)
34 [0x22]:          call @2213 // <std.io#thread.get_exception_handler>   
35 [0x23]:          pushnull    
36 [0x24]:          itest ebx   
37 [0x25]:          not ebx, ebx   
38 [0x26]:          movr cmt, ebx   
39 [0x27]:          jne 46   
40 [0x28]: line: 29 pushl 0   
41 [0x29]:          call @2213 // <std.io#thread.get_exception_handler>   
42 [0x2a]:          pushl 2   
43 [0x2b]:          invoke_delegate 2230 { static=0, args=1 }   
45 [0x2d]:          jmp @51   
46 [0x2e]: line: 31 pushl 0   
47 [0x2f]:          ipushl #1   
48 [0x30]:          call @2304 // <platform.kernel#vm.exit_thread>   
49 [0x31]: line: 32 pushl 2   
50 [0x32]:          throw    
51 [0x33]:          nop   
52 [0x34]:          jmp @53   
53 [0x35]:          nop   : try end
54 [0x36]: line: 36 pushl 0   
55 [0x37]:          ipushl #1   
56 [0x38]:          call @2304 // <platform.kernel#vm.exit_thread>   
57 [0x39]:          ret   


function: std.io#thread_result.at[2228] params(1) in file: lib\support\0.2.9/io//thread_kernel.sharp:64:15: note:  
		    static def at(index: var) : thread_result {
		              ^

0 [0x0]: line: 65 ipushl #0   
1 [0x1]:          movg @35 // @std.io#thread_result   
2 [0x2]:          movn #16   
4 [0x4]:          pushobj   
5 [0x5]:          call @1947 // <std#_enum_.get_ordinal>   
6 [0x6]:          loadval ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          jne 29   
10 [0xa]: line: 66 movg @35 // @std.io#thread_result   
11 [0xb]:          movn #17   
13 [0xd]:          pushobj   
14 [0xe]:          movg @35 // @std.io#thread_result   
15 [0xf]:          movn #17   
17 [0x11]:          sizeof ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #1, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          sub ecx, ebx -> ebx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   
29 [0x1d]:          nop   
30 [0x1e]: line: 68 movg @35 // @std.io#thread_result   
31 [0x1f]:          movn #17   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+0   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


constructor: std.io#thread_result.thread_result[2229] params(0) in file: lib\support\0.2.9/io//thread_kernel.sharp:39:7: note:  
		mutate thread_result {
		      ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1949 // <std#_enum_._enum_>   
2 [0x2]:         ret   


std.io#uncaught_exception_handler.uncaught_exception[2230] params(1) in file: lib\support\0.2.9/io//uncaught_exception_handler.sharp:4:8: note:  
		    def uncaught_exception(err: throwable);
		       ^



constructor: std.io#uncaught_exception_handler.uncaught_exception_handler[2231] params(0) in file: lib\support\0.2.9/io//uncaught_exception_handler.sharp:3:10: note:  
		interface uncaught_exception_handler {
		         ^

0 [0x0]:         ret   


function: std.io#unix_fs.path_separator[2232] params(0) in file: lib\support\0.2.9/io//unix_fs.sharp:12:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]: line: 13 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#unix_fs.normalize[2233] params(1) in file: lib\support\0.2.9/io//unix_fs.sharp:20:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]: line: 21 pushl 1   
1 [0x1]:          call @3510 // <std#string.size>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 22 istorel 0, fp+3   
5 [0x5]: line: 23 istorel 0, fp+4   
7 [0x7]:          ipushl #4   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 265   
14 [0xe]: line: 25 pushl 1   
15 [0xf]:          ipushl #4   
16 [0x10]:          call @3492 // <std#string.operator[>   
17 [0x11]:          loadval ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #92, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          test ecx, ebx   
23 [0x17]:          jne 112   
24 [0x18]: line: 26 ipushl #3   
25 [0x19]:          movi #0, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          gt ecx, ebx   
29 [0x1d]:          movr ebx, cmt   
30 [0x1e]:          skne ebx // pc = 48   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          pushobj   
35 [0x23]:          ipushl #3   
36 [0x24]:          movi #1, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          sub ecx, ebx -> ebx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          iaload ebx, adx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #47, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          tne ecx, ebx   
49 [0x31]:          jne 66   
50 [0x32]: line: 27 istore 47   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          loadl ebx, fp+3   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          smovr_2 ebx, fp+3   
60 [0x3c]:          movr ebx, egx   
61 [0x3d]:          popobj2    
62 [0x3e]:          movr adx, ebx   
63 [0x3f]:          chklen adx   
64 [0x40]:          loadval ebx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          nop   
67 [0x43]: line: 29 ipushl #4   
68 [0x44]:          movi #1, ebx   
70 [0x46]:          loadval ecx   
71 [0x47]:          add ecx, ebx -> ebx   
72 [0x48]:          rstore ebx   
73 [0x49]:          loadl ebx, fp+2   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          lt ecx, ebx   
76 [0x4c]:          movr ebx, cmt   
77 [0x4d]:          skne ebx // pc = 92   
78 [0x4e]:          movl 1   
79 [0x4f]:          pushobj   
80 [0x50]:          ipushl #4   
81 [0x51]:          movi #1, ebx   
83 [0x53]:          loadval ecx   
84 [0x54]:          add ecx, ebx -> ebx   
85 [0x55]:          rstore ebx   
86 [0x56]:          call @3492 // <std#string.operator[>   
87 [0x57]:          loadval ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          movi #92, ebx   
91 [0x5b]:          loadval ecx   
92 [0x5c]:          test ecx, ebx   
93 [0x5d]:          jne 110   
94 [0x5e]: line: 30 iaddl 1, fp@4   
96 [0x60]: line: 31 pushl 1   
97 [0x61]:          ipushl #4   
98 [0x62]:          call @3492 // <std#string.operator[>   
99 [0x63]:          loadval ebx   
100 [0x64]:          rstore ebx   
101 [0x65]:          movi #92, ebx   
103 [0x67]:          loadval ecx   
104 [0x68]:          test ecx, ebx   
105 [0x69]:          je 94   
106 [0x6a]: line: 33 loadl ebx, fp+4   
107 [0x6b]:          movr egx, ebx   
108 [0x6c]:          dec ebx   
109 [0x6d]:          smovr_2 ebx, fp+4   
110 [0x6e]:          nop   
111 [0x6f]:          jmp @261   
112 [0x70]:          pushl 1   
113 [0x71]:          ipushl #4   
114 [0x72]:          call @3492 // <std#string.operator[>   
115 [0x73]:          loadval ebx   
116 [0x74]:          rstore ebx   
117 [0x75]:          movi #47, ebx   
119 [0x77]:          loadval ecx   
120 [0x78]:          test ecx, ebx   
121 [0x79]:          jne 244   
122 [0x7a]: line: 37 ipushl #4   
123 [0x7b]:          movi #1, ebx   
125 [0x7d]:          loadval ecx   
126 [0x7e]:          add ecx, ebx -> ebx   
127 [0x7f]:          rstore ebx   
128 [0x80]:          loadl ebx, fp+2   
129 [0x81]:          loadval ecx   
130 [0x82]:          lt ecx, ebx   
131 [0x83]:          movr ebx, cmt   
132 [0x84]:          skne ebx // pc = 147   
133 [0x85]:          movl 1   
134 [0x86]:          pushobj   
135 [0x87]:          ipushl #4   
136 [0x88]:          movi #1, ebx   
138 [0x8a]:          loadval ecx   
139 [0x8b]:          add ecx, ebx -> ebx   
140 [0x8c]:          rstore ebx   
141 [0x8d]:          call @3492 // <std#string.operator[>   
142 [0x8e]:          loadval ebx   
143 [0x8f]:          rstore ebx   
144 [0x90]:          movi #47, ebx   
146 [0x92]:          loadval ecx   
147 [0x93]:          test ecx, ebx   
148 [0x94]:          jne 192   
149 [0x95]: line: 38 iaddl 1, fp@4   
151 [0x97]: line: 39 pushl 1   
152 [0x98]:          ipushl #4   
153 [0x99]:          call @3492 // <std#string.operator[>   
154 [0x9a]:          loadval ebx   
155 [0x9b]:          rstore ebx   
156 [0x9c]:          movi #47, ebx   
158 [0x9e]:          loadval ecx   
159 [0x9f]:          test ecx, ebx   
160 [0xa0]:          je 149   
161 [0xa1]: line: 42 ipushl #3   
162 [0xa2]:          movi #0, ebx   
164 [0xa4]:          loadval ecx   
165 [0xa5]:          gt ecx, ebx   
166 [0xa6]:          movr ebx, cmt   
167 [0xa7]:          skne ebx // pc = 185   
168 [0xa8]:          movl 0   
169 [0xa9]:          movn #1   
171 [0xab]:          pushobj   
172 [0xac]:          ipushl #3   
173 [0xad]:          movi #1, ebx   
175 [0xaf]:          loadval ecx   
176 [0xb0]:          sub ecx, ebx -> ebx   
177 [0xb1]:          popobj2    
178 [0xb2]:          movr adx, ebx   
179 [0xb3]:          chklen adx   
180 [0xb4]:          iaload ebx, adx   
181 [0xb5]:          rstore ebx   
182 [0xb6]:          movi #47, ebx   
184 [0xb8]:          loadval ecx   
185 [0xb9]:          tne ecx, ebx   
186 [0xba]:          jne 191   
187 [0xbb]: line: 43 loadl ebx, fp+4   
188 [0xbc]:          movr egx, ebx   
189 [0xbd]:          dec ebx   
190 [0xbe]:          smovr_2 ebx, fp+4   
191 [0xbf]:          nop   
192 [0xc0]:          nop   
193 [0xc1]: line: 46 ipushl #3   
194 [0xc2]:          movi #0, ebx   
196 [0xc4]:          loadval ecx   
197 [0xc5]:          test ecx, ebx   
198 [0xc6]:          movr ebx, cmt   
199 [0xc7]:          skpe ebx // pc = 224   
200 [0xc8]:          ipushl #3   
201 [0xc9]:          movi #0, ebx   
203 [0xcb]:          loadval ecx   
204 [0xcc]:          gt ecx, ebx   
205 [0xcd]:          movr ebx, cmt   
206 [0xce]:          skne ebx // pc = 224   
207 [0xcf]:          movl 0   
208 [0xd0]:          movn #1   
210 [0xd2]:          pushobj   
211 [0xd3]:          ipushl #3   
212 [0xd4]:          movi #1, ebx   
214 [0xd6]:          loadval ecx   
215 [0xd7]:          sub ecx, ebx -> ebx   
216 [0xd8]:          popobj2    
217 [0xd9]:          movr adx, ebx   
218 [0xda]:          chklen adx   
219 [0xdb]:          iaload ebx, adx   
220 [0xdc]:          rstore ebx   
221 [0xdd]:          movi #47, ebx   
223 [0xdf]:          loadval ecx   
224 [0xe0]:          tne ecx, ebx   
225 [0xe1]:          jne 242   
226 [0xe2]: line: 47 istore 47   
228 [0xe4]:          movl 0   
229 [0xe5]:          movn #1   
231 [0xe7]:          pushobj   
232 [0xe8]:          loadl ebx, fp+3   
233 [0xe9]:          movr egx, ebx   
234 [0xea]:          inc ebx   
235 [0xeb]:          smovr_2 ebx, fp+3   
236 [0xec]:          movr ebx, egx   
237 [0xed]:          popobj2    
238 [0xee]:          movr adx, ebx   
239 [0xef]:          chklen adx   
240 [0xf0]:          loadval ebx   
241 [0xf1]:          rmov adx, ebx   
242 [0xf2]:          nop   
243 [0xf3]:          jmp @261   
244 [0xf4]: line: 50 pushl 1   
245 [0xf5]:          ipushl #4   
246 [0xf6]:          call @3492 // <std#string.operator[>   
247 [0xf7]:          movl 0   
248 [0xf8]:          movn #1   
250 [0xfa]:          pushobj   
251 [0xfb]:          loadl ebx, fp+3   
252 [0xfc]:          movr egx, ebx   
253 [0xfd]:          inc ebx   
254 [0xfe]:          smovr_2 ebx, fp+3   
255 [0xff]:          movr ebx, egx   
256 [0x100]:          popobj2    
257 [0x101]:          movr adx, ebx   
258 [0x102]:          chklen adx   
259 [0x103]:          loadval ebx   
260 [0x104]:          rmov adx, ebx   
261 [0x105]:          nop   
262 [0x106]:          iaddl 1, fp@4   
264 [0x108]:          jmp @7   
265 [0x109]: line: 53 new_class @0 // app#__srt_global   
266 [0x10a]:          checknull   
267 [0x10b]:          dup    
268 [0x10c]:          movl 0   
269 [0x10d]:          movn #1   
271 [0x10f]:          pushobj   
272 [0x110]:          istore 0   
274 [0x112]:          ipushl #3   
275 [0x113]:          call @3474 // <std#string.string>   
276 [0x114]:          popobj2    
277 [0x115]:          returnobj   
278 [0x116]:          ret   


function: std.io#unix_fs.get_attributes[2234] params(1) in file: lib\support\0.2.9/io//unix_fs.sharp:61:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]: line: 62 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3495 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 63 istorel 0, fp+3   
9 [0x9]: line: 69 pushl 2   : protected asm start
10 [0xa]:          int 0x25   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 75 loadl ebx, fp+3   : protected asm end
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std.io#unix_fs.check_access[2235] params(2) in file: lib\support\0.2.9/io//unix_fs.sharp:85:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]: line: 86 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3495 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 87 istorel 0, fp+4   
9 [0x9]: line: 93 pushl 3   : protected asm start
10 [0xa]:          loadl ebx, fp+2   
11 [0xb]:          int 0x24   
12 [0xc]:          smovr_2 ebx, fp+4   
13 [0xd]: line: 100 loadl ebx, fp+4   : protected asm end
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


constructor: std.io#unix_fs.unix_fs[2236] params(0) in file: lib\support\0.2.9/io//unix_fs.sharp:8:16: note:  
		protected class unix_fs base file_system {
		               ^

0 [0x0]:         movi #47, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         mov8 ebx, ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #512, ebx   
11 [0xb]:         newarry ebx: 0   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


function: std.io#win_fs.path_separator[2237] params(0) in file: lib\support\0.2.9/io//win_fs.sharp:15:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#win_fs.normalize[2238] params(1) in file: lib\support\0.2.9/io//win_fs.sharp:23:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]: line: 24 pushl 1   
1 [0x1]:          call @3510 // <std#string.size>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 25 istorel 0, fp+3   
5 [0x5]: line: 26 istorel 0, fp+4   
7 [0x7]:          ipushl #4   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 258   
14 [0xe]: line: 28 pushl 1   
15 [0xf]:          ipushl #4   
16 [0x10]:          call @3492 // <std#string.operator[>   
17 [0x11]:          loadval ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #47, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          test ecx, ebx   
23 [0x17]:          jne 112   
24 [0x18]: line: 29 ipushl #3   
25 [0x19]:          movi #0, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          gt ecx, ebx   
29 [0x1d]:          movr ebx, cmt   
30 [0x1e]:          skne ebx // pc = 48   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          pushobj   
35 [0x23]:          ipushl #3   
36 [0x24]:          movi #1, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          sub ecx, ebx -> ebx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          iaload ebx, adx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #92, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          tne ecx, ebx   
49 [0x31]:          jne 66   
50 [0x32]: line: 30 istore 92   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          loadl ebx, fp+3   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          smovr_2 ebx, fp+3   
60 [0x3c]:          movr ebx, egx   
61 [0x3d]:          popobj2    
62 [0x3e]:          movr adx, ebx   
63 [0x3f]:          chklen adx   
64 [0x40]:          loadval ebx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          nop   
67 [0x43]: line: 32 ipushl #4   
68 [0x44]:          movi #1, ebx   
70 [0x46]:          loadval ecx   
71 [0x47]:          add ecx, ebx -> ebx   
72 [0x48]:          rstore ebx   
73 [0x49]:          loadl ebx, fp+2   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          lt ecx, ebx   
76 [0x4c]:          movr ebx, cmt   
77 [0x4d]:          skne ebx // pc = 92   
78 [0x4e]:          movl 1   
79 [0x4f]:          pushobj   
80 [0x50]:          ipushl #4   
81 [0x51]:          movi #1, ebx   
83 [0x53]:          loadval ecx   
84 [0x54]:          add ecx, ebx -> ebx   
85 [0x55]:          rstore ebx   
86 [0x56]:          call @3492 // <std#string.operator[>   
87 [0x57]:          loadval ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          movi #47, ebx   
91 [0x5b]:          loadval ecx   
92 [0x5c]:          test ecx, ebx   
93 [0x5d]:          jne 110   
94 [0x5e]: line: 33 iaddl 1, fp@4   
96 [0x60]: line: 34 pushl 1   
97 [0x61]:          ipushl #4   
98 [0x62]:          call @3492 // <std#string.operator[>   
99 [0x63]:          loadval ebx   
100 [0x64]:          rstore ebx   
101 [0x65]:          movi #47, ebx   
103 [0x67]:          loadval ecx   
104 [0x68]:          test ecx, ebx   
105 [0x69]:          je 94   
106 [0x6a]: line: 36 loadl ebx, fp+4   
107 [0x6b]:          movr egx, ebx   
108 [0x6c]:          dec ebx   
109 [0x6d]:          smovr_2 ebx, fp+4   
110 [0x6e]:          nop   
111 [0x6f]:          jmp @254   
112 [0x70]:          pushl 1   
113 [0x71]:          ipushl #4   
114 [0x72]:          call @3492 // <std#string.operator[>   
115 [0x73]:          loadval ebx   
116 [0x74]:          rstore ebx   
117 [0x75]:          movi #92, ebx   
119 [0x77]:          loadval ecx   
120 [0x78]:          test ecx, ebx   
121 [0x79]:          jne 237   
122 [0x7a]: line: 40 ipushl #4   
123 [0x7b]:          movi #1, ebx   
125 [0x7d]:          loadval ecx   
126 [0x7e]:          add ecx, ebx -> ebx   
127 [0x7f]:          rstore ebx   
128 [0x80]:          loadl ebx, fp+2   
129 [0x81]:          loadval ecx   
130 [0x82]:          lt ecx, ebx   
131 [0x83]:          movr ebx, cmt   
132 [0x84]:          skne ebx // pc = 147   
133 [0x85]:          movl 1   
134 [0x86]:          pushobj   
135 [0x87]:          ipushl #4   
136 [0x88]:          movi #1, ebx   
138 [0x8a]:          loadval ecx   
139 [0x8b]:          add ecx, ebx -> ebx   
140 [0x8c]:          rstore ebx   
141 [0x8d]:          call @3492 // <std#string.operator[>   
142 [0x8e]:          loadval ebx   
143 [0x8f]:          rstore ebx   
144 [0x90]:          movi #92, ebx   
146 [0x92]:          loadval ecx   
147 [0x93]:          test ecx, ebx   
148 [0x94]:          jne 192   
149 [0x95]: line: 41 iaddl 1, fp@4   
151 [0x97]: line: 42 pushl 1   
152 [0x98]:          ipushl #4   
153 [0x99]:          call @3492 // <std#string.operator[>   
154 [0x9a]:          loadval ebx   
155 [0x9b]:          rstore ebx   
156 [0x9c]:          movi #92, ebx   
158 [0x9e]:          loadval ecx   
159 [0x9f]:          test ecx, ebx   
160 [0xa0]:          je 149   
161 [0xa1]: line: 45 ipushl #3   
162 [0xa2]:          movi #0, ebx   
164 [0xa4]:          loadval ecx   
165 [0xa5]:          gt ecx, ebx   
166 [0xa6]:          movr ebx, cmt   
167 [0xa7]:          skne ebx // pc = 185   
168 [0xa8]:          movl 0   
169 [0xa9]:          movn #1   
171 [0xab]:          pushobj   
172 [0xac]:          ipushl #3   
173 [0xad]:          movi #1, ebx   
175 [0xaf]:          loadval ecx   
176 [0xb0]:          sub ecx, ebx -> ebx   
177 [0xb1]:          popobj2    
178 [0xb2]:          movr adx, ebx   
179 [0xb3]:          chklen adx   
180 [0xb4]:          iaload ebx, adx   
181 [0xb5]:          rstore ebx   
182 [0xb6]:          movi #92, ebx   
184 [0xb8]:          loadval ecx   
185 [0xb9]:          tne ecx, ebx   
186 [0xba]:          jne 191   
187 [0xbb]: line: 46 loadl ebx, fp+4   
188 [0xbc]:          movr egx, ebx   
189 [0xbd]:          dec ebx   
190 [0xbe]:          smovr_2 ebx, fp+4   
191 [0xbf]:          nop   
192 [0xc0]:          nop   
193 [0xc1]: line: 49 ipushl #3   
194 [0xc2]:          movi #0, ebx   
196 [0xc4]:          loadval ecx   
197 [0xc5]:          gt ecx, ebx   
198 [0xc6]:          movr ebx, cmt   
199 [0xc7]:          skne ebx // pc = 217   
200 [0xc8]:          movl 0   
201 [0xc9]:          movn #1   
203 [0xcb]:          pushobj   
204 [0xcc]:          ipushl #3   
205 [0xcd]:          movi #1, ebx   
207 [0xcf]:          loadval ecx   
208 [0xd0]:          sub ecx, ebx -> ebx   
209 [0xd1]:          popobj2    
210 [0xd2]:          movr adx, ebx   
211 [0xd3]:          chklen adx   
212 [0xd4]:          iaload ebx, adx   
213 [0xd5]:          rstore ebx   
214 [0xd6]:          movi #92, ebx   
216 [0xd8]:          loadval ecx   
217 [0xd9]:          tne ecx, ebx   
218 [0xda]:          jne 235   
219 [0xdb]: line: 50 istore 92   
221 [0xdd]:          movl 0   
222 [0xde]:          movn #1   
224 [0xe0]:          pushobj   
225 [0xe1]:          loadl ebx, fp+3   
226 [0xe2]:          movr egx, ebx   
227 [0xe3]:          inc ebx   
228 [0xe4]:          smovr_2 ebx, fp+3   
229 [0xe5]:          movr ebx, egx   
230 [0xe6]:          popobj2    
231 [0xe7]:          movr adx, ebx   
232 [0xe8]:          chklen adx   
233 [0xe9]:          loadval ebx   
234 [0xea]:          rmov adx, ebx   
235 [0xeb]:          nop   
236 [0xec]:          jmp @254   
237 [0xed]: line: 53 pushl 1   
238 [0xee]:          ipushl #4   
239 [0xef]:          call @3492 // <std#string.operator[>   
240 [0xf0]:          movl 0   
241 [0xf1]:          movn #1   
243 [0xf3]:          pushobj   
244 [0xf4]:          loadl ebx, fp+3   
245 [0xf5]:          movr egx, ebx   
246 [0xf6]:          inc ebx   
247 [0xf7]:          smovr_2 ebx, fp+3   
248 [0xf8]:          movr ebx, egx   
249 [0xf9]:          popobj2    
250 [0xfa]:          movr adx, ebx   
251 [0xfb]:          chklen adx   
252 [0xfc]:          loadval ebx   
253 [0xfd]:          rmov adx, ebx   
254 [0xfe]:          nop   
255 [0xff]:          iaddl 1, fp@4   
257 [0x101]:          jmp @7   
258 [0x102]: line: 56 new_class @0 // app#__srt_global   
259 [0x103]:          checknull   
260 [0x104]:          dup    
261 [0x105]:          movl 0   
262 [0x106]:          movn #1   
264 [0x108]:          pushobj   
265 [0x109]:          istore 0   
267 [0x10b]:          ipushl #3   
268 [0x10c]:          call @3474 // <std#string.string>   
269 [0x10d]:          popobj2    
270 [0x10e]:          returnobj   
271 [0x10f]:          ret   


function: std.io#win_fs.get_attributes[2239] params(1) in file: lib\support\0.2.9/io//win_fs.sharp:64:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]: line: 65 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3495 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 66 istorel 0, fp+3   
9 [0x9]: line: 72 pushl 2   : protected asm start
10 [0xa]:          int 0x25   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 78 loadl ebx, fp+3   : protected asm end
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std.io#win_fs.check_access[2240] params(2) in file: lib\support\0.2.9/io//win_fs.sharp:88:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]: line: 89 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3495 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 90 istorel 0, fp+4   
9 [0x9]: line: 93 ipushl #2   
10 [0xa]:          ldc ebx // 1   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 17   
14 [0xe]: line: 94 istorel -1, fp+0   
16 [0x10]:          ret   
17 [0x11]:          nop   
18 [0x12]: line: 100 pushl 3   : protected asm start
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           int 0x24   
21 [0x15]:           smovr_2 ebx, fp+4   
22 [0x16]: line: 107 loadl ebx, fp+4   : protected asm end
23 [0x17]:           return_val ebx   
24 [0x18]:           ret   


constructor: std.io#win_fs.win_fs[2241] params(0) in file: lib\support\0.2.9/io//win_fs.sharp:11:16: note:  
		protected class win_fs base file_system {
		               ^

0 [0x0]:         movi #92, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         mov8 ebx, ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #512, ebx   
11 [0xb]:         newarry ebx: 0   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


function: std.math#__srt_global.is_nan[2242] params(1) in file: lib\support\0.2.9/math//math.sharp:44:18: note:  
		public static def is_nan(v: var): var {
		                 ^

0 [0x0]: line: 45 ipushl #0   
1 [0x1]:          loadl ebx, fp+0   
2 [0x2]:          loadval ecx   
3 [0x3]:          tne ecx, ebx   
4 [0x4]:          return_val cmt   
5 [0x5]:          ret   


function: std.math#__srt_global.is_infinite[2243] params(1) in file: lib\support\0.2.9/math//math.sharp:56:18: note:  
		public static def is_infinite(v: var): var {
		                 ^

0 [0x0]: line: 57 ipushl #0   
1 [0x1]:          ldc ebx // inf   
2 [0x2]:          loadval ecx   
3 [0x3]:          test ecx, ebx   
4 [0x4]:          movr ebx, cmt   
5 [0x5]:          skpe ebx // pc = 11   
6 [0x6]:          ipushl #0   
7 [0x7]:          movi #-2147483648, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std.math#__srt_global.sin[2244] params(1) in file: lib\support\0.2.9/math//math.sharp:60:4: note:  
		def sin(num: var) : var {
		   ^

0 [0x0]: line: 61 ipushl #0   
1 [0x1]:          istore 0   
3 [0x3]:          call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.cos[2245] params(1) in file: lib\support\0.2.9/math//math.sharp:64:4: note:  
		def cos(num: var) : var {
		   ^

0 [0x0]: line: 65 ipushl #0   
1 [0x1]:          istore 1   
3 [0x3]:          call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.tan[2246] params(1) in file: lib\support\0.2.9/math//math.sharp:68:4: note:  
		def tan(num: var) : var {
		   ^

0 [0x0]: line: 69 ipushl #0   
1 [0x1]:          istore 2   
3 [0x3]:          call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.sinh[2247] params(1) in file: lib\support\0.2.9/math//math.sharp:72:4: note:  
		def sinh(num: var) : var {
		   ^

0 [0x0]: line: 73 ipushl #0   
1 [0x1]:          istore 3   
3 [0x3]:          call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.cosh[2248] params(1) in file: lib\support\0.2.9/math//math.sharp:76:4: note:  
		def cosh(num: var) : var {
		   ^

0 [0x0]: line: 77 ipushl #0   
1 [0x1]:          istore 4   
3 [0x3]:          call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.tanh[2249] params(1) in file: lib\support\0.2.9/math//math.sharp:80:4: note:  
		def tanh(num: var) : var {
		   ^

0 [0x0]: line: 81 ipushl #0   
1 [0x1]:          istore 5   
3 [0x3]:          call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.asin[2250] params(1) in file: lib\support\0.2.9/math//math.sharp:84:4: note:  
		def asin(num: var) : var {
		   ^

0 [0x0]: line: 85 ipushl #0   
1 [0x1]:          istore 6   
3 [0x3]:          call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.acos[2251] params(1) in file: lib\support\0.2.9/math//math.sharp:88:4: note:  
		def acos(num: var) : var {
		   ^

0 [0x0]: line: 89 ipushl #0   
1 [0x1]:          istore 7   
3 [0x3]:          call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.atan[2252] params(1) in file: lib\support\0.2.9/math//math.sharp:92:4: note:  
		def atan(num: var) : var {
		   ^

0 [0x0]: line: 93 ipushl #0   
1 [0x1]:          istore 8   
3 [0x3]:          call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.atan[2253] params(2) in file: lib\support\0.2.9/math//math.sharp:96:4: note:  
		def atan(num1: var, num2: var) : var {
		   ^

0 [0x0]: line: 97 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          istore 9   
4 [0x4]:          call @2267 // <std.math#__srt_global.math_proc>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.math#__srt_global.exp[2254] params(1) in file: lib\support\0.2.9/math//math.sharp:100:4: note:  
		def exp(num: var) : var {
		   ^

0 [0x0]: line: 101 ipushl #0   
1 [0x1]:           istore 10   
3 [0x3]:           call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.log[2255] params(1) in file: lib\support\0.2.9/math//math.sharp:104:4: note:  
		def log(num: var) : var {
		   ^

0 [0x0]: line: 105 ipushl #0   
1 [0x1]:           istore 11   
3 [0x3]:           call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.log10[2256] params(1) in file: lib\support\0.2.9/math//math.sharp:108:4: note:  
		def log10(num: var) : var {
		   ^

0 [0x0]: line: 109 ipushl #0   
1 [0x1]:           istore 12   
3 [0x3]:           call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.pow[2257] params(2) in file: lib\support\0.2.9/math//math.sharp:112:4: note:  
		def pow(num: var, exp: var) : var {
		   ^

0 [0x0]: line: 113 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 13   
4 [0x4]:           call @2267 // <std.math#__srt_global.math_proc>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.math#__srt_global.sqrt[2258] params(1) in file: lib\support\0.2.9/math//math.sharp:116:4: note:  
		def sqrt(num: var) : var {
		   ^

0 [0x0]: line: 117 ipushl #0   
1 [0x1]:           istore 14   
3 [0x3]:           call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.ceil[2259] params(1) in file: lib\support\0.2.9/math//math.sharp:120:4: note:  
		def ceil(num: var) : var {
		   ^

0 [0x0]: line: 121 ipushl #0   
1 [0x1]:           istore 15   
3 [0x3]:           call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.floor[2260] params(1) in file: lib\support\0.2.9/math//math.sharp:124:4: note:  
		def floor(num: var) : var {
		   ^

0 [0x0]: line: 125 ipushl #0   
1 [0x1]:           istore 16   
3 [0x3]:           call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.abs[2261] params(1) in file: lib\support\0.2.9/math//math.sharp:128:4: note:  
		def abs(num: var) : var {
		   ^

0 [0x0]: line: 129 ipushl #0   
1 [0x1]:           call @2262 // <std.math#__srt_global.fabs>   
2 [0x2]:           loadval ebx   
3 [0x3]:           return_val ebx   
4 [0x4]:           ret   


function: std.math#__srt_global.fabs[2262] params(1) in file: lib\support\0.2.9/math//math.sharp:132:12: note:  
		private def fabs(num: var) : var {
		           ^

0 [0x0]: line: 133 ipushl #0   
1 [0x1]:           istore 17   
3 [0x3]:           call @2266 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.ldexp[2263] params(2) in file: lib\support\0.2.9/math//math.sharp:136:4: note:  
		def ldexp(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 137 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 18   
4 [0x4]:           call @2267 // <std.math#__srt_global.math_proc>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.math#__srt_global.fmod[2264] params(2) in file: lib\support\0.2.9/math//math.sharp:140:4: note:  
		def fmod(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 141 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 19   
4 [0x4]:           call @2267 // <std.math#__srt_global.math_proc>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.math#__srt_global.round[2265] params(1) in file: lib\support\0.2.9/math//math.sharp:144:4: note:  
		def round(num: var) : var {
		   ^

0 [0x0]: line: 145 loadl ebx, fp+0   
1 [0x1]:           mov64 ebx, ebx   
2 [0x2]:           mov64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 146 loadl ebx, fp+1   
5 [0x5]:           subl ebx, fp@0   
6 [0x6]: line: 148 ipushl #0   
7 [0x7]:           ldc ebx // 0.5   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           movr ebx, cmt   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 21   
13 [0xd]:           ipushl #1   
14 [0xe]:           movi #1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           add ecx, ebx -> ebx   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   
20 [0x14]:           jmp @24   
21 [0x15]: line: 149 loadl ebx, fp+1   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   
24 [0x18]:           nop   


function: std.math#__srt_global.math_proc[2266] params(2) in file: lib\support\0.2.9/math//math.sharp:152:10: note:  
		local def math_proc(num: var, proc: var) : var {
		         ^

0 [0x0]: line: 153 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl ecx, fp+1   
2 [0x2]:           int 0x18   
3 [0x3]:           return_val cmt   
4 [0x4]:           ret   
5 [0x5]: line: 161 istorel 0, fp+0   : protected asm end
7 [0x7]:           ret   


function: std.math#__srt_global.math_proc[2267] params(3) in file: lib\support\0.2.9/math//math.sharp:164:10: note:  
		local def math_proc(num:var, num2: var, proc: var) : var {
		         ^

0 [0x0]: line: 165 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl egx, fp+1   
2 [0x2]:           loadl ecx, fp+2   
3 [0x3]:           int 0x18   
4 [0x4]:           return_val cmt   
5 [0x5]:           ret   
6 [0x6]: line: 174 istorel 0, fp+0   : protected asm end
8 [0x8]:           ret   


function: std#_nil_.to_string[2268] params(0) in file: lib\support\0.2.9/nil.sharp:14:15: note:  
		    public def to_string() := new string("nil");
		              ^

0 [0x0]: line: 14 new_class @0 // app#__srt_global   
1 [0x1]:          checknull   
2 [0x2]:          dup    
3 [0x3]:          newstr @1 // nil   
4 [0x4]:          call @3469 // <std#string.string>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


constructor: std#_nil_._nil_[2269] params(0) in file: lib\support\0.2.9/nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#_object_.to_string[2270] params(0) in file: lib\support\0.2.9/object.sharp:13:15: note:  
		    public def to_string() := new string();
		              ^

0 [0x0]: line: 13 new_class @0 // app#__srt_global   
1 [0x1]:          checknull   
2 [0x2]:          dup    
3 [0x3]:          call @3527 // <std#string.string>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#_object_.wait[2271] params(0) in file: lib\support\0.2.9/object.sharp:15:8: note:  
		    def wait() {
		       ^

0 [0x0]: line: 16 pushl 0   : protected asm start
1 [0x1]:          int 0x3c   
2 [0x2]:          ret   : protected asm end


function: std#_object_.notify[2272] params(0) in file: lib\support\0.2.9/object.sharp:22:8: note:  
		    def notify() {
		       ^

0 [0x0]: line: 23 pushl 0   : protected asm start
1 [0x1]:          int 0x3d   
2 [0x2]:          ret   : protected asm end


function: std#_object_.notify[2273] params(1) in file: lib\support\0.2.9/object.sharp:29:8: note:  
		    def notify(mills: var) {
		       ^

0 [0x0]: line: 30 pushl 0   : protected asm start
1 [0x1]:          loadl ebx, fp+1   
2 [0x2]:          int 0x3e   
3 [0x3]:          ret   : protected asm end


function: std#_object_._lock[2274] params(0) in file: lib\support\0.2.9/object.sharp:37:8: note:  
		    def _lock() {
		       ^

0 [0x0]: line: 38 movl 0   : protected asm start
1 [0x1]:          _lck    
2 [0x2]:          ret   : protected asm end


function: std#_object_._unlock[2275] params(0) in file: lib\support\0.2.9/object.sharp:44:8: note:  
		    def _unlock() {
		       ^

0 [0x0]: line: 45 movl 0   : protected asm start
1 [0x1]:          _ulck   
2 [0x2]:          ret   : protected asm end


function: std#_object_.hash[2276] params(0) in file: lib\support\0.2.9/object.sharp:51:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 53 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          istore 0   
5 [0x5]:          call @2430 // <std#long.long>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std#_object_.guid[2277] params(0) in file: lib\support\0.2.9/object.sharp:56:8: note:  
		    def guid() : long {
		       ^

0 [0x0]: line: 58 new_class @0 // app#__srt_global   
1 [0x1]:          movn #112   
3 [0x3]:          movg @1 // @std#__srt_global   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          movr egx, ebx   
10 [0xa]:          inc ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]:          rstore egx   
15 [0xf]:          call @2430 // <std#long.long>   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


constructor: std#_object_._object_[2278] params(0) in file: lib\support\0.2.9/object.sharp:11:13: note:  
		stable class _object_ : printable, unique {
		            ^

0 [0x0]:         ret   


function: platform#build.is_windows[2279] params(0) in file: lib\support\0.2.9/platform//build.sharp:9:15: note:  
		    static def is_windows() : var {
		              ^

0 [0x0]: line: 10 movg @43 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @27 // win   
5 [0x5]:          call @3486 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: platform#build.is_linux[2280] params(0) in file: lib\support\0.2.9/platform//build.sharp:13:15: note:  
		    static def is_linux() : var {
		              ^

0 [0x0]: line: 14 movg @43 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @28 // posix   
5 [0x5]:          call @3486 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: platform#build.build[2281] params(0) in file: lib\support\0.2.9/platform//build.sharp:3:6: note:  
		class build {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform#__srt_global.load_library[2282] params(1) in file: lib\support\0.2.9/platform//dl.sharp:5:4: note:  
		def load_library(name: string) {
		   ^

0 [0x0]: line: 6 pushl 0   
1 [0x1]:         call @2289 // <platform.kernel#platform.load_library>   
2 [0x2]:         ret   


function: platform#__srt_global.free_library[2283] params(1) in file: lib\support\0.2.9/platform//dl.sharp:9:4: note:  
		def free_library(name: string): var {
		   ^

0 [0x0]: line: 10 pushl 0   
1 [0x1]:          call @2290 // <platform.kernel#platform.free_library>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: platform#__srt_global.link[2284] params(2) in file: lib\support\0.2.9/platform//dl.sharp:13:4: note:  
		def link(name: string, library: string): var {
		   ^

0 [0x0]: line: 14 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @2291 // <platform.kernel#platform.link_func>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: platform.kernel#platform.tls_init[2285] params(0) in file: lib\support\0.2.9/platform//kernel//platform.sharp:13:15: note:  
		    static def tls_init() {}
		              ^

0 [0x0]: line: 13 ret   


function: platform.kernel#platform.static_init[2286] params(0) in file: lib\support\0.2.9/platform//kernel//platform.sharp:14:23: note:  
		    private static def static_init() {}
		                      ^

0 [0x0]: line: 14 new_class @0 // app#__srt_global   
1 [0x1]:          iadd adx, #? (11063)   
3 [0x3]:          movn #0   
5 [0x5]:          popobj   
6 [0x6]:          newstr @45 // EXCLUSIVE   
7 [0x7]:          movg @21 // @std.io#buffer_type   
8 [0x8]:          movn #0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]:          movi #31128, ebx   
15 [0xf]:          movg @21 // @std.io#buffer_type   
16 [0x10]:          movn #0   
18 [0x12]:          movn #1   
20 [0x14]:          movi #0, adx   
22 [0x16]:          rmov adx, ebx   
23 [0x17]:          new_class @0 // app#__srt_global   
24 [0x18]:          iadd adx, #? (11063)   
26 [0x1a]:          movn #1   
28 [0x1c]:          popobj   
29 [0x1d]:          newstr @46 // SINGLE   
30 [0x1e]:          movg @21 // @std.io#buffer_type   
31 [0x1f]:          movn #1   
33 [0x21]:          movn #0   
35 [0x23]:          popobj   
36 [0x24]:          movi #31129, ebx   
38 [0x26]:          movg @21 // @std.io#buffer_type   
39 [0x27]:          movn #1   
41 [0x29]:          movn #1   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          rmov adx, ebx   
46 [0x2e]:          new_class @0 // app#__srt_global   
47 [0x2f]:          iadd adx, #? (11063)   
49 [0x31]:          movn #2   
51 [0x33]:          popobj   
52 [0x34]:          newstr @47 // UNLIMITED   
53 [0x35]:          movg @21 // @std.io#buffer_type   
54 [0x36]:          movn #2   
56 [0x38]:          movn #0   
58 [0x3a]:          popobj   
59 [0x3b]:          movi #31130, ebx   
61 [0x3d]:          movg @21 // @std.io#buffer_type   
62 [0x3e]:          movn #2   
64 [0x40]:          movn #1   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]:          new_class @0 // app#__srt_global   
70 [0x46]:          iadd adx, #? (11063)   
72 [0x48]:          movn #3   
74 [0x4a]:          popobj   
75 [0x4b]:          newstr @48 // BUFFERED   
76 [0x4c]:          movg @21 // @std.io#buffer_type   
77 [0x4d]:          movn #3   
79 [0x4f]:          movn #0   
81 [0x51]:          popobj   
82 [0x52]:          movi #31131, ebx   
84 [0x54]:          movg @21 // @std.io#buffer_type   
85 [0x55]:          movn #3   
87 [0x57]:          movn #1   
89 [0x59]:          movi #0, adx   
91 [0x5b]:          rmov adx, ebx   
92 [0x5c]:          new_class @0 // app#__srt_global   
93 [0x5d]:          brh   
94 [0x5e]:          movg @30 // @std.io.task#job_state   
95 [0x5f]:          movn #0   
97 [0x61]:          popobj   
98 [0x62]:          newstr @49 // created   
99 [0x63]:          movg @30 // @std.io.task#job_state   
100 [0x64]:          movn #0   
102 [0x66]:          movn #0   
104 [0x68]:          popobj   
105 [0x69]:          movi #-1, ebx   
107 [0x6b]:          movg @30 // @std.io.task#job_state   
108 [0x6c]:          movn #0   
110 [0x6e]:          movn #1   
112 [0x70]:          movi #0, adx   
114 [0x72]:          rmov adx, ebx   
115 [0x73]:          new_class @0 // app#__srt_global   
116 [0x74]:          brh   
117 [0x75]:          movg @30 // @std.io.task#job_state   
118 [0x76]:          movn #1   
120 [0x78]:          popobj   
121 [0x79]:          newstr @50 // active   
122 [0x7a]:          movg @30 // @std.io.task#job_state   
123 [0x7b]:          movn #1   
125 [0x7d]:          movn #0   
127 [0x7f]:          popobj   
128 [0x80]:          movi #0, ebx   
130 [0x82]:          movg @30 // @std.io.task#job_state   
131 [0x83]:          movn #1   
133 [0x85]:          movn #1   
135 [0x87]:          movi #0, adx   
137 [0x89]:          rmov adx, ebx   
138 [0x8a]:          new_class @0 // app#__srt_global   
139 [0x8b]:          brh   
140 [0x8c]:          movg @30 // @std.io.task#job_state   
141 [0x8d]:          movn #2   
143 [0x8f]:          popobj   
144 [0x90]:          newstr @51 // completed   
145 [0x91]:          movg @30 // @std.io.task#job_state   
146 [0x92]:          movn #2   
148 [0x94]:          movn #0   
150 [0x96]:          popobj   
151 [0x97]:          movi #1, ebx   
153 [0x99]:          movg @30 // @std.io.task#job_state   
154 [0x9a]:          movn #2   
156 [0x9c]:          movn #1   
158 [0x9e]:          movi #0, adx   
160 [0xa0]:          rmov adx, ebx   
161 [0xa1]:          new_class @0 // app#__srt_global   
162 [0xa2]:          brh   
163 [0xa3]:          movg @30 // @std.io.task#job_state   
164 [0xa4]:          movn #3   
166 [0xa6]:          popobj   
167 [0xa7]:          newstr @52 // cancelled   
168 [0xa8]:          movg @30 // @std.io.task#job_state   
169 [0xa9]:          movn #3   
171 [0xab]:          movn #0   
173 [0xad]:          popobj   
174 [0xae]:          movi #2, ebx   
176 [0xb0]:          movg @30 // @std.io.task#job_state   
177 [0xb1]:          movn #3   
179 [0xb3]:          movn #1   
181 [0xb5]:          movi #0, adx   
183 [0xb7]:          rmov adx, ebx   
184 [0xb8]:          new_class @0 // app#__srt_global   
185 [0xb9]:          gt adx, adx   
186 [0xba]:          movg @34 // @std.io#thread_priority   
187 [0xbb]:          movn #0   
189 [0xbd]:          popobj   
190 [0xbe]:          newstr @53 // min_priority   
191 [0xbf]:          movg @34 // @std.io#thread_priority   
192 [0xc0]:          movn #0   
194 [0xc2]:          movn #0   
196 [0xc4]:          popobj   
197 [0xc5]:          movi #1, ebx   
199 [0xc7]:          movg @34 // @std.io#thread_priority   
200 [0xc8]:          movn #0   
202 [0xca]:          movn #1   
204 [0xcc]:          movi #0, adx   
206 [0xce]:          rmov adx, ebx   
207 [0xcf]:          new_class @0 // app#__srt_global   
208 [0xd0]:          gt adx, adx   
209 [0xd1]:          movg @34 // @std.io#thread_priority   
210 [0xd2]:          movn #1   
212 [0xd4]:          popobj   
213 [0xd5]:          newstr @54 // norm_priority   
214 [0xd6]:          movg @34 // @std.io#thread_priority   
215 [0xd7]:          movn #1   
217 [0xd9]:          movn #0   
219 [0xdb]:          popobj   
220 [0xdc]:          movi #4, ebx   
222 [0xde]:          movg @34 // @std.io#thread_priority   
223 [0xdf]:          movn #1   
225 [0xe1]:          movn #1   
227 [0xe3]:          movi #0, adx   
229 [0xe5]:          rmov adx, ebx   
230 [0xe6]:          new_class @0 // app#__srt_global   
231 [0xe7]:          gt adx, adx   
232 [0xe8]:          movg @34 // @std.io#thread_priority   
233 [0xe9]:          movn #2   
235 [0xeb]:          popobj   
236 [0xec]:          newstr @55 // max_priority   
237 [0xed]:          movg @34 // @std.io#thread_priority   
238 [0xee]:          movn #2   
240 [0xf0]:          movn #0   
242 [0xf2]:          popobj   
243 [0xf3]:          movi #6, ebx   
245 [0xf5]:          movg @34 // @std.io#thread_priority   
246 [0xf6]:          movn #2   
248 [0xf8]:          movn #1   
250 [0xfa]:          movi #0, adx   
252 [0xfc]:          rmov adx, ebx   
253 [0xfd]:          new_class @0 // app#__srt_global   
254 [0xfe]:          lte adx, adx   
255 [0xff]:          movg @35 // @std.io#thread_result   
256 [0x100]:          movn #0   
258 [0x102]:          popobj   
259 [0x103]:          newstr @56 // result_ok   
260 [0x104]:          movg @35 // @std.io#thread_result   
261 [0x105]:          movn #0   
263 [0x107]:          movn #0   
265 [0x109]:          popobj   
266 [0x10a]:          movi #0, ebx   
268 [0x10c]:          movg @35 // @std.io#thread_result   
269 [0x10d]:          movn #0   
271 [0x10f]:          movn #1   
273 [0x111]:          movi #0, adx   
275 [0x113]:          rmov adx, ebx   
276 [0x114]:          new_class @0 // app#__srt_global   
277 [0x115]:          lte adx, adx   
278 [0x116]:          movg @35 // @std.io#thread_result   
279 [0x117]:          movn #1   
281 [0x119]:          popobj   
282 [0x11a]:          newstr @57 // result_ill_thread_start   
283 [0x11b]:          movg @35 // @std.io#thread_result   
284 [0x11c]:          movn #1   
286 [0x11e]:          movn #0   
288 [0x120]:          popobj   
289 [0x121]:          movi #1, ebx   
291 [0x123]:          movg @35 // @std.io#thread_result   
292 [0x124]:          movn #1   
294 [0x126]:          movn #1   
296 [0x128]:          movi #0, adx   
298 [0x12a]:          rmov adx, ebx   
299 [0x12b]:          new_class @0 // app#__srt_global   
300 [0x12c]:          lte adx, adx   
301 [0x12d]:          movg @35 // @std.io#thread_result   
302 [0x12e]:          movn #2   
304 [0x130]:          popobj   
305 [0x131]:          newstr @58 // result_thread_running   
306 [0x132]:          movg @35 // @std.io#thread_result   
307 [0x133]:          movn #2   
309 [0x135]:          movn #0   
311 [0x137]:          popobj   
312 [0x138]:          movi #2, ebx   
314 [0x13a]:          movg @35 // @std.io#thread_result   
315 [0x13b]:          movn #2   
317 [0x13d]:          movn #1   
319 [0x13f]:          movi #0, adx   
321 [0x141]:          rmov adx, ebx   
322 [0x142]:          new_class @0 // app#__srt_global   
323 [0x143]:          lte adx, adx   
324 [0x144]:          movg @35 // @std.io#thread_result   
325 [0x145]:          movn #3   
327 [0x147]:          popobj   
328 [0x148]:          newstr @59 // result_thread_terminated   
329 [0x149]:          movg @35 // @std.io#thread_result   
330 [0x14a]:          movn #3   
332 [0x14c]:          movn #0   
334 [0x14e]:          popobj   
335 [0x14f]:          movi #3, ebx   
337 [0x151]:          movg @35 // @std.io#thread_result   
338 [0x152]:          movn #3   
340 [0x154]:          movn #1   
342 [0x156]:          movi #0, adx   
344 [0x158]:          rmov adx, ebx   
345 [0x159]:          new_class @0 // app#__srt_global   
346 [0x15a]:          lte adx, adx   
347 [0x15b]:          movg @35 // @std.io#thread_result   
348 [0x15c]:          movn #4   
350 [0x15e]:          popobj   
351 [0x15f]:          newstr @60 // result_invalid_stack_size   
352 [0x160]:          movg @35 // @std.io#thread_result   
353 [0x161]:          movn #4   
355 [0x163]:          movn #0   
357 [0x165]:          popobj   
358 [0x166]:          movi #4, ebx   
360 [0x168]:          movg @35 // @std.io#thread_result   
361 [0x169]:          movn #4   
363 [0x16b]:          movn #1   
365 [0x16d]:          movi #0, adx   
367 [0x16f]:          rmov adx, ebx   
368 [0x170]:          new_class @0 // app#__srt_global   
369 [0x171]:          lte adx, adx   
370 [0x172]:          movg @35 // @std.io#thread_result   
371 [0x173]:          movn #5   
373 [0x175]:          popobj   
374 [0x176]:          newstr @61 // result_thread_not_started   
375 [0x177]:          movg @35 // @std.io#thread_result   
376 [0x178]:          movn #5   
378 [0x17a]:          movn #0   
380 [0x17c]:          popobj   
381 [0x17d]:          movi #5, ebx   
383 [0x17f]:          movg @35 // @std.io#thread_result   
384 [0x180]:          movn #5   
386 [0x182]:          movn #1   
388 [0x184]:          movi #0, adx   
390 [0x186]:          rmov adx, ebx   
391 [0x187]:          new_class @0 // app#__srt_global   
392 [0x188]:          lte adx, adx   
393 [0x189]:          movg @35 // @std.io#thread_result   
394 [0x18a]:          movn #6   
396 [0x18c]:          popobj   
397 [0x18d]:          newstr @62 // result_ill_thread_join   
398 [0x18e]:          movg @35 // @std.io#thread_result   
399 [0x18f]:          movn #6   
401 [0x191]:          movn #0   
403 [0x193]:          popobj   
404 [0x194]:          movi #6, ebx   
406 [0x196]:          movg @35 // @std.io#thread_result   
407 [0x197]:          movn #6   
409 [0x199]:          movn #1   
411 [0x19b]:          movi #0, adx   
413 [0x19d]:          rmov adx, ebx   
414 [0x19e]:          new_class @0 // app#__srt_global   
415 [0x19f]:          lte adx, adx   
416 [0x1a0]:          movg @35 // @std.io#thread_result   
417 [0x1a1]:          movn #7   
419 [0x1a3]:          popobj   
420 [0x1a4]:          newstr @63 // result_thread_join_failed   
421 [0x1a5]:          movg @35 // @std.io#thread_result   
422 [0x1a6]:          movn #7   
424 [0x1a8]:          movn #0   
426 [0x1aa]:          popobj   
427 [0x1ab]:          movi #7, ebx   
429 [0x1ad]:          movg @35 // @std.io#thread_result   
430 [0x1ae]:          movn #7   
432 [0x1b0]:          movn #1   
434 [0x1b2]:          movi #0, adx   
436 [0x1b4]:          rmov adx, ebx   
437 [0x1b5]:          new_class @0 // app#__srt_global   
438 [0x1b6]:          lte adx, adx   
439 [0x1b7]:          movg @35 // @std.io#thread_result   
440 [0x1b8]:          movn #8   
442 [0x1ba]:          popobj   
443 [0x1bb]:          newstr @64 // result_ill_thread_interrupt   
444 [0x1bc]:          movg @35 // @std.io#thread_result   
445 [0x1bd]:          movn #8   
447 [0x1bf]:          movn #0   
449 [0x1c1]:          popobj   
450 [0x1c2]:          movi #8, ebx   
452 [0x1c4]:          movg @35 // @std.io#thread_result   
453 [0x1c5]:          movn #8   
455 [0x1c7]:          movn #1   
457 [0x1c9]:          movi #0, adx   
459 [0x1cb]:          rmov adx, ebx   
460 [0x1cc]:          new_class @0 // app#__srt_global   
461 [0x1cd]:          lte adx, adx   
462 [0x1ce]:          movg @35 // @std.io#thread_result   
463 [0x1cf]:          movn #9   
465 [0x1d1]:          popobj   
466 [0x1d2]:          newstr @65 // result_thread_interrupt_failed   
467 [0x1d3]:          movg @35 // @std.io#thread_result   
468 [0x1d4]:          movn #9   
470 [0x1d6]:          movn #0   
472 [0x1d8]:          popobj   
473 [0x1d9]:          movi #9, ebx   
475 [0x1db]:          movg @35 // @std.io#thread_result   
476 [0x1dc]:          movn #9   
478 [0x1de]:          movn #1   
480 [0x1e0]:          movi #0, adx   
482 [0x1e2]:          rmov adx, ebx   
483 [0x1e3]:          new_class @0 // app#__srt_global   
484 [0x1e4]:          lte adx, adx   
485 [0x1e5]:          movg @35 // @std.io#thread_result   
486 [0x1e6]:          movn #10   
488 [0x1e8]:          popobj   
489 [0x1e9]:          newstr @66 // result_ill_thread_destroy   
490 [0x1ea]:          movg @35 // @std.io#thread_result   
491 [0x1eb]:          movn #10   
493 [0x1ed]:          movn #0   
495 [0x1ef]:          popobj   
496 [0x1f0]:          movi #10, ebx   
498 [0x1f2]:          movg @35 // @std.io#thread_result   
499 [0x1f3]:          movn #10   
501 [0x1f5]:          movn #1   
503 [0x1f7]:          movi #0, adx   
505 [0x1f9]:          rmov adx, ebx   
506 [0x1fa]:          new_class @0 // app#__srt_global   
507 [0x1fb]:          lte adx, adx   
508 [0x1fc]:          movg @35 // @std.io#thread_result   
509 [0x1fd]:          movn #11   
511 [0x1ff]:          popobj   
512 [0x200]:          newstr @67 // result_thread_create_failed   
513 [0x201]:          movg @35 // @std.io#thread_result   
514 [0x202]:          movn #11   
516 [0x204]:          movn #0   
518 [0x206]:          popobj   
519 [0x207]:          movi #11, ebx   
521 [0x209]:          movg @35 // @std.io#thread_result   
522 [0x20a]:          movn #11   
524 [0x20c]:          movn #1   
526 [0x20e]:          movi #0, adx   
528 [0x210]:          rmov adx, ebx   
529 [0x211]:          new_class @0 // app#__srt_global   
530 [0x212]:          lte adx, adx   
531 [0x213]:          movg @35 // @std.io#thread_result   
532 [0x214]:          movn #12   
534 [0x216]:          popobj   
535 [0x217]:          newstr @68 // result_no_thread_id   
536 [0x218]:          movg @35 // @std.io#thread_result   
537 [0x219]:          movn #12   
539 [0x21b]:          movn #0   
541 [0x21d]:          popobj   
542 [0x21e]:          movi #12, ebx   
544 [0x220]:          movg @35 // @std.io#thread_result   
545 [0x221]:          movn #12   
547 [0x223]:          movn #1   
549 [0x225]:          movi #0, adx   
551 [0x227]:          rmov adx, ebx   
552 [0x228]:          new_class @0 // app#__srt_global   
553 [0x229]:          lte adx, adx   
554 [0x22a]:          movg @35 // @std.io#thread_result   
555 [0x22b]:          movn #13   
557 [0x22d]:          popobj   
558 [0x22e]:          newstr @69 // result_thread_destroy_failed   
559 [0x22f]:          movg @35 // @std.io#thread_result   
560 [0x230]:          movn #13   
562 [0x232]:          movn #0   
564 [0x234]:          popobj   
565 [0x235]:          movi #13, ebx   
567 [0x237]:          movg @35 // @std.io#thread_result   
568 [0x238]:          movn #13   
570 [0x23a]:          movn #1   
572 [0x23c]:          movi #0, adx   
574 [0x23e]:          rmov adx, ebx   
575 [0x23f]:          new_class @0 // app#__srt_global   
576 [0x240]:          lte adx, adx   
577 [0x241]:          movg @35 // @std.io#thread_result   
578 [0x242]:          movn #14   
580 [0x244]:          popobj   
581 [0x245]:          newstr @70 // result_ill_priority_set   
582 [0x246]:          movg @35 // @std.io#thread_result   
583 [0x247]:          movn #14   
585 [0x249]:          movn #0   
587 [0x24b]:          popobj   
588 [0x24c]:          movi #14, ebx   
590 [0x24e]:          movg @35 // @std.io#thread_result   
591 [0x24f]:          movn #14   
593 [0x251]:          movn #1   
595 [0x253]:          movi #0, adx   
597 [0x255]:          rmov adx, ebx   
598 [0x256]:          new_class @0 // app#__srt_global   
599 [0x257]:          lte adx, adx   
600 [0x258]:          movg @35 // @std.io#thread_result   
601 [0x259]:          movn #15   
603 [0x25b]:          popobj   
604 [0x25c]:          newstr @71 // result_ill_thread_suspend   
605 [0x25d]:          movg @35 // @std.io#thread_result   
606 [0x25e]:          movn #15   
608 [0x260]:          movn #0   
610 [0x262]:          popobj   
611 [0x263]:          movi #15, ebx   
613 [0x265]:          movg @35 // @std.io#thread_result   
614 [0x266]:          movn #15   
616 [0x268]:          movn #1   
618 [0x26a]:          movi #0, adx   
620 [0x26c]:          rmov adx, ebx   
621 [0x26d]:          new_class @0 // app#__srt_global   
622 [0x26e]:          lte adx, adx   
623 [0x26f]:          movg @35 // @std.io#thread_result   
624 [0x270]:          movn #16   
626 [0x272]:          popobj   
627 [0x273]:          newstr @72 // result_max_spin   
628 [0x274]:          movg @35 // @std.io#thread_result   
629 [0x275]:          movn #16   
631 [0x277]:          movn #0   
633 [0x279]:          popobj   
634 [0x27a]:          movi #255, ebx   
636 [0x27c]:          movg @35 // @std.io#thread_result   
637 [0x27d]:          movn #16   
639 [0x27f]:          movn #1   
641 [0x281]:          movi #0, adx   
643 [0x283]:          rmov adx, ebx   
644 [0x284]:          new_class @0 // app#__srt_global   
645 [0x285]:          lte adx, adx   
646 [0x286]:          movg @35 // @std.io#thread_result   
647 [0x287]:          movn #17   
649 [0x289]:          popobj   
650 [0x28a]:          newstr @73 // enums   
651 [0x28b]:          movg @35 // @std.io#thread_result   
652 [0x28c]:          movn #17   
654 [0x28e]:          movn #0   
656 [0x290]:          popobj   
657 [0x291]:          movi #256, ebx   
659 [0x293]:          movg @35 // @std.io#thread_result   
660 [0x294]:          movn #17   
662 [0x296]:          movn #1   
664 [0x298]:          movi #0, adx   
666 [0x29a]:          rmov adx, ebx   
667 [0x29b]:          new_class @0 // app#__srt_global   
668 [0x29c]:          skne adx // pc = 668   
669 [0x29d]:          movg @64 // @std.reflect#data_type   
670 [0x29e]:          movn #0   
672 [0x2a0]:          popobj   
673 [0x2a1]:          newstr @74 // int8   
674 [0x2a2]:          movg @64 // @std.reflect#data_type   
675 [0x2a3]:          movn #0   
677 [0x2a5]:          movn #0   
679 [0x2a7]:          popobj   
680 [0x2a8]:          movi #0, ebx   
682 [0x2aa]:          movg @64 // @std.reflect#data_type   
683 [0x2ab]:          movn #0   
685 [0x2ad]:          movn #1   
687 [0x2af]:          movi #0, adx   
689 [0x2b1]:          rmov adx, ebx   
690 [0x2b2]:          new_class @0 // app#__srt_global   
691 [0x2b3]:          skne adx // pc = 691   
692 [0x2b4]:          movg @64 // @std.reflect#data_type   
693 [0x2b5]:          movn #1   
695 [0x2b7]:          popobj   
696 [0x2b8]:          newstr @75 // int16   
697 [0x2b9]:          movg @64 // @std.reflect#data_type   
698 [0x2ba]:          movn #1   
700 [0x2bc]:          movn #0   
702 [0x2be]:          popobj   
703 [0x2bf]:          movi #1, ebx   
705 [0x2c1]:          movg @64 // @std.reflect#data_type   
706 [0x2c2]:          movn #1   
708 [0x2c4]:          movn #1   
710 [0x2c6]:          movi #0, adx   
712 [0x2c8]:          rmov adx, ebx   
713 [0x2c9]:          new_class @0 // app#__srt_global   
714 [0x2ca]:          skne adx // pc = 714   
715 [0x2cb]:          movg @64 // @std.reflect#data_type   
716 [0x2cc]:          movn #2   
718 [0x2ce]:          popobj   
719 [0x2cf]:          newstr @76 // int32   
720 [0x2d0]:          movg @64 // @std.reflect#data_type   
721 [0x2d1]:          movn #2   
723 [0x2d3]:          movn #0   
725 [0x2d5]:          popobj   
726 [0x2d6]:          movi #2, ebx   
728 [0x2d8]:          movg @64 // @std.reflect#data_type   
729 [0x2d9]:          movn #2   
731 [0x2db]:          movn #1   
733 [0x2dd]:          movi #0, adx   
735 [0x2df]:          rmov adx, ebx   
736 [0x2e0]:          new_class @0 // app#__srt_global   
737 [0x2e1]:          skne adx // pc = 737   
738 [0x2e2]:          movg @64 // @std.reflect#data_type   
739 [0x2e3]:          movn #3   
741 [0x2e5]:          popobj   
742 [0x2e6]:          newstr @77 // int64   
743 [0x2e7]:          movg @64 // @std.reflect#data_type   
744 [0x2e8]:          movn #3   
746 [0x2ea]:          movn #0   
748 [0x2ec]:          popobj   
749 [0x2ed]:          movi #3, ebx   
751 [0x2ef]:          movg @64 // @std.reflect#data_type   
752 [0x2f0]:          movn #3   
754 [0x2f2]:          movn #1   
756 [0x2f4]:          movi #0, adx   
758 [0x2f6]:          rmov adx, ebx   
759 [0x2f7]:          new_class @0 // app#__srt_global   
760 [0x2f8]:          skne adx // pc = 760   
761 [0x2f9]:          movg @64 // @std.reflect#data_type   
762 [0x2fa]:          movn #4   
764 [0x2fc]:          popobj   
765 [0x2fd]:          newstr @78 // uint8   
766 [0x2fe]:          movg @64 // @std.reflect#data_type   
767 [0x2ff]:          movn #4   
769 [0x301]:          movn #0   
771 [0x303]:          popobj   
772 [0x304]:          movi #4, ebx   
774 [0x306]:          movg @64 // @std.reflect#data_type   
775 [0x307]:          movn #4   
777 [0x309]:          movn #1   
779 [0x30b]:          movi #0, adx   
781 [0x30d]:          rmov adx, ebx   
782 [0x30e]:          new_class @0 // app#__srt_global   
783 [0x30f]:          skne adx // pc = 783   
784 [0x310]:          movg @64 // @std.reflect#data_type   
785 [0x311]:          movn #5   
787 [0x313]:          popobj   
788 [0x314]:          newstr @79 // uint16   
789 [0x315]:          movg @64 // @std.reflect#data_type   
790 [0x316]:          movn #5   
792 [0x318]:          movn #0   
794 [0x31a]:          popobj   
795 [0x31b]:          movi #5, ebx   
797 [0x31d]:          movg @64 // @std.reflect#data_type   
798 [0x31e]:          movn #5   
800 [0x320]:          movn #1   
802 [0x322]:          movi #0, adx   
804 [0x324]:          rmov adx, ebx   
805 [0x325]:          new_class @0 // app#__srt_global   
806 [0x326]:          skne adx // pc = 806   
807 [0x327]:          movg @64 // @std.reflect#data_type   
808 [0x328]:          movn #6   
810 [0x32a]:          popobj   
811 [0x32b]:          newstr @80 // uint32   
812 [0x32c]:          movg @64 // @std.reflect#data_type   
813 [0x32d]:          movn #6   
815 [0x32f]:          movn #0   
817 [0x331]:          popobj   
818 [0x332]:          movi #6, ebx   
820 [0x334]:          movg @64 // @std.reflect#data_type   
821 [0x335]:          movn #6   
823 [0x337]:          movn #1   
825 [0x339]:          movi #0, adx   
827 [0x33b]:          rmov adx, ebx   
828 [0x33c]:          new_class @0 // app#__srt_global   
829 [0x33d]:          skne adx // pc = 829   
830 [0x33e]:          movg @64 // @std.reflect#data_type   
831 [0x33f]:          movn #7   
833 [0x341]:          popobj   
834 [0x342]:          newstr @81 // uint64   
835 [0x343]:          movg @64 // @std.reflect#data_type   
836 [0x344]:          movn #7   
838 [0x346]:          movn #0   
840 [0x348]:          popobj   
841 [0x349]:          movi #7, ebx   
843 [0x34b]:          movg @64 // @std.reflect#data_type   
844 [0x34c]:          movn #7   
846 [0x34e]:          movn #1   
848 [0x350]:          movi #0, adx   
850 [0x352]:          rmov adx, ebx   
851 [0x353]:          new_class @0 // app#__srt_global   
852 [0x354]:          skne adx // pc = 852   
853 [0x355]:          movg @64 // @std.reflect#data_type   
854 [0x356]:          movn #8   
856 [0x358]:          popobj   
857 [0x359]:          newstr @82 // fnptr   
858 [0x35a]:          movg @64 // @std.reflect#data_type   
859 [0x35b]:          movn #8   
861 [0x35d]:          movn #0   
863 [0x35f]:          popobj   
864 [0x360]:          movi #8, ebx   
866 [0x362]:          movg @64 // @std.reflect#data_type   
867 [0x363]:          movn #8   
869 [0x365]:          movn #1   
871 [0x367]:          movi #0, adx   
873 [0x369]:          rmov adx, ebx   
874 [0x36a]:          new_class @0 // app#__srt_global   
875 [0x36b]:          skne adx // pc = 875   
876 [0x36c]:          movg @64 // @std.reflect#data_type   
877 [0x36d]:          movn #9   
879 [0x36f]:          popobj   
880 [0x370]:          newstr @83 // _var   
881 [0x371]:          movg @64 // @std.reflect#data_type   
882 [0x372]:          movn #9   
884 [0x374]:          movn #0   
886 [0x376]:          popobj   
887 [0x377]:          movi #9, ebx   
889 [0x379]:          movg @64 // @std.reflect#data_type   
890 [0x37a]:          movn #9   
892 [0x37c]:          movn #1   
894 [0x37e]:          movi #0, adx   
896 [0x380]:          rmov adx, ebx   
897 [0x381]:          new_class @0 // app#__srt_global   
898 [0x382]:          skne adx // pc = 898   
899 [0x383]:          movg @64 // @std.reflect#data_type   
900 [0x384]:          movn #10   
902 [0x386]:          popobj   
903 [0x387]:          newstr @84 // _object   
904 [0x388]:          movg @64 // @std.reflect#data_type   
905 [0x389]:          movn #10   
907 [0x38b]:          movn #0   
909 [0x38d]:          popobj   
910 [0x38e]:          movi #10, ebx   
912 [0x390]:          movg @64 // @std.reflect#data_type   
913 [0x391]:          movn #10   
915 [0x393]:          movn #1   
917 [0x395]:          movi #0, adx   
919 [0x397]:          rmov adx, ebx   
920 [0x398]:          new_class @0 // app#__srt_global   
921 [0x399]:          skne adx // pc = 921   
922 [0x39a]:          movg @64 // @std.reflect#data_type   
923 [0x39b]:          movn #11   
925 [0x39d]:          popobj   
926 [0x39e]:          newstr @85 // _class   
927 [0x39f]:          movg @64 // @std.reflect#data_type   
928 [0x3a0]:          movn #11   
930 [0x3a2]:          movn #0   
932 [0x3a4]:          popobj   
933 [0x3a5]:          movi #11, ebx   
935 [0x3a7]:          movg @64 // @std.reflect#data_type   
936 [0x3a8]:          movn #11   
938 [0x3aa]:          movn #1   
940 [0x3ac]:          movi #0, adx   
942 [0x3ae]:          rmov adx, ebx   
943 [0x3af]:          new_class @0 // app#__srt_global   
944 [0x3b0]:          skne adx // pc = 944   
945 [0x3b1]:          movg @64 // @std.reflect#data_type   
946 [0x3b2]:          movn #12   
948 [0x3b4]:          popobj   
949 [0x3b5]:          newstr @86 // method   
950 [0x3b6]:          movg @64 // @std.reflect#data_type   
951 [0x3b7]:          movn #12   
953 [0x3b9]:          movn #0   
955 [0x3bb]:          popobj   
956 [0x3bc]:          movi #12, ebx   
958 [0x3be]:          movg @64 // @std.reflect#data_type   
959 [0x3bf]:          movn #12   
961 [0x3c1]:          movn #1   
963 [0x3c3]:          movi #0, adx   
965 [0x3c5]:          rmov adx, ebx   
966 [0x3c6]:          new_class @0 // app#__srt_global   
967 [0x3c7]:          skne adx // pc = 967   
968 [0x3c8]:          movg @64 // @std.reflect#data_type   
969 [0x3c9]:          movn #13   
971 [0x3cb]:          popobj   
972 [0x3cc]:          newstr @87 // _nil   
973 [0x3cd]:          movg @64 // @std.reflect#data_type   
974 [0x3ce]:          movn #13   
976 [0x3d0]:          movn #0   
978 [0x3d2]:          popobj   
979 [0x3d3]:          movi #13, ebx   
981 [0x3d5]:          movg @64 // @std.reflect#data_type   
982 [0x3d6]:          movn #13   
984 [0x3d8]:          movn #1   
986 [0x3da]:          movi #0, adx   
988 [0x3dc]:          rmov adx, ebx   
989 [0x3dd]:          new_class @0 // app#__srt_global   
990 [0x3de]:          skne adx // pc = 990   
991 [0x3df]:          movg @64 // @std.reflect#data_type   
992 [0x3e0]:          movn #14   
994 [0x3e2]:          popobj   
995 [0x3e3]:          newstr @88 // any   
996 [0x3e4]:          movg @64 // @std.reflect#data_type   
997 [0x3e5]:          movn #14   
999 [0x3e7]:          movn #0   
1001 [0x3e9]:          popobj   
1002 [0x3ea]:          movi #14, ebx   
1004 [0x3ec]:          movg @64 // @std.reflect#data_type   
1005 [0x3ed]:          movn #14   
1007 [0x3ef]:          movn #1   
1009 [0x3f1]:          movi #0, adx   
1011 [0x3f3]:          rmov adx, ebx   
1012 [0x3f4]:          new_class @0 // app#__srt_global   
1013 [0x3f5]:          skne adx // pc = 1013   
1014 [0x3f6]:          movg @64 // @std.reflect#data_type   
1015 [0x3f7]:          movn #15   
1017 [0x3f9]:          popobj   
1018 [0x3fa]:          newstr @89 // untyped   
1019 [0x3fb]:          movg @64 // @std.reflect#data_type   
1020 [0x3fc]:          movn #15   
1022 [0x3fe]:          movn #0   
1024 [0x400]:          popobj   
1025 [0x401]:          movi #15, ebx   
1027 [0x403]:          movg @64 // @std.reflect#data_type   
1028 [0x404]:          movn #15   
1030 [0x406]:          movn #1   
1032 [0x408]:          movi #0, adx   
1034 [0x40a]:          rmov adx, ebx   
1035 [0x40b]:          new_class @0 // app#__srt_global   
1036 [0x40c]:          skne adx // pc = 1036   
1037 [0x40d]:          movg @64 // @std.reflect#data_type   
1038 [0x40e]:          movn #16   
1040 [0x410]:          popobj   
1041 [0x411]:          newstr @90 // undefined   
1042 [0x412]:          movg @64 // @std.reflect#data_type   
1043 [0x413]:          movn #16   
1045 [0x415]:          movn #0   
1047 [0x417]:          popobj   
1048 [0x418]:          movi #16, ebx   
1050 [0x41a]:          movg @64 // @std.reflect#data_type   
1051 [0x41b]:          movn #16   
1053 [0x41d]:          movn #1   
1055 [0x41f]:          movi #0, adx   
1057 [0x421]:          rmov adx, ebx   
1058 [0x422]:          new_class @0 // app#__srt_global   
1059 [0x423]:          and adx, adx   
1060 [0x424]:          movg @65 // @std.reflect#property_type   
1061 [0x425]:          movn #0   
1063 [0x427]:          popobj   
1064 [0x428]:          newstr @91 // class_property   
1065 [0x429]:          movg @65 // @std.reflect#property_type   
1066 [0x42a]:          movn #0   
1068 [0x42c]:          movn #0   
1070 [0x42e]:          popobj   
1071 [0x42f]:          movi #31133, ebx   
1073 [0x431]:          movg @65 // @std.reflect#property_type   
1074 [0x432]:          movn #0   
1076 [0x434]:          movn #1   
1078 [0x436]:          movi #0, adx   
1080 [0x438]:          rmov adx, ebx   
1081 [0x439]:          new_class @0 // app#__srt_global   
1082 [0x43a]:          and adx, adx   
1083 [0x43b]:          movg @65 // @std.reflect#property_type   
1084 [0x43c]:          movn #1   
1086 [0x43e]:          popobj   
1087 [0x43f]:          newstr @92 // field_property   
1088 [0x440]:          movg @65 // @std.reflect#property_type   
1089 [0x441]:          movn #1   
1091 [0x443]:          movn #0   
1093 [0x445]:          popobj   
1094 [0x446]:          movi #31134, ebx   
1096 [0x448]:          movg @65 // @std.reflect#property_type   
1097 [0x449]:          movn #1   
1099 [0x44b]:          movn #1   
1101 [0x44d]:          movi #0, adx   
1103 [0x44f]:          rmov adx, ebx   
1104 [0x450]:          new_class @0 // app#__srt_global   
1105 [0x451]:          and adx, adx   
1106 [0x452]:          movg @65 // @std.reflect#property_type   
1107 [0x453]:          movn #2   
1109 [0x455]:          popobj   
1110 [0x456]:          newstr @93 // function_property   
1111 [0x457]:          movg @65 // @std.reflect#property_type   
1112 [0x458]:          movn #2   
1114 [0x45a]:          movn #0   
1116 [0x45c]:          popobj   
1117 [0x45d]:          movi #31135, ebx   
1119 [0x45f]:          movg @65 // @std.reflect#property_type   
1120 [0x460]:          movn #2   
1122 [0x462]:          movn #1   
1124 [0x464]:          movi #0, adx   
1126 [0x466]:          rmov adx, ebx   
1127 [0x467]:          new_class @0 // app#__srt_global   
1128 [0x468]:          newstr @0 // job#   
1129 [0x469]:          movg @73 // @std#time_request   
1130 [0x46a]:          movn #0   
1132 [0x46c]:          popobj   
1133 [0x46d]:          newstr @94 // tm_seconds   
1134 [0x46e]:          movg @73 // @std#time_request   
1135 [0x46f]:          movn #0   
1137 [0x471]:          movn #0   
1139 [0x473]:          popobj   
1140 [0x474]:          movi #0, ebx   
1142 [0x476]:          movg @73 // @std#time_request   
1143 [0x477]:          movn #0   
1145 [0x479]:          movn #1   
1147 [0x47b]:          movi #0, adx   
1149 [0x47d]:          rmov adx, ebx   
1150 [0x47e]:          new_class @0 // app#__srt_global   
1151 [0x47f]:          newstr @0 // job#   
1152 [0x480]:          movg @73 // @std#time_request   
1153 [0x481]:          movn #1   
1155 [0x483]:          popobj   
1156 [0x484]:          newstr @95 // tm_minutes   
1157 [0x485]:          movg @73 // @std#time_request   
1158 [0x486]:          movn #1   
1160 [0x488]:          movn #0   
1162 [0x48a]:          popobj   
1163 [0x48b]:          movi #1, ebx   
1165 [0x48d]:          movg @73 // @std#time_request   
1166 [0x48e]:          movn #1   
1168 [0x490]:          movn #1   
1170 [0x492]:          movi #0, adx   
1172 [0x494]:          rmov adx, ebx   
1173 [0x495]:          new_class @0 // app#__srt_global   
1174 [0x496]:          newstr @0 // job#   
1175 [0x497]:          movg @73 // @std#time_request   
1176 [0x498]:          movn #2   
1178 [0x49a]:          popobj   
1179 [0x49b]:          newstr @96 // tm_hour   
1180 [0x49c]:          movg @73 // @std#time_request   
1181 [0x49d]:          movn #2   
1183 [0x49f]:          movn #0   
1185 [0x4a1]:          popobj   
1186 [0x4a2]:          movi #2, ebx   
1188 [0x4a4]:          movg @73 // @std#time_request   
1189 [0x4a5]:          movn #2   
1191 [0x4a7]:          movn #1   
1193 [0x4a9]:          movi #0, adx   
1195 [0x4ab]:          rmov adx, ebx   
1196 [0x4ac]:          new_class @0 // app#__srt_global   
1197 [0x4ad]:          newstr @0 // job#   
1198 [0x4ae]:          movg @73 // @std#time_request   
1199 [0x4af]:          movn #3   
1201 [0x4b1]:          popobj   
1202 [0x4b2]:          newstr @97 // tm_mday   
1203 [0x4b3]:          movg @73 // @std#time_request   
1204 [0x4b4]:          movn #3   
1206 [0x4b6]:          movn #0   
1208 [0x4b8]:          popobj   
1209 [0x4b9]:          movi #3, ebx   
1211 [0x4bb]:          movg @73 // @std#time_request   
1212 [0x4bc]:          movn #3   
1214 [0x4be]:          movn #1   
1216 [0x4c0]:          movi #0, adx   
1218 [0x4c2]:          rmov adx, ebx   
1219 [0x4c3]:          new_class @0 // app#__srt_global   
1220 [0x4c4]:          newstr @0 // job#   
1221 [0x4c5]:          movg @73 // @std#time_request   
1222 [0x4c6]:          movn #4   
1224 [0x4c8]:          popobj   
1225 [0x4c9]:          newstr @98 // tm_mon   
1226 [0x4ca]:          movg @73 // @std#time_request   
1227 [0x4cb]:          movn #4   
1229 [0x4cd]:          movn #0   
1231 [0x4cf]:          popobj   
1232 [0x4d0]:          movi #4, ebx   
1234 [0x4d2]:          movg @73 // @std#time_request   
1235 [0x4d3]:          movn #4   
1237 [0x4d5]:          movn #1   
1239 [0x4d7]:          movi #0, adx   
1241 [0x4d9]:          rmov adx, ebx   
1242 [0x4da]:          new_class @0 // app#__srt_global   
1243 [0x4db]:          newstr @0 // job#   
1244 [0x4dc]:          movg @73 // @std#time_request   
1245 [0x4dd]:          movn #5   
1247 [0x4df]:          popobj   
1248 [0x4e0]:          newstr @99 // tm_year   
1249 [0x4e1]:          movg @73 // @std#time_request   
1250 [0x4e2]:          movn #5   
1252 [0x4e4]:          movn #0   
1254 [0x4e6]:          popobj   
1255 [0x4e7]:          movi #5, ebx   
1257 [0x4e9]:          movg @73 // @std#time_request   
1258 [0x4ea]:          movn #5   
1260 [0x4ec]:          movn #1   
1262 [0x4ee]:          movi #0, adx   
1264 [0x4f0]:          rmov adx, ebx   
1265 [0x4f1]:          new_class @0 // app#__srt_global   
1266 [0x4f2]:          newstr @0 // job#   
1267 [0x4f3]:          movg @73 // @std#time_request   
1268 [0x4f4]:          movn #6   
1270 [0x4f6]:          popobj   
1271 [0x4f7]:          newstr @100 // tm_wday   
1272 [0x4f8]:          movg @73 // @std#time_request   
1273 [0x4f9]:          movn #6   
1275 [0x4fb]:          movn #0   
1277 [0x4fd]:          popobj   
1278 [0x4fe]:          movi #6, ebx   
1280 [0x500]:          movg @73 // @std#time_request   
1281 [0x501]:          movn #6   
1283 [0x503]:          movn #1   
1285 [0x505]:          movi #0, adx   
1287 [0x507]:          rmov adx, ebx   
1288 [0x508]:          new_class @0 // app#__srt_global   
1289 [0x509]:          newstr @0 // job#   
1290 [0x50a]:          movg @73 // @std#time_request   
1291 [0x50b]:          movn #7   
1293 [0x50d]:          popobj   
1294 [0x50e]:          newstr @101 // tm_yday   
1295 [0x50f]:          movg @73 // @std#time_request   
1296 [0x510]:          movn #7   
1298 [0x512]:          movn #0   
1300 [0x514]:          popobj   
1301 [0x515]:          movi #7, ebx   
1303 [0x517]:          movg @73 // @std#time_request   
1304 [0x518]:          movn #7   
1306 [0x51a]:          movn #1   
1308 [0x51c]:          movi #0, adx   
1310 [0x51e]:          rmov adx, ebx   
1311 [0x51f]:          new_class @0 // app#__srt_global   
1312 [0x520]:          newstr @0 // job#   
1313 [0x521]:          movg @73 // @std#time_request   
1314 [0x522]:          movn #8   
1316 [0x524]:          popobj   
1317 [0x525]:          newstr @102 // tm_isdst   
1318 [0x526]:          movg @73 // @std#time_request   
1319 [0x527]:          movn #8   
1321 [0x529]:          movn #0   
1323 [0x52b]:          popobj   
1324 [0x52c]:          movi #8, ebx   
1326 [0x52e]:          movg @73 // @std#time_request   
1327 [0x52f]:          movn #8   
1329 [0x531]:          movn #1   
1331 [0x533]:          movi #0, adx   
1333 [0x535]:          rmov adx, ebx   
1334 [0x536]:          new_class @0 // app#__srt_global   
1335 [0x537]:          addl adx, fp@0   
1336 [0x538]:          movg @74 // @std#time_unit   
1337 [0x539]:          movn #0   
1339 [0x53b]:          popobj   
1340 [0x53c]:          newstr @103 // seconds   
1341 [0x53d]:          movg @74 // @std#time_unit   
1342 [0x53e]:          movn #0   
1344 [0x540]:          movn #0   
1346 [0x542]:          popobj   
1347 [0x543]:          movi #0, ebx   
1349 [0x545]:          movg @74 // @std#time_unit   
1350 [0x546]:          movn #0   
1352 [0x548]:          movn #1   
1354 [0x54a]:          movi #0, adx   
1356 [0x54c]:          rmov adx, ebx   
1357 [0x54d]:          new_class @0 // app#__srt_global   
1358 [0x54e]:          addl adx, fp@0   
1359 [0x54f]:          movg @74 // @std#time_unit   
1360 [0x550]:          movn #1   
1362 [0x552]:          popobj   
1363 [0x553]:          newstr @104 // milliseconds   
1364 [0x554]:          movg @74 // @std#time_unit   
1365 [0x555]:          movn #1   
1367 [0x557]:          movn #0   
1369 [0x559]:          popobj   
1370 [0x55a]:          movi #1, ebx   
1372 [0x55c]:          movg @74 // @std#time_unit   
1373 [0x55d]:          movn #1   
1375 [0x55f]:          movn #1   
1377 [0x561]:          movi #0, adx   
1379 [0x563]:          rmov adx, ebx   
1380 [0x564]:          new_class @0 // app#__srt_global   
1381 [0x565]:          addl adx, fp@0   
1382 [0x566]:          movg @74 // @std#time_unit   
1383 [0x567]:          movn #2   
1385 [0x569]:          popobj   
1386 [0x56a]:          newstr @105 // microseconds   
1387 [0x56b]:          movg @74 // @std#time_unit   
1388 [0x56c]:          movn #2   
1390 [0x56e]:          movn #0   
1392 [0x570]:          popobj   
1393 [0x571]:          movi #2, ebx   
1395 [0x573]:          movg @74 // @std#time_unit   
1396 [0x574]:          movn #2   
1398 [0x576]:          movn #1   
1400 [0x578]:          movi #0, adx   
1402 [0x57a]:          rmov adx, ebx   
1403 [0x57b]:          new_class @0 // app#__srt_global   
1404 [0x57c]:          addl adx, fp@0   
1405 [0x57d]:          movg @74 // @std#time_unit   
1406 [0x57e]:          movn #3   
1408 [0x580]:          popobj   
1409 [0x581]:          newstr @106 // nanoseconds   
1410 [0x582]:          movg @74 // @std#time_unit   
1411 [0x583]:          movn #3   
1413 [0x585]:          movn #0   
1415 [0x587]:          popobj   
1416 [0x588]:          movi #3, ebx   
1418 [0x58a]:          movg @74 // @std#time_unit   
1419 [0x58b]:          movn #3   
1421 [0x58d]:          movn #1   
1423 [0x58f]:          movi #0, adx   
1425 [0x591]:          rmov adx, ebx   
1426 [0x592]:          new_class @0 // app#__srt_global   
1427 [0x593]:          smov adx, sp+0   
1428 [0x594]:          movg @92 // @std.io#channel<t>.channel_state   
1429 [0x595]:          movn #0   
1431 [0x597]:          popobj   
1432 [0x598]:          newstr @107 // OPEN   
1433 [0x599]:          movg @92 // @std.io#channel<t>.channel_state   
1434 [0x59a]:          movn #0   
1436 [0x59c]:          movn #0   
1438 [0x59e]:          popobj   
1439 [0x59f]:          movi #31136, ebx   
1441 [0x5a1]:          movg @92 // @std.io#channel<t>.channel_state   
1442 [0x5a2]:          movn #0   
1444 [0x5a4]:          movn #1   
1446 [0x5a6]:          movi #0, adx   
1448 [0x5a8]:          rmov adx, ebx   
1449 [0x5a9]:          new_class @0 // app#__srt_global   
1450 [0x5aa]:          smov adx, sp+0   
1451 [0x5ab]:          movg @92 // @std.io#channel<t>.channel_state   
1452 [0x5ac]:          movn #1   
1454 [0x5ae]:          popobj   
1455 [0x5af]:          newstr @108 // CLOSED   
1456 [0x5b0]:          movg @92 // @std.io#channel<t>.channel_state   
1457 [0x5b1]:          movn #1   
1459 [0x5b3]:          movn #0   
1461 [0x5b5]:          popobj   
1462 [0x5b6]:          movi #31137, ebx   
1464 [0x5b8]:          movg @92 // @std.io#channel<t>.channel_state   
1465 [0x5b9]:          movn #1   
1467 [0x5bb]:          movn #1   
1469 [0x5bd]:          movi #0, adx   
1471 [0x5bf]:          rmov adx, ebx   
1472 [0x5c0]:          movg @45 // @platform.kernel#platform   
1473 [0x5c1]:          movn #1   
1475 [0x5c3]:          movi #0, adx   
1477 [0x5c5]:          movi #1895, ebx   
1479 [0x5c7]:          rmov adx, ebx   
1480 [0x5c8]:          call @3828 // <app#__srt_global.$03internal_static_init>   
1481 [0x5c9]:          call @3829 // <std.io#__srt_global.$03internal_static_init>   
1482 [0x5ca]:          call @3830 // <std.io#file.$03internal_static_init>   
1483 [0x5cb]:          call @3831 // <std.io.task#job.$03internal_static_init>   
1484 [0x5cc]:          call @3832 // <std.io.task#__srt_global.$03internal_static_init>   
1485 [0x5cd]:          call @3833 // <std.io#thread_group.$03internal_static_init>   
1486 [0x5ce]:          call @3834 // <std#_nil_.$03internal_static_init>   
1487 [0x5cf]:          call @3835 // <std#__srt_global.$03internal_static_init>   
1488 [0x5d0]:          call @3836 // <std#string.$03internal_static_init>   
1489 [0x5d1]:          call @3837 // <std#string_builder.$03internal_static_init>   
1490 [0x5d2]:          call @3838 // <std#time.$03internal_static_init>   
1491 [0x5d3]:          call @3839 // <std.io#thread_result.$03internal_static_init>   
1492 [0x5d4]:          call @3840 // <std#tmp.$03internal_static_init>   
1493 [0x5d5]:          ret   


function: platform.kernel#platform.exit[2287] params(1) in file: lib\support\0.2.9/platform//kernel//platform.sharp:16:15: note:  
		    static def exit(value: var) {
		              ^

0 [0x0]: line: 17 ipushl #0   : protected asm start
1 [0x1]:          int 0x1d   
2 [0x2]:          ret   : protected asm end


function: platform.kernel#platform.get_lib_path[2288] params(1) in file: lib\support\0.2.9/platform//kernel//platform.sharp:23:23: note:  
		    private static def get_lib_path(name: string) : _int8[] {
		                      ^

0 [0x0]: line: 24 call @2279 // <platform#build.is_windows>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 9   
4 [0x4]: line: 25 pushl 0   
5 [0x5]:          newstr @29 // .dll   
6 [0x6]:          call @3523 // <std#string.operator+=>   
7 [0x7]:          pop   
8 [0x8]:          jmp @13   
9 [0x9]: line: 27 pushl 0   
10 [0xa]:          newstr @30 // .so   
11 [0xb]:          call @3523 // <std#string.operator+=>   
12 [0xc]:          pop   
13 [0xd]:          nop   
14 [0xe]: line: 30 new_class @0 // app#__srt_global   
15 [0xf]:          isub adx, #? (112)   
17 [0x11]:          pushl 0   
18 [0x12]:          call @2010 // <std.io#file.file>   
19 [0x13]:          call @2017 // <std.io#file.get_absolute_path>   
20 [0x14]:          call @3495 // <std#string.get_data>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: platform.kernel#platform.load_library[2289] params(1) in file: lib\support\0.2.9/platform//kernel//platform.sharp:33:15: note:  
		    static def load_library(name: string) {
		              ^

0 [0x0]: line: 34 pushl 0   
1 [0x1]:          call @2288 // <platform.kernel#platform.get_lib_path>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 35 pushl 1   : protected asm start
5 [0x5]:          int 0x39   
6 [0x6]:          ret   : protected asm end


function: platform.kernel#platform.free_library[2290] params(1) in file: lib\support\0.2.9/platform//kernel//platform.sharp:41:15: note:  
		    static def free_library(name: string): var {
		              ^

0 [0x0]: line: 42 pushl 0   
1 [0x1]:          call @2288 // <platform.kernel#platform.get_lib_path>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 43 istorel 0, fp+2   
6 [0x6]: line: 44 pushl 1   : protected asm start
7 [0x7]:          int 0x3a   
8 [0x8]:          smovr_2 ebx, fp+2   
9 [0x9]: line: 50 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: platform.kernel#platform.link_func[2291] params(2) in file: lib\support\0.2.9/platform//kernel//platform.sharp:53:15: note:  
		    static def link_func(name: string, library: string): var {
		              ^

0 [0x0]: line: 54 pushl 0   
1 [0x1]:          call @2288 // <platform.kernel#platform.get_lib_path>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 55 pushl 0   
5 [0x5]:          call @3495 // <std#string.get_data>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+3   
8 [0x8]: line: 56 istorel 0, fp+4   
10 [0xa]: line: 57 pushl 3   : protected asm start
11 [0xb]:          pushl 2   
12 [0xc]:          int 0x3b   
13 [0xd]:          smovr_2 ebx, fp+4   
14 [0xe]: line: 64 loadl ebx, fp+4   : protected asm end
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


function: platform.kernel#platform.srt_init[2292] params(1) in file: lib\support\0.2.9/platform//kernel//platform.sharp:67:23: note:  
		    private static def srt_init(args: object[]) : var {
		                      ^

0 [0x0]: line: 68 new_class @0 // app#__srt_global   
1 [0x1]:          checknull   
2 [0x2]:          dup    
3 [0x3]:          newstr @3 //    
4 [0x4]:          call @3469 // <std#string.string>   
5 [0x5]:          pushl 0   
6 [0x6]:          movi #0, ebx   
8 [0x8]:          popobj2    
9 [0x9]:          movr adx, ebx   
10 [0xa]:          chklen adx   
11 [0xb]:          movnd adx   
12 [0xc]:          vcast 0 -> []   
13 [0xd]:          pushobj   
14 [0xe]:          call @3481 // <std#string.operator+>   
15 [0xf]:          movg @43 // @platform#build   
16 [0x10]:          movn #1   
18 [0x12]:          popobj   
19 [0x13]: line: 69 new_class @0 // app#__srt_global   
20 [0x14]:          checknull   
21 [0x15]:          dup    
22 [0x16]:          newstr @3 //    
23 [0x17]:          call @3469 // <std#string.string>   
24 [0x18]:          pushl 0   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          popobj2    
28 [0x1c]:          movr adx, ebx   
29 [0x1d]:          chklen adx   
30 [0x1e]:          movnd adx   
31 [0x1f]:          vcast 0 -> []   
32 [0x20]:          pushobj   
33 [0x21]:          call @3481 // <std#string.operator+>   
34 [0x22]:          movg @43 // @platform#build   
35 [0x23]:          movn #3   
37 [0x25]:          popobj   
38 [0x26]: line: 70 new_class @0 // app#__srt_global   
39 [0x27]:          checknull   
40 [0x28]:          dup    
41 [0x29]:          newstr @3 //    
42 [0x2a]:          call @3469 // <std#string.string>   
43 [0x2b]:          pushl 0   
44 [0x2c]:          movi #2, ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          vcast 0 -> []   
51 [0x33]:          pushobj   
52 [0x34]:          call @3481 // <std#string.operator+>   
53 [0x35]:          movg @43 // @platform#build   
54 [0x36]:          movn #2   
56 [0x38]:          popobj   
57 [0x39]: line: 71 new_class @0 // app#__srt_global   
58 [0x3a]:          checknull   
59 [0x3b]:          dup    
60 [0x3c]:          newstr @3 //    
61 [0x3d]:          call @3469 // <std#string.string>   
62 [0x3e]:          pushl 0   
63 [0x3f]:          movi #3, ebx   
65 [0x41]:          popobj2    
66 [0x42]:          movr adx, ebx   
67 [0x43]:          chklen adx   
68 [0x44]:          movnd adx   
69 [0x45]:          vcast 0 -> []   
70 [0x46]:          pushobj   
71 [0x47]:          call @3481 // <std#string.operator+>   
72 [0x48]:          movg @43 // @platform#build   
73 [0x49]:          movn #0   
75 [0x4b]:          popobj   
76 [0x4c]: line: 73 call @2286 // <platform.kernel#platform.static_init>   
77 [0x4d]: line: 74 pushl 0   
78 [0x4e]: line: 76 movi #4, ebx   
80 [0x50]:          popobj2    
81 [0x51]:          movr adx, ebx   
82 [0x52]:          chklen adx   
83 [0x53]:          movnd adx   
84 [0x54]:          movi #32, cmt   
86 [0x56]:          cast cmt   
87 [0x57]:          smovr_3 fp+1   
88 [0x58]: line: 77 pushl 1   
89 [0x59]:          call @2308 // <platform.kernel#vm.set_thread>   
90 [0x5a]: line: 79 movg @34 // @std.io#thread_priority   
91 [0x5b]:          movn #2   
93 [0x5d]:          smovr_3 fp+2   
94 [0x5e]: line: 80 movg @33 // @std.io#thread_group   
95 [0x5f]:          movn #0   
97 [0x61]:          pushobj   
98 [0x62]:          pushl 1   
99 [0x63]:          call @2218 // <std.io#thread_group.add>   
100 [0x64]: line: 82 movg @33 // @std.io#thread_group   : protected asm start
101 [0x65]:          movn #0   
103 [0x67]:          pushobj   
104 [0x68]:          movl 1   
105 [0x69]:          movn #7   
107 [0x6b]:          popobj   
108 [0x6c]:          movl 2   
109 [0x6d]:          pushobj   
110 [0x6e]:          movl 1   
111 [0x6f]:          movn #3   
113 [0x71]:          popobj   
114 [0x72]: line: 99 movl 0   : protected asm end
115 [0x73]: line: 100 sizeof ebx   
116 [0x74]:           rstore ebx   
117 [0x75]:           movi #5, ebx   
119 [0x77]:           loadval ecx   
120 [0x78]:           sub ecx, ebx -> ebx   
121 [0x79]:           new_classarray ebx  // std#string[]   
123 [0x7b]:           popobj2    
124 [0x7c]:           smovr_3 fp+3   
125 [0x7d]: line: 101 istorel 0, fp+4   
127 [0x7f]: line: 103 istorel 5, fp+5   
129 [0x81]:           ipushl #5   
130 [0x82]:           movl 0   
131 [0x83]:           sizeof ebx   
132 [0x84]:           loadval ecx   
133 [0x85]:           lt ecx, ebx   
134 [0x86]:           movr ebx, cmt   
135 [0x87]:           movr cmt, ebx   
136 [0x88]:           jne 163   
137 [0x89]: line: 104 new_class @0 // app#__srt_global   
138 [0x8a]:           checknull   
139 [0x8b]:           dup    
140 [0x8c]:           pushl 0   
141 [0x8d]:           loadl ebx, fp+5   
142 [0x8e]:           popobj2    
143 [0x8f]:           movr adx, ebx   
144 [0x90]:           chklen adx   
145 [0x91]:           movnd adx   
146 [0x92]:           vcast 0 -> []   
147 [0x93]:           pushobj   
148 [0x94]:           call @3469 // <std#string.string>   
149 [0x95]:           pushl 3   
150 [0x96]:           loadl ebx, fp+4   
151 [0x97]:           movr egx, ebx   
152 [0x98]:           inc ebx   
153 [0x99]:           smovr_2 ebx, fp+4   
154 [0x9a]:           movr ebx, egx   
155 [0x9b]:           popobj2    
156 [0x9c]:           movr adx, ebx   
157 [0x9d]:           chklen adx   
158 [0x9e]:           movnd adx   
159 [0x9f]:           popobj   
160 [0xa0]:           iaddl 1, fp@5   
162 [0xa2]:           jmp @129   
163 [0xa3]: line: 107 istorel 0, fp+6   
165 [0xa5]: line: 108 movg @45 // @platform.kernel#platform   
166 [0xa6]:           movn #0   
168 [0xa8]:           movi #0, adx   
170 [0xaa]:           iaload ebx, adx   
171 [0xab]:           rstore ebx   
172 [0xac]:           movi #0, ebx   
174 [0xae]:           loadval ecx   
175 [0xaf]:           tne ecx, ebx   
176 [0xb0]:           jne 189   
177 [0xb1]: line: 109 movg @45 // @platform.kernel#platform   
178 [0xb2]:           movn #0   
180 [0xb4]:           movi #0, adx   
182 [0xb6]:           iaload ebx, adx   
183 [0xb7]:           rstore ebx   
184 [0xb8]:           pushl 3   
185 [0xb9]:           smov ebx, sp+[-1]   
186 [0xba]:           calld ebx   
187 [0xbb]:           ipopl 6   
188 [0xbc]:           jmp @256   
189 [0xbd]:           movg @45 // @platform.kernel#platform   
190 [0xbe]:           movn #1   
192 [0xc0]:           movi #0, adx   
194 [0xc2]:           iaload ebx, adx   
195 [0xc3]:           rstore ebx   
196 [0xc4]:           movi #0, ebx   
198 [0xc6]:           loadval ecx   
199 [0xc7]:           tne ecx, ebx   
200 [0xc8]:           jne 212   
201 [0xc9]: line: 110 movg @45 // @platform.kernel#platform   
202 [0xca]:           movn #1   
204 [0xcc]:           movi #0, adx   
206 [0xce]:           iaload ebx, adx   
207 [0xcf]:           rstore ebx   
208 [0xd0]:           pushl 3   
209 [0xd1]:           smov ebx, sp+[-1]   
210 [0xd2]:           calld ebx   
211 [0xd3]:           jmp @256   
212 [0xd4]:           movg @45 // @platform.kernel#platform   
213 [0xd5]:           movn #2   
215 [0xd7]:           movi #0, adx   
217 [0xd9]:           iaload ebx, adx   
218 [0xda]:           rstore ebx   
219 [0xdb]:           movi #0, ebx   
221 [0xdd]:           loadval ecx   
222 [0xde]:           tne ecx, ebx   
223 [0xdf]:           jne 234   
224 [0xe0]: line: 111 movg @45 // @platform.kernel#platform   
225 [0xe1]:           movn #2   
227 [0xe3]:           movi #0, adx   
229 [0xe5]:           iaload ebx, adx   
230 [0xe6]:           rstore ebx   
231 [0xe7]:           loadval ebx   
232 [0xe8]:           calld ebx   
233 [0xe9]:           jmp @256   
234 [0xea]:           movg @45 // @platform.kernel#platform   
235 [0xeb]:           movn #3   
237 [0xed]:           movi #0, adx   
239 [0xef]:           iaload ebx, adx   
240 [0xf0]:           rstore ebx   
241 [0xf1]:           movi #0, ebx   
243 [0xf3]:           loadval ecx   
244 [0xf4]:           tne ecx, ebx   
245 [0xf5]:           jne 256   
246 [0xf6]: line: 112 movg @45 // @platform.kernel#platform   
247 [0xf7]:           movn #3   
249 [0xf9]:           movi #0, adx   
251 [0xfb]:           iaload ebx, adx   
252 [0xfc]:           rstore ebx   
253 [0xfd]:           loadval ebx   
254 [0xfe]:           calld ebx   
255 [0xff]:           ipopl 6   
256 [0x100]:           nop   
257 [0x101]: line: 115 loadl ebx, fp+6   
258 [0x102]:           return_val ebx   
259 [0x103]:           ret   


constructor: platform.kernel#platform.platform[2293] params(0) in file: lib\support\0.2.9/platform//kernel//platform.sharp:6:6: note:  
		class platform
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: platform.kernel#stack_state.stack_state[2294] params(0) in file: lib\support\0.2.9/platform//kernel//stack_state.sharp:3:6: note:  
		class stack_state {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform.kernel#vm.get_frame_info[2295] params(0) in file: lib\support\0.2.9/platform//kernel//vm.sharp:6:15: note:  
		    static def get_frame_info() : stack_state {
		              ^

0 [0x0]: line: 7 int 0x35   : protected asm start
1 [0x1]:         popobj2    
2 [0x2]:         returnobj   
3 [0x3]:         ret   
4 [0x4]: line: 13 pushnull    : protected asm end
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: platform.kernel#vm.get_stack_trace[2296] params(1) in file: lib\support\0.2.9/platform//kernel//vm.sharp:16:15: note:  
		    static def get_stack_trace(info : stack_state) : string {
		              ^

0 [0x0]: line: 17 pushl 0   : protected asm start
1 [0x1]:          int 0x36   
2 [0x2]:          popobj2    
3 [0x3]:          returnobj   
4 [0x4]:          ret   
5 [0x5]: line: 24 pushnull    : protected asm end
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: platform.kernel#vm.thread_create[2297] params(1) in file: lib\support\0.2.9/platform//kernel//vm.sharp:27:15: note:  
		    static def thread_create(daemon: var) : var {
		              ^

0 [0x0]: line: 28 istorel 0, fp+1   
2 [0x2]: line: 29 movi #2227, adx   : protected asm start
4 [0x4]:          loadl ebx, fp+0   
5 [0x5]:          int 0x10   
6 [0x6]:          smovr_2 ebx, fp+1   
7 [0x7]: line: 36 loadl ebx, fp+1   : protected asm end
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: platform.kernel#vm.suspend[2298] params(1) in file: lib\support\0.2.9/platform//kernel//vm.sharp:39:15: note:  
		    static def suspend(t: thread) : thread_result {
		              ^

0 [0x0]: line: 40 pushl 0   
1 [0x1]:          call @2203 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 41 istorel 0, fp+2   
5 [0x5]: line: 43 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0x12   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 49 ipushl #2   : protected asm end
9 [0x9]:          call @2228 // <std.io#thread_result.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#vm.unsuspend[2299] params(2) in file: lib\support\0.2.9/platform//kernel//vm.sharp:52:15: note:  
		    static def unsuspend(t: thread, wait: var) : thread_result {
		              ^

0 [0x0]: line: 53 pushl 0   
1 [0x1]:          call @2203 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 54 istorel 0, fp+3   
5 [0x5]: line: 56 loadl adx, fp+2   : protected asm start
6 [0x6]:          loadl ebx, fp+1   
7 [0x7]:          int 0x13   
8 [0x8]:          smovr_2 cmt, fp+3   
9 [0x9]: line: 63 ipushl #3   : protected asm end
10 [0xa]:          call @2228 // <std.io#thread_result.at>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


function: platform.kernel#vm.get_os_time[2300] params(1) in file: lib\support\0.2.9/platform//kernel//vm.sharp:66:15: note:  
		    static def get_os_time(tr : var) : var {
		              ^

0 [0x0]: line: 67 istorel 0, fp+1   
2 [0x2]: line: 68 loadl ebx, fp+0   : protected asm start
3 [0x3]:          int 0x2   
4 [0x4]:          smovr_2 bmr, fp+1   
5 [0x5]: line: 74 loadl ebx, fp+1   : protected asm end
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: platform.kernel#vm.thread_join[2301] params(1) in file: lib\support\0.2.9/platform//kernel//vm.sharp:77:15: note:  
		    static def thread_join(t: thread) : thread_result {
		              ^

0 [0x0]: line: 78 pushl 0   
1 [0x1]:          call @2203 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 79 istorel 0, fp+2   
5 [0x5]: line: 81 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xd   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 87 ipushl #2   : protected asm end
9 [0x9]:          call @2228 // <std.io#thread_result.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#vm.kill[2302] params(1) in file: lib\support\0.2.9/platform//kernel//vm.sharp:90:15: note:  
		    static def kill(t: thread) : thread_result {
		              ^

0 [0x0]: line: 91 pushl 0   
1 [0x1]:          call @2203 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 92 istorel 0, fp+2   
5 [0x5]: line: 94 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xe   
7 [0x7]:          smovr_2 cmt, fp+2   : protected asm end
8 [0x8]: line: 100 pushl 0   
9 [0x9]:           istore 1   
11 [0xb]:           call @2304 // <platform.kernel#vm.exit_thread>   
12 [0xc]: line: 101 ipushl #2   
13 [0xd]:           call @2228 // <std.io#thread_result.at>   
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   


function: platform.kernel#vm.current_thread[2303] params(0) in file: lib\support\0.2.9/platform//kernel//vm.sharp:104:15: note:  
		    static def current_thread() : thread {
		              ^

0 [0x0]: line: 105 int 0x15   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 112 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#vm.exit_thread[2304] params(2) in file: lib\support\0.2.9/platform//kernel//vm.sharp:115:15: note:  
		    static def exit_thread(t: thread, code: var) {
		              ^

0 [0x0]: line: 116 movi #1, ebx   : protected asm start
2 [0x2]:           movi #0, egx   
4 [0x4]:           movi #-1, ecx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #5   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movl 0   
13 [0xd]:           movn #8   
15 [0xf]:           rmov adx, egx   
16 [0x10]:           loadl egx, fp+1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           rmov adx, egx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           rmov adx, ecx   
25 [0x19]:           ret   : protected asm end


function: platform.kernel#vm.thread_yield[2305] params(0) in file: lib\support\0.2.9/platform//kernel//vm.sharp:140:15: note:  
		    static def thread_yield() {
		              ^

0 [0x0]: line: 141 int 0x1c   : protected asm start
1 [0x1]:           ret   : protected asm end


function: platform.kernel#vm.thread_start[2306] params(2) in file: lib\support\0.2.9/platform//kernel//vm.sharp:146:15: note:  
		    static def thread_start(t: thread, args: object[]) : thread_result {
		              ^

0 [0x0]: line: 147 pushl 0   
1 [0x1]:           call @2203 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 148 pushl 0   
4 [0x4]:           call @2204 // <std.io#thread.get_stack_size>   
5 [0x5]:           ipopl 3   
6 [0x6]: line: 149 istorel 0, fp+4   
8 [0x8]: line: 151 loadl ebx, fp+3   : protected asm start
9 [0x9]:           loadl adx, fp+2   
10 [0xa]:           pushl 1   
11 [0xb]:           pushl 0   
12 [0xc]:           int 0xc   
13 [0xd]:           smovr_2 cmt, fp+4   
14 [0xe]: line: 160 ipushl #4   : protected asm end
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           test ecx, ebx   
19 [0x13]:           jne 22   
20 [0x14]: line: 161 pushl 0   
21 [0x15]:           call @2271 // <std#_object_.wait>   
22 [0x16]:           nop   
23 [0x17]: line: 164 ipushl #4   
24 [0x18]:           call @2228 // <std.io#thread_result.at>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   


function: platform.kernel#vm.set_thread_priority[2307] params(2) in file: lib\support\0.2.9/platform//kernel//vm.sharp:167:15: note:  
		    static def set_thread_priority(t: thread, priority: var) : thread_result {
		              ^

0 [0x0]: line: 168 pushl 0   
1 [0x1]:           call @2203 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 169 istorel 0, fp+3   
5 [0x5]: line: 171 loadl adx, fp+2   : protected asm start
6 [0x6]:           loadl egx, fp+1   
7 [0x7]:           int 0x11   
8 [0x8]:           smovr_2 cmt, fp+3   
9 [0x9]: line: 178 ipushl #3   : protected asm end
10 [0xa]:           call @2228 // <std.io#thread_result.at>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: platform.kernel#vm.set_thread[2308] params(1) in file: lib\support\0.2.9/platform//kernel//vm.sharp:181:15: note:  
		    static def set_thread(t: thread) {
		              ^

0 [0x0]: line: 182 pushl 0   : protected asm start
1 [0x1]:           int 0x17   
2 [0x2]:           ret   : protected asm end


function: platform.kernel#vm.thread_args[2309] params(0) in file: lib\support\0.2.9/platform//kernel//vm.sharp:188:15: note:  
		    static def thread_args() : object[] {
		              ^

0 [0x0]: line: 189 int 0x16   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 196 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#vm.cores[2310] params(0) in file: lib\support\0.2.9/platform//kernel//vm.sharp:199:15: note:  
		    static def cores() : var {
		              ^

0 [0x0]: line: 200 istorel 0, fp+0   
2 [0x2]: line: 202 int 0x38   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 207 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#vm.random_int[2311] params(0) in file: lib\support\0.2.9/platform//kernel//vm.sharp:210:15: note:  
		    static def random_int() : var {
		              ^

0 [0x0]: line: 211 istorel 0, fp+0   
2 [0x2]: line: 213 int 0x19   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 218 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#vm.random_int[2312] params(2) in file: lib\support\0.2.9/platform//kernel//vm.sharp:221:15: note:  
		    static def random_int(min: var, max : var) : var {
		              ^

0 [0x0]: line: 222 istorel 0, fp+2   
2 [0x2]: line: 224 loadl ebx, fp+0   : protected asm start
3 [0x3]:           loadl egx, fp+1   
4 [0x4]:           int 0x3f   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 231 loadl ebx, fp+2   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: platform.kernel#vm.random_double[2313] params(0) in file: lib\support\0.2.9/platform//kernel//vm.sharp:234:15: note:  
		    static def random_double() : var {
		              ^

0 [0x0]: line: 235 istorel 0, fp+0   
2 [0x2]: line: 237 int 0x40   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 242 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#vm.random_double[2314] params(2) in file: lib\support\0.2.9/platform//kernel//vm.sharp:245:15: note:  
		    static def random_double(min: var, max : var) : var {
		              ^

0 [0x0]: line: 246 istorel 0, fp+2   
2 [0x2]: line: 248 loadl ebx, fp+0   : protected asm start
3 [0x3]:           loadl egx, fp+1   
4 [0x4]:           int 0x41   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 255 loadl ebx, fp+2   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: platform.kernel#vm.random_seed[2315] params(1) in file: lib\support\0.2.9/platform//kernel//vm.sharp:258:15: note:  
		    static def random_seed(seed : var) {
		              ^

0 [0x0]: line: 259 loadl adx, fp+0   : protected asm start
1 [0x1]:           int 0x42   
2 [0x2]:           ret   : protected asm end


constructor: platform.kernel#vm.vm[2316] params(0) in file: lib\support\0.2.9/platform//kernel//vm.sharp:5:6: note:  
		class vm {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#ulong.ulong[2317] params(1) in file: lib\support\0.2.9/primitives.sharp:274:10: note:  
		    ulong(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2318] params(1) in file: lib\support\0.2.9/primitives.sharp:275:10: note:  
		    ulong(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2319] params(1) in file: lib\support\0.2.9/primitives.sharp:276:10: note:  
		    ulong(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2320] params(1) in file: lib\support\0.2.9/primitives.sharp:277:10: note:  
		    ulong(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2321] params(1) in file: lib\support\0.2.9/primitives.sharp:278:10: note:  
		    ulong(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2322] params(1) in file: lib\support\0.2.9/primitives.sharp:279:10: note:  
		    ulong(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2323] params(1) in file: lib\support\0.2.9/primitives.sharp:280:10: note:  
		    ulong(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2324] params(1) in file: lib\support\0.2.9/primitives.sharp:281:10: note:  
		    ulong(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2325] params(1) in file: lib\support\0.2.9/primitives.sharp:282:10: note:  
		    ulong(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2326] params(1) in file: lib\support\0.2.9/primitives.sharp:283:10: note:  
		    ulong(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2327] params(1) in file: lib\support\0.2.9/primitives.sharp:284:10: note:  
		    ulong(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @10 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2328] params(1) in file: lib\support\0.2.9/primitives.sharp:285:10: note:  
		    ulong(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @10 // <std#integer<_uint64>.integer>   
3 [0x3]:         ret   


overload function: std#ulong.operator![2329] params(0) in file: lib\support\0.2.9/primitives.sharp:287:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 287 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#ulong.operator++[2330] params(0) in file: lib\support\0.2.9/primitives.sharp:288:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 288 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ulong.operator++[2331] params(1) in file: lib\support\0.2.9/primitives.sharp:289:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 289 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ulong.operator--[2332] params(0) in file: lib\support\0.2.9/primitives.sharp:290:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 290 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ulong.operator--[2333] params(1) in file: lib\support\0.2.9/primitives.sharp:291:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 291 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ulong.operator+=[2334] params(1) in file: lib\support\0.2.9/primitives.sharp:293:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 293 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2335] params(1) in file: lib\support\0.2.9/primitives.sharp:294:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 294 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2336] params(1) in file: lib\support\0.2.9/primitives.sharp:295:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 295 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2337] params(1) in file: lib\support\0.2.9/primitives.sharp:296:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 296 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2338] params(1) in file: lib\support\0.2.9/primitives.sharp:297:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 297 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2339] params(1) in file: lib\support\0.2.9/primitives.sharp:298:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 298 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2340] params(1) in file: lib\support\0.2.9/primitives.sharp:299:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 299 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2341] params(1) in file: lib\support\0.2.9/primitives.sharp:300:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 300 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2342] params(1) in file: lib\support\0.2.9/primitives.sharp:301:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 301 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2343] params(1) in file: lib\support\0.2.9/primitives.sharp:302:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 302 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2344] params(1) in file: lib\support\0.2.9/primitives.sharp:303:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 303 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2345] params(1) in file: lib\support\0.2.9/primitives.sharp:304:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 304 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator-=[2346] params(1) in file: lib\support\0.2.9/primitives.sharp:306:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 306 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2347] params(1) in file: lib\support\0.2.9/primitives.sharp:307:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 307 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2348] params(1) in file: lib\support\0.2.9/primitives.sharp:308:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 308 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2349] params(1) in file: lib\support\0.2.9/primitives.sharp:309:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 309 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2350] params(1) in file: lib\support\0.2.9/primitives.sharp:310:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 310 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2351] params(1) in file: lib\support\0.2.9/primitives.sharp:311:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 311 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2352] params(1) in file: lib\support\0.2.9/primitives.sharp:312:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 312 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2353] params(1) in file: lib\support\0.2.9/primitives.sharp:313:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 313 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2354] params(1) in file: lib\support\0.2.9/primitives.sharp:314:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 314 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2355] params(1) in file: lib\support\0.2.9/primitives.sharp:315:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 315 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2356] params(1) in file: lib\support\0.2.9/primitives.sharp:316:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 316 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2357] params(1) in file: lib\support\0.2.9/primitives.sharp:317:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 317 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator*=[2358] params(1) in file: lib\support\0.2.9/primitives.sharp:319:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 319 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2359] params(1) in file: lib\support\0.2.9/primitives.sharp:320:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 320 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2360] params(1) in file: lib\support\0.2.9/primitives.sharp:321:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 321 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2361] params(1) in file: lib\support\0.2.9/primitives.sharp:322:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 322 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2362] params(1) in file: lib\support\0.2.9/primitives.sharp:323:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 323 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2363] params(1) in file: lib\support\0.2.9/primitives.sharp:324:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 324 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2364] params(1) in file: lib\support\0.2.9/primitives.sharp:325:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 325 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2365] params(1) in file: lib\support\0.2.9/primitives.sharp:326:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 326 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2366] params(1) in file: lib\support\0.2.9/primitives.sharp:327:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 327 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2367] params(1) in file: lib\support\0.2.9/primitives.sharp:328:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 328 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2368] params(1) in file: lib\support\0.2.9/primitives.sharp:329:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 329 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2369] params(1) in file: lib\support\0.2.9/primitives.sharp:330:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 330 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator/=[2370] params(1) in file: lib\support\0.2.9/primitives.sharp:332:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 332 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2371] params(1) in file: lib\support\0.2.9/primitives.sharp:333:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 333 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2372] params(1) in file: lib\support\0.2.9/primitives.sharp:334:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 334 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2373] params(1) in file: lib\support\0.2.9/primitives.sharp:335:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 335 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2374] params(1) in file: lib\support\0.2.9/primitives.sharp:336:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 336 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2375] params(1) in file: lib\support\0.2.9/primitives.sharp:337:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 337 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2376] params(1) in file: lib\support\0.2.9/primitives.sharp:338:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 338 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2377] params(1) in file: lib\support\0.2.9/primitives.sharp:339:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 339 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2378] params(1) in file: lib\support\0.2.9/primitives.sharp:340:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 340 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2379] params(1) in file: lib\support\0.2.9/primitives.sharp:341:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 341 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2380] params(1) in file: lib\support\0.2.9/primitives.sharp:342:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 342 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2381] params(1) in file: lib\support\0.2.9/primitives.sharp:343:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 343 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator%=[2382] params(1) in file: lib\support\0.2.9/primitives.sharp:345:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 345 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2383] params(1) in file: lib\support\0.2.9/primitives.sharp:346:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 346 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2384] params(1) in file: lib\support\0.2.9/primitives.sharp:347:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 347 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2385] params(1) in file: lib\support\0.2.9/primitives.sharp:348:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 348 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2386] params(1) in file: lib\support\0.2.9/primitives.sharp:349:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 349 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2387] params(1) in file: lib\support\0.2.9/primitives.sharp:350:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 350 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2388] params(1) in file: lib\support\0.2.9/primitives.sharp:351:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 351 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2389] params(1) in file: lib\support\0.2.9/primitives.sharp:352:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 352 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2390] params(1) in file: lib\support\0.2.9/primitives.sharp:353:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 353 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2391] params(1) in file: lib\support\0.2.9/primitives.sharp:354:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 354 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2392] params(1) in file: lib\support\0.2.9/primitives.sharp:355:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 355 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2393] params(1) in file: lib\support\0.2.9/primitives.sharp:356:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 356 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator&=[2394] params(1) in file: lib\support\0.2.9/primitives.sharp:358:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 358 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2395] params(1) in file: lib\support\0.2.9/primitives.sharp:359:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 359 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2396] params(1) in file: lib\support\0.2.9/primitives.sharp:360:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 360 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2397] params(1) in file: lib\support\0.2.9/primitives.sharp:361:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 361 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2398] params(1) in file: lib\support\0.2.9/primitives.sharp:362:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 362 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2399] params(1) in file: lib\support\0.2.9/primitives.sharp:363:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 363 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2400] params(1) in file: lib\support\0.2.9/primitives.sharp:364:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 364 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2401] params(1) in file: lib\support\0.2.9/primitives.sharp:365:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 365 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2402] params(1) in file: lib\support\0.2.9/primitives.sharp:366:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 366 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2403] params(1) in file: lib\support\0.2.9/primitives.sharp:367:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 367 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2404] params(1) in file: lib\support\0.2.9/primitives.sharp:368:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 368 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2405] params(1) in file: lib\support\0.2.9/primitives.sharp:369:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 369 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#ulong.operator|=[2406] params(1) in file: lib\support\0.2.9/primitives.sharp:371:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 371 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2407] params(1) in file: lib\support\0.2.9/primitives.sharp:372:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 372 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2408] params(1) in file: lib\support\0.2.9/primitives.sharp:373:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 373 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2409] params(1) in file: lib\support\0.2.9/primitives.sharp:374:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 374 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2410] params(1) in file: lib\support\0.2.9/primitives.sharp:375:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 375 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2411] params(1) in file: lib\support\0.2.9/primitives.sharp:376:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 376 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2412] params(1) in file: lib\support\0.2.9/primitives.sharp:377:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 377 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2413] params(1) in file: lib\support\0.2.9/primitives.sharp:378:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 378 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2414] params(1) in file: lib\support\0.2.9/primitives.sharp:379:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 379 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2415] params(1) in file: lib\support\0.2.9/primitives.sharp:380:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 380 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2416] params(1) in file: lib\support\0.2.9/primitives.sharp:381:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 381 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2417] params(1) in file: lib\support\0.2.9/primitives.sharp:382:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 382 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#ulong.ulong[2418] params(0) in file: lib\support\0.2.9/primitives.sharp:273:6: note:  
		class ulong base integer<_uint64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @218 // <std#integer<_uint64>.integer>   
2 [0x2]:         ret   


constructor: std#long.long[2419] params(1) in file: lib\support\0.2.9/primitives.sharp:385:9: note:  
		    long(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2420] params(1) in file: lib\support\0.2.9/primitives.sharp:386:9: note:  
		    long(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2421] params(1) in file: lib\support\0.2.9/primitives.sharp:387:9: note:  
		    long(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2422] params(1) in file: lib\support\0.2.9/primitives.sharp:388:9: note:  
		    long(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2423] params(1) in file: lib\support\0.2.9/primitives.sharp:389:9: note:  
		    long(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2424] params(1) in file: lib\support\0.2.9/primitives.sharp:390:9: note:  
		    long(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2425] params(1) in file: lib\support\0.2.9/primitives.sharp:391:9: note:  
		    long(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2426] params(1) in file: lib\support\0.2.9/primitives.sharp:392:9: note:  
		    long(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2427] params(1) in file: lib\support\0.2.9/primitives.sharp:393:9: note:  
		    long(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2428] params(1) in file: lib\support\0.2.9/primitives.sharp:394:9: note:  
		    long(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2429] params(1) in file: lib\support\0.2.9/primitives.sharp:395:9: note:  
		    long(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @219 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2430] params(1) in file: lib\support\0.2.9/primitives.sharp:396:9: note:  
		    long(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @219 // <std#integer<_int64>.integer>   
3 [0x3]:         ret   


overload function: std#long.operator![2431] params(0) in file: lib\support\0.2.9/primitives.sharp:398:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 398 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#long.operator++[2432] params(0) in file: lib\support\0.2.9/primitives.sharp:399:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 399 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#long.operator++[2433] params(1) in file: lib\support\0.2.9/primitives.sharp:400:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 400 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#long.operator--[2434] params(0) in file: lib\support\0.2.9/primitives.sharp:401:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 401 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#long.operator--[2435] params(1) in file: lib\support\0.2.9/primitives.sharp:402:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 402 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#long.operator+=[2436] params(1) in file: lib\support\0.2.9/primitives.sharp:404:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 404 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2437] params(1) in file: lib\support\0.2.9/primitives.sharp:405:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 405 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2438] params(1) in file: lib\support\0.2.9/primitives.sharp:406:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 406 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2439] params(1) in file: lib\support\0.2.9/primitives.sharp:407:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 407 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2440] params(1) in file: lib\support\0.2.9/primitives.sharp:408:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 408 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2441] params(1) in file: lib\support\0.2.9/primitives.sharp:409:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 409 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2442] params(1) in file: lib\support\0.2.9/primitives.sharp:410:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 410 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2443] params(1) in file: lib\support\0.2.9/primitives.sharp:411:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 411 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2444] params(1) in file: lib\support\0.2.9/primitives.sharp:412:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 412 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2445] params(1) in file: lib\support\0.2.9/primitives.sharp:413:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 413 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2446] params(1) in file: lib\support\0.2.9/primitives.sharp:414:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 414 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2447] params(1) in file: lib\support\0.2.9/primitives.sharp:415:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 415 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator-=[2448] params(1) in file: lib\support\0.2.9/primitives.sharp:417:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 417 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2449] params(1) in file: lib\support\0.2.9/primitives.sharp:418:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 418 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2450] params(1) in file: lib\support\0.2.9/primitives.sharp:419:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 419 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2451] params(1) in file: lib\support\0.2.9/primitives.sharp:420:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 420 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2452] params(1) in file: lib\support\0.2.9/primitives.sharp:421:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 421 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2453] params(1) in file: lib\support\0.2.9/primitives.sharp:422:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 422 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2454] params(1) in file: lib\support\0.2.9/primitives.sharp:423:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 423 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2455] params(1) in file: lib\support\0.2.9/primitives.sharp:424:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 424 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2456] params(1) in file: lib\support\0.2.9/primitives.sharp:425:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 425 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2457] params(1) in file: lib\support\0.2.9/primitives.sharp:426:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 426 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2458] params(1) in file: lib\support\0.2.9/primitives.sharp:427:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 427 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2459] params(1) in file: lib\support\0.2.9/primitives.sharp:428:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 428 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator*=[2460] params(1) in file: lib\support\0.2.9/primitives.sharp:430:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 430 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2461] params(1) in file: lib\support\0.2.9/primitives.sharp:431:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 431 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2462] params(1) in file: lib\support\0.2.9/primitives.sharp:432:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 432 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2463] params(1) in file: lib\support\0.2.9/primitives.sharp:433:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 433 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2464] params(1) in file: lib\support\0.2.9/primitives.sharp:434:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 434 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2465] params(1) in file: lib\support\0.2.9/primitives.sharp:435:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 435 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2466] params(1) in file: lib\support\0.2.9/primitives.sharp:436:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 436 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2467] params(1) in file: lib\support\0.2.9/primitives.sharp:437:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 437 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2468] params(1) in file: lib\support\0.2.9/primitives.sharp:438:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 438 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2469] params(1) in file: lib\support\0.2.9/primitives.sharp:439:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 439 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2470] params(1) in file: lib\support\0.2.9/primitives.sharp:440:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 440 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2471] params(1) in file: lib\support\0.2.9/primitives.sharp:441:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 441 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator/=[2472] params(1) in file: lib\support\0.2.9/primitives.sharp:443:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 443 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2473] params(1) in file: lib\support\0.2.9/primitives.sharp:444:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 444 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2474] params(1) in file: lib\support\0.2.9/primitives.sharp:445:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 445 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2475] params(1) in file: lib\support\0.2.9/primitives.sharp:446:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 446 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2476] params(1) in file: lib\support\0.2.9/primitives.sharp:447:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 447 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2477] params(1) in file: lib\support\0.2.9/primitives.sharp:448:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 448 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2478] params(1) in file: lib\support\0.2.9/primitives.sharp:449:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 449 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2479] params(1) in file: lib\support\0.2.9/primitives.sharp:450:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 450 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2480] params(1) in file: lib\support\0.2.9/primitives.sharp:451:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 451 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2481] params(1) in file: lib\support\0.2.9/primitives.sharp:452:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 452 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2482] params(1) in file: lib\support\0.2.9/primitives.sharp:453:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 453 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2483] params(1) in file: lib\support\0.2.9/primitives.sharp:454:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 454 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator%=[2484] params(1) in file: lib\support\0.2.9/primitives.sharp:456:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 456 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2485] params(1) in file: lib\support\0.2.9/primitives.sharp:457:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 457 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2486] params(1) in file: lib\support\0.2.9/primitives.sharp:458:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 458 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2487] params(1) in file: lib\support\0.2.9/primitives.sharp:459:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 459 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2488] params(1) in file: lib\support\0.2.9/primitives.sharp:460:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 460 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2489] params(1) in file: lib\support\0.2.9/primitives.sharp:461:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 461 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2490] params(1) in file: lib\support\0.2.9/primitives.sharp:462:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 462 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2491] params(1) in file: lib\support\0.2.9/primitives.sharp:463:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 463 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2492] params(1) in file: lib\support\0.2.9/primitives.sharp:464:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 464 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2493] params(1) in file: lib\support\0.2.9/primitives.sharp:465:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 465 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2494] params(1) in file: lib\support\0.2.9/primitives.sharp:466:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 466 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2495] params(1) in file: lib\support\0.2.9/primitives.sharp:467:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 467 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator&=[2496] params(1) in file: lib\support\0.2.9/primitives.sharp:469:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 469 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2497] params(1) in file: lib\support\0.2.9/primitives.sharp:470:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 470 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2498] params(1) in file: lib\support\0.2.9/primitives.sharp:471:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 471 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2499] params(1) in file: lib\support\0.2.9/primitives.sharp:472:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 472 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2500] params(1) in file: lib\support\0.2.9/primitives.sharp:473:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 473 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2501] params(1) in file: lib\support\0.2.9/primitives.sharp:474:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 474 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2502] params(1) in file: lib\support\0.2.9/primitives.sharp:475:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 475 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2503] params(1) in file: lib\support\0.2.9/primitives.sharp:476:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 476 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2504] params(1) in file: lib\support\0.2.9/primitives.sharp:477:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 477 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2505] params(1) in file: lib\support\0.2.9/primitives.sharp:478:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 478 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2506] params(1) in file: lib\support\0.2.9/primitives.sharp:479:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 479 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2507] params(1) in file: lib\support\0.2.9/primitives.sharp:480:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 480 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#long.operator|=[2508] params(1) in file: lib\support\0.2.9/primitives.sharp:482:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 482 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2509] params(1) in file: lib\support\0.2.9/primitives.sharp:483:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 483 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2510] params(1) in file: lib\support\0.2.9/primitives.sharp:484:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 484 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2511] params(1) in file: lib\support\0.2.9/primitives.sharp:485:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 485 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2512] params(1) in file: lib\support\0.2.9/primitives.sharp:486:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 486 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2513] params(1) in file: lib\support\0.2.9/primitives.sharp:487:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 487 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2514] params(1) in file: lib\support\0.2.9/primitives.sharp:488:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 488 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2515] params(1) in file: lib\support\0.2.9/primitives.sharp:489:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 489 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2516] params(1) in file: lib\support\0.2.9/primitives.sharp:490:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 490 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2517] params(1) in file: lib\support\0.2.9/primitives.sharp:491:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 491 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2518] params(1) in file: lib\support\0.2.9/primitives.sharp:492:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 492 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2519] params(1) in file: lib\support\0.2.9/primitives.sharp:493:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 493 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#long.long[2520] params(0) in file: lib\support\0.2.9/primitives.sharp:384:6: note:  
		class long base integer<_int64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @427 // <std#integer<_int64>.integer>   
2 [0x2]:         ret   


constructor: std#uint.uint[2521] params(1) in file: lib\support\0.2.9/primitives.sharp:497:9: note:  
		    uint(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2522] params(1) in file: lib\support\0.2.9/primitives.sharp:498:9: note:  
		    uint(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2523] params(1) in file: lib\support\0.2.9/primitives.sharp:499:9: note:  
		    uint(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2524] params(1) in file: lib\support\0.2.9/primitives.sharp:500:9: note:  
		    uint(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2525] params(1) in file: lib\support\0.2.9/primitives.sharp:501:9: note:  
		    uint(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2526] params(1) in file: lib\support\0.2.9/primitives.sharp:502:9: note:  
		    uint(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2527] params(1) in file: lib\support\0.2.9/primitives.sharp:503:9: note:  
		    uint(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2528] params(1) in file: lib\support\0.2.9/primitives.sharp:504:9: note:  
		    uint(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2529] params(1) in file: lib\support\0.2.9/primitives.sharp:505:9: note:  
		    uint(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2530] params(1) in file: lib\support\0.2.9/primitives.sharp:506:9: note:  
		    uint(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2531] params(1) in file: lib\support\0.2.9/primitives.sharp:507:9: note:  
		    uint(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @428 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2532] params(1) in file: lib\support\0.2.9/primitives.sharp:508:9: note:  
		    uint(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @428 // <std#integer<_uint32>.integer>   
3 [0x3]:         ret   


overload function: std#uint.operator![2533] params(0) in file: lib\support\0.2.9/primitives.sharp:510:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 510 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#uint.operator++[2534] params(0) in file: lib\support\0.2.9/primitives.sharp:511:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 511 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uint.operator++[2535] params(1) in file: lib\support\0.2.9/primitives.sharp:512:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 512 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uint.operator--[2536] params(0) in file: lib\support\0.2.9/primitives.sharp:513:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 513 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uint.operator--[2537] params(1) in file: lib\support\0.2.9/primitives.sharp:514:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 514 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uint.operator+=[2538] params(1) in file: lib\support\0.2.9/primitives.sharp:516:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 516 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2539] params(1) in file: lib\support\0.2.9/primitives.sharp:517:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 517 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2540] params(1) in file: lib\support\0.2.9/primitives.sharp:518:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 518 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2541] params(1) in file: lib\support\0.2.9/primitives.sharp:519:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 519 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2542] params(1) in file: lib\support\0.2.9/primitives.sharp:520:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 520 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2543] params(1) in file: lib\support\0.2.9/primitives.sharp:521:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 521 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2544] params(1) in file: lib\support\0.2.9/primitives.sharp:522:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 522 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2545] params(1) in file: lib\support\0.2.9/primitives.sharp:523:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 523 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2546] params(1) in file: lib\support\0.2.9/primitives.sharp:524:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 524 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2547] params(1) in file: lib\support\0.2.9/primitives.sharp:525:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 525 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2548] params(1) in file: lib\support\0.2.9/primitives.sharp:526:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 526 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2549] params(1) in file: lib\support\0.2.9/primitives.sharp:527:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 527 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator-=[2550] params(1) in file: lib\support\0.2.9/primitives.sharp:529:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 529 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2551] params(1) in file: lib\support\0.2.9/primitives.sharp:530:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 530 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2552] params(1) in file: lib\support\0.2.9/primitives.sharp:531:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 531 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2553] params(1) in file: lib\support\0.2.9/primitives.sharp:532:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 532 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2554] params(1) in file: lib\support\0.2.9/primitives.sharp:533:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 533 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2555] params(1) in file: lib\support\0.2.9/primitives.sharp:534:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 534 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2556] params(1) in file: lib\support\0.2.9/primitives.sharp:535:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 535 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2557] params(1) in file: lib\support\0.2.9/primitives.sharp:536:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 536 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2558] params(1) in file: lib\support\0.2.9/primitives.sharp:537:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 537 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2559] params(1) in file: lib\support\0.2.9/primitives.sharp:538:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 538 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2560] params(1) in file: lib\support\0.2.9/primitives.sharp:539:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 539 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2561] params(1) in file: lib\support\0.2.9/primitives.sharp:540:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 540 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator*=[2562] params(1) in file: lib\support\0.2.9/primitives.sharp:542:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 542 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2563] params(1) in file: lib\support\0.2.9/primitives.sharp:543:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 543 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2564] params(1) in file: lib\support\0.2.9/primitives.sharp:544:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 544 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2565] params(1) in file: lib\support\0.2.9/primitives.sharp:545:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 545 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2566] params(1) in file: lib\support\0.2.9/primitives.sharp:546:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 546 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2567] params(1) in file: lib\support\0.2.9/primitives.sharp:547:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 547 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2568] params(1) in file: lib\support\0.2.9/primitives.sharp:548:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 548 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2569] params(1) in file: lib\support\0.2.9/primitives.sharp:549:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 549 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2570] params(1) in file: lib\support\0.2.9/primitives.sharp:550:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 550 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2571] params(1) in file: lib\support\0.2.9/primitives.sharp:551:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 551 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2572] params(1) in file: lib\support\0.2.9/primitives.sharp:552:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 552 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2573] params(1) in file: lib\support\0.2.9/primitives.sharp:553:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 553 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator/=[2574] params(1) in file: lib\support\0.2.9/primitives.sharp:555:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 555 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2575] params(1) in file: lib\support\0.2.9/primitives.sharp:556:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 556 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2576] params(1) in file: lib\support\0.2.9/primitives.sharp:557:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 557 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2577] params(1) in file: lib\support\0.2.9/primitives.sharp:558:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 558 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2578] params(1) in file: lib\support\0.2.9/primitives.sharp:559:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 559 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2579] params(1) in file: lib\support\0.2.9/primitives.sharp:560:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 560 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2580] params(1) in file: lib\support\0.2.9/primitives.sharp:561:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 561 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2581] params(1) in file: lib\support\0.2.9/primitives.sharp:562:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 562 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2582] params(1) in file: lib\support\0.2.9/primitives.sharp:563:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 563 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2583] params(1) in file: lib\support\0.2.9/primitives.sharp:564:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 564 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2584] params(1) in file: lib\support\0.2.9/primitives.sharp:565:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 565 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2585] params(1) in file: lib\support\0.2.9/primitives.sharp:566:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 566 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator%=[2586] params(1) in file: lib\support\0.2.9/primitives.sharp:568:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 568 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2587] params(1) in file: lib\support\0.2.9/primitives.sharp:569:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 569 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2588] params(1) in file: lib\support\0.2.9/primitives.sharp:570:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 570 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2589] params(1) in file: lib\support\0.2.9/primitives.sharp:571:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 571 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2590] params(1) in file: lib\support\0.2.9/primitives.sharp:572:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 572 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2591] params(1) in file: lib\support\0.2.9/primitives.sharp:573:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 573 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2592] params(1) in file: lib\support\0.2.9/primitives.sharp:574:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 574 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2593] params(1) in file: lib\support\0.2.9/primitives.sharp:575:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 575 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2594] params(1) in file: lib\support\0.2.9/primitives.sharp:576:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 576 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2595] params(1) in file: lib\support\0.2.9/primitives.sharp:577:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 577 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2596] params(1) in file: lib\support\0.2.9/primitives.sharp:578:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 578 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2597] params(1) in file: lib\support\0.2.9/primitives.sharp:579:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 579 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator&=[2598] params(1) in file: lib\support\0.2.9/primitives.sharp:581:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 581 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2599] params(1) in file: lib\support\0.2.9/primitives.sharp:582:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 582 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2600] params(1) in file: lib\support\0.2.9/primitives.sharp:583:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 583 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2601] params(1) in file: lib\support\0.2.9/primitives.sharp:584:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 584 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2602] params(1) in file: lib\support\0.2.9/primitives.sharp:585:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 585 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2603] params(1) in file: lib\support\0.2.9/primitives.sharp:586:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 586 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2604] params(1) in file: lib\support\0.2.9/primitives.sharp:587:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 587 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2605] params(1) in file: lib\support\0.2.9/primitives.sharp:588:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 588 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2606] params(1) in file: lib\support\0.2.9/primitives.sharp:589:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 589 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2607] params(1) in file: lib\support\0.2.9/primitives.sharp:590:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 590 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2608] params(1) in file: lib\support\0.2.9/primitives.sharp:591:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 591 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2609] params(1) in file: lib\support\0.2.9/primitives.sharp:592:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 592 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#uint.operator|=[2610] params(1) in file: lib\support\0.2.9/primitives.sharp:594:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 594 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2611] params(1) in file: lib\support\0.2.9/primitives.sharp:595:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 595 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2612] params(1) in file: lib\support\0.2.9/primitives.sharp:596:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 596 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2613] params(1) in file: lib\support\0.2.9/primitives.sharp:597:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 597 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2614] params(1) in file: lib\support\0.2.9/primitives.sharp:598:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 598 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2615] params(1) in file: lib\support\0.2.9/primitives.sharp:599:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 599 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2616] params(1) in file: lib\support\0.2.9/primitives.sharp:600:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 600 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2617] params(1) in file: lib\support\0.2.9/primitives.sharp:601:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 601 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2618] params(1) in file: lib\support\0.2.9/primitives.sharp:602:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 602 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2619] params(1) in file: lib\support\0.2.9/primitives.sharp:603:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 603 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2620] params(1) in file: lib\support\0.2.9/primitives.sharp:604:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 604 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2621] params(1) in file: lib\support\0.2.9/primitives.sharp:605:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 605 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#uint.uint[2622] params(0) in file: lib\support\0.2.9/primitives.sharp:496:6: note:  
		class uint base integer<_uint32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @636 // <std#integer<_uint32>.integer>   
2 [0x2]:         ret   


constructor: std#int.int[2623] params(1) in file: lib\support\0.2.9/primitives.sharp:608:8: note:  
		    int(i : long) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2624] params(1) in file: lib\support\0.2.9/primitives.sharp:609:8: note:  
		    int(i : int) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2625] params(1) in file: lib\support\0.2.9/primitives.sharp:610:8: note:  
		    int(i : short) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2626] params(1) in file: lib\support\0.2.9/primitives.sharp:611:8: note:  
		    int(i : char) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2627] params(1) in file: lib\support\0.2.9/primitives.sharp:612:8: note:  
		    int(i : byte) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2628] params(1) in file: lib\support\0.2.9/primitives.sharp:613:8: note:  
		    int(i : bool) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2629] params(1) in file: lib\support\0.2.9/primitives.sharp:614:8: note:  
		    int(i : ulong) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2630] params(1) in file: lib\support\0.2.9/primitives.sharp:615:8: note:  
		    int(i : uint) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2631] params(1) in file: lib\support\0.2.9/primitives.sharp:616:8: note:  
		    int(i : ushort) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2632] params(1) in file: lib\support\0.2.9/primitives.sharp:617:8: note:  
		    int(i : uchar) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2633] params(1) in file: lib\support\0.2.9/primitives.sharp:618:8: note:  
		    int(i : double) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @637 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2634] params(1) in file: lib\support\0.2.9/primitives.sharp:619:8: note:  
		    int(i : var) -> base(i) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @637 // <std#integer<_int32>.integer>   
3 [0x3]:         ret   


overload function: std#int.operator![2635] params(0) in file: lib\support\0.2.9/primitives.sharp:621:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 621 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#int.operator++[2636] params(0) in file: lib\support\0.2.9/primitives.sharp:622:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 622 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#int.operator++[2637] params(1) in file: lib\support\0.2.9/primitives.sharp:623:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 623 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#int.operator--[2638] params(0) in file: lib\support\0.2.9/primitives.sharp:624:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 624 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#int.operator--[2639] params(1) in file: lib\support\0.2.9/primitives.sharp:625:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 625 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#int.operator+=[2640] params(1) in file: lib\support\0.2.9/primitives.sharp:627:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 627 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2641] params(1) in file: lib\support\0.2.9/primitives.sharp:628:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 628 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2642] params(1) in file: lib\support\0.2.9/primitives.sharp:629:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 629 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2643] params(1) in file: lib\support\0.2.9/primitives.sharp:630:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 630 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2644] params(1) in file: lib\support\0.2.9/primitives.sharp:631:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 631 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2645] params(1) in file: lib\support\0.2.9/primitives.sharp:632:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 632 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2646] params(1) in file: lib\support\0.2.9/primitives.sharp:633:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 633 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2647] params(1) in file: lib\support\0.2.9/primitives.sharp:634:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 634 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2648] params(1) in file: lib\support\0.2.9/primitives.sharp:635:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 635 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2649] params(1) in file: lib\support\0.2.9/primitives.sharp:636:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 636 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2650] params(1) in file: lib\support\0.2.9/primitives.sharp:637:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 637 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2651] params(1) in file: lib\support\0.2.9/primitives.sharp:638:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 638 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator-=[2652] params(1) in file: lib\support\0.2.9/primitives.sharp:640:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 640 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2653] params(1) in file: lib\support\0.2.9/primitives.sharp:641:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 641 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2654] params(1) in file: lib\support\0.2.9/primitives.sharp:642:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 642 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2655] params(1) in file: lib\support\0.2.9/primitives.sharp:643:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 643 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2656] params(1) in file: lib\support\0.2.9/primitives.sharp:644:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 644 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2657] params(1) in file: lib\support\0.2.9/primitives.sharp:645:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 645 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2658] params(1) in file: lib\support\0.2.9/primitives.sharp:646:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 646 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2659] params(1) in file: lib\support\0.2.9/primitives.sharp:647:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 647 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2660] params(1) in file: lib\support\0.2.9/primitives.sharp:648:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 648 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2661] params(1) in file: lib\support\0.2.9/primitives.sharp:649:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 649 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2662] params(1) in file: lib\support\0.2.9/primitives.sharp:650:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 650 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2663] params(1) in file: lib\support\0.2.9/primitives.sharp:651:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 651 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator*=[2664] params(1) in file: lib\support\0.2.9/primitives.sharp:653:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 653 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2665] params(1) in file: lib\support\0.2.9/primitives.sharp:654:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 654 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2666] params(1) in file: lib\support\0.2.9/primitives.sharp:655:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 655 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2667] params(1) in file: lib\support\0.2.9/primitives.sharp:656:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 656 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2668] params(1) in file: lib\support\0.2.9/primitives.sharp:657:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 657 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2669] params(1) in file: lib\support\0.2.9/primitives.sharp:658:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 658 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2670] params(1) in file: lib\support\0.2.9/primitives.sharp:659:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 659 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2671] params(1) in file: lib\support\0.2.9/primitives.sharp:660:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 660 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2672] params(1) in file: lib\support\0.2.9/primitives.sharp:661:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 661 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2673] params(1) in file: lib\support\0.2.9/primitives.sharp:662:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 662 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2674] params(1) in file: lib\support\0.2.9/primitives.sharp:663:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 663 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2675] params(1) in file: lib\support\0.2.9/primitives.sharp:664:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 664 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator/=[2676] params(1) in file: lib\support\0.2.9/primitives.sharp:666:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 666 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2677] params(1) in file: lib\support\0.2.9/primitives.sharp:667:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 667 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2678] params(1) in file: lib\support\0.2.9/primitives.sharp:668:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 668 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2679] params(1) in file: lib\support\0.2.9/primitives.sharp:669:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 669 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2680] params(1) in file: lib\support\0.2.9/primitives.sharp:670:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 670 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2681] params(1) in file: lib\support\0.2.9/primitives.sharp:671:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 671 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2682] params(1) in file: lib\support\0.2.9/primitives.sharp:672:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 672 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2683] params(1) in file: lib\support\0.2.9/primitives.sharp:673:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 673 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2684] params(1) in file: lib\support\0.2.9/primitives.sharp:674:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 674 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2685] params(1) in file: lib\support\0.2.9/primitives.sharp:675:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 675 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2686] params(1) in file: lib\support\0.2.9/primitives.sharp:676:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 676 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2687] params(1) in file: lib\support\0.2.9/primitives.sharp:677:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 677 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator%=[2688] params(1) in file: lib\support\0.2.9/primitives.sharp:679:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 679 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2689] params(1) in file: lib\support\0.2.9/primitives.sharp:680:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 680 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2690] params(1) in file: lib\support\0.2.9/primitives.sharp:681:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 681 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2691] params(1) in file: lib\support\0.2.9/primitives.sharp:682:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 682 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2692] params(1) in file: lib\support\0.2.9/primitives.sharp:683:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 683 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2693] params(1) in file: lib\support\0.2.9/primitives.sharp:684:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 684 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2694] params(1) in file: lib\support\0.2.9/primitives.sharp:685:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 685 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2695] params(1) in file: lib\support\0.2.9/primitives.sharp:686:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 686 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2696] params(1) in file: lib\support\0.2.9/primitives.sharp:687:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 687 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2697] params(1) in file: lib\support\0.2.9/primitives.sharp:688:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 688 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2698] params(1) in file: lib\support\0.2.9/primitives.sharp:689:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 689 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2699] params(1) in file: lib\support\0.2.9/primitives.sharp:690:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 690 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator&=[2700] params(1) in file: lib\support\0.2.9/primitives.sharp:692:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 692 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2701] params(1) in file: lib\support\0.2.9/primitives.sharp:693:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 693 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2702] params(1) in file: lib\support\0.2.9/primitives.sharp:694:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 694 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2703] params(1) in file: lib\support\0.2.9/primitives.sharp:695:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 695 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2704] params(1) in file: lib\support\0.2.9/primitives.sharp:696:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 696 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2705] params(1) in file: lib\support\0.2.9/primitives.sharp:697:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 697 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2706] params(1) in file: lib\support\0.2.9/primitives.sharp:698:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 698 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2707] params(1) in file: lib\support\0.2.9/primitives.sharp:699:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 699 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2708] params(1) in file: lib\support\0.2.9/primitives.sharp:700:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 700 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2709] params(1) in file: lib\support\0.2.9/primitives.sharp:701:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 701 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2710] params(1) in file: lib\support\0.2.9/primitives.sharp:702:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 702 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2711] params(1) in file: lib\support\0.2.9/primitives.sharp:703:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 703 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#int.operator|=[2712] params(1) in file: lib\support\0.2.9/primitives.sharp:705:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 705 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2713] params(1) in file: lib\support\0.2.9/primitives.sharp:706:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 706 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2714] params(1) in file: lib\support\0.2.9/primitives.sharp:707:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 707 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2715] params(1) in file: lib\support\0.2.9/primitives.sharp:708:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 708 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2716] params(1) in file: lib\support\0.2.9/primitives.sharp:709:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 709 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2717] params(1) in file: lib\support\0.2.9/primitives.sharp:710:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 710 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2718] params(1) in file: lib\support\0.2.9/primitives.sharp:711:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 711 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2719] params(1) in file: lib\support\0.2.9/primitives.sharp:712:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 712 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2720] params(1) in file: lib\support\0.2.9/primitives.sharp:713:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 713 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2721] params(1) in file: lib\support\0.2.9/primitives.sharp:714:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 714 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2722] params(1) in file: lib\support\0.2.9/primitives.sharp:715:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 715 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2723] params(1) in file: lib\support\0.2.9/primitives.sharp:716:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 716 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#int.int[2724] params(0) in file: lib\support\0.2.9/primitives.sharp:607:6: note:  
		class int base integer<_int32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @845 // <std#integer<_int32>.integer>   
2 [0x2]:         ret   


constructor: std#ushort.ushort[2725] params(1) in file: lib\support\0.2.9/primitives.sharp:719:11: note:  
		    ushort(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2726] params(1) in file: lib\support\0.2.9/primitives.sharp:720:11: note:  
		    ushort(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2727] params(1) in file: lib\support\0.2.9/primitives.sharp:721:11: note:  
		    ushort(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2728] params(1) in file: lib\support\0.2.9/primitives.sharp:722:11: note:  
		    ushort(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2729] params(1) in file: lib\support\0.2.9/primitives.sharp:723:11: note:  
		    ushort(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2730] params(1) in file: lib\support\0.2.9/primitives.sharp:724:11: note:  
		    ushort(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2731] params(1) in file: lib\support\0.2.9/primitives.sharp:725:11: note:  
		    ushort(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2732] params(1) in file: lib\support\0.2.9/primitives.sharp:726:11: note:  
		    ushort(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2733] params(1) in file: lib\support\0.2.9/primitives.sharp:727:11: note:  
		    ushort(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2734] params(1) in file: lib\support\0.2.9/primitives.sharp:728:11: note:  
		    ushort(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2735] params(1) in file: lib\support\0.2.9/primitives.sharp:729:11: note:  
		    ushort(i : double) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @846 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2736] params(1) in file: lib\support\0.2.9/primitives.sharp:730:11: note:  
		    ushort(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @846 // <std#integer<_uint16>.integer>   
3 [0x3]:         ret   


overload function: std#ushort.operator![2737] params(0) in file: lib\support\0.2.9/primitives.sharp:732:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 732 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#ushort.operator++[2738] params(0) in file: lib\support\0.2.9/primitives.sharp:733:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 733 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ushort.operator++[2739] params(1) in file: lib\support\0.2.9/primitives.sharp:734:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 734 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ushort.operator--[2740] params(0) in file: lib\support\0.2.9/primitives.sharp:735:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 735 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ushort.operator--[2741] params(1) in file: lib\support\0.2.9/primitives.sharp:736:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 736 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ushort.operator+=[2742] params(1) in file: lib\support\0.2.9/primitives.sharp:738:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 738 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2743] params(1) in file: lib\support\0.2.9/primitives.sharp:739:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 739 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2744] params(1) in file: lib\support\0.2.9/primitives.sharp:740:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 740 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2745] params(1) in file: lib\support\0.2.9/primitives.sharp:741:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 741 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2746] params(1) in file: lib\support\0.2.9/primitives.sharp:742:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 742 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2747] params(1) in file: lib\support\0.2.9/primitives.sharp:743:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 743 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2748] params(1) in file: lib\support\0.2.9/primitives.sharp:744:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 744 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2749] params(1) in file: lib\support\0.2.9/primitives.sharp:745:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 745 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2750] params(1) in file: lib\support\0.2.9/primitives.sharp:746:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 746 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2751] params(1) in file: lib\support\0.2.9/primitives.sharp:747:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 747 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2752] params(1) in file: lib\support\0.2.9/primitives.sharp:748:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 748 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2753] params(1) in file: lib\support\0.2.9/primitives.sharp:749:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 749 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator-=[2754] params(1) in file: lib\support\0.2.9/primitives.sharp:751:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 751 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2755] params(1) in file: lib\support\0.2.9/primitives.sharp:752:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 752 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2756] params(1) in file: lib\support\0.2.9/primitives.sharp:753:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 753 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2757] params(1) in file: lib\support\0.2.9/primitives.sharp:754:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 754 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2758] params(1) in file: lib\support\0.2.9/primitives.sharp:755:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 755 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2759] params(1) in file: lib\support\0.2.9/primitives.sharp:756:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 756 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2760] params(1) in file: lib\support\0.2.9/primitives.sharp:757:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 757 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2761] params(1) in file: lib\support\0.2.9/primitives.sharp:758:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 758 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2762] params(1) in file: lib\support\0.2.9/primitives.sharp:759:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 759 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2763] params(1) in file: lib\support\0.2.9/primitives.sharp:760:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 760 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2764] params(1) in file: lib\support\0.2.9/primitives.sharp:761:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 761 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2765] params(1) in file: lib\support\0.2.9/primitives.sharp:762:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 762 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator*=[2766] params(1) in file: lib\support\0.2.9/primitives.sharp:764:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 764 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2767] params(1) in file: lib\support\0.2.9/primitives.sharp:765:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 765 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2768] params(1) in file: lib\support\0.2.9/primitives.sharp:766:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 766 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2769] params(1) in file: lib\support\0.2.9/primitives.sharp:767:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 767 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2770] params(1) in file: lib\support\0.2.9/primitives.sharp:768:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 768 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2771] params(1) in file: lib\support\0.2.9/primitives.sharp:769:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 769 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2772] params(1) in file: lib\support\0.2.9/primitives.sharp:770:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 770 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2773] params(1) in file: lib\support\0.2.9/primitives.sharp:771:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 771 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2774] params(1) in file: lib\support\0.2.9/primitives.sharp:772:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 772 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2775] params(1) in file: lib\support\0.2.9/primitives.sharp:773:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 773 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2776] params(1) in file: lib\support\0.2.9/primitives.sharp:774:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 774 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2777] params(1) in file: lib\support\0.2.9/primitives.sharp:775:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 775 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator/=[2778] params(1) in file: lib\support\0.2.9/primitives.sharp:777:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 777 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2779] params(1) in file: lib\support\0.2.9/primitives.sharp:778:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 778 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2780] params(1) in file: lib\support\0.2.9/primitives.sharp:779:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 779 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2781] params(1) in file: lib\support\0.2.9/primitives.sharp:780:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 780 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2782] params(1) in file: lib\support\0.2.9/primitives.sharp:781:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 781 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2783] params(1) in file: lib\support\0.2.9/primitives.sharp:782:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 782 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2784] params(1) in file: lib\support\0.2.9/primitives.sharp:783:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 783 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2785] params(1) in file: lib\support\0.2.9/primitives.sharp:784:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 784 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2786] params(1) in file: lib\support\0.2.9/primitives.sharp:785:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 785 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2787] params(1) in file: lib\support\0.2.9/primitives.sharp:786:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 786 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2788] params(1) in file: lib\support\0.2.9/primitives.sharp:787:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 787 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2789] params(1) in file: lib\support\0.2.9/primitives.sharp:788:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 788 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator%=[2790] params(1) in file: lib\support\0.2.9/primitives.sharp:790:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 790 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2791] params(1) in file: lib\support\0.2.9/primitives.sharp:791:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 791 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2792] params(1) in file: lib\support\0.2.9/primitives.sharp:792:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 792 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2793] params(1) in file: lib\support\0.2.9/primitives.sharp:793:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 793 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2794] params(1) in file: lib\support\0.2.9/primitives.sharp:794:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 794 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2795] params(1) in file: lib\support\0.2.9/primitives.sharp:795:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 795 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2796] params(1) in file: lib\support\0.2.9/primitives.sharp:796:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 796 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2797] params(1) in file: lib\support\0.2.9/primitives.sharp:797:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 797 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2798] params(1) in file: lib\support\0.2.9/primitives.sharp:798:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 798 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2799] params(1) in file: lib\support\0.2.9/primitives.sharp:799:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 799 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2800] params(1) in file: lib\support\0.2.9/primitives.sharp:800:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 800 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2801] params(1) in file: lib\support\0.2.9/primitives.sharp:801:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 801 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator&=[2802] params(1) in file: lib\support\0.2.9/primitives.sharp:803:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 803 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2803] params(1) in file: lib\support\0.2.9/primitives.sharp:804:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 804 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2804] params(1) in file: lib\support\0.2.9/primitives.sharp:805:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 805 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2805] params(1) in file: lib\support\0.2.9/primitives.sharp:806:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 806 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2806] params(1) in file: lib\support\0.2.9/primitives.sharp:807:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 807 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2807] params(1) in file: lib\support\0.2.9/primitives.sharp:808:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 808 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2808] params(1) in file: lib\support\0.2.9/primitives.sharp:809:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 809 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2809] params(1) in file: lib\support\0.2.9/primitives.sharp:810:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 810 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2810] params(1) in file: lib\support\0.2.9/primitives.sharp:811:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 811 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2811] params(1) in file: lib\support\0.2.9/primitives.sharp:812:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 812 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2812] params(1) in file: lib\support\0.2.9/primitives.sharp:813:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 813 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2813] params(1) in file: lib\support\0.2.9/primitives.sharp:814:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 814 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#ushort.operator|=[2814] params(1) in file: lib\support\0.2.9/primitives.sharp:816:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 816 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2815] params(1) in file: lib\support\0.2.9/primitives.sharp:817:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 817 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2816] params(1) in file: lib\support\0.2.9/primitives.sharp:818:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 818 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2817] params(1) in file: lib\support\0.2.9/primitives.sharp:819:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 819 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2818] params(1) in file: lib\support\0.2.9/primitives.sharp:820:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 820 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2819] params(1) in file: lib\support\0.2.9/primitives.sharp:821:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 821 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2820] params(1) in file: lib\support\0.2.9/primitives.sharp:822:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 822 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2821] params(1) in file: lib\support\0.2.9/primitives.sharp:823:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 823 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2822] params(1) in file: lib\support\0.2.9/primitives.sharp:824:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 824 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2823] params(1) in file: lib\support\0.2.9/primitives.sharp:825:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 825 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2824] params(1) in file: lib\support\0.2.9/primitives.sharp:826:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 826 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2825] params(1) in file: lib\support\0.2.9/primitives.sharp:827:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 827 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#ushort.ushort[2826] params(0) in file: lib\support\0.2.9/primitives.sharp:718:6: note:  
		class ushort base integer<_uint16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1054 // <std#integer<_uint16>.integer>   
2 [0x2]:         ret   


constructor: std#short.short[2827] params(1) in file: lib\support\0.2.9/primitives.sharp:830:10: note:  
		    short(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2828] params(1) in file: lib\support\0.2.9/primitives.sharp:831:10: note:  
		    short(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2829] params(1) in file: lib\support\0.2.9/primitives.sharp:832:10: note:  
		    short(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2830] params(1) in file: lib\support\0.2.9/primitives.sharp:833:10: note:  
		    short(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2831] params(1) in file: lib\support\0.2.9/primitives.sharp:834:10: note:  
		    short(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2832] params(1) in file: lib\support\0.2.9/primitives.sharp:835:10: note:  
		    short(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2833] params(1) in file: lib\support\0.2.9/primitives.sharp:836:10: note:  
		    short(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2834] params(1) in file: lib\support\0.2.9/primitives.sharp:837:10: note:  
		    short(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2835] params(1) in file: lib\support\0.2.9/primitives.sharp:838:10: note:  
		    short(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2836] params(1) in file: lib\support\0.2.9/primitives.sharp:839:10: note:  
		    short(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2837] params(1) in file: lib\support\0.2.9/primitives.sharp:840:10: note:  
		    short(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1055 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2838] params(1) in file: lib\support\0.2.9/primitives.sharp:841:10: note:  
		    short(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1055 // <std#integer<_int16>.integer>   
3 [0x3]:         ret   


overload function: std#short.operator![2839] params(0) in file: lib\support\0.2.9/primitives.sharp:843:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 843 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#short.operator++[2840] params(0) in file: lib\support\0.2.9/primitives.sharp:844:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 844 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#short.operator++[2841] params(1) in file: lib\support\0.2.9/primitives.sharp:845:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 845 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#short.operator--[2842] params(0) in file: lib\support\0.2.9/primitives.sharp:846:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 846 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#short.operator--[2843] params(1) in file: lib\support\0.2.9/primitives.sharp:847:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 847 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#short.operator+=[2844] params(1) in file: lib\support\0.2.9/primitives.sharp:849:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 849 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2845] params(1) in file: lib\support\0.2.9/primitives.sharp:850:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 850 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2846] params(1) in file: lib\support\0.2.9/primitives.sharp:851:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 851 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2847] params(1) in file: lib\support\0.2.9/primitives.sharp:852:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 852 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2848] params(1) in file: lib\support\0.2.9/primitives.sharp:853:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 853 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2849] params(1) in file: lib\support\0.2.9/primitives.sharp:854:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 854 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2850] params(1) in file: lib\support\0.2.9/primitives.sharp:855:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 855 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2851] params(1) in file: lib\support\0.2.9/primitives.sharp:856:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 856 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2852] params(1) in file: lib\support\0.2.9/primitives.sharp:857:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 857 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2853] params(1) in file: lib\support\0.2.9/primitives.sharp:858:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 858 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2854] params(1) in file: lib\support\0.2.9/primitives.sharp:859:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 859 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2855] params(1) in file: lib\support\0.2.9/primitives.sharp:860:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 860 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator-=[2856] params(1) in file: lib\support\0.2.9/primitives.sharp:862:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 862 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2857] params(1) in file: lib\support\0.2.9/primitives.sharp:863:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 863 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2858] params(1) in file: lib\support\0.2.9/primitives.sharp:864:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 864 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2859] params(1) in file: lib\support\0.2.9/primitives.sharp:865:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 865 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2860] params(1) in file: lib\support\0.2.9/primitives.sharp:866:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 866 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2861] params(1) in file: lib\support\0.2.9/primitives.sharp:867:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 867 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2862] params(1) in file: lib\support\0.2.9/primitives.sharp:868:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 868 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2863] params(1) in file: lib\support\0.2.9/primitives.sharp:869:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 869 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2864] params(1) in file: lib\support\0.2.9/primitives.sharp:870:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 870 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2865] params(1) in file: lib\support\0.2.9/primitives.sharp:871:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 871 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2866] params(1) in file: lib\support\0.2.9/primitives.sharp:872:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 872 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2867] params(1) in file: lib\support\0.2.9/primitives.sharp:873:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 873 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator*=[2868] params(1) in file: lib\support\0.2.9/primitives.sharp:875:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 875 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2869] params(1) in file: lib\support\0.2.9/primitives.sharp:876:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 876 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2870] params(1) in file: lib\support\0.2.9/primitives.sharp:877:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 877 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2871] params(1) in file: lib\support\0.2.9/primitives.sharp:878:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 878 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2872] params(1) in file: lib\support\0.2.9/primitives.sharp:879:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 879 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2873] params(1) in file: lib\support\0.2.9/primitives.sharp:880:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 880 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2874] params(1) in file: lib\support\0.2.9/primitives.sharp:881:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 881 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2875] params(1) in file: lib\support\0.2.9/primitives.sharp:882:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 882 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2876] params(1) in file: lib\support\0.2.9/primitives.sharp:883:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 883 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2877] params(1) in file: lib\support\0.2.9/primitives.sharp:884:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 884 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2878] params(1) in file: lib\support\0.2.9/primitives.sharp:885:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 885 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2879] params(1) in file: lib\support\0.2.9/primitives.sharp:886:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 886 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator/=[2880] params(1) in file: lib\support\0.2.9/primitives.sharp:888:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 888 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2881] params(1) in file: lib\support\0.2.9/primitives.sharp:889:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 889 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2882] params(1) in file: lib\support\0.2.9/primitives.sharp:890:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 890 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2883] params(1) in file: lib\support\0.2.9/primitives.sharp:891:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 891 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2884] params(1) in file: lib\support\0.2.9/primitives.sharp:892:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 892 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2885] params(1) in file: lib\support\0.2.9/primitives.sharp:893:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 893 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2886] params(1) in file: lib\support\0.2.9/primitives.sharp:894:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 894 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2887] params(1) in file: lib\support\0.2.9/primitives.sharp:895:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 895 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2888] params(1) in file: lib\support\0.2.9/primitives.sharp:896:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 896 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2889] params(1) in file: lib\support\0.2.9/primitives.sharp:897:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 897 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2890] params(1) in file: lib\support\0.2.9/primitives.sharp:898:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 898 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2891] params(1) in file: lib\support\0.2.9/primitives.sharp:899:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 899 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator%=[2892] params(1) in file: lib\support\0.2.9/primitives.sharp:901:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 901 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2893] params(1) in file: lib\support\0.2.9/primitives.sharp:902:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 902 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2894] params(1) in file: lib\support\0.2.9/primitives.sharp:903:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 903 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2895] params(1) in file: lib\support\0.2.9/primitives.sharp:904:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 904 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2896] params(1) in file: lib\support\0.2.9/primitives.sharp:905:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 905 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2897] params(1) in file: lib\support\0.2.9/primitives.sharp:906:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 906 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2898] params(1) in file: lib\support\0.2.9/primitives.sharp:907:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 907 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2899] params(1) in file: lib\support\0.2.9/primitives.sharp:908:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 908 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2900] params(1) in file: lib\support\0.2.9/primitives.sharp:909:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 909 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2901] params(1) in file: lib\support\0.2.9/primitives.sharp:910:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 910 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2902] params(1) in file: lib\support\0.2.9/primitives.sharp:911:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 911 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2903] params(1) in file: lib\support\0.2.9/primitives.sharp:912:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 912 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator&=[2904] params(1) in file: lib\support\0.2.9/primitives.sharp:914:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 914 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2905] params(1) in file: lib\support\0.2.9/primitives.sharp:915:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 915 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2906] params(1) in file: lib\support\0.2.9/primitives.sharp:916:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 916 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2907] params(1) in file: lib\support\0.2.9/primitives.sharp:917:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 917 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2908] params(1) in file: lib\support\0.2.9/primitives.sharp:918:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 918 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2909] params(1) in file: lib\support\0.2.9/primitives.sharp:919:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 919 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2910] params(1) in file: lib\support\0.2.9/primitives.sharp:920:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 920 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2911] params(1) in file: lib\support\0.2.9/primitives.sharp:921:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 921 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2912] params(1) in file: lib\support\0.2.9/primitives.sharp:922:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 922 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2913] params(1) in file: lib\support\0.2.9/primitives.sharp:923:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 923 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2914] params(1) in file: lib\support\0.2.9/primitives.sharp:924:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 924 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2915] params(1) in file: lib\support\0.2.9/primitives.sharp:925:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 925 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#short.operator|=[2916] params(1) in file: lib\support\0.2.9/primitives.sharp:927:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 927 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2917] params(1) in file: lib\support\0.2.9/primitives.sharp:928:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 928 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2918] params(1) in file: lib\support\0.2.9/primitives.sharp:929:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 929 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2919] params(1) in file: lib\support\0.2.9/primitives.sharp:930:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 930 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2920] params(1) in file: lib\support\0.2.9/primitives.sharp:931:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 931 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2921] params(1) in file: lib\support\0.2.9/primitives.sharp:932:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 932 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2922] params(1) in file: lib\support\0.2.9/primitives.sharp:933:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 933 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2923] params(1) in file: lib\support\0.2.9/primitives.sharp:934:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 934 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2924] params(1) in file: lib\support\0.2.9/primitives.sharp:935:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 935 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2925] params(1) in file: lib\support\0.2.9/primitives.sharp:936:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 936 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2926] params(1) in file: lib\support\0.2.9/primitives.sharp:937:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 937 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2927] params(1) in file: lib\support\0.2.9/primitives.sharp:938:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 938 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#short.short[2928] params(0) in file: lib\support\0.2.9/primitives.sharp:829:6: note:  
		class short base integer<_int16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1263 // <std#integer<_int16>.integer>   
2 [0x2]:         ret   


constructor: std#uchar.uchar[2929] params(1) in file: lib\support\0.2.9/primitives.sharp:941:10: note:  
		    uchar(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2930] params(1) in file: lib\support\0.2.9/primitives.sharp:942:10: note:  
		    uchar(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2931] params(1) in file: lib\support\0.2.9/primitives.sharp:943:10: note:  
		    uchar(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2932] params(1) in file: lib\support\0.2.9/primitives.sharp:944:10: note:  
		    uchar(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2933] params(1) in file: lib\support\0.2.9/primitives.sharp:945:10: note:  
		    uchar(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2934] params(1) in file: lib\support\0.2.9/primitives.sharp:946:10: note:  
		    uchar(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2935] params(1) in file: lib\support\0.2.9/primitives.sharp:947:10: note:  
		    uchar(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2936] params(1) in file: lib\support\0.2.9/primitives.sharp:948:10: note:  
		    uchar(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2937] params(1) in file: lib\support\0.2.9/primitives.sharp:949:10: note:  
		    uchar(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2938] params(1) in file: lib\support\0.2.9/primitives.sharp:950:10: note:  
		    uchar(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2939] params(1) in file: lib\support\0.2.9/primitives.sharp:951:10: note:  
		    uchar(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1264 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2940] params(1) in file: lib\support\0.2.9/primitives.sharp:952:10: note:  
		    uchar(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1264 // <std#integer<_uint8>.integer>   
3 [0x3]:         ret   


overload function: std#uchar.operator![2941] params(0) in file: lib\support\0.2.9/primitives.sharp:954:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 954 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#uchar.operator++[2942] params(0) in file: lib\support\0.2.9/primitives.sharp:955:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 955 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uchar.operator++[2943] params(1) in file: lib\support\0.2.9/primitives.sharp:956:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 956 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uchar.operator--[2944] params(0) in file: lib\support\0.2.9/primitives.sharp:957:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 957 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uchar.operator--[2945] params(1) in file: lib\support\0.2.9/primitives.sharp:958:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 958 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uchar.operator+=[2946] params(1) in file: lib\support\0.2.9/primitives.sharp:960:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 960 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2947] params(1) in file: lib\support\0.2.9/primitives.sharp:961:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 961 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2948] params(1) in file: lib\support\0.2.9/primitives.sharp:962:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 962 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2949] params(1) in file: lib\support\0.2.9/primitives.sharp:963:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 963 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2950] params(1) in file: lib\support\0.2.9/primitives.sharp:964:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 964 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2951] params(1) in file: lib\support\0.2.9/primitives.sharp:965:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 965 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2952] params(1) in file: lib\support\0.2.9/primitives.sharp:966:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 966 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2953] params(1) in file: lib\support\0.2.9/primitives.sharp:967:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 967 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2954] params(1) in file: lib\support\0.2.9/primitives.sharp:968:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 968 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2955] params(1) in file: lib\support\0.2.9/primitives.sharp:969:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 969 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2956] params(1) in file: lib\support\0.2.9/primitives.sharp:970:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 970 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2957] params(1) in file: lib\support\0.2.9/primitives.sharp:971:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 971 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator-=[2958] params(1) in file: lib\support\0.2.9/primitives.sharp:973:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 973 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2959] params(1) in file: lib\support\0.2.9/primitives.sharp:974:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 974 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2960] params(1) in file: lib\support\0.2.9/primitives.sharp:975:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 975 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2961] params(1) in file: lib\support\0.2.9/primitives.sharp:976:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 976 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2962] params(1) in file: lib\support\0.2.9/primitives.sharp:977:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 977 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2963] params(1) in file: lib\support\0.2.9/primitives.sharp:978:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 978 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2964] params(1) in file: lib\support\0.2.9/primitives.sharp:979:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 979 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2965] params(1) in file: lib\support\0.2.9/primitives.sharp:980:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 980 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2966] params(1) in file: lib\support\0.2.9/primitives.sharp:981:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 981 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2967] params(1) in file: lib\support\0.2.9/primitives.sharp:982:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 982 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2968] params(1) in file: lib\support\0.2.9/primitives.sharp:983:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 983 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2969] params(1) in file: lib\support\0.2.9/primitives.sharp:984:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 984 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator*=[2970] params(1) in file: lib\support\0.2.9/primitives.sharp:986:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 986 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2971] params(1) in file: lib\support\0.2.9/primitives.sharp:987:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 987 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2972] params(1) in file: lib\support\0.2.9/primitives.sharp:988:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 988 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2973] params(1) in file: lib\support\0.2.9/primitives.sharp:989:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 989 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2974] params(1) in file: lib\support\0.2.9/primitives.sharp:990:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 990 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2975] params(1) in file: lib\support\0.2.9/primitives.sharp:991:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 991 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2976] params(1) in file: lib\support\0.2.9/primitives.sharp:992:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 992 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2977] params(1) in file: lib\support\0.2.9/primitives.sharp:993:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 993 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2978] params(1) in file: lib\support\0.2.9/primitives.sharp:994:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 994 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2979] params(1) in file: lib\support\0.2.9/primitives.sharp:995:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 995 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2980] params(1) in file: lib\support\0.2.9/primitives.sharp:996:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 996 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2981] params(1) in file: lib\support\0.2.9/primitives.sharp:997:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 997 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator/=[2982] params(1) in file: lib\support\0.2.9/primitives.sharp:999:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 999 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2983] params(1) in file: lib\support\0.2.9/primitives.sharp:1000:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1000 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2984] params(1) in file: lib\support\0.2.9/primitives.sharp:1001:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1001 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2985] params(1) in file: lib\support\0.2.9/primitives.sharp:1002:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1002 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2986] params(1) in file: lib\support\0.2.9/primitives.sharp:1003:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1003 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2987] params(1) in file: lib\support\0.2.9/primitives.sharp:1004:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1004 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2988] params(1) in file: lib\support\0.2.9/primitives.sharp:1005:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1005 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2989] params(1) in file: lib\support\0.2.9/primitives.sharp:1006:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1006 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2990] params(1) in file: lib\support\0.2.9/primitives.sharp:1007:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1007 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2991] params(1) in file: lib\support\0.2.9/primitives.sharp:1008:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1008 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2992] params(1) in file: lib\support\0.2.9/primitives.sharp:1009:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1009 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2993] params(1) in file: lib\support\0.2.9/primitives.sharp:1010:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1010 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#uchar.operator%=[2994] params(1) in file: lib\support\0.2.9/primitives.sharp:1012:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1012 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2995] params(1) in file: lib\support\0.2.9/primitives.sharp:1013:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1013 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2996] params(1) in file: lib\support\0.2.9/primitives.sharp:1014:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1014 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2997] params(1) in file: lib\support\0.2.9/primitives.sharp:1015:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1015 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2998] params(1) in file: lib\support\0.2.9/primitives.sharp:1016:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1016 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2999] params(1) in file: lib\support\0.2.9/primitives.sharp:1017:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1017 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[3000] params(1) in file: lib\support\0.2.9/primitives.sharp:1018:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1018 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[3001] params(1) in file: lib\support\0.2.9/primitives.sharp:1019:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1019 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[3002] params(1) in file: lib\support\0.2.9/primitives.sharp:1020:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1020 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[3003] params(1) in file: lib\support\0.2.9/primitives.sharp:1021:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1021 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[3004] params(1) in file: lib\support\0.2.9/primitives.sharp:1022:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1022 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[3005] params(1) in file: lib\support\0.2.9/primitives.sharp:1023:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1023 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#uchar.operator&=[3006] params(1) in file: lib\support\0.2.9/primitives.sharp:1025:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1025 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3007] params(1) in file: lib\support\0.2.9/primitives.sharp:1026:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1026 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3008] params(1) in file: lib\support\0.2.9/primitives.sharp:1027:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1027 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3009] params(1) in file: lib\support\0.2.9/primitives.sharp:1028:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1028 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3010] params(1) in file: lib\support\0.2.9/primitives.sharp:1029:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1029 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3011] params(1) in file: lib\support\0.2.9/primitives.sharp:1030:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1030 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3012] params(1) in file: lib\support\0.2.9/primitives.sharp:1031:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1031 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3013] params(1) in file: lib\support\0.2.9/primitives.sharp:1032:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1032 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3014] params(1) in file: lib\support\0.2.9/primitives.sharp:1033:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1033 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3015] params(1) in file: lib\support\0.2.9/primitives.sharp:1034:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1034 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3016] params(1) in file: lib\support\0.2.9/primitives.sharp:1035:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1035 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3017] params(1) in file: lib\support\0.2.9/primitives.sharp:1036:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1036 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#uchar.operator|=[3018] params(1) in file: lib\support\0.2.9/primitives.sharp:1038:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1038 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3019] params(1) in file: lib\support\0.2.9/primitives.sharp:1039:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1039 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3020] params(1) in file: lib\support\0.2.9/primitives.sharp:1040:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1040 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3021] params(1) in file: lib\support\0.2.9/primitives.sharp:1041:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1041 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3022] params(1) in file: lib\support\0.2.9/primitives.sharp:1042:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1042 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3023] params(1) in file: lib\support\0.2.9/primitives.sharp:1043:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1043 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3024] params(1) in file: lib\support\0.2.9/primitives.sharp:1044:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1044 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3025] params(1) in file: lib\support\0.2.9/primitives.sharp:1045:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1045 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3026] params(1) in file: lib\support\0.2.9/primitives.sharp:1046:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1046 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3027] params(1) in file: lib\support\0.2.9/primitives.sharp:1047:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1047 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3028] params(1) in file: lib\support\0.2.9/primitives.sharp:1048:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1048 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3029] params(1) in file: lib\support\0.2.9/primitives.sharp:1049:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1049 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            movu8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


constructor: std#uchar.uchar[3030] params(0) in file: lib\support\0.2.9/primitives.sharp:940:6: note:  
		class uchar base integer<_uint8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1472 // <std#integer<_uint8>.integer>   
2 [0x2]:         ret   


constructor: std#char.char[3031] params(1) in file: lib\support\0.2.9/primitives.sharp:1052:9: note:  
		    char(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3032] params(1) in file: lib\support\0.2.9/primitives.sharp:1053:9: note:  
		    char(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3033] params(1) in file: lib\support\0.2.9/primitives.sharp:1054:9: note:  
		    char(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3034] params(1) in file: lib\support\0.2.9/primitives.sharp:1055:9: note:  
		    char(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3035] params(1) in file: lib\support\0.2.9/primitives.sharp:1056:9: note:  
		    char(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3036] params(1) in file: lib\support\0.2.9/primitives.sharp:1057:9: note:  
		    char(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3037] params(1) in file: lib\support\0.2.9/primitives.sharp:1058:9: note:  
		    char(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3038] params(1) in file: lib\support\0.2.9/primitives.sharp:1059:9: note:  
		    char(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3039] params(1) in file: lib\support\0.2.9/primitives.sharp:1060:9: note:  
		    char(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3040] params(1) in file: lib\support\0.2.9/primitives.sharp:1061:9: note:  
		    char(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3041] params(1) in file: lib\support\0.2.9/primitives.sharp:1062:9: note:  
		    char(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3042] params(1) in file: lib\support\0.2.9/primitives.sharp:1063:9: note:  
		    char(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1473 // <std#integer<_int8>.integer>   
3 [0x3]:         ret   


overload function: std#char.operator![3043] params(0) in file: lib\support\0.2.9/primitives.sharp:1065:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1065 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#char.operator++[3044] params(0) in file: lib\support\0.2.9/primitives.sharp:1066:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1066 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            mov8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#char.operator++[3045] params(1) in file: lib\support\0.2.9/primitives.sharp:1067:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1067 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            mov8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#char.operator--[3046] params(0) in file: lib\support\0.2.9/primitives.sharp:1068:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1068 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            mov8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#char.operator--[3047] params(1) in file: lib\support\0.2.9/primitives.sharp:1069:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1069 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            mov8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#char.operator+=[3048] params(1) in file: lib\support\0.2.9/primitives.sharp:1071:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1071 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3049] params(1) in file: lib\support\0.2.9/primitives.sharp:1072:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1072 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3050] params(1) in file: lib\support\0.2.9/primitives.sharp:1073:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1073 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3051] params(1) in file: lib\support\0.2.9/primitives.sharp:1074:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1074 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3052] params(1) in file: lib\support\0.2.9/primitives.sharp:1075:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1075 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3053] params(1) in file: lib\support\0.2.9/primitives.sharp:1076:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1076 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3054] params(1) in file: lib\support\0.2.9/primitives.sharp:1077:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1077 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3055] params(1) in file: lib\support\0.2.9/primitives.sharp:1078:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1078 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3056] params(1) in file: lib\support\0.2.9/primitives.sharp:1079:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1079 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3057] params(1) in file: lib\support\0.2.9/primitives.sharp:1080:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1080 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3058] params(1) in file: lib\support\0.2.9/primitives.sharp:1081:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1081 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3059] params(1) in file: lib\support\0.2.9/primitives.sharp:1082:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1082 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator-=[3060] params(1) in file: lib\support\0.2.9/primitives.sharp:1084:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1084 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3061] params(1) in file: lib\support\0.2.9/primitives.sharp:1085:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1085 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3062] params(1) in file: lib\support\0.2.9/primitives.sharp:1086:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1086 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3063] params(1) in file: lib\support\0.2.9/primitives.sharp:1087:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1087 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3064] params(1) in file: lib\support\0.2.9/primitives.sharp:1088:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1088 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3065] params(1) in file: lib\support\0.2.9/primitives.sharp:1089:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1089 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3066] params(1) in file: lib\support\0.2.9/primitives.sharp:1090:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1090 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3067] params(1) in file: lib\support\0.2.9/primitives.sharp:1091:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1091 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3068] params(1) in file: lib\support\0.2.9/primitives.sharp:1092:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1092 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3069] params(1) in file: lib\support\0.2.9/primitives.sharp:1093:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1093 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3070] params(1) in file: lib\support\0.2.9/primitives.sharp:1094:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1094 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3071] params(1) in file: lib\support\0.2.9/primitives.sharp:1095:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1095 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator*=[3072] params(1) in file: lib\support\0.2.9/primitives.sharp:1097:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1097 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3073] params(1) in file: lib\support\0.2.9/primitives.sharp:1098:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1098 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3074] params(1) in file: lib\support\0.2.9/primitives.sharp:1099:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1099 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3075] params(1) in file: lib\support\0.2.9/primitives.sharp:1100:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1100 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3076] params(1) in file: lib\support\0.2.9/primitives.sharp:1101:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1101 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3077] params(1) in file: lib\support\0.2.9/primitives.sharp:1102:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1102 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3078] params(1) in file: lib\support\0.2.9/primitives.sharp:1103:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1103 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3079] params(1) in file: lib\support\0.2.9/primitives.sharp:1104:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1104 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3080] params(1) in file: lib\support\0.2.9/primitives.sharp:1105:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1105 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3081] params(1) in file: lib\support\0.2.9/primitives.sharp:1106:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1106 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3082] params(1) in file: lib\support\0.2.9/primitives.sharp:1107:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1107 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3083] params(1) in file: lib\support\0.2.9/primitives.sharp:1108:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1108 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator/=[3084] params(1) in file: lib\support\0.2.9/primitives.sharp:1110:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1110 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3085] params(1) in file: lib\support\0.2.9/primitives.sharp:1111:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1111 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3086] params(1) in file: lib\support\0.2.9/primitives.sharp:1112:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1112 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3087] params(1) in file: lib\support\0.2.9/primitives.sharp:1113:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1113 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3088] params(1) in file: lib\support\0.2.9/primitives.sharp:1114:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1114 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3089] params(1) in file: lib\support\0.2.9/primitives.sharp:1115:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1115 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3090] params(1) in file: lib\support\0.2.9/primitives.sharp:1116:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1116 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3091] params(1) in file: lib\support\0.2.9/primitives.sharp:1117:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1117 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3092] params(1) in file: lib\support\0.2.9/primitives.sharp:1118:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1118 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3093] params(1) in file: lib\support\0.2.9/primitives.sharp:1119:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1119 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3094] params(1) in file: lib\support\0.2.9/primitives.sharp:1120:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1120 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3095] params(1) in file: lib\support\0.2.9/primitives.sharp:1121:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1121 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator%=[3096] params(1) in file: lib\support\0.2.9/primitives.sharp:1123:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1123 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3097] params(1) in file: lib\support\0.2.9/primitives.sharp:1124:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1124 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3098] params(1) in file: lib\support\0.2.9/primitives.sharp:1125:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1125 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3099] params(1) in file: lib\support\0.2.9/primitives.sharp:1126:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1126 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3100] params(1) in file: lib\support\0.2.9/primitives.sharp:1127:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1127 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3101] params(1) in file: lib\support\0.2.9/primitives.sharp:1128:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1128 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3102] params(1) in file: lib\support\0.2.9/primitives.sharp:1129:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1129 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3103] params(1) in file: lib\support\0.2.9/primitives.sharp:1130:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1130 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3104] params(1) in file: lib\support\0.2.9/primitives.sharp:1131:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1131 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3105] params(1) in file: lib\support\0.2.9/primitives.sharp:1132:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1132 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3106] params(1) in file: lib\support\0.2.9/primitives.sharp:1133:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1133 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3107] params(1) in file: lib\support\0.2.9/primitives.sharp:1134:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1134 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator&=[3108] params(1) in file: lib\support\0.2.9/primitives.sharp:1136:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1136 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3109] params(1) in file: lib\support\0.2.9/primitives.sharp:1137:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1137 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3110] params(1) in file: lib\support\0.2.9/primitives.sharp:1138:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1138 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3111] params(1) in file: lib\support\0.2.9/primitives.sharp:1139:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1139 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3112] params(1) in file: lib\support\0.2.9/primitives.sharp:1140:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1140 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3113] params(1) in file: lib\support\0.2.9/primitives.sharp:1141:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1141 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3114] params(1) in file: lib\support\0.2.9/primitives.sharp:1142:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1142 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3115] params(1) in file: lib\support\0.2.9/primitives.sharp:1143:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1143 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3116] params(1) in file: lib\support\0.2.9/primitives.sharp:1144:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1144 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3117] params(1) in file: lib\support\0.2.9/primitives.sharp:1145:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1145 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3118] params(1) in file: lib\support\0.2.9/primitives.sharp:1146:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1146 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3119] params(1) in file: lib\support\0.2.9/primitives.sharp:1147:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1147 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#char.operator|=[3120] params(1) in file: lib\support\0.2.9/primitives.sharp:1149:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1149 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3121] params(1) in file: lib\support\0.2.9/primitives.sharp:1150:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1150 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3122] params(1) in file: lib\support\0.2.9/primitives.sharp:1151:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1151 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3123] params(1) in file: lib\support\0.2.9/primitives.sharp:1152:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1152 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3124] params(1) in file: lib\support\0.2.9/primitives.sharp:1153:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1153 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3125] params(1) in file: lib\support\0.2.9/primitives.sharp:1154:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1154 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3126] params(1) in file: lib\support\0.2.9/primitives.sharp:1155:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1155 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3127] params(1) in file: lib\support\0.2.9/primitives.sharp:1156:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1156 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3128] params(1) in file: lib\support\0.2.9/primitives.sharp:1157:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1157 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3129] params(1) in file: lib\support\0.2.9/primitives.sharp:1158:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1158 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3130] params(1) in file: lib\support\0.2.9/primitives.sharp:1159:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1159 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3131] params(1) in file: lib\support\0.2.9/primitives.sharp:1160:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1160 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            mov8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#char.is_digit[3132] params(1) in file: lib\support\0.2.9/primitives.sharp:1162:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1163 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#char.is_newline[3133] params(1) in file: lib\support\0.2.9/primitives.sharp:1166:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1167 call @2279 // <platform#build.is_windows>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1168 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#char.is_alpha[3134] params(1) in file: lib\support\0.2.9/primitives.sharp:1171:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1172 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#char.is_alpha_num[3135] params(1) in file: lib\support\0.2.9/primitives.sharp:1176:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1177 ipushl #0   
1 [0x1]:            call @3134 // <std#char.is_alpha>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @3132 // <std#char.is_digit>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#char.to_lower[3136] params(1) in file: lib\support\0.2.9/primitives.sharp:1180:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1181 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1182 istore 97   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #65, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1184 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


function: std#char.to_upper[3137] params(1) in file: lib\support\0.2.9/primitives.sharp:1187:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1188 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1189 istore 65   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1191 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


constructor: std#char.char[3138] params(0) in file: lib\support\0.2.9/primitives.sharp:1051:6: note:  
		class char base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1681 // <std#integer<_int8>.integer>   
2 [0x2]:         ret   


constructor: std#byte.byte[3139] params(1) in file: lib\support\0.2.9/primitives.sharp:1195:9: note:  
		    byte(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3140] params(1) in file: lib\support\0.2.9/primitives.sharp:1196:9: note:  
		    byte(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3141] params(1) in file: lib\support\0.2.9/primitives.sharp:1197:9: note:  
		    byte(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3142] params(1) in file: lib\support\0.2.9/primitives.sharp:1198:9: note:  
		    byte(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3143] params(1) in file: lib\support\0.2.9/primitives.sharp:1199:9: note:  
		    byte(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3144] params(1) in file: lib\support\0.2.9/primitives.sharp:1200:9: note:  
		    byte(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3145] params(1) in file: lib\support\0.2.9/primitives.sharp:1201:9: note:  
		    byte(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3146] params(1) in file: lib\support\0.2.9/primitives.sharp:1202:9: note:  
		    byte(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3147] params(1) in file: lib\support\0.2.9/primitives.sharp:1203:9: note:  
		    byte(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3148] params(1) in file: lib\support\0.2.9/primitives.sharp:1204:9: note:  
		    byte(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3149] params(1) in file: lib\support\0.2.9/primitives.sharp:1205:9: note:  
		    byte(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2940 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3150] params(1) in file: lib\support\0.2.9/primitives.sharp:1206:9: note:  
		    byte(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @2940 // <std#uchar.uchar>   
3 [0x3]:         ret   


overload function: std#byte.operator![3151] params(0) in file: lib\support\0.2.9/primitives.sharp:1208:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1208 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#byte.operator++[3152] params(0) in file: lib\support\0.2.9/primitives.sharp:1209:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1209 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#byte.operator++[3153] params(1) in file: lib\support\0.2.9/primitives.sharp:1210:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1210 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#byte.operator--[3154] params(0) in file: lib\support\0.2.9/primitives.sharp:1211:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1211 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#byte.operator--[3155] params(1) in file: lib\support\0.2.9/primitives.sharp:1212:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1212 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#byte.operator+=[3156] params(1) in file: lib\support\0.2.9/primitives.sharp:1214:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1214 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3157] params(1) in file: lib\support\0.2.9/primitives.sharp:1215:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1215 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3158] params(1) in file: lib\support\0.2.9/primitives.sharp:1216:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1216 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3159] params(1) in file: lib\support\0.2.9/primitives.sharp:1217:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1217 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3160] params(1) in file: lib\support\0.2.9/primitives.sharp:1218:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1218 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3161] params(1) in file: lib\support\0.2.9/primitives.sharp:1219:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1219 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3162] params(1) in file: lib\support\0.2.9/primitives.sharp:1220:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1220 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3163] params(1) in file: lib\support\0.2.9/primitives.sharp:1221:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1221 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3164] params(1) in file: lib\support\0.2.9/primitives.sharp:1222:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1222 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3165] params(1) in file: lib\support\0.2.9/primitives.sharp:1223:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1223 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3166] params(1) in file: lib\support\0.2.9/primitives.sharp:1224:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1224 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3167] params(1) in file: lib\support\0.2.9/primitives.sharp:1225:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1225 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator-=[3168] params(1) in file: lib\support\0.2.9/primitives.sharp:1227:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1227 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3169] params(1) in file: lib\support\0.2.9/primitives.sharp:1228:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1228 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3170] params(1) in file: lib\support\0.2.9/primitives.sharp:1229:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1229 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3171] params(1) in file: lib\support\0.2.9/primitives.sharp:1230:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1230 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3172] params(1) in file: lib\support\0.2.9/primitives.sharp:1231:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1231 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3173] params(1) in file: lib\support\0.2.9/primitives.sharp:1232:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1232 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3174] params(1) in file: lib\support\0.2.9/primitives.sharp:1233:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1233 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3175] params(1) in file: lib\support\0.2.9/primitives.sharp:1234:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1234 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3176] params(1) in file: lib\support\0.2.9/primitives.sharp:1235:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1235 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3177] params(1) in file: lib\support\0.2.9/primitives.sharp:1236:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1236 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3178] params(1) in file: lib\support\0.2.9/primitives.sharp:1237:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1237 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3179] params(1) in file: lib\support\0.2.9/primitives.sharp:1238:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1238 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator*=[3180] params(1) in file: lib\support\0.2.9/primitives.sharp:1240:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1240 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3181] params(1) in file: lib\support\0.2.9/primitives.sharp:1241:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1241 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3182] params(1) in file: lib\support\0.2.9/primitives.sharp:1242:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1242 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3183] params(1) in file: lib\support\0.2.9/primitives.sharp:1243:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1243 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3184] params(1) in file: lib\support\0.2.9/primitives.sharp:1244:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1244 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3185] params(1) in file: lib\support\0.2.9/primitives.sharp:1245:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1245 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3186] params(1) in file: lib\support\0.2.9/primitives.sharp:1246:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1246 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3187] params(1) in file: lib\support\0.2.9/primitives.sharp:1247:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1247 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3188] params(1) in file: lib\support\0.2.9/primitives.sharp:1248:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1248 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3189] params(1) in file: lib\support\0.2.9/primitives.sharp:1249:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1249 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3190] params(1) in file: lib\support\0.2.9/primitives.sharp:1250:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1250 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3191] params(1) in file: lib\support\0.2.9/primitives.sharp:1251:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1251 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator/=[3192] params(1) in file: lib\support\0.2.9/primitives.sharp:1253:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1253 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3193] params(1) in file: lib\support\0.2.9/primitives.sharp:1254:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1254 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3194] params(1) in file: lib\support\0.2.9/primitives.sharp:1255:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1255 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3195] params(1) in file: lib\support\0.2.9/primitives.sharp:1256:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1256 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3196] params(1) in file: lib\support\0.2.9/primitives.sharp:1257:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1257 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3197] params(1) in file: lib\support\0.2.9/primitives.sharp:1258:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1258 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3198] params(1) in file: lib\support\0.2.9/primitives.sharp:1259:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1259 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3199] params(1) in file: lib\support\0.2.9/primitives.sharp:1260:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1260 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3200] params(1) in file: lib\support\0.2.9/primitives.sharp:1261:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1261 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3201] params(1) in file: lib\support\0.2.9/primitives.sharp:1262:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1262 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3202] params(1) in file: lib\support\0.2.9/primitives.sharp:1263:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1263 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3203] params(1) in file: lib\support\0.2.9/primitives.sharp:1264:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1264 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator%=[3204] params(1) in file: lib\support\0.2.9/primitives.sharp:1266:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1266 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3205] params(1) in file: lib\support\0.2.9/primitives.sharp:1267:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1267 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3206] params(1) in file: lib\support\0.2.9/primitives.sharp:1268:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1268 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3207] params(1) in file: lib\support\0.2.9/primitives.sharp:1269:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1269 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3208] params(1) in file: lib\support\0.2.9/primitives.sharp:1270:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1270 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3209] params(1) in file: lib\support\0.2.9/primitives.sharp:1271:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1271 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3210] params(1) in file: lib\support\0.2.9/primitives.sharp:1272:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1272 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3211] params(1) in file: lib\support\0.2.9/primitives.sharp:1273:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1273 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3212] params(1) in file: lib\support\0.2.9/primitives.sharp:1274:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1274 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3213] params(1) in file: lib\support\0.2.9/primitives.sharp:1275:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1275 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3214] params(1) in file: lib\support\0.2.9/primitives.sharp:1276:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1276 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3215] params(1) in file: lib\support\0.2.9/primitives.sharp:1277:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1277 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator&=[3216] params(1) in file: lib\support\0.2.9/primitives.sharp:1279:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1279 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3217] params(1) in file: lib\support\0.2.9/primitives.sharp:1280:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1280 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3218] params(1) in file: lib\support\0.2.9/primitives.sharp:1281:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1281 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3219] params(1) in file: lib\support\0.2.9/primitives.sharp:1282:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1282 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3220] params(1) in file: lib\support\0.2.9/primitives.sharp:1283:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1283 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3221] params(1) in file: lib\support\0.2.9/primitives.sharp:1284:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1284 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3222] params(1) in file: lib\support\0.2.9/primitives.sharp:1285:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1285 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3223] params(1) in file: lib\support\0.2.9/primitives.sharp:1286:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1286 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3224] params(1) in file: lib\support\0.2.9/primitives.sharp:1287:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1287 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3225] params(1) in file: lib\support\0.2.9/primitives.sharp:1288:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1288 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3226] params(1) in file: lib\support\0.2.9/primitives.sharp:1289:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1289 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3227] params(1) in file: lib\support\0.2.9/primitives.sharp:1290:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1290 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#byte.operator|=[3228] params(1) in file: lib\support\0.2.9/primitives.sharp:1292:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1292 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3229] params(1) in file: lib\support\0.2.9/primitives.sharp:1293:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1293 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3230] params(1) in file: lib\support\0.2.9/primitives.sharp:1294:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1294 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3231] params(1) in file: lib\support\0.2.9/primitives.sharp:1295:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1295 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3232] params(1) in file: lib\support\0.2.9/primitives.sharp:1296:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1296 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3233] params(1) in file: lib\support\0.2.9/primitives.sharp:1297:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1297 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3234] params(1) in file: lib\support\0.2.9/primitives.sharp:1298:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1298 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3235] params(1) in file: lib\support\0.2.9/primitives.sharp:1299:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1299 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3236] params(1) in file: lib\support\0.2.9/primitives.sharp:1300:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1300 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3237] params(1) in file: lib\support\0.2.9/primitives.sharp:1301:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1301 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3238] params(1) in file: lib\support\0.2.9/primitives.sharp:1302:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1302 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3239] params(1) in file: lib\support\0.2.9/primitives.sharp:1303:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1303 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            movu8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#byte.is_digit[3240] params(1) in file: lib\support\0.2.9/primitives.sharp:1305:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1306 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#byte.is_newline[3241] params(1) in file: lib\support\0.2.9/primitives.sharp:1309:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1310 call @2279 // <platform#build.is_windows>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1311 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#byte.is_alpha[3242] params(1) in file: lib\support\0.2.9/primitives.sharp:1314:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1315 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#byte.is_alpha_num[3243] params(1) in file: lib\support\0.2.9/primitives.sharp:1319:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1320 ipushl #0   
1 [0x1]:            call @3242 // <std#byte.is_alpha>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @3240 // <std#byte.is_digit>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#byte.to_lower[3244] params(1) in file: lib\support\0.2.9/primitives.sharp:1323:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1324 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1325 istore 97   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #65, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1327 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


function: std#byte.to_upper[3245] params(1) in file: lib\support\0.2.9/primitives.sharp:1330:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1331 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1332 istore 65   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1334 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


constructor: std#byte.byte[3246] params(0) in file: lib\support\0.2.9/primitives.sharp:1194:6: note:  
		class byte base uchar {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3030 // <std#uchar.uchar>   
2 [0x2]:         ret   


constructor: std#bool.bool[3247] params(1) in file: lib\support\0.2.9/primitives.sharp:1338:9: note:  
		    bool(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3248] params(1) in file: lib\support\0.2.9/primitives.sharp:1339:9: note:  
		    bool(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3249] params(1) in file: lib\support\0.2.9/primitives.sharp:1340:9: note:  
		    bool(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3250] params(1) in file: lib\support\0.2.9/primitives.sharp:1341:9: note:  
		    bool(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3251] params(1) in file: lib\support\0.2.9/primitives.sharp:1342:9: note:  
		    bool(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3252] params(1) in file: lib\support\0.2.9/primitives.sharp:1343:9: note:  
		    bool(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3253] params(1) in file: lib\support\0.2.9/primitives.sharp:1344:9: note:  
		    bool(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3254] params(1) in file: lib\support\0.2.9/primitives.sharp:1345:9: note:  
		    bool(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3255] params(1) in file: lib\support\0.2.9/primitives.sharp:1346:9: note:  
		    bool(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3256] params(1) in file: lib\support\0.2.9/primitives.sharp:1347:9: note:  
		    bool(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3257] params(1) in file: lib\support\0.2.9/primitives.sharp:1348:9: note:  
		    bool(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1473 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3258] params(1) in file: lib\support\0.2.9/primitives.sharp:1349:9: note:  
		    bool(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1473 // <std#integer<_int8>.integer>   
3 [0x3]:         ret   


overload function: std#bool.operator![3259] params(0) in file: lib\support\0.2.9/primitives.sharp:1351:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1351 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#bool.operator++[3260] params(0) in file: lib\support\0.2.9/primitives.sharp:1352:8: note:  
		    def operator++() := (value = !value);
		       ^

0 [0x0]: line: 1352 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator++[3261] params(1) in file: lib\support\0.2.9/primitives.sharp:1353:8: note:  
		    def operator++(num : var) := (!value);
		       ^

0 [0x0]: line: 1353 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#bool.operator--[3262] params(0) in file: lib\support\0.2.9/primitives.sharp:1354:8: note:  
		    def operator--() := (value = !value);
		       ^

0 [0x0]: line: 1354 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator--[3263] params(1) in file: lib\support\0.2.9/primitives.sharp:1355:8: note:  
		    def operator--(num : var) := (value = !value);
		       ^

0 [0x0]: line: 1355 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator+=[3264] params(1) in file: lib\support\0.2.9/primitives.sharp:1357:8: note:  
		    def operator+=(num : ulong)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1357 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3265] params(1) in file: lib\support\0.2.9/primitives.sharp:1358:8: note:  
		    def operator+=(num : long)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1358 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3266] params(1) in file: lib\support\0.2.9/primitives.sharp:1359:8: note:  
		    def operator+=(num : uint)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1359 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3267] params(1) in file: lib\support\0.2.9/primitives.sharp:1360:8: note:  
		    def operator+=(num : int)    := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1360 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3268] params(1) in file: lib\support\0.2.9/primitives.sharp:1361:8: note:  
		    def operator+=(num : ushort) := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1361 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3269] params(1) in file: lib\support\0.2.9/primitives.sharp:1362:8: note:  
		    def operator+=(num : short)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1362 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3270] params(1) in file: lib\support\0.2.9/primitives.sharp:1363:8: note:  
		    def operator+=(num : uchar)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1363 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3271] params(1) in file: lib\support\0.2.9/primitives.sharp:1364:8: note:  
		    def operator+=(num : char)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1364 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3272] params(1) in file: lib\support\0.2.9/primitives.sharp:1365:8: note:  
		    def operator+=(num : byte)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1365 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3273] params(1) in file: lib\support\0.2.9/primitives.sharp:1366:8: note:  
		    def operator+=(num : bool)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1366 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3274] params(1) in file: lib\support\0.2.9/primitives.sharp:1367:8: note:  
		    def operator+=(num : double)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1367 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3275] params(1) in file: lib\support\0.2.9/primitives.sharp:1368:8: note:  
		    def operator+=(num : var)    := check_value(value+=num);
		       ^

0 [0x0]: line: 1368 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            add ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3348 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator-=[3276] params(1) in file: lib\support\0.2.9/primitives.sharp:1370:8: note:  
		    def operator-=(num : ulong)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1370 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3277] params(1) in file: lib\support\0.2.9/primitives.sharp:1371:8: note:  
		    def operator-=(num : long)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1371 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3278] params(1) in file: lib\support\0.2.9/primitives.sharp:1372:8: note:  
		    def operator-=(num : uint)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1372 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3279] params(1) in file: lib\support\0.2.9/primitives.sharp:1373:8: note:  
		    def operator-=(num : int)    := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1373 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3280] params(1) in file: lib\support\0.2.9/primitives.sharp:1374:8: note:  
		    def operator-=(num : ushort) := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1374 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3281] params(1) in file: lib\support\0.2.9/primitives.sharp:1375:8: note:  
		    def operator-=(num : short)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1375 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3282] params(1) in file: lib\support\0.2.9/primitives.sharp:1376:8: note:  
		    def operator-=(num : uchar)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1376 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3283] params(1) in file: lib\support\0.2.9/primitives.sharp:1377:8: note:  
		    def operator-=(num : char)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1377 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3284] params(1) in file: lib\support\0.2.9/primitives.sharp:1378:8: note:  
		    def operator-=(num : byte)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1378 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3285] params(1) in file: lib\support\0.2.9/primitives.sharp:1379:8: note:  
		    def operator-=(num : bool)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1379 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3286] params(1) in file: lib\support\0.2.9/primitives.sharp:1380:8: note:  
		    def operator-=(num : double)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1380 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3287] params(1) in file: lib\support\0.2.9/primitives.sharp:1381:8: note:  
		    def operator-=(num : var)    := check_value(value-=num);
		       ^

0 [0x0]: line: 1381 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            sub ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3348 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator*=[3288] params(1) in file: lib\support\0.2.9/primitives.sharp:1383:8: note:  
		    def operator*=(num : ulong)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1383 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3289] params(1) in file: lib\support\0.2.9/primitives.sharp:1384:8: note:  
		    def operator*=(num : long)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1384 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3290] params(1) in file: lib\support\0.2.9/primitives.sharp:1385:8: note:  
		    def operator*=(num : uint)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1385 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3291] params(1) in file: lib\support\0.2.9/primitives.sharp:1386:8: note:  
		    def operator*=(num : int)    := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1386 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3292] params(1) in file: lib\support\0.2.9/primitives.sharp:1387:8: note:  
		    def operator*=(num : ushort) := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1387 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3293] params(1) in file: lib\support\0.2.9/primitives.sharp:1388:8: note:  
		    def operator*=(num : short)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1388 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3294] params(1) in file: lib\support\0.2.9/primitives.sharp:1389:8: note:  
		    def operator*=(num : uchar)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1389 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3295] params(1) in file: lib\support\0.2.9/primitives.sharp:1390:8: note:  
		    def operator*=(num : char)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1390 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3296] params(1) in file: lib\support\0.2.9/primitives.sharp:1391:8: note:  
		    def operator*=(num : byte)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1391 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3297] params(1) in file: lib\support\0.2.9/primitives.sharp:1392:8: note:  
		    def operator*=(num : bool)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1392 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3298] params(1) in file: lib\support\0.2.9/primitives.sharp:1393:8: note:  
		    def operator*=(num : double)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1393 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3299] params(1) in file: lib\support\0.2.9/primitives.sharp:1394:8: note:  
		    def operator*=(num : var)    := check_value(value*=num);
		       ^

0 [0x0]: line: 1394 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mul ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3348 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator/=[3300] params(1) in file: lib\support\0.2.9/primitives.sharp:1396:8: note:  
		    def operator/=(num : ulong)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1396 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3301] params(1) in file: lib\support\0.2.9/primitives.sharp:1397:8: note:  
		    def operator/=(num : long)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1397 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3302] params(1) in file: lib\support\0.2.9/primitives.sharp:1398:8: note:  
		    def operator/=(num : uint)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1398 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3303] params(1) in file: lib\support\0.2.9/primitives.sharp:1399:8: note:  
		    def operator/=(num : int)    := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1399 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3304] params(1) in file: lib\support\0.2.9/primitives.sharp:1400:8: note:  
		    def operator/=(num : ushort) := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1400 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3305] params(1) in file: lib\support\0.2.9/primitives.sharp:1401:8: note:  
		    def operator/=(num : short)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1401 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3306] params(1) in file: lib\support\0.2.9/primitives.sharp:1402:8: note:  
		    def operator/=(num : uchar)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1402 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3307] params(1) in file: lib\support\0.2.9/primitives.sharp:1403:8: note:  
		    def operator/=(num : char)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1403 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3308] params(1) in file: lib\support\0.2.9/primitives.sharp:1404:8: note:  
		    def operator/=(num : byte)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1404 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3309] params(1) in file: lib\support\0.2.9/primitives.sharp:1405:8: note:  
		    def operator/=(num : bool)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1405 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3310] params(1) in file: lib\support\0.2.9/primitives.sharp:1406:8: note:  
		    def operator/=(num : double)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1406 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3311] params(1) in file: lib\support\0.2.9/primitives.sharp:1407:8: note:  
		    def operator/=(num : var)    := check_value(value/=num);
		       ^

0 [0x0]: line: 1407 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            div ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3348 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator%=[3312] params(1) in file: lib\support\0.2.9/primitives.sharp:1409:8: note:  
		    def operator%=(num : ulong)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1409 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3313] params(1) in file: lib\support\0.2.9/primitives.sharp:1410:8: note:  
		    def operator%=(num : long)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1410 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3314] params(1) in file: lib\support\0.2.9/primitives.sharp:1411:8: note:  
		    def operator%=(num : uint)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1411 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3315] params(1) in file: lib\support\0.2.9/primitives.sharp:1412:8: note:  
		    def operator%=(num : int)    := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1412 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3316] params(1) in file: lib\support\0.2.9/primitives.sharp:1413:8: note:  
		    def operator%=(num : ushort) := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1413 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3317] params(1) in file: lib\support\0.2.9/primitives.sharp:1414:8: note:  
		    def operator%=(num : short)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1414 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3318] params(1) in file: lib\support\0.2.9/primitives.sharp:1415:8: note:  
		    def operator%=(num : uchar)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1415 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3319] params(1) in file: lib\support\0.2.9/primitives.sharp:1416:8: note:  
		    def operator%=(num : char)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1416 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3320] params(1) in file: lib\support\0.2.9/primitives.sharp:1417:8: note:  
		    def operator%=(num : byte)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1417 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3321] params(1) in file: lib\support\0.2.9/primitives.sharp:1418:8: note:  
		    def operator%=(num : bool)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1418 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3322] params(1) in file: lib\support\0.2.9/primitives.sharp:1419:8: note:  
		    def operator%=(num : double)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1419 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3323] params(1) in file: lib\support\0.2.9/primitives.sharp:1420:8: note:  
		    def operator%=(num : var)    := check_value(value%=num);
		       ^

0 [0x0]: line: 1420 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mod ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3348 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator&=[3324] params(1) in file: lib\support\0.2.9/primitives.sharp:1422:8: note:  
		    def operator&=(num : ulong)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1422 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3325] params(1) in file: lib\support\0.2.9/primitives.sharp:1423:8: note:  
		    def operator&=(num : long)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1423 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3326] params(1) in file: lib\support\0.2.9/primitives.sharp:1424:8: note:  
		    def operator&=(num : uint)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1424 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3327] params(1) in file: lib\support\0.2.9/primitives.sharp:1425:8: note:  
		    def operator&=(num : int)    := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1425 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3328] params(1) in file: lib\support\0.2.9/primitives.sharp:1426:8: note:  
		    def operator&=(num : ushort) := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1426 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3329] params(1) in file: lib\support\0.2.9/primitives.sharp:1427:8: note:  
		    def operator&=(num : short)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1427 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3330] params(1) in file: lib\support\0.2.9/primitives.sharp:1428:8: note:  
		    def operator&=(num : uchar)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1428 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3331] params(1) in file: lib\support\0.2.9/primitives.sharp:1429:8: note:  
		    def operator&=(num : char)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1429 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3332] params(1) in file: lib\support\0.2.9/primitives.sharp:1430:8: note:  
		    def operator&=(num : byte)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1430 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3333] params(1) in file: lib\support\0.2.9/primitives.sharp:1431:8: note:  
		    def operator&=(num : bool)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1431 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3334] params(1) in file: lib\support\0.2.9/primitives.sharp:1432:8: note:  
		    def operator&=(num : double)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1432 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3348 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3335] params(1) in file: lib\support\0.2.9/primitives.sharp:1433:8: note:  
		    def operator&=(num : var)    := check_value(value&=num);
		       ^

0 [0x0]: line: 1433 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            and ecx, ebx   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            rstore cmt   
12 [0xc]:            call @3348 // <std#bool.check_value>   
13 [0xd]:            loadval ebx   
14 [0xe]:            return_val ebx   
15 [0xf]:            ret   


overload function: std#bool.operator|=[3336] params(1) in file: lib\support\0.2.9/primitives.sharp:1435:8: note:  
		    def operator|=(num : ulong)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1435 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3337] params(1) in file: lib\support\0.2.9/primitives.sharp:1436:8: note:  
		    def operator|=(num : long)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1436 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3338] params(1) in file: lib\support\0.2.9/primitives.sharp:1437:8: note:  
		    def operator|=(num : uint)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1437 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3339] params(1) in file: lib\support\0.2.9/primitives.sharp:1438:8: note:  
		    def operator|=(num : int)    := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1438 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3340] params(1) in file: lib\support\0.2.9/primitives.sharp:1439:8: note:  
		    def operator|=(num : ushort) := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1439 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3341] params(1) in file: lib\support\0.2.9/primitives.sharp:1440:8: note:  
		    def operator|=(num : short)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1440 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3342] params(1) in file: lib\support\0.2.9/primitives.sharp:1441:8: note:  
		    def operator|=(num : uchar)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1441 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3343] params(1) in file: lib\support\0.2.9/primitives.sharp:1442:8: note:  
		    def operator|=(num : char)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1442 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3344] params(1) in file: lib\support\0.2.9/primitives.sharp:1443:8: note:  
		    def operator|=(num : byte)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1443 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3345] params(1) in file: lib\support\0.2.9/primitives.sharp:1444:8: note:  
		    def operator|=(num : bool)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1444 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3346] params(1) in file: lib\support\0.2.9/primitives.sharp:1445:8: note:  
		    def operator|=(num : double)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1445 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3348 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3347] params(1) in file: lib\support\0.2.9/primitives.sharp:1446:8: note:  
		    def operator|=(num : var)    := check_value(value|=num);
		       ^

0 [0x0]: line: 1446 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            or ecx, ebx   
10 [0xa]:            mov8 cmt, cmt   
11 [0xb]:            rmov adx, cmt   
12 [0xc]:            rstore cmt   
13 [0xd]:            call @3348 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


function: std#bool.check_value[3348] params(1) in file: lib\support\0.2.9/primitives.sharp:1448:8: note:  
		    def check_value(new_val: var) : var {
		       ^

0 [0x0]: line: 1449 loadl ebx, fp+1   
1 [0x1]:            skne ebx // pc = 5   
2 [0x2]:            movi #1, ebx   
4 [0x4]:            skip @2 // pc = 6   
5 [0x5]:            movi #0, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#bool.to_string[3349] params(0) in file: lib\support\0.2.9/primitives.sharp:1452:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 1453 new_class @0 // app#__srt_global   
1 [0x1]:            checknull   
2 [0x2]:            dup    
3 [0x3]:            movl 0   
4 [0x4]:            movn #0   
6 [0x6]:            movi #0, adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            skne ebx // pc = 13   
10 [0xa]:            newstr @31 // true   
11 [0xb]:            popobj2    
12 [0xc]:            skip @2 // pc = 14   
13 [0xd]:            newstr @32 // false   
14 [0xe]:            popobj2    
15 [0xf]:            pushobj   
16 [0x10]:            call @3469 // <std#string.string>   
17 [0x11]:            popobj2    
18 [0x12]:            returnobj   
19 [0x13]:            ret   


constructor: std#bool.bool[3350] params(0) in file: lib\support\0.2.9/primitives.sharp:1337:6: note:  
		class bool base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1681 // <std#integer<_int8>.integer>   
2 [0x2]:         ret   


constructor: std#double.double[3351] params(1) in file: lib\support\0.2.9/primitives.sharp:1458:11: note:  
		    double(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3352] params(1) in file: lib\support\0.2.9/primitives.sharp:1459:11: note:  
		    double(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3353] params(1) in file: lib\support\0.2.9/primitives.sharp:1460:11: note:  
		    double(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3354] params(1) in file: lib\support\0.2.9/primitives.sharp:1461:11: note:  
		    double(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3355] params(1) in file: lib\support\0.2.9/primitives.sharp:1462:11: note:  
		    double(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3356] params(1) in file: lib\support\0.2.9/primitives.sharp:1463:11: note:  
		    double(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3357] params(1) in file: lib\support\0.2.9/primitives.sharp:1464:11: note:  
		    double(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3358] params(1) in file: lib\support\0.2.9/primitives.sharp:1465:11: note:  
		    double(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3359] params(1) in file: lib\support\0.2.9/primitives.sharp:1466:11: note:  
		    double(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3360] params(1) in file: lib\support\0.2.9/primitives.sharp:1467:11: note:  
		    double(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3361] params(1) in file: lib\support\0.2.9/primitives.sharp:1468:11: note:  
		    double(i : double) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1682 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3362] params(1) in file: lib\support\0.2.9/primitives.sharp:1469:11: note:  
		    double(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1682 // <std#integer<var>.integer>   
3 [0x3]:         ret   


overload function: std#double.operator![3363] params(0) in file: lib\support\0.2.9/primitives.sharp:1471:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1471 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#double.operator++[3364] params(0) in file: lib\support\0.2.9/primitives.sharp:1472:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1472 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            movi #0, adx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            return_val ebx   
11 [0xb]:            ret   


overload function: std#double.operator++[3365] params(1) in file: lib\support\0.2.9/primitives.sharp:1473:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1473 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            movr ebx, egx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#double.operator--[3366] params(0) in file: lib\support\0.2.9/primitives.sharp:1474:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1474 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            movi #0, adx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            return_val ebx   
11 [0xb]:            ret   


overload function: std#double.operator--[3367] params(1) in file: lib\support\0.2.9/primitives.sharp:1475:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1475 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            movr ebx, egx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#double.operator+=[3368] params(1) in file: lib\support\0.2.9/primitives.sharp:1477:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1477 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3369] params(1) in file: lib\support\0.2.9/primitives.sharp:1478:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1478 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3370] params(1) in file: lib\support\0.2.9/primitives.sharp:1479:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1479 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3371] params(1) in file: lib\support\0.2.9/primitives.sharp:1480:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1480 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3372] params(1) in file: lib\support\0.2.9/primitives.sharp:1481:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1481 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3373] params(1) in file: lib\support\0.2.9/primitives.sharp:1482:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1482 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3374] params(1) in file: lib\support\0.2.9/primitives.sharp:1483:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1483 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3375] params(1) in file: lib\support\0.2.9/primitives.sharp:1484:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1484 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3376] params(1) in file: lib\support\0.2.9/primitives.sharp:1485:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1485 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3377] params(1) in file: lib\support\0.2.9/primitives.sharp:1486:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1486 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3378] params(1) in file: lib\support\0.2.9/primitives.sharp:1487:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1487 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3379] params(1) in file: lib\support\0.2.9/primitives.sharp:1488:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1488 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator-=[3380] params(1) in file: lib\support\0.2.9/primitives.sharp:1490:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1490 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3381] params(1) in file: lib\support\0.2.9/primitives.sharp:1491:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1491 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3382] params(1) in file: lib\support\0.2.9/primitives.sharp:1492:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1492 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3383] params(1) in file: lib\support\0.2.9/primitives.sharp:1493:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1493 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3384] params(1) in file: lib\support\0.2.9/primitives.sharp:1494:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1494 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3385] params(1) in file: lib\support\0.2.9/primitives.sharp:1495:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1495 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3386] params(1) in file: lib\support\0.2.9/primitives.sharp:1496:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1496 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3387] params(1) in file: lib\support\0.2.9/primitives.sharp:1497:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1497 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3388] params(1) in file: lib\support\0.2.9/primitives.sharp:1498:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1498 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3389] params(1) in file: lib\support\0.2.9/primitives.sharp:1499:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1499 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3390] params(1) in file: lib\support\0.2.9/primitives.sharp:1500:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1500 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3391] params(1) in file: lib\support\0.2.9/primitives.sharp:1501:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1501 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator*=[3392] params(1) in file: lib\support\0.2.9/primitives.sharp:1503:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1503 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3393] params(1) in file: lib\support\0.2.9/primitives.sharp:1504:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1504 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3394] params(1) in file: lib\support\0.2.9/primitives.sharp:1505:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1505 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3395] params(1) in file: lib\support\0.2.9/primitives.sharp:1506:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1506 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3396] params(1) in file: lib\support\0.2.9/primitives.sharp:1507:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1507 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3397] params(1) in file: lib\support\0.2.9/primitives.sharp:1508:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1508 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3398] params(1) in file: lib\support\0.2.9/primitives.sharp:1509:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1509 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3399] params(1) in file: lib\support\0.2.9/primitives.sharp:1510:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1510 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3400] params(1) in file: lib\support\0.2.9/primitives.sharp:1511:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1511 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3401] params(1) in file: lib\support\0.2.9/primitives.sharp:1512:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1512 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3402] params(1) in file: lib\support\0.2.9/primitives.sharp:1513:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1513 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3403] params(1) in file: lib\support\0.2.9/primitives.sharp:1514:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1514 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator/=[3404] params(1) in file: lib\support\0.2.9/primitives.sharp:1516:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1516 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3405] params(1) in file: lib\support\0.2.9/primitives.sharp:1517:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1517 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3406] params(1) in file: lib\support\0.2.9/primitives.sharp:1518:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1518 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3407] params(1) in file: lib\support\0.2.9/primitives.sharp:1519:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1519 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3408] params(1) in file: lib\support\0.2.9/primitives.sharp:1520:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1520 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3409] params(1) in file: lib\support\0.2.9/primitives.sharp:1521:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1521 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3410] params(1) in file: lib\support\0.2.9/primitives.sharp:1522:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1522 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3411] params(1) in file: lib\support\0.2.9/primitives.sharp:1523:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1523 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3412] params(1) in file: lib\support\0.2.9/primitives.sharp:1524:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1524 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3413] params(1) in file: lib\support\0.2.9/primitives.sharp:1525:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1525 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3414] params(1) in file: lib\support\0.2.9/primitives.sharp:1526:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1526 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3415] params(1) in file: lib\support\0.2.9/primitives.sharp:1527:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1527 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator%=[3416] params(1) in file: lib\support\0.2.9/primitives.sharp:1529:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1529 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3417] params(1) in file: lib\support\0.2.9/primitives.sharp:1530:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1530 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3418] params(1) in file: lib\support\0.2.9/primitives.sharp:1531:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1531 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3419] params(1) in file: lib\support\0.2.9/primitives.sharp:1532:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1532 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3420] params(1) in file: lib\support\0.2.9/primitives.sharp:1533:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1533 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3421] params(1) in file: lib\support\0.2.9/primitives.sharp:1534:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1534 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3422] params(1) in file: lib\support\0.2.9/primitives.sharp:1535:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1535 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3423] params(1) in file: lib\support\0.2.9/primitives.sharp:1536:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1536 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3424] params(1) in file: lib\support\0.2.9/primitives.sharp:1537:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1537 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3425] params(1) in file: lib\support\0.2.9/primitives.sharp:1538:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1538 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3426] params(1) in file: lib\support\0.2.9/primitives.sharp:1539:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1539 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3427] params(1) in file: lib\support\0.2.9/primitives.sharp:1540:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1540 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator&=[3428] params(1) in file: lib\support\0.2.9/primitives.sharp:1542:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1542 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3429] params(1) in file: lib\support\0.2.9/primitives.sharp:1543:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1543 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3430] params(1) in file: lib\support\0.2.9/primitives.sharp:1544:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1544 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3431] params(1) in file: lib\support\0.2.9/primitives.sharp:1545:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1545 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3432] params(1) in file: lib\support\0.2.9/primitives.sharp:1546:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1546 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3433] params(1) in file: lib\support\0.2.9/primitives.sharp:1547:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1547 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3434] params(1) in file: lib\support\0.2.9/primitives.sharp:1548:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1548 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3435] params(1) in file: lib\support\0.2.9/primitives.sharp:1549:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1549 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3436] params(1) in file: lib\support\0.2.9/primitives.sharp:1550:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1550 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3437] params(1) in file: lib\support\0.2.9/primitives.sharp:1551:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1551 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3438] params(1) in file: lib\support\0.2.9/primitives.sharp:1552:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1552 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3439] params(1) in file: lib\support\0.2.9/primitives.sharp:1553:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1553 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator|=[3440] params(1) in file: lib\support\0.2.9/primitives.sharp:1555:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1555 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3441] params(1) in file: lib\support\0.2.9/primitives.sharp:1556:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1556 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3442] params(1) in file: lib\support\0.2.9/primitives.sharp:1557:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1557 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3443] params(1) in file: lib\support\0.2.9/primitives.sharp:1558:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1558 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3444] params(1) in file: lib\support\0.2.9/primitives.sharp:1559:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1559 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3445] params(1) in file: lib\support\0.2.9/primitives.sharp:1560:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1560 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3446] params(1) in file: lib\support\0.2.9/primitives.sharp:1561:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1561 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3447] params(1) in file: lib\support\0.2.9/primitives.sharp:1562:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1562 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3448] params(1) in file: lib\support\0.2.9/primitives.sharp:1563:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1563 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3449] params(1) in file: lib\support\0.2.9/primitives.sharp:1564:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1564 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3450] params(1) in file: lib\support\0.2.9/primitives.sharp:1565:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1565 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3451] params(1) in file: lib\support\0.2.9/primitives.sharp:1566:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1566 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


constructor: std#double.double[3452] params(0) in file: lib\support\0.2.9/primitives.sharp:1457:6: note:  
		class double base integer<var> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1890 // <std#integer<var>.integer>   
2 [0x2]:         ret   


std#printable.to_string[3453] params(0) in file: lib\support\0.2.9/printable.sharp:11:8: note:  
		    def to_string() : string;
		       ^



constructor: std#printable.printable[3454] params(0) in file: lib\support\0.2.9/printable.sharp:10:10: note:  
		interface printable {
		         ^

0 [0x0]:         ret   


function: std#__srt_global.rand[3455] params(0) in file: lib\support\0.2.9/random.sharp:6:4: note:  
		def rand() : var {
		   ^

0 [0x0]: line: 7 istore 0   
2 [0x2]:         movi #1, ebx   
4 [0x4]:         rstore ebx   
5 [0x5]:         call @2314 // <platform.kernel#vm.random_double>   
6 [0x6]:         loadval ebx   
7 [0x7]:         return_val ebx   
8 [0x8]:         ret   


function: std#__srt_global.rand_int[3456] params(2) in file: lib\support\0.2.9/random.sharp:10:4: note:  
		def rand_int(min: var, max: var) : var {
		   ^

0 [0x0]: line: 11 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          call @2312 // <platform.kernel#vm.random_int>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#__srt_global.rand_double[3457] params(2) in file: lib\support\0.2.9/random.sharp:14:4: note:  
		def rand_double(min: var, max: var) : var {
		   ^

0 [0x0]: line: 15 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          call @2314 // <platform.kernel#vm.random_double>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#__srt_global.rand_int[3458] params(0) in file: lib\support\0.2.9/random.sharp:18:4: note:  
		def rand_int() : var {
		   ^

0 [0x0]: line: 19 call @2311 // <platform.kernel#vm.random_int>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#__srt_global.rand_double[3459] params(0) in file: lib\support\0.2.9/random.sharp:22:4: note:  
		def rand_double() : var {
		   ^

0 [0x0]: line: 23 call @2313 // <platform.kernel#vm.random_double>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#__srt_global.set_seed[3460] params(1) in file: lib\support\0.2.9/random.sharp:26:4: note:  
		def set_seed(seed: var) {
		   ^

0 [0x0]: line: 27 ipushl #0   
1 [0x1]:          movg @1 // @std#__srt_global   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 28 movg @1 // @std#__srt_global   
9 [0x9]:          movn #1   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2315 // <platform.kernel#vm.random_seed>   
16 [0x10]:          ret   


constructor: std#tmp.tmp[3461] params(0) in file: lib\support\0.2.9/random.sharp:32:5: note:  
		class tmp {
		    ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.reflect#_class_._class_[3462] params(0) in file: lib\support\0.2.9/reflect//class.sharp:4:6: note:  
		class _class_ base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3463 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#data_entity.data_entity[3463] params(0) in file: lib\support\0.2.9/reflect//data_entity.sharp:4:6: note:  
		class data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.reflect#data_property.data_property[3464] params(0) in file: lib\support\0.2.9/reflect//data_property.sharp:11:6: note:  
		class data_property base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3463 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#field.field[3465] params(0) in file: lib\support\0.2.9/reflect//field.sharp:4:6: note:  
		class field {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.reflect#function.function[3466] params(0) in file: lib\support\0.2.9/reflect//function.sharp:4:6: note:  
		class function base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3463 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#reflect.reflect[3467] params(1) in file: lib\support\0.2.9/reflect//reflection.sharp:16:12: note:  
		    reflect(ref_obj : object) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 17 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          ret   


constructor: std.reflect#reflect.reflect[3468] params(0) in file: lib\support\0.2.9/reflect//reflection.sharp:3:6: note:  
		class reflect {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#string.string[3469] params(1) in file: lib\support\0.2.9/string.sharp:10:11: note:  
		    string(str : _int8[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 11 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 10   
6 [0x6]: line: 12 pushl 0   
7 [0x7]:          pushl 1   
8 [0x8]:          call @3479 // <std#string.append>   
9 [0x9]:          pop   
10 [0xa]:          nop   
11 [0xb]:          ret   


constructor: std#string.string[3470] params(1) in file: lib\support\0.2.9/string.sharp:16:11: note:  
		    string(ch: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 17 pushl 0   
2 [0x2]:          ipushl #1   
3 [0x3]:          call @3476 // <std#string.append>   
4 [0x4]:          pop   
5 [0x5]:          ret   


constructor: std#string.string[3471] params(1) in file: lib\support\0.2.9/string.sharp:20:11: note:  
		    string(str : char[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 21 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 46   
6 [0x6]: line: 22 movl 1   
7 [0x7]:          sizeof ebx   
8 [0x8]:          newarry ebx: 8   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]: line: 23 istorel 0, fp+2   
15 [0xf]: line: 24 istorel -1, fp+4   
17 [0x11]:          pushl 1   
18 [0x12]:          popl 5   
19 [0x13]:          iaddl 1, fp@4   
21 [0x15]:          movl 5   
22 [0x16]:          sizeof ecx   
23 [0x17]:          loadl ebx, fp+4   
24 [0x18]:          lt ebx, ecx   
25 [0x19]:          jne 46   
26 [0x1a]:          movnd ebx   
27 [0x1b]:          pushobj   
28 [0x1c]:          popl 3   
29 [0x1d]: line: 25 pushl 3   
30 [0x1e]:          call @1680 // <std#integer<_int8>.get_value>   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          movr egx, ebx   
37 [0x25]:          inc ebx   
38 [0x26]:          smovr_2 ebx, fp+2   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]:          jmp @19   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


constructor: std#string.string[3472] params(1) in file: lib\support\0.2.9/string.sharp:30:11: note:  
		    string(str: string) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 31 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 13   
6 [0x6]: line: 32 pushl 0   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3479 // <std#string.append>   
12 [0xc]:          pop   
13 [0xd]:          nop   
14 [0xe]:          ret   


constructor: std#string.string[3473] params(2) in file: lib\support\0.2.9/string.sharp:36:11: note:  
		    string(str : _int8[], offset: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 37 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 16   
6 [0x6]: line: 38 pushl 1   
7 [0x7]:          ipushl #2   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2094 // <std.io#__srt_global.copy>   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]:          nop   
17 [0x11]:          ret   


constructor: std#string.string[3474] params(3) in file: lib\support\0.2.9/string.sharp:42:11: note:  
		    string(str : _int8[], start: var, end: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 43 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          skne ebx // pc = 15   
5 [0x5]:          ipushl #3   
6 [0x6]:          loadl ebx, fp+2   
7 [0x7]:          loadval ecx   
8 [0x8]:          sub ecx, ebx -> ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #0, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          gt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 36   
17 [0x11]: line: 44 ipushl #3   
18 [0x12]:          loadl ebx, fp+2   
19 [0x13]:          loadval ecx   
20 [0x14]:          sub ecx, ebx -> ebx   
21 [0x15]:          newarry ebx: 0   
22 [0x16]:          movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          popobj   
26 [0x1a]: line: 45 pushl 1   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          pushobj   
31 [0x1f]:          istore 0   
33 [0x21]:          ipushl #2   
34 [0x22]:          ipushl #3   
35 [0x23]:          call @2084 // <std.io#__srt_global.memcopy>   
36 [0x24]:          nop   
37 [0x25]:          ret   


function: std#string.replace[3475] params(2) in file: lib\support\0.2.9/string.sharp:49:8: note:  
		    def replace(pos : var, ch: _int8) : string {
		       ^

0 [0x0]: line: 50 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          gte ecx, ebx   
7 [0x7]:          movr ebx, cmt   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 14   
10 [0xa]: line: 51 pushl 0   
11 [0xb]:          ipushl #1   
12 [0xc]:          call @3525 // <std#string.bounds_error>   
13 [0xd]:          throw    
14 [0xe]:          nop   
15 [0xf]: line: 54 ipushl #2   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          loadl ebx, fp+1   
21 [0x15]:          popobj2    
22 [0x16]:          movr adx, ebx   
23 [0x17]:          chklen adx   
24 [0x18]:          loadval ebx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 55 movl 0   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   


function: std#string.append[3476] params(1) in file: lib\support\0.2.9/string.sharp:58:8: note:  
		    def append(ch: var) : string
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 61 movi #1, ebx   
10 [0xa]:          newarry ebx: 8   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @31   
16 [0x10]: line: 63 movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          add ecx, ebx -> ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2074 // <std.io#__srt_global.realloc>   
31 [0x1f]:          nop   
32 [0x20]: line: 65 ipushl #1   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          movl 0   
38 [0x26]:          movn #0   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #1, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          sub ecx, ebx -> ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          loadval ebx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 66 movl 0   
52 [0x34]:          returnobj   
53 [0x35]:          ret   


function: std#string.empty[3477] params(0) in file: lib\support\0.2.9/string.sharp:69:8: note:  
		    def empty() := sizeof(data)==0;
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          sizeof ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          movi #0, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          return_val cmt   
10 [0xa]:          ret   


function: std#string.append[3478] params(1) in file: lib\support\0.2.9/string.sharp:71:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 71 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @1680 // <std#integer<_int8>.get_value>   
3 [0x3]:          call @3476 // <std#string.append>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#string.append[3479] params(1) in file: lib\support\0.2.9/string.sharp:73:8: note:  
		    def append(immstr: _int8[]) : string
		       ^

0 [0x0]: line: 75 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 7   
4 [0x4]:          movl 0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]:          nop   
8 [0x8]: line: 77 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          sizeof ebx   
12 [0xc]:          smovr_2 ebx, fp+2   
13 [0xd]: line: 79 movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          pushobj   
17 [0x11]:          pushnull    
18 [0x12]:          itest ebx   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 29   
21 [0x15]: line: 80 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          newarry ebx: 0   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          popobj   
28 [0x1c]:          jmp @44   
29 [0x1d]: line: 82 movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          pushobj   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movl 1   
39 [0x27]:          sizeof ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          call @2074 // <std.io#__srt_global.realloc>   
44 [0x2c]:          nop   
45 [0x2d]: line: 84 pushl 1   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #0   
49 [0x31]:          pushobj   
50 [0x32]:          ipushl #2   
51 [0x33]:          istore 0   
53 [0x35]:          movl 1   
54 [0x36]:          sizeof ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          call @2084 // <std.io#__srt_global.memcopy>   
57 [0x39]: line: 85 movl 0   
58 [0x3a]:          returnobj   
59 [0x3b]:          ret   


function: std#string.append[3480] params(2) in file: lib\support\0.2.9/string.sharp:88:8: note:  
		    def append(immstr: _int8[], len: var) : string
		       ^

0 [0x0]: line: 90 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 7   
4 [0x4]:          movl 0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]:          nop   
8 [0x8]: line: 91 loadl ecx, fp+2   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          lt ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 21   
15 [0xf]: line: 92 new_class @0 // app#__srt_global   
16 [0x10]:          div adx, adx -> adx   
17 [0x11]:          dup    
18 [0x12]:          newstr @33 // length cannot be less than zero   
19 [0x13]:          call @2000 // <std#error.error>   
20 [0x14]:          throw    
21 [0x15]:          nop   
22 [0x16]: line: 94 ipushl #2   
23 [0x17]:          movl 1   
24 [0x18]:          sizeof ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          gt ecx, ebx   
27 [0x1b]:          movr ebx, cmt   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 48   
30 [0x1e]: line: 95 new_class @0 // app#__srt_global   
31 [0x1f]:          div adx, adx -> adx   
32 [0x20]:          dup    
33 [0x21]:          new_class @0 // app#__srt_global   
34 [0x22]:          checknull   
35 [0x23]:          dup    
36 [0x24]:          newstr @34 // length of:    
37 [0x25]:          call @3469 // <std#string.string>   
38 [0x26]:          ipushl #2   
39 [0x27]:          call @3501 // <std#string.operator+>   
40 [0x28]:          newstr @35 //  is greater than the string:    
41 [0x29]:          call @3481 // <std#string.operator+>   
42 [0x2a]:          movl 1   
43 [0x2b]:          sizeof ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          call @3501 // <std#string.operator+>   
46 [0x2e]:          call @2001 // <std#error.error>   
47 [0x2f]:          throw    
48 [0x30]:          nop   
49 [0x31]: line: 97 movl 0   
50 [0x32]:          movn #0   
52 [0x34]:          sizeof ebx   
53 [0x35]:          smovr_2 ebx, fp+3   
54 [0x36]: line: 99 movl 0   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          pushnull    
59 [0x3b]:          itest ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 69   
62 [0x3e]: line: 100 loadl ebx, fp+2   
63 [0x3f]:           newarry ebx: 8   
64 [0x40]:           movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           popobj   
68 [0x44]:           jmp @83   
69 [0x45]: line: 102 movl 0   
70 [0x46]:           movn #0   
72 [0x48]:           pushobj   
73 [0x49]:           movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           sizeof ebx   
77 [0x4d]:           rstore ebx   
78 [0x4e]:           loadl ebx, fp+2   
79 [0x4f]:           loadval ecx   
80 [0x50]:           add ecx, ebx -> ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           call @2074 // <std.io#__srt_global.realloc>   
83 [0x53]:           nop   
84 [0x54]: line: 104 pushl 1   
85 [0x55]:           movl 0   
86 [0x56]:           movn #0   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           istore 0   
92 [0x5c]:           ipushl #2   
93 [0x5d]:           call @2084 // <std.io#__srt_global.memcopy>   
94 [0x5e]: line: 105 movl 0   
95 [0x5f]:           returnobj   
96 [0x60]:           ret   


overload function: std#string.operator+[3481] params(1) in file: lib\support\0.2.9/string.sharp:108:8: note:  
		    def operator+(immstr : _int8[]) : string {
		       ^

0 [0x0]: line: 109 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 110 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 22   
15 [0xf]: line: 111 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           call @3479 // <std#string.append>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   
21 [0x15]:           jmp @25   
22 [0x16]: line: 113 movl 2   
23 [0x17]:           returnobj   
24 [0x18]:           ret   
25 [0x19]:           nop   


function: std#string.to_lower[3482] params(0) in file: lib\support\0.2.9/string.sharp:116:8: note:  
		    def to_lower() : string {
		       ^

0 [0x0]: line: 117 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           call @3527 // <std#string.string>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 118 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           pushnull    
11 [0xb]:           itest ebx   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 88   
15 [0xf]: line: 119 movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           istore 0   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           sizeof ebx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           call @2094 // <std.io#__srt_global.copy>   
27 [0x1b]:           movl 1   
28 [0x1c]:           movn #0   
30 [0x1e]:           popobj   
31 [0x1f]: line: 121 istorel 0, fp+2   
33 [0x21]: line: 122 istorel -1, fp+4   
35 [0x23]:           movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           pushobj   
39 [0x27]:           popl 5   
40 [0x28]:           iaddl 1, fp@4   
42 [0x2a]:           movl 5   
43 [0x2b]:           sizeof ecx   
44 [0x2c]:           loadl ebx, fp+4   
45 [0x2d]:           lt ebx, ecx   
46 [0x2e]:           jne 88   
47 [0x2f]:           iaload ecx, ebx   
48 [0x30]:           smovr_2 ecx, fp+3   
49 [0x31]: line: 123 istore 65   
51 [0x33]:           loadl ebx, fp+3   
52 [0x34]:           loadval ecx   
53 [0x35]:           lte ecx, ebx   
54 [0x36]:           movr ebx, cmt   
55 [0x37]:           skne ebx // pc = 62   
56 [0x38]:           ipushl #3   
57 [0x39]:           movi #90, ebx   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           lte ecx, ebx   
61 [0x3d]:           movr ebx, cmt   
62 [0x3e]:           movr cmt, ebx   
63 [0x3f]:           jne 84   
64 [0x40]: line: 124 istore 97   
66 [0x42]:           ipushl #3   
67 [0x43]:           movi #65, ebx   
69 [0x45]:           loadval ecx   
70 [0x46]:           sub ecx, ebx -> ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           add ecx, ebx -> ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           movl 1   
75 [0x4b]:           movn #0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+2   
79 [0x4f]:           popobj2    
80 [0x50]:           movr adx, ebx   
81 [0x51]:           chklen adx   
82 [0x52]:           loadval ebx   
83 [0x53]:           rmov adx, ebx   
84 [0x54]:           nop   
85 [0x55]: line: 125 iaddl 1, fp@2   
87 [0x57]:           jmp @40   
88 [0x58]:           nop   
89 [0x59]: line: 129 movl 1   
90 [0x5a]:           returnobj   
91 [0x5b]:           ret   


overload function: std#string.operator+[3483] params(1) in file: lib\support\0.2.9/string.sharp:132:8: note:  
		    def operator+(obj : printable) : string {
		       ^

0 [0x0]: line: 133 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 134 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 43   
15 [0xf]: line: 135 pushl 1   
16 [0x10]:           invoke_delegate 3453 { static=0, args=0 }   
18 [0x12]:           popobj2    
19 [0x13]:           smovr_3 fp+3   
20 [0x14]: line: 136 movl 3   
21 [0x15]:           checknull   
22 [0x16]:           not ebx, ebx   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 35   
25 [0x19]: line: 137 pushl 2   
26 [0x1a]:           movl 3   
27 [0x1b]:           movn #0   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @3479 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           jmp @41   
35 [0x23]: line: 139 pushl 2   
36 [0x24]:           newstr @36 // null   
37 [0x25]:           call @3479 // <std#string.append>   
38 [0x26]:           popobj2    
39 [0x27]:           returnobj   
40 [0x28]:           ret   
41 [0x29]:           nop   
42 [0x2a]:           jmp @49   
43 [0x2b]: line: 142 pushl 2   
44 [0x2c]:           newstr @36 // null   
45 [0x2d]:           call @3479 // <std#string.append>   
46 [0x2e]:           popobj2    
47 [0x2f]:           returnobj   
48 [0x30]:           ret   
49 [0x31]:           nop   


overload function: std#string.operator+[3484] params(1) in file: lib\support\0.2.9/string.sharp:145:7: note:  
		   def operator+(str : string) : string {
		      ^

0 [0x0]: line: 146 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 147 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 25   
15 [0xf]: line: 148 pushl 2   
16 [0x10]:           movl 1   
17 [0x11]:           movn #0   
19 [0x13]:           pushobj   
20 [0x14]:           call @3479 // <std#string.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 150 pushl 2   
26 [0x1a]:           newstr @36 // null   
27 [0x1b]:           call @3479 // <std#string.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


function: std#string.to_string[3485] params(0) in file: lib\support\0.2.9/string.sharp:153:8: note:  
		    def to_string() := new string(data);
		       ^

0 [0x0]: line: 153 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator==[3486] params(1) in file: lib\support\0.2.9/string.sharp:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           sizeof ebx   
7 [0x7]:           loadval ecx   
8 [0x8]:           tne ecx, ebx   
9 [0x9]:           jne 13   
10 [0xa]: line: 157 istorel 0, fp+0   
12 [0xc]:           ret   
13 [0xd]:           nop   
14 [0xe]: line: 159 istorel 0, fp+2   
16 [0x10]: line: 160 istorel -1, fp+4   
18 [0x12]:           pushl 1   
19 [0x13]:           popl 5   
20 [0x14]:           iaddl 1, fp@4   
22 [0x16]:           movl 5   
23 [0x17]:           sizeof ecx   
24 [0x18]:           loadl ebx, fp+4   
25 [0x19]:           lt ebx, ecx   
26 [0x1a]:           jne 51   
27 [0x1b]:           iaload ecx, ebx   
28 [0x1c]:           smovr_2 ecx, fp+3   
29 [0x1d]: line: 161 ipushl #3   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           pushobj   
34 [0x22]:           loadl ebx, fp+2   
35 [0x23]:           movr egx, ebx   
36 [0x24]:           inc ebx   
37 [0x25]:           smovr_2 ebx, fp+2   
38 [0x26]:           movr ebx, egx   
39 [0x27]:           popobj2    
40 [0x28]:           movr adx, ebx   
41 [0x29]:           chklen adx   
42 [0x2a]:           iaload ebx, adx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           tne ecx, ebx   
45 [0x2d]:           jne 49   
46 [0x2e]: line: 162 istorel 0, fp+0   
48 [0x30]:           ret   
49 [0x31]:           nop   
50 [0x32]:           jmp @20   
51 [0x33]: line: 165 istorel 1, fp+0   
53 [0x35]:           ret   


overload function: std#string.operator==[3487] params(1) in file: lib\support\0.2.9/string.sharp:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 15   
12 [0xc]: line: 170 istorel 0, fp+0   
14 [0xe]:           ret   
15 [0xf]:           nop   
16 [0x10]: line: 172 istorel 0, fp+2   
18 [0x12]: line: 173 istorel -1, fp+4   
20 [0x14]:           movl 1   
21 [0x15]:           movn #0   
23 [0x17]:           pushobj   
24 [0x18]:           popl 5   
25 [0x19]:           iaddl 1, fp@4   
27 [0x1b]:           movl 5   
28 [0x1c]:           sizeof ecx   
29 [0x1d]:           loadl ebx, fp+4   
30 [0x1e]:           lt ebx, ecx   
31 [0x1f]:           jne 56   
32 [0x20]:           iaload ecx, ebx   
33 [0x21]:           smovr_2 ecx, fp+3   
34 [0x22]: line: 174 ipushl #3   
35 [0x23]:           movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           pushobj   
39 [0x27]:           loadl ebx, fp+2   
40 [0x28]:           movr egx, ebx   
41 [0x29]:           inc ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]:           movr ebx, egx   
44 [0x2c]:           popobj2    
45 [0x2d]:           movr adx, ebx   
46 [0x2e]:           chklen adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           loadval ecx   
49 [0x31]:           tne ecx, ebx   
50 [0x32]:           jne 54   
51 [0x33]: line: 175 istorel 0, fp+0   
53 [0x35]:           ret   
54 [0x36]:           nop   
55 [0x37]:           jmp @25   
56 [0x38]: line: 178 istorel 1, fp+0   
58 [0x3a]:           ret   


overload function: std#string.operator!=[3488] params(1) in file: lib\support\0.2.9/string.sharp:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3486 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator!=[3489] params(1) in file: lib\support\0.2.9/string.sharp:183:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 183 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3487 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator=[3490] params(1) in file: lib\support\0.2.9/string.sharp:185:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 187 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 9   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           del   
8 [0x8]:           jmp @20   
9 [0x9]: line: 189 pushl 1   
10 [0xa]:           istore 0   
12 [0xc]:           movl 1   
13 [0xd]:           sizeof ebx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2094 // <std.io#__srt_global.copy>   
16 [0x10]:           movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           popobj   
20 [0x14]:           nop   
21 [0x15]:           ret   


function: std#string.at[3491] params(1) in file: lib\support\0.2.9/string.sharp:192:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 193 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           sizeof ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           gte ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 14   
10 [0xa]: line: 194 pushl 0   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3525 // <std#string.bounds_error>   
13 [0xd]:           throw    
14 [0xe]:           nop   
15 [0xf]: line: 195 movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+1   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           return_val ebx   
25 [0x19]:           ret   


overload function: std#string.operator[[3492] params(1) in file: lib\support\0.2.9/string.sharp:198:8: note:  
		    def operator[](pos: var) := at(pos);
		       ^

0 [0x0]: line: 198 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3491 // <std#string.at>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.fmt[3493] params(1) in file: lib\support\0.2.9/string.sharp:200:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 201 ipushl #0   
1 [0x1]:           movg @70 // @std#string   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           ret   


function: std#string.set_precision[3494] params(1) in file: lib\support\0.2.9/string.sharp:204:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 205 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 12   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 26   
14 [0xe]: line: 206 new_class @0 // app#__srt_global   
15 [0xf]:           newarry adx: 0   
16 [0x10]:           dup    
17 [0x11]:           new_class @0 // app#__srt_global   
18 [0x12]:           checknull   
19 [0x13]:           dup    
20 [0x14]:           newstr @37 // invalid precision:    
21 [0x15]:           call @3469 // <std#string.string>   
22 [0x16]:           ipushl #0   
23 [0x17]:           call @3501 // <std#string.operator+>   
24 [0x18]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 207 ipushl #0   
28 [0x1c]:           movg @70 // @std#string   
29 [0x1d]:           movn #1   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           ret   


function: std#string.get_data[3495] params(0) in file: lib\support\0.2.9/string.sharp:210:8: note:  
		    def get_data() := data;
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.get_elements[3496] params(0) in file: lib\support\0.2.9/string.sharp:212:8: note:  
		    def get_elements() := data;
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.to_array[3497] params(0) in file: lib\support\0.2.9/string.sharp:214:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 12   
8 [0x8]:           pushnull    
9 [0x9]:           popobj2    
10 [0xa]:           returnobj   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 217 movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           istore 0   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           sizeof ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @2094 // <std.io#__srt_global.copy>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   


function: std#string.starts_with[3498] params(1) in file: lib\support\0.2.9/string.sharp:221:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 222 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           skpe ebx // pc = 15   
3 [0x3]:           movl 1   
4 [0x4]:           movn #0   
6 [0x6]:           sizeof ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           sizeof ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 20   
17 [0x11]: line: 223 istorel 0, fp+0   
19 [0x13]:           ret   
20 [0x14]:           nop   
21 [0x15]: line: 226 istorel 0, fp+2   
23 [0x17]:           ipushl #2   
24 [0x18]:           movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           sizeof ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           lt ecx, ebx   
30 [0x1e]:           movr ebx, cmt   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 62   
33 [0x21]: line: 228 movl 0   
34 [0x22]:           movn #0   
36 [0x24]:           pushobj   
37 [0x25]:           loadl ebx, fp+2   
38 [0x26]:           popobj2    
39 [0x27]:           movr adx, ebx   
40 [0x28]:           chklen adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 1   
44 [0x2c]:           movn #0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+2   
48 [0x30]:           popobj2    
49 [0x31]:           movr adx, ebx   
50 [0x32]:           chklen adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           loadval ecx   
53 [0x35]:           tne ecx, ebx   
54 [0x36]:           jne 58   
55 [0x37]: line: 229 istorel 0, fp+0   
57 [0x39]:           ret   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @23   
62 [0x3e]: line: 231 istorel 1, fp+0   
64 [0x40]:           ret   


function: std#string.find[3499] params(1) in file: lib\support\0.2.9/string.sharp:235:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 236 pushl 1   
1 [0x1]:           call @3510 // <std#string.size>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 237 movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           sizeof ebx   
7 [0x7]:           smovr_2 ebx, fp+3   
8 [0x8]: line: 240 istorel 0, fp+4   
10 [0xa]:           ipushl #4   
11 [0xb]:           ipushl #3   
12 [0xc]:           loadl ebx, fp+2   
13 [0xd]:           loadval ecx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 71   
20 [0x14]: line: 241 istorel 0, fp+5   
22 [0x16]: line: 245 ipushl #5   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           loadval ecx   
25 [0x19]:           lt ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 59   
29 [0x1d]: line: 246 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           pushobj   
33 [0x21]:           ipushl #4   
34 [0x22]:           loadl ebx, fp+5   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           movl 1   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           loadl ebx, fp+5   
47 [0x2f]:           popobj2    
48 [0x30]:           movr adx, ebx   
49 [0x31]:           chklen adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           loadval ecx   
52 [0x34]:           tne ecx, ebx   
53 [0x35]:           jne 55   
54 [0x36]: line: 248 jmp @59   
55 [0x37]:           nop   
56 [0x38]:           iaddl 1, fp@5   
58 [0x3a]:           jmp @22   
59 [0x3b]: line: 250 ipushl #5   
60 [0x3c]:           loadl ebx, fp+2   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           test ecx, ebx   
63 [0x3f]:           jne 67   
64 [0x40]: line: 251 istorel 1, fp+0   
66 [0x42]:           ret   
67 [0x43]:           nop   
68 [0x44]:           iaddl 1, fp@4   
70 [0x46]:           jmp @10   
71 [0x47]: line: 254 istorel 0, fp+0   
73 [0x49]:           ret   


function: std#string.ends_with[3500] params(1) in file: lib\support\0.2.9/string.sharp:257:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 258 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 17   
14 [0xe]: line: 259 istorel 0, fp+0   
16 [0x10]:           ret   
17 [0x11]:           nop   
18 [0x12]: line: 261 istorel 0, fp+2   
20 [0x14]: line: 262 movl 0   
21 [0x15]:           movn #0   
23 [0x17]:           sizeof ebx   
24 [0x18]:           rstore ebx   
25 [0x19]:           movl 1   
26 [0x1a]:           movn #0   
28 [0x1c]:           sizeof ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           sub ecx, ebx -> ebx   
31 [0x1f]:           smovr_2 ebx, fp+3   
32 [0x20]:           ipushl #3   
33 [0x21]:           movl 0   
34 [0x22]:           movn #0   
36 [0x24]:           sizeof ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 75   
42 [0x2a]: line: 263 movl 0   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           loadl ebx, fp+3   
47 [0x2f]:           popobj2    
48 [0x30]:           movr adx, ebx   
49 [0x31]:           chklen adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 1   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           loadl ebx, fp+2   
57 [0x39]:           movr egx, ebx   
58 [0x3a]:           inc ebx   
59 [0x3b]:           smovr_2 ebx, fp+2   
60 [0x3c]:           movr ebx, egx   
61 [0x3d]:           popobj2    
62 [0x3e]:           movr adx, ebx   
63 [0x3f]:           chklen adx   
64 [0x40]:           iaload ebx, adx   
65 [0x41]:           loadval ecx   
66 [0x42]:           tne ecx, ebx   
67 [0x43]:           jne 71   
68 [0x44]: line: 264 istorel 0, fp+0   
70 [0x46]:           ret   
71 [0x47]:           nop   
72 [0x48]:           iaddl 1, fp@3   
74 [0x4a]:           jmp @32   
75 [0x4b]: line: 267 istorel 1, fp+0   
77 [0x4d]:           ret   


overload function: std#string.operator+[3501] params(1) in file: lib\support\0.2.9/string.sharp:270:8: note:  
		    def operator+(num : var) : string {
		       ^

0 [0x0]: line: 271 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 272 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3511 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3479 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 273 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3502] params(1) in file: lib\support\0.2.9/string.sharp:276:8: note:  
		    def operator+(num : _int8) : string {
		       ^

0 [0x0]: line: 277 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 278 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3476 // <std#string.append>   
13 [0xd]:           pop   
14 [0xe]: line: 279 movl 2   
15 [0xf]:           returnobj   
16 [0x10]:           ret   


overload function: std#string.operator+[3503] params(1) in file: lib\support\0.2.9/string.sharp:282:8: note:  
		    def operator+(num : _int16) : string {
		       ^

0 [0x0]: line: 283 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 284 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3511 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3479 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 285 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3504] params(1) in file: lib\support\0.2.9/string.sharp:288:8: note:  
		    def operator+(num : _int32) : string {
		       ^

0 [0x0]: line: 289 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 290 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3511 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3479 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 291 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3505] params(1) in file: lib\support\0.2.9/string.sharp:294:8: note:  
		    def operator+(num : _int64) : string {
		       ^

0 [0x0]: line: 295 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 296 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3511 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3479 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 297 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3506] params(1) in file: lib\support\0.2.9/string.sharp:300:8: note:  
		    def operator+(num : _uint8) : string {
		       ^

0 [0x0]: line: 301 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 302 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3511 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3479 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 303 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3507] params(1) in file: lib\support\0.2.9/string.sharp:306:8: note:  
		    def operator+(num : _uint16) : string {
		       ^

0 [0x0]: line: 307 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 308 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3511 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3479 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 309 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3508] params(1) in file: lib\support\0.2.9/string.sharp:312:8: note:  
		    def operator+(num : _uint32) : string {
		       ^

0 [0x0]: line: 313 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 314 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3511 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3479 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 315 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[3509] params(1) in file: lib\support\0.2.9/string.sharp:318:8: note:  
		    def operator+(num : _uint64) : string {
		       ^

0 [0x0]: line: 319 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 320 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @3511 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @3479 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 321 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


function: std#string.size[3510] params(0) in file: lib\support\0.2.9/string.sharp:324:8: note:  
		    def size() := sizeof(data);
		       ^

0 [0x0]: line: 324 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.parse[3511] params(1) in file: lib\support\0.2.9/string.sharp:326:15: note:  
		    static def parse( number : var ) := new string(snprintf(currentFormat, number, precision));
		              ^

0 [0x0]: line: 326 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movg @70 // @std#string   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           ipushl #0   
11 [0xb]:           movg @70 // @std#string   
12 [0xc]:           movn #1   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @1897 // <std#__srt_global.snprintf>   
19 [0x13]:           call @3469 // <std#string.string>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+=[3512] params(1) in file: lib\support\0.2.9/string.sharp:328:8: note:  
		    def operator+=( num: var ) := append(parse(num).data);
		       ^

0 [0x0]: line: 328 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3511 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3479 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3513] params(1) in file: lib\support\0.2.9/string.sharp:329:8: note:  
		    def operator+=( num: _int8 ) := append(num);
		       ^

0 [0x0]: line: 329 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3476 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


overload function: std#string.operator+=[3514] params(1) in file: lib\support\0.2.9/string.sharp:330:8: note:  
		    def operator+=( num: _uint8 ) := append(num);
		       ^

0 [0x0]: line: 330 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3476 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


overload function: std#string.operator+=[3515] params(1) in file: lib\support\0.2.9/string.sharp:331:8: note:  
		    def operator+=( num: _int16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 331 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3511 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3479 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3516] params(1) in file: lib\support\0.2.9/string.sharp:332:8: note:  
		    def operator+=( num: _uint16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 332 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3511 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3479 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3517] params(1) in file: lib\support\0.2.9/string.sharp:333:8: note:  
		    def operator+=( num: _int32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 333 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3511 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3479 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3518] params(1) in file: lib\support\0.2.9/string.sharp:334:8: note:  
		    def operator+=( num: _uint32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 334 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3511 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3479 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3519] params(1) in file: lib\support\0.2.9/string.sharp:335:8: note:  
		    def operator+=( num: _int64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 335 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3511 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3479 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3520] params(1) in file: lib\support\0.2.9/string.sharp:336:8: note:  
		    def operator+=( num: _uint64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 336 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3511 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3479 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[3521] params(1) in file: lib\support\0.2.9/string.sharp:338:8: note:  
		    def operator+=( obj: printable ) : string
		       ^

0 [0x0]: line: 340 pushl 1   
1 [0x1]:           invoke_delegate 3453 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 341 movl 2   
6 [0x6]:           checknull   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           skne ebx // pc = 16   
9 [0x9]:           movl 2   
10 [0xa]:           movn #0   
12 [0xc]:           pushobj   
13 [0xd]:           pushnull    
14 [0xe]:           itest ebx   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 28   
18 [0x12]: line: 342 pushl 0   
19 [0x13]:           movl 2   
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           call @3479 // <std#string.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           jmp @34   
28 [0x1c]: line: 344 pushl 0   
29 [0x1d]:           newstr @36 // null   
30 [0x1e]:           call @3479 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           nop   


overload function: std#string.operator+=[3522] params(1) in file: lib\support\0.2.9/string.sharp:347:8: note:  
		    def operator+=( str: string ) := append(str.data);
		       ^

0 [0x0]: line: 347 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @3479 // <std#string.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string.operator+=[3523] params(1) in file: lib\support\0.2.9/string.sharp:349:8: note:  
		    def operator+=( str: _int8[] ) := append(str);
		       ^

0 [0x0]: line: 349 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3479 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#string.substring[3524] params(2) in file: lib\support\0.2.9/string.sharp:351:8: note:  
		    def substring(start_pos: var, end_pos: var) : string {
		       ^

0 [0x0]: line: 352 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           sizeof ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           gte ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           skpe ebx // pc = 14   
9 [0x9]:           loadl ecx, fp+1   
10 [0xa]:           movi #0, ebx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 20   
16 [0x10]: line: 353 pushl 0   
17 [0x11]:           ipushl #1   
18 [0x12]:           call @3525 // <std#string.bounds_error>   
19 [0x13]:           throw    
20 [0x14]:           nop   
21 [0x15]: line: 354 ipushl #2   
22 [0x16]:           loadl ebx, fp+1   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 44   
28 [0x1c]: line: 355 new_class @0 // app#__srt_global   
29 [0x1d]:           newarry adx: 0   
30 [0x1e]:           dup    
31 [0x1f]:           new_class @0 // app#__srt_global   
32 [0x20]:           checknull   
33 [0x21]:           dup    
34 [0x22]:           newstr @38 // end_pos:    
35 [0x23]:           call @3469 // <std#string.string>   
36 [0x24]:           ipushl #2   
37 [0x25]:           call @3501 // <std#string.operator+>   
38 [0x26]:           newstr @39 //  cannot be less than the start_pos:    
39 [0x27]:           call @3481 // <std#string.operator+>   
40 [0x28]:           ipushl #1   
41 [0x29]:           call @3501 // <std#string.operator+>   
42 [0x2a]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
43 [0x2b]:           throw    
44 [0x2c]:           nop   
45 [0x2d]: line: 359 new_class @0 // app#__srt_global   
46 [0x2e]:           checknull   
47 [0x2f]:           dup    
48 [0x30]:           call @3527 // <std#string.string>   
49 [0x31]:           popobj2    
50 [0x32]:           smovr_3 fp+3   
51 [0x33]: line: 360 movl 0   
52 [0x34]:           movn #0   
54 [0x36]:           pushobj   
55 [0x37]:           ipushl #1   
56 [0x38]:           ipushl #2   
57 [0x39]:           call @2094 // <std.io#__srt_global.copy>   
58 [0x3a]:           movl 3   
59 [0x3b]:           movn #0   
61 [0x3d]:           popobj   
62 [0x3e]: line: 361 movl 3   
63 [0x3f]:           returnobj   
64 [0x40]:           ret   


function: std#string.bounds_error[3525] params(1) in file: lib\support\0.2.9/string.sharp:364:16: note:  
		    private def bounds_error(pos : var) : bounds_except {
		               ^

0 [0x0]: line: 365 new_class @0 // app#__srt_global   
1 [0x1]:           mov8 adx, adx   
2 [0x2]:           dup    
3 [0x3]:           new_class @0 // app#__srt_global   
4 [0x4]:           checknull   
5 [0x5]:           dup    
6 [0x6]:           newstr @40 // Index out of bounds exception at:    
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @3501 // <std#string.operator+>   
10 [0xa]:           newstr @41 //  with size of:    
11 [0xb]:           call @3481 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           sizeof ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @3501 // <std#string.operator+>   
18 [0x12]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
19 [0x13]:           popobj2    
20 [0x14]:           returnobj   
21 [0x15]:           ret   


function: std#string.hash[3526] params(0) in file: lib\support\0.2.9/string.sharp:368:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 369 istorel 0, fp+1   
2 [0x2]: line: 370 istorel 1, fp+2   
4 [0x4]: line: 371 istorel -1, fp+4   
6 [0x6]: line: 372 movl 0   
7 [0x7]: line: 373 movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           popl 5   
11 [0xb]:           iaddl 1, fp@4   
13 [0xd]:           movl 5   
14 [0xe]:           sizeof ecx   
15 [0xf]:           loadl ebx, fp+4   
16 [0x10]:           lt ebx, ecx   
17 [0x11]:           jne 55   
18 [0x12]:           iaload ecx, ebx   
19 [0x13]:           smovr_2 ecx, fp+3   
20 [0x14]: line: 374 ipushl #1   
21 [0x15]:           ipushl #3   
22 [0x16]:           movi #97, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           sub ecx, ebx -> ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #1, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           loadval ecx   
34 [0x22]:           mul ecx, ebx -> ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1000000009, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           mod ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+1   
43 [0x2b]: line: 375 ipushl #2   
44 [0x2c]:           movi #31, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           mul ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1000000009, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           mod ecx, ebx -> ebx   
53 [0x35]:           smovr_2 ebx, fp+2   
54 [0x36]:           jmp @11   
55 [0x37]: line: 377 new_class @0 // app#__srt_global   
56 [0x38]:           movn #112   
58 [0x3a]:           ipushl #1   
59 [0x3b]:           call @2430 // <std#long.long>   
60 [0x3c]:           popobj2    
61 [0x3d]:           returnobj   
62 [0x3e]:           ret   


constructor: std#string.string[3527] params(0) in file: lib\support\0.2.9/string.sharp:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#string_builder.set_resize_capacity[3528] params(1) in file: lib\support\0.2.9/string_builder.sharp:20:8: note:  
		    def set_resize_capacity(new_capacity: var) {
		       ^

0 [0x0]: line: 21 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


constructor: std#string_builder.string_builder[3529] params(1) in file: lib\support\0.2.9/string_builder.sharp:24:19: note:  
		    string_builder(str : _int8[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 25 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 57   
53 [0x35]: line: 26 pushl 0   
54 [0x36]:          pushl 1   
55 [0x37]:          call @3541 // <std#string_builder.append>   
56 [0x38]:          pop   
57 [0x39]:          nop   
58 [0x3a]:          ret   


constructor: std#string_builder.string_builder[3530] params(1) in file: lib\support\0.2.9/string_builder.sharp:30:19: note:  
		    string_builder(ch: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 31 pushl 0   
49 [0x31]:          ipushl #1   
50 [0x32]:          call @3538 // <std#string_builder.append>   
51 [0x33]:          pop   
52 [0x34]:          ret   


constructor: std#string_builder.string_builder[3531] params(1) in file: lib\support\0.2.9/string_builder.sharp:34:19: note:  
		    string_builder(str : char[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 35 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 111   
53 [0x35]: line: 36 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          sizeof ebx   
56 [0x38]:          rstore ebx   
57 [0x39]:          call @3535 // <std#string_builder.space_available>   
58 [0x3a]:          loadval ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 37 pushl 0   
63 [0x3f]:          movl 1   
64 [0x40]:          sizeof ebx   
65 [0x41]:          rstore ebx   
66 [0x42]:          call @3536 // <std#string_builder.expand>   
67 [0x43]:          nop   
68 [0x44]: line: 40 movl 1   
69 [0x45]:          sizeof ebx   
70 [0x46]:          newarry ebx: 8   
71 [0x47]:          movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          popobj   
75 [0x4b]: line: 41 istorel -1, fp+3   
77 [0x4d]:          pushl 1   
78 [0x4e]:          popl 4   
79 [0x4f]:          iaddl 1, fp@3   
81 [0x51]:          movl 4   
82 [0x52]:          sizeof ecx   
83 [0x53]:          loadl ebx, fp+3   
84 [0x54]:          lt ebx, ecx   
85 [0x55]:          jne 111   
86 [0x56]:          movnd ebx   
87 [0x57]:          pushobj   
88 [0x58]:          popl 2   
89 [0x59]: line: 42 pushl 2   
90 [0x5a]:          call @1680 // <std#integer<_int8>.get_value>   
91 [0x5b]:          movl 0   
92 [0x5c]:          movn #0   
94 [0x5e]:          pushobj   
95 [0x5f]:          movl 0   
96 [0x60]:          movn #3   
98 [0x62]:          movi #0, adx   
100 [0x64]:          iaload ebx, adx   
101 [0x65]:          inc ebx   
102 [0x66]:          movi #0, adx   
104 [0x68]:          rmov adx, ebx   
105 [0x69]:          popobj2    
106 [0x6a]:          movr adx, ebx   
107 [0x6b]:          chklen adx   
108 [0x6c]:          loadval ebx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          jmp @79   
111 [0x6f]:          nop   
112 [0x70]:          ret   


constructor: std#string_builder.string_builder[3532] params(1) in file: lib\support\0.2.9/string_builder.sharp:47:19: note:  
		    string_builder(str: string) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 48 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 58   
53 [0x35]: line: 49 pushl 0   
54 [0x36]:          pushl 1   
55 [0x37]:          call @3495 // <std#string.get_data>   
56 [0x38]:          call @3541 // <std#string_builder.append>   
57 [0x39]:          pop   
58 [0x3a]:          nop   
59 [0x3b]:          ret   


constructor: std#string_builder.string_builder[3533] params(1) in file: lib\support\0.2.9/string_builder.sharp:53:19: note:  
		    string_builder(str: string_builder) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 54 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 60   
53 [0x35]: line: 55 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          call @3541 // <std#string_builder.append>   
59 [0x3b]:          pop   
60 [0x3c]:          nop   
61 [0x3d]:          ret   


constructor: std#string_builder.string_builder[3534] params(2) in file: lib\support\0.2.9/string_builder.sharp:59:19: note:  
		    string_builder(str : _int8[], offset: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 60 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 114   
53 [0x35]: line: 61 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          sizeof ebx   
56 [0x38]:          rstore ebx   
57 [0x39]:          loadl ebx, fp+2   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          sub ecx, ebx -> ebx   
60 [0x3c]:          rstore ebx   
61 [0x3d]:          call @3535 // <std#string_builder.space_available>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          not ebx, ebx   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 71   
66 [0x42]: line: 62 pushl 0   
67 [0x43]:          movl 1   
68 [0x44]:          sizeof ebx   
69 [0x45]:          rstore ebx   
70 [0x46]:          call @3536 // <std#string_builder.expand>   
71 [0x47]:          nop   
72 [0x48]: line: 65 pushl 1   
73 [0x49]:          movl 0   
74 [0x4a]:          movn #0   
76 [0x4c]:          pushobj   
77 [0x4d]:          movl 0   
78 [0x4e]:          movn #3   
80 [0x50]:          movi #0, adx   
82 [0x52]:          iaload ebx, adx   
83 [0x53]:          inc ebx   
84 [0x54]:          movi #0, adx   
86 [0x56]:          rmov adx, ebx   
87 [0x57]:          rstore ebx   
88 [0x58]:          ipushl #2   
89 [0x59]:          movl 1   
90 [0x5a]:          sizeof ebx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          call @2084 // <std.io#__srt_global.memcopy>   
93 [0x5d]: line: 66 movl 1   
94 [0x5e]:          sizeof ebx   
95 [0x5f]:          rstore ebx   
96 [0x60]:          loadl ebx, fp+2   
97 [0x61]:          loadval ecx   
98 [0x62]:          sub ecx, ebx -> ebx   
99 [0x63]:          rstore ebx   
100 [0x64]:          movi #1, ebx   
102 [0x66]:          loadval ecx   
103 [0x67]:          sub ecx, ebx -> ebx   
104 [0x68]:          rstore ebx   
105 [0x69]:          movl 0   
106 [0x6a]:          movn #3   
108 [0x6c]:          movi #0, adx   
110 [0x6e]:          iaload ecx, adx   
111 [0x6f]:          loadval ebx   
112 [0x70]:          add ecx, ebx -> ebx   
113 [0x71]:          rmov adx, ebx   
114 [0x72]:          nop   
115 [0x73]:          ret   


function: std#string_builder.space_available[3535] params(1) in file: lib\support\0.2.9/string_builder.sharp:70:8: note:  
		    def space_available(space_required : var) : var {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          sizeof ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          lt ecx, ebx   
22 [0x16]:          return_val cmt   
23 [0x17]:          ret   


function: std#string_builder.expand[3536] params(1) in file: lib\support\0.2.9/string_builder.sharp:74:8: note:  
		    def expand(space_required : var) {
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          loadval ecx   
23 [0x17]:          add ecx, ebx -> ebx   
24 [0x18]:          smovr_2 ebx, fp+2   
25 [0x19]: line: 76 movl 0   
26 [0x1a]:          movn #0   
28 [0x1c]:          pushobj   
29 [0x1d]:          ipushl #2   
30 [0x1e]:          call @2074 // <std.io#__srt_global.realloc>   
31 [0x1f]:          ret   


function: std#string_builder.replace[3537] params(2) in file: lib\support\0.2.9/string_builder.sharp:79:8: note:  
		    def replace(pos : var, ch: _int8) : string_builder {
		       ^

0 [0x0]: line: 80 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          gte ecx, ebx   
7 [0x7]:          movr ebx, cmt   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 14   
10 [0xa]: line: 81 pushl 0   
11 [0xb]:          ipushl #1   
12 [0xc]:          call @3570 // <std#string_builder.bounds_error>   
13 [0xd]:          throw    
14 [0xe]:          nop   
15 [0xf]: line: 84 ipushl #2   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          loadl ebx, fp+1   
21 [0x15]:          popobj2    
22 [0x16]:          movr adx, ebx   
23 [0x17]:          chklen adx   
24 [0x18]:          loadval ebx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 85 movl 0   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   


function: std#string_builder.append[3538] params(1) in file: lib\support\0.2.9/string_builder.sharp:88:8: note:  
		    def append(ch: var) : string_builder
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 91 movi #255, ebx   
10 [0xa]:          newarry ebx: 8   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @41   
16 [0x10]:          movl 0   
17 [0x11]:          movn #3   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          rstore ebx   
23 [0x17]:          movi #1, ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          add ecx, ebx -> ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          loadval ecx   
33 [0x21]:          gte ecx, ebx   
34 [0x22]:          movr ebx, cmt   
35 [0x23]:          movr cmt, ebx   
36 [0x24]:          jne 41   
37 [0x25]: line: 93 pushl 0   
38 [0x26]:          istore 0   
40 [0x28]:          call @3536 // <std#string_builder.expand>   
41 [0x29]:          nop   
42 [0x2a]: line: 95 ipushl #1   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #0   
46 [0x2e]:          pushobj   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #0   
50 [0x32]:          sizeof ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movi #1, ebx   
54 [0x36]:          loadval ecx   
55 [0x37]:          sub ecx, ebx -> ebx   
56 [0x38]:          popobj2    
57 [0x39]:          movr adx, ebx   
58 [0x3a]:          chklen adx   
59 [0x3b]:          loadval ebx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 96 movl 0   
62 [0x3e]:          returnobj   
63 [0x3f]:          ret   


function: std#string_builder.get_elements[3539] params(0) in file: lib\support\0.2.9/string_builder.sharp:99:8: note:  
		    def get_elements() := to_string().get_elements();
		       ^

0 [0x0]: line: 99 pushl 0   
1 [0x1]:          call @3545 // <std#string_builder.to_string>   
2 [0x2]:          call @3496 // <std#string.get_elements>   
3 [0x3]:          popobj2    
4 [0x4]:          returnobj   
5 [0x5]:          ret   


function: std#string_builder.append[3540] params(1) in file: lib\support\0.2.9/string_builder.sharp:101:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 101 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1680 // <std#integer<_int8>.get_value>   
3 [0x3]:           call @3538 // <std#string_builder.append>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#string_builder.append[3541] params(1) in file: lib\support\0.2.9/string_builder.sharp:103:8: note:  
		    def append(immstr: _int8[]) : string_builder
		       ^

0 [0x0]: line: 105 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 7   
4 [0x4]:           movl 0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]:           nop   
8 [0x8]: line: 107 movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 29   
16 [0x10]: line: 108 movl 1   
17 [0x11]:           sizeof ebx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #255, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           add ecx, ebx -> ebx   
23 [0x17]:           newarry ebx: 8   
24 [0x18]:           movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           popobj   
28 [0x1c]:           jmp @43   
29 [0x1d]:           pushl 0   
30 [0x1e]:           movl 1   
31 [0x1f]:           sizeof ebx   
32 [0x20]:           rstore ebx   
33 [0x21]:           call @3535 // <std#string_builder.space_available>   
34 [0x22]:           loadval ebx   
35 [0x23]:           not ebx, ebx   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 43   
38 [0x26]: line: 110 pushl 0   
39 [0x27]:           movl 1   
40 [0x28]:           sizeof ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @3536 // <std#string_builder.expand>   
43 [0x2b]:           nop   
44 [0x2c]: line: 112 pushl 1   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           pushobj   
49 [0x31]:           movl 0   
50 [0x32]:           movn #3   
52 [0x34]:           movi #0, adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           inc ebx   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           rmov adx, ebx   
59 [0x3b]:           rstore ebx   
60 [0x3c]:           istore 0   
62 [0x3e]:           movl 1   
63 [0x3f]:           sizeof ebx   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @2084 // <std.io#__srt_global.memcopy>   
66 [0x42]: line: 113 movl 1   
67 [0x43]:           sizeof ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movi #1, ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           sub ecx, ebx -> ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           movl 0   
75 [0x4b]:           movn #3   
77 [0x4d]:           movi #0, adx   
79 [0x4f]:           iaload ecx, adx   
80 [0x50]:           loadval ebx   
81 [0x51]:           add ecx, ebx -> ebx   
82 [0x52]:           rmov adx, ebx   
83 [0x53]: line: 114 movl 0   
84 [0x54]:           returnobj   
85 [0x55]:           ret   


function: std#string_builder.append[3542] params(2) in file: lib\support\0.2.9/string_builder.sharp:117:8: note:  
		    def append(immstr: _int8[], len: var) : string_builder
		       ^

0 [0x0]: line: 119 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 7   
4 [0x4]:           movl 0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]:           nop   
8 [0x8]: line: 120 loadl ecx, fp+2   
9 [0x9]:           movi #0, ebx   
11 [0xb]:           lt ecx, ebx   
12 [0xc]:           movr ebx, cmt   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 21   
15 [0xf]: line: 121 new_class @0 // app#__srt_global   
16 [0x10]:           div adx, adx -> adx   
17 [0x11]:           dup    
18 [0x12]:           newstr @33 // length cannot be less than zero   
19 [0x13]:           call @2000 // <std#error.error>   
20 [0x14]:           throw    
21 [0x15]:           nop   
22 [0x16]: line: 123 ipushl #2   
23 [0x17]:           movl 1   
24 [0x18]:           sizeof ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           gt ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 48   
30 [0x1e]: line: 124 new_class @0 // app#__srt_global   
31 [0x1f]:           div adx, adx -> adx   
32 [0x20]:           dup    
33 [0x21]:           new_class @0 // app#__srt_global   
34 [0x22]:           checknull   
35 [0x23]:           dup    
36 [0x24]:           newstr @34 // length of:    
37 [0x25]:           call @3469 // <std#string.string>   
38 [0x26]:           ipushl #2   
39 [0x27]:           call @3501 // <std#string.operator+>   
40 [0x28]:           newstr @35 //  is greater than the string:    
41 [0x29]:           call @3481 // <std#string.operator+>   
42 [0x2a]:           movl 1   
43 [0x2b]:           sizeof ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           call @3501 // <std#string.operator+>   
46 [0x2e]:           call @2001 // <std#error.error>   
47 [0x2f]:           throw    
48 [0x30]:           nop   
49 [0x31]: line: 126 movl 0   
50 [0x32]:           movn #0   
52 [0x34]:           pushobj   
53 [0x35]:           pushnull    
54 [0x36]:           itest ebx   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 68   
57 [0x39]: line: 127 ipushl #2   
58 [0x3a]:           movi #255, ebx   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           add ecx, ebx -> ebx   
62 [0x3e]:           newarry ebx: 8   
63 [0x3f]:           movl 0   
64 [0x40]:           movn #0   
66 [0x42]:           popobj   
67 [0x43]:           jmp @82   
68 [0x44]:           pushl 0   
69 [0x45]:           movl 1   
70 [0x46]:           sizeof ebx   
71 [0x47]:           rstore ebx   
72 [0x48]:           call @3535 // <std#string_builder.space_available>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           not ebx, ebx   
75 [0x4b]:           movr cmt, ebx   
76 [0x4c]:           jne 82   
77 [0x4d]: line: 129 pushl 0   
78 [0x4e]:           movl 1   
79 [0x4f]:           sizeof ebx   
80 [0x50]:           rstore ebx   
81 [0x51]:           call @3536 // <std#string_builder.expand>   
82 [0x52]:           nop   
83 [0x53]: line: 131 pushl 1   
84 [0x54]:           movl 0   
85 [0x55]:           movn #0   
87 [0x57]:           pushobj   
88 [0x58]:           movl 0   
89 [0x59]:           movn #3   
91 [0x5b]:           movi #0, adx   
93 [0x5d]:           iaload ebx, adx   
94 [0x5e]:           inc ebx   
95 [0x5f]:           movi #0, adx   
97 [0x61]:           rmov adx, ebx   
98 [0x62]:           rstore ebx   
99 [0x63]:           istore 0   
101 [0x65]:           ipushl #2   
102 [0x66]:           call @2084 // <std.io#__srt_global.memcopy>   
103 [0x67]: line: 132 movl 1   
104 [0x68]:           sizeof ebx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           loadl ebx, fp+2   
107 [0x6b]:           loadval ecx   
108 [0x6c]:           sub ecx, ebx -> ebx   
109 [0x6d]:           rstore ebx   
110 [0x6e]:           movi #1, ebx   
112 [0x70]:           loadval ecx   
113 [0x71]:           sub ecx, ebx -> ebx   
114 [0x72]:           rstore ebx   
115 [0x73]:           movl 0   
116 [0x74]:           movn #3   
118 [0x76]:           movi #0, adx   
120 [0x78]:           iaload ecx, adx   
121 [0x79]:           loadval ebx   
122 [0x7a]:           add ecx, ebx -> ebx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]: line: 133 movl 0   
125 [0x7d]:           returnobj   
126 [0x7e]:           ret   


overload function: std#string_builder.operator+[3543] params(1) in file: lib\support\0.2.9/string_builder.sharp:136:8: note:  
		    def operator+(immstr : _int8[]) : string_builder {
		       ^

0 [0x0]: line: 137 new_class @0 // app#__srt_global   
1 [0x1]:           returnobj   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3529 // <std#string_builder.string_builder>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 138 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 22   
15 [0xf]: line: 139 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           call @3541 // <std#string_builder.append>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   
21 [0x15]:           jmp @28   
22 [0x16]: line: 141 pushl 2   
23 [0x17]:           newstr @36 // null   
24 [0x18]:           call @3541 // <std#string_builder.append>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   
28 [0x1c]:           nop   


overload function: std#string_builder.operator+[3544] params(1) in file: lib\support\0.2.9/string_builder.sharp:145:8: note:  
		    def operator+(obj : printable) : string_builder {
		       ^

0 [0x0]: line: 146 new_class @0 // app#__srt_global   
1 [0x1]:           returnobj   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3529 // <std#string_builder.string_builder>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 147 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 25   
15 [0xf]: line: 148 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           invoke_delegate 3453 { static=0, args=0 }   
19 [0x13]:           call @3495 // <std#string.get_data>   
20 [0x14]:           call @3541 // <std#string_builder.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 150 pushl 2   
26 [0x1a]:           newstr @36 // null   
27 [0x1b]:           call @3541 // <std#string_builder.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


function: std#string_builder.to_string[3545] params(0) in file: lib\support\0.2.9/string_builder.sharp:153:8: note:  
		    def to_string() := new string(data, 0, cursor + 1);
		       ^

0 [0x0]: line: 153 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           istore 0   
9 [0x9]:           movl 0   
10 [0xa]:           movn #3   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #1, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           add ecx, ebx -> ebx   
20 [0x14]:           rstore ebx   
21 [0x15]:           call @3474 // <std#string.string>   
22 [0x16]:           popobj2    
23 [0x17]:           returnobj   
24 [0x18]:           ret   


overload function: std#string_builder.operator==[3546] params(1) in file: lib\support\0.2.9/string_builder.sharp:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movl 1   
13 [0xd]:           sizeof ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           tne ecx, ebx   
16 [0x10]:           jne 20   
17 [0x11]: line: 157 istorel 0, fp+0   
19 [0x13]:           ret   
20 [0x14]:           nop   
21 [0x15]: line: 159 istorel 0, fp+2   
23 [0x17]: line: 160 istorel -1, fp+4   
25 [0x19]:           pushl 1   
26 [0x1a]:           popl 5   
27 [0x1b]:           iaddl 1, fp@4   
29 [0x1d]:           movl 5   
30 [0x1e]:           sizeof ecx   
31 [0x1f]:           loadl ebx, fp+4   
32 [0x20]:           lt ebx, ecx   
33 [0x21]:           jne 58   
34 [0x22]:           iaload ecx, ebx   
35 [0x23]:           smovr_2 ecx, fp+3   
36 [0x24]: line: 161 ipushl #3   
37 [0x25]:           movl 0   
38 [0x26]:           movn #0   
40 [0x28]:           pushobj   
41 [0x29]:           loadl ebx, fp+2   
42 [0x2a]:           movr egx, ebx   
43 [0x2b]:           inc ebx   
44 [0x2c]:           smovr_2 ebx, fp+2   
45 [0x2d]:           movr ebx, egx   
46 [0x2e]:           popobj2    
47 [0x2f]:           movr adx, ebx   
48 [0x30]:           chklen adx   
49 [0x31]:           iaload ebx, adx   
50 [0x32]:           loadval ecx   
51 [0x33]:           tne ecx, ebx   
52 [0x34]:           jne 56   
53 [0x35]: line: 162 istorel 0, fp+0   
55 [0x37]:           ret   
56 [0x38]:           nop   
57 [0x39]:           jmp @27   
58 [0x3a]: line: 165 istorel 1, fp+0   
60 [0x3c]:           ret   


overload function: std#string_builder.operator==[3547] params(1) in file: lib\support\0.2.9/string_builder.sharp:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           pushl 1   
13 [0xd]:           call @3495 // <std#string.get_data>   
14 [0xe]:           popobj2    
15 [0xf]:           sizeof ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           jne 22   
19 [0x13]: line: 170 istorel 0, fp+0   
21 [0x15]:           ret   
22 [0x16]:           nop   
23 [0x17]: line: 172 istorel 0, fp+2   
25 [0x19]: line: 173 istorel -1, fp+4   
27 [0x1b]:           pushl 1   
28 [0x1c]:           call @3495 // <std#string.get_data>   
29 [0x1d]:           popl 5   
30 [0x1e]:           iaddl 1, fp@4   
32 [0x20]:           movl 5   
33 [0x21]:           sizeof ecx   
34 [0x22]:           loadl ebx, fp+4   
35 [0x23]:           lt ebx, ecx   
36 [0x24]:           jne 61   
37 [0x25]:           iaload ecx, ebx   
38 [0x26]:           smovr_2 ecx, fp+3   
39 [0x27]: line: 174 ipushl #3   
40 [0x28]:           movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           pushobj   
44 [0x2c]:           loadl ebx, fp+2   
45 [0x2d]:           movr egx, ebx   
46 [0x2e]:           inc ebx   
47 [0x2f]:           smovr_2 ebx, fp+2   
48 [0x30]:           movr ebx, egx   
49 [0x31]:           popobj2    
50 [0x32]:           movr adx, ebx   
51 [0x33]:           chklen adx   
52 [0x34]:           iaload ebx, adx   
53 [0x35]:           loadval ecx   
54 [0x36]:           tne ecx, ebx   
55 [0x37]:           jne 59   
56 [0x38]: line: 175 istorel 0, fp+0   
58 [0x3a]:           ret   
59 [0x3b]:           nop   
60 [0x3c]:           jmp @30   
61 [0x3d]: line: 178 istorel 1, fp+0   
63 [0x3f]:           ret   


overload function: std#string_builder.operator!=[3548] params(1) in file: lib\support\0.2.9/string_builder.sharp:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3546 // <std#string_builder.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string_builder.operator!=[3549] params(1) in file: lib\support\0.2.9/string_builder.sharp:184:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 184 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3547 // <std#string_builder.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string_builder.operator=[3550] params(1) in file: lib\support\0.2.9/string_builder.sharp:186:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 188 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 20   
4 [0x4]: line: 189 movi #255, ebx   
6 [0x6]:           newarry ebx: 0   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           popobj   
11 [0xb]: line: 190 movi #-1, ebx   
13 [0xd]:           movl 0   
14 [0xe]:           movn #3   
16 [0x10]:           movi #0, adx   
18 [0x12]:           rmov adx, ebx   
19 [0x13]:           jmp @54   
20 [0x14]: line: 193 movl 1   
21 [0x15]:           sizeof ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #255, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           add ecx, ebx -> ebx   
27 [0x1b]:           newarry ebx: 0   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           popobj   
32 [0x20]: line: 194 movl 1   
33 [0x21]:           sizeof ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #3   
37 [0x25]:           movi #0, adx   
39 [0x27]:           rmov adx, ebx   
40 [0x28]: line: 195 pushl 1   
41 [0x29]:           movl 0   
42 [0x2a]:           movn #0   
44 [0x2c]:           pushobj   
45 [0x2d]:           istore 0   
47 [0x2f]:           movi #0, ebx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 1   
51 [0x33]:           sizeof ebx   
52 [0x34]:           rstore ebx   
53 [0x35]:           call @2084 // <std.io#__srt_global.memcopy>   
54 [0x36]:           nop   
55 [0x37]:           ret   


function: std#string_builder.at[3551] params(1) in file: lib\support\0.2.9/string_builder.sharp:199:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 200 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           jne 16   
12 [0xc]: line: 201 pushl 0   
13 [0xd]:           ipushl #1   
14 [0xe]:           call @3570 // <std#string_builder.bounds_error>   
15 [0xf]:           throw    
16 [0x10]:           nop   
17 [0x11]: line: 202 movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+1   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           iaload ebx, adx   
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   


overload function: std#string_builder.operator[[3552] params(1) in file: lib\support\0.2.9/string_builder.sharp:205:8: note:  
		    def operator[](pos: var) : var {
		       ^

0 [0x0]: line: 206 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @3551 // <std#string_builder.at>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string_builder.fmt[3553] params(1) in file: lib\support\0.2.9/string_builder.sharp:209:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 210 ipushl #0   
1 [0x1]:           movg @71 // @std#string_builder   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]: line: 211 ipushl #0   
10 [0xa]:           movi #102, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           tne ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skne ebx // pc = 20   
16 [0x10]:           ipushl #0   
17 [0x11]:           movi #70, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           tne ecx, ebx   
21 [0x15]:           jne 31   
22 [0x16]:           istore 0   
24 [0x18]:           movg @71 // @std#string_builder   
25 [0x19]:           movn #1   
27 [0x1b]:           loadval ebx   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           rmov adx, ebx   
31 [0x1f]:           nop   
32 [0x20]:           ret   


function: std#string_builder.set_precision[3554] params(1) in file: lib\support\0.2.9/string_builder.sharp:214:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 215 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 12   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 26   
14 [0xe]: line: 216 new_class @0 // app#__srt_global   
15 [0xf]:           newarry adx: 0   
16 [0x10]:           dup    
17 [0x11]:           new_class @0 // app#__srt_global   
18 [0x12]:           checknull   
19 [0x13]:           dup    
20 [0x14]:           newstr @37 // invalid precision:    
21 [0x15]:           call @3469 // <std#string.string>   
22 [0x16]:           ipushl #0   
23 [0x17]:           call @3501 // <std#string.operator+>   
24 [0x18]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 217 ipushl #0   
28 [0x1c]:           movg @71 // @std#string_builder   
29 [0x1d]:           movn #1   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           ret   


function: std#string_builder.to_array[3555] params(0) in file: lib\support\0.2.9/string_builder.sharp:220:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 222 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           skpe ebx // pc = 17   
7 [0x7]:           movl 0   
8 [0x8]:           movn #3   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           rstore ebx   
14 [0xe]:           movi #-1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           test ecx, ebx   
18 [0x12]:           jne 23   
19 [0x13]:           pushnull    
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 223 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           istore 0   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #3   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @2094 // <std.io#__srt_global.copy>   
43 [0x2b]:           popobj2    
44 [0x2c]:           returnobj   
45 [0x2d]:           ret   


function: std#string_builder.starts_with[3556] params(1) in file: lib\support\0.2.9/string_builder.sharp:227:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 228 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           skpe ebx // pc = 22   
3 [0x3]:           movl 1   
4 [0x4]:           pushobj   
5 [0x5]:           call @3510 // <std#string.size>   
6 [0x6]:           loadval ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #3   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           add ecx, ebx -> ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           gt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 27   
24 [0x18]: line: 229 istorel 0, fp+0   
26 [0x1a]:           ret   
27 [0x1b]:           nop   
28 [0x1c]: line: 232 istorel 0, fp+2   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           pushl 1   
32 [0x20]:           call @3510 // <std#string.size>   
33 [0x21]:           loadval ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           lt ecx, ebx   
36 [0x24]:           movr ebx, cmt   
37 [0x25]:           movr cmt, ebx   
38 [0x26]:           jne 68   
39 [0x27]: line: 234 movl 0   
40 [0x28]:           movn #0   
42 [0x2a]:           pushobj   
43 [0x2b]:           loadl ebx, fp+2   
44 [0x2c]:           popobj2    
45 [0x2d]:           movr adx, ebx   
46 [0x2e]:           chklen adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movl 1   
50 [0x32]:           movn #0   
52 [0x34]:           pushobj   
53 [0x35]:           loadl ebx, fp+2   
54 [0x36]:           popobj2    
55 [0x37]:           movr adx, ebx   
56 [0x38]:           chklen adx   
57 [0x39]:           iaload ebx, adx   
58 [0x3a]:           loadval ecx   
59 [0x3b]:           tne ecx, ebx   
60 [0x3c]:           jne 64   
61 [0x3d]: line: 235 istorel 0, fp+0   
63 [0x3f]:           ret   
64 [0x40]:           nop   
65 [0x41]:           iaddl 1, fp@2   
67 [0x43]:           jmp @30   
68 [0x44]: line: 237 istorel 1, fp+0   
70 [0x46]:           ret   


function: std#string_builder.find[3557] params(1) in file: lib\support\0.2.9/string_builder.sharp:240:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 241 pushl 1   
1 [0x1]:           call @3510 // <std#string.size>   
2 [0x2]:           loadval ebx   
3 [0x3]:           rstore ebx   
4 [0x4]:           movl 0   
5 [0x5]:           movn #3   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #1, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 23   
20 [0x14]: line: 242 istorel 0, fp+0   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 245 istorel 0, fp+2   
26 [0x1a]: line: 246 istorel 0, fp+3   
28 [0x1c]:           ipushl #3   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #3   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #1, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           add ecx, ebx -> ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 112   
45 [0x2d]: line: 247 ipushl #3   
46 [0x2e]:           pushl 1   
47 [0x2f]:           call @3510 // <std#string.size>   
48 [0x30]:           loadval ebx   
49 [0x31]:           loadval ecx   
50 [0x32]:           add ecx, ebx -> ebx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 0   
53 [0x35]:           movn #3   
55 [0x37]:           movi #0, adx   
57 [0x39]:           iaload ebx, adx   
58 [0x3a]:           rstore ebx   
59 [0x3b]:           movi #1, ebx   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           add ecx, ebx -> ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           lt ecx, ebx   
65 [0x41]:           movr ebx, cmt   
66 [0x42]:           movr cmt, ebx   
67 [0x43]:           jne 105   
68 [0x44]: line: 248 istorel 0, fp+4   
70 [0x46]:           ipushl #4   
71 [0x47]:           pushl 1   
72 [0x48]:           call @3510 // <std#string.size>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           loadval ecx   
75 [0x4b]:           lt ecx, ebx   
76 [0x4c]:           movr ebx, cmt   
77 [0x4d]:           movr cmt, ebx   
78 [0x4e]:           jne 101   
79 [0x4f]: line: 249 pushl 1   
80 [0x50]:           ipushl #4   
81 [0x51]:           call @3492 // <std#string.operator[>   
82 [0x52]:           loadval ebx   
83 [0x53]:           rstore ebx   
84 [0x54]:           movl 0   
85 [0x55]:           movn #0   
87 [0x57]:           pushobj   
88 [0x58]:           loadl ebx, fp+4   
89 [0x59]:           popobj2    
90 [0x5a]:           movr adx, ebx   
91 [0x5b]:           chklen adx   
92 [0x5c]:           iaload ebx, adx   
93 [0x5d]:           loadval ecx   
94 [0x5e]:           tne ecx, ebx   
95 [0x5f]:           jne 97   
96 [0x60]: line: 250 jmp @101   
97 [0x61]:           nop   
98 [0x62]:           iaddl 1, fp@4   
100 [0x64]:           jmp @70   
101 [0x65]: line: 253 istorel 1, fp+0   
103 [0x67]:           ret   
104 [0x68]:           jmp @108   
105 [0x69]: line: 254 istorel 0, fp+0   
107 [0x6b]:           ret   
108 [0x6c]:           nop   
109 [0x6d]:           iaddl 1, fp@3   
111 [0x6f]:           jmp @28   
112 [0x70]: line: 257 istorel 0, fp+0   
114 [0x72]:           ret   


function: std#string_builder.find[3558] params(1) in file: lib\support\0.2.9/string_builder.sharp:260:8: note:  
		    def find(str: string_builder) : var {
		       ^

0 [0x0]: line: 261 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gt ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           movr cmt, ebx   
20 [0x14]:           jne 24   
21 [0x15]: line: 262 istorel 0, fp+0   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 265 istorel 0, fp+2   
27 [0x1b]: line: 266 istorel 0, fp+3   
29 [0x1d]:           ipushl #3   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #3   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           lt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 115   
46 [0x2e]: line: 267 ipushl #3   
47 [0x2f]:           movl 1   
48 [0x30]:           movn #0   
50 [0x32]:           sizeof ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           add ecx, ebx -> ebx   
53 [0x35]:           rstore ebx   
54 [0x36]:           movl 0   
55 [0x37]:           movn #3   
57 [0x39]:           movi #0, adx   
59 [0x3b]:           iaload ebx, adx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           lt ecx, ebx   
67 [0x43]:           movr ebx, cmt   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 108   
70 [0x46]: line: 268 istorel 0, fp+4   
72 [0x48]:           ipushl #4   
73 [0x49]:           movl 1   
74 [0x4a]:           movn #0   
76 [0x4c]:           sizeof ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           lt ecx, ebx   
79 [0x4f]:           movr ebx, cmt   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 104   
82 [0x52]: line: 269 pushl 1   
83 [0x53]:           ipushl #4   
84 [0x54]:           call @3552 // <std#string_builder.operator[>   
85 [0x55]:           loadval ebx   
86 [0x56]:           rstore ebx   
87 [0x57]:           movl 0   
88 [0x58]:           movn #0   
90 [0x5a]:           pushobj   
91 [0x5b]:           loadl ebx, fp+4   
92 [0x5c]:           popobj2    
93 [0x5d]:           movr adx, ebx   
94 [0x5e]:           chklen adx   
95 [0x5f]:           iaload ebx, adx   
96 [0x60]:           loadval ecx   
97 [0x61]:           tne ecx, ebx   
98 [0x62]:           jne 100   
99 [0x63]: line: 270 jmp @104   
100 [0x64]:           nop   
101 [0x65]:           iaddl 1, fp@4   
103 [0x67]:           jmp @72   
104 [0x68]: line: 273 istorel 1, fp+0   
106 [0x6a]:           ret   
107 [0x6b]:           jmp @111   
108 [0x6c]: line: 274 istorel 0, fp+0   
110 [0x6e]:           ret   
111 [0x6f]:           nop   
112 [0x70]:           iaddl 1, fp@3   
114 [0x72]:           jmp @29   
115 [0x73]: line: 277 istorel 0, fp+0   
117 [0x75]:           ret   


function: std#string_builder.ends_with[3559] params(1) in file: lib\support\0.2.9/string_builder.sharp:280:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 281 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gte ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           movr cmt, ebx   
20 [0x14]:           jne 24   
21 [0x15]: line: 282 istorel 0, fp+0   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 284 movl 0   
26 [0x1a]:           movn #3   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           movi #1, ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           add ecx, ebx -> ebx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movl 1   
38 [0x26]:           movn #0   
40 [0x28]:           sizeof ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           smovr_2 ebx, fp+2   
44 [0x2c]:           ipushl #2   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #3   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movi #1, ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           add ecx, ebx -> ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           lt ecx, ebx   
58 [0x3a]:           movr ebx, cmt   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 90   
61 [0x3d]: line: 285 movl 0   
62 [0x3e]:           movn #0   
64 [0x40]:           pushobj   
65 [0x41]:           loadl ebx, fp+2   
66 [0x42]:           popobj2    
67 [0x43]:           movr adx, ebx   
68 [0x44]:           chklen adx   
69 [0x45]:           iaload ebx, adx   
70 [0x46]:           rstore ebx   
71 [0x47]:           movl 1   
72 [0x48]:           movn #0   
74 [0x4a]:           pushobj   
75 [0x4b]:           loadl ebx, fp+2   
76 [0x4c]:           popobj2    
77 [0x4d]:           movr adx, ebx   
78 [0x4e]:           chklen adx   
79 [0x4f]:           iaload ebx, adx   
80 [0x50]:           loadval ecx   
81 [0x51]:           tne ecx, ebx   
82 [0x52]:           jne 86   
83 [0x53]: line: 286 istorel 0, fp+0   
85 [0x55]:           ret   
86 [0x56]:           nop   
87 [0x57]:           iaddl 1, fp@2   
89 [0x59]:           jmp @44   
90 [0x5a]: line: 289 istorel 1, fp+0   
92 [0x5c]:           ret   


overload function: std#string_builder.operator+[3560] params(1) in file: lib\support\0.2.9/string_builder.sharp:292:8: note:  
		    def operator+(num : var) : string_builder {
		       ^

0 [0x0]: line: 293 new_class @0 // app#__srt_global   
1 [0x1]:           returnobj   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @3529 // <std#string_builder.string_builder>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 294 pushl 2   
11 [0xb]:           pushl 0   
12 [0xc]:           ipushl #1   
13 [0xd]:           call @3562 // <std#string_builder.parse>   
14 [0xe]:           call @3566 // <std#string_builder.get_data>   
15 [0xf]:           call @3541 // <std#string_builder.append>   
16 [0x10]:           pop   
17 [0x11]: line: 295 movl 2   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std#string_builder.size[3561] params(0) in file: lib\support\0.2.9/string_builder.sharp:298:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 299 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std#string_builder.parse[3562] params(1) in file: lib\support\0.2.9/string_builder.sharp:302:8: note:  
		    def parse( number : var ) : string_builder
		       ^

0 [0x0]: line: 304 new_class @0 // app#__srt_global   
1 [0x1]:           returnobj   
2 [0x2]:           dup    
3 [0x3]:           movg @71 // @std#string_builder   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           ipushl #1   
11 [0xb]:           movg @71 // @std#string_builder   
12 [0xc]:           movn #1   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @1897 // <std#__srt_global.snprintf>   
19 [0x13]:           call @3529 // <std#string_builder.string_builder>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string_builder.operator+=[3563] params(1) in file: lib\support\0.2.9/string_builder.sharp:307:8: note:  
		    def operator+=( num: var ) : string_builder
		       ^

0 [0x0]: line: 309 pushl 0   
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #1   
3 [0x3]:           call @3562 // <std#string_builder.parse>   
4 [0x4]:           call @3566 // <std#string_builder.get_data>   
5 [0x5]:           call @3541 // <std#string_builder.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string_builder.operator+=[3564] params(1) in file: lib\support\0.2.9/string_builder.sharp:312:15: note:  
		    public def operator+=( obj: printable ) : string_builder
		              ^

0 [0x0]: line: 314 pushl 1   
1 [0x1]:           invoke_delegate 3453 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 315 movl 2   
6 [0x6]:           checknull   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           skne ebx // pc = 15   
9 [0x9]:           movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           call @3495 // <std#string.get_data>   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           not ebx, ebx   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 25   
17 [0x11]: line: 316 pushl 0   
18 [0x12]:           pushl 2   
19 [0x13]:           call @3495 // <std#string.get_data>   
20 [0x14]:           call @3541 // <std#string_builder.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 318 pushl 0   
26 [0x1a]:           newstr @36 // null   
27 [0x1b]:           call @3541 // <std#string_builder.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


overload function: std#string_builder.operator+=[3565] params(1) in file: lib\support\0.2.9/string_builder.sharp:321:8: note:  
		    def operator+=( str: string ) : string_builder
		       ^

0 [0x0]: line: 323 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3495 // <std#string.get_data>   
3 [0x3]:           call @3541 // <std#string_builder.append>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#string_builder.get_data[3566] params(0) in file: lib\support\0.2.9/string_builder.sharp:326:8: note:  
		    def get_data() : _int8[]{
		       ^

0 [0x0]: line: 327 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std#string_builder.operator+=[3567] params(1) in file: lib\support\0.2.9/string_builder.sharp:330:8: note:  
		    def operator+=( str: string_builder ) : string_builder
		       ^

0 [0x0]: line: 332 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @3541 // <std#string_builder.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string_builder.operator+=[3568] params(1) in file: lib\support\0.2.9/string_builder.sharp:335:8: note:  
		    def operator+=( str: _int8[] ) : string_builder
		       ^

0 [0x0]: line: 337 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @3541 // <std#string_builder.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#string_builder.substring[3569] params(2) in file: lib\support\0.2.9/string_builder.sharp:340:15: note:  
		    public def substring(startPos: var, endPos: var) : string_builder {
		              ^

0 [0x0]: line: 341 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #1, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           add ecx, ebx -> ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gte ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skpe ebx // pc = 21   
16 [0x10]:           loadl ecx, fp+1   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           lt ecx, ebx   
20 [0x14]:           movr ebx, cmt   
21 [0x15]:           movr cmt, ebx   
22 [0x16]:           jne 27   
23 [0x17]: line: 342 pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3570 // <std#string_builder.bounds_error>   
26 [0x1a]:           throw    
27 [0x1b]:           nop   
28 [0x1c]: line: 343 ipushl #2   
29 [0x1d]:           loadl ebx, fp+1   
30 [0x1e]:           loadval ecx   
31 [0x1f]:           lt ecx, ebx   
32 [0x20]:           movr ebx, cmt   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 51   
35 [0x23]: line: 344 new_class @0 // app#__srt_global   
36 [0x24]:           newarry adx: 0   
37 [0x25]:           dup    
38 [0x26]:           new_class @0 // app#__srt_global   
39 [0x27]:           checknull   
40 [0x28]:           dup    
41 [0x29]:           newstr @42 // endPos:    
42 [0x2a]:           call @3469 // <std#string.string>   
43 [0x2b]:           ipushl #2   
44 [0x2c]:           call @3501 // <std#string.operator+>   
45 [0x2d]:           newstr @43 //  cannot be less than the startPos:    
46 [0x2e]:           call @3481 // <std#string.operator+>   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @3501 // <std#string.operator+>   
49 [0x31]:           call @1959 // <std#illegal_argument_exception.illegal_argument_exception>   
50 [0x32]:           throw    
51 [0x33]:           nop   
52 [0x34]: line: 348 new_class @0 // app#__srt_global   
53 [0x35]:           returnobj   
54 [0x36]:           dup    
55 [0x37]:           call @3572 // <std#string_builder.string_builder>   
56 [0x38]:           popobj2    
57 [0x39]:           smovr_3 fp+3   
58 [0x3a]: line: 349 movl 0   
59 [0x3b]:           movn #0   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           ipushl #2   
64 [0x40]:           call @2094 // <std.io#__srt_global.copy>   
65 [0x41]:           movl 3   
66 [0x42]:           movn #0   
68 [0x44]:           popobj   
69 [0x45]: line: 350 movl 3   
70 [0x46]:           returnobj   
71 [0x47]:           ret   


function: std#string_builder.bounds_error[3570] params(1) in file: lib\support\0.2.9/string_builder.sharp:353:16: note:  
		    private def bounds_error(pos : var) : bounds_except {
		               ^

0 [0x0]: line: 354 new_class @0 // app#__srt_global   
1 [0x1]:           mov8 adx, adx   
2 [0x2]:           dup    
3 [0x3]:           new_class @0 // app#__srt_global   
4 [0x4]:           checknull   
5 [0x5]:           dup    
6 [0x6]:           newstr @40 // Index out of bounds exception at:    
7 [0x7]:           call @3469 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @3501 // <std#string.operator+>   
10 [0xa]:           newstr @41 //  with size of:    
11 [0xb]:           call @3481 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #3   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #1, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           add ecx, ebx -> ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @3501 // <std#string.operator+>   
25 [0x19]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
26 [0x1a]:           popobj2    
27 [0x1b]:           returnobj   
28 [0x1c]:           ret   


function: std#string_builder.hash[3571] params(0) in file: lib\support\0.2.9/string_builder.sharp:357:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 358 istorel 0, fp+1   
2 [0x2]: line: 359 istorel 1, fp+2   
4 [0x4]: line: 360 istorel -1, fp+4   
6 [0x6]: line: 361 movl 0   
7 [0x7]: line: 362 movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           popl 5   
11 [0xb]:           iaddl 1, fp@4   
13 [0xd]:           movl 5   
14 [0xe]:           sizeof ecx   
15 [0xf]:           loadl ebx, fp+4   
16 [0x10]:           lt ebx, ecx   
17 [0x11]:           jne 55   
18 [0x12]:           iaload ecx, ebx   
19 [0x13]:           smovr_2 ecx, fp+3   
20 [0x14]: line: 363 ipushl #1   
21 [0x15]:           ipushl #3   
22 [0x16]:           movi #97, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           sub ecx, ebx -> ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #1, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           loadval ecx   
34 [0x22]:           mul ecx, ebx -> ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1000000009, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           mod ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+1   
43 [0x2b]: line: 364 ipushl #2   
44 [0x2c]:           movi #31, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           mul ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1000000009, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           mod ecx, ebx -> ebx   
53 [0x35]:           smovr_2 ebx, fp+2   
54 [0x36]:           jmp @11   
55 [0x37]: line: 366 new_class @0 // app#__srt_global   
56 [0x38]:           movn #112   
58 [0x3a]:           ipushl #1   
59 [0x3b]:           call @2430 // <std#long.long>   
60 [0x3c]:           popobj2    
61 [0x3d]:           returnobj   
62 [0x3e]:           ret   


constructor: std#string_builder.string_builder[3572] params(0) in file: lib\support\0.2.9/string_builder.sharp:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          ret   


function: std#time.nano_time[3573] params(0) in file: lib\support\0.2.9/time.sharp:9:15: note:  
		    static def nano_time() : var {
		              ^

0 [0x0]: line: 10 istorel 0, fp+0   
2 [0x2]: line: 12 int 0xb   : protected asm start
3 [0x3]:          smovr_2 bmr, fp+0   
4 [0x4]: line: 17 loadl ebx, fp+0   : protected asm end
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#time.get_os_time[3574] params(1) in file: lib\support\0.2.9/time.sharp:20:15: note:  
		    static def get_os_time(tr: time_request)
		              ^

0 [0x0]: line: 21 pushl 0   
1 [0x1]:          call @1947 // <std#_enum_.get_ordinal>   
2 [0x2]:          call @2300 // <platform.kernel#vm.get_os_time>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#time.nano_to_micro[3575] params(1) in file: lib\support\0.2.9/time.sharp:23:15: note:  
		    static def nano_to_micro(nano: var) : var {
		              ^

0 [0x0]: line: 24 ipushl #0   
1 [0x1]:          movi #1000, ebx   
3 [0x3]:          loadval ecx   
4 [0x4]:          div ecx, ebx -> ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#time.nano_to_mills[3576] params(1) in file: lib\support\0.2.9/time.sharp:27:15: note:  
		    static def nano_to_mills(nano: var) : var {
		              ^

0 [0x0]: line: 28 ipushl #0   
1 [0x1]:          call @3575 // <std#time.nano_to_micro>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#time.nano_to_secs[3577] params(1) in file: lib\support\0.2.9/time.sharp:31:22: note:  
		    public static def nano_to_secs(nano: var) : var {
		                     ^

0 [0x0]: line: 32 ipushl #0   
1 [0x1]:          call @3576 // <std#time.nano_to_mills>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#time.mills_time[3578] params(0) in file: lib\support\0.2.9/time.sharp:35:15: note:  
		    static def mills_time() : var {
		              ^

0 [0x0]: line: 36 call @3573 // <std#time.nano_time>   
1 [0x1]:          call @3576 // <std#time.nano_to_mills>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: std#time.sleep[3579] params(1) in file: lib\support\0.2.9/time.sharp:39:15: note:  
		    static def sleep(time: var) {
		              ^

0 [0x0]: line: 40 movg @74 // @std#time_unit   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #0   
5 [0x5]:          call @3580 // <std#time.sleep>   
6 [0x6]:          ret   


function: std#time.sleep[3580] params(2) in file: lib\support\0.2.9/time.sharp:43:15: note:  
		    static def sleep(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 44 loadl ecx, fp+1   
1 [0x1]:          movi #0, ebx   
3 [0x3]:          lt ecx, ebx   
4 [0x4]:          movr ebx, cmt   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 19   
7 [0x7]: line: 45 new_class @0 // app#__srt_global   
8 [0x8]:          div adx, adx -> adx   
9 [0x9]:          dup    
10 [0xa]:          new_class @0 // app#__srt_global   
11 [0xb]:          checknull   
12 [0xc]:          dup    
13 [0xd]:          newstr @44 // cannot sleep for negative time:    
14 [0xe]:          call @3469 // <std#string.string>   
15 [0xf]:          ipushl #1   
16 [0x10]:          call @3501 // <std#string.operator+>   
17 [0x11]:          call @2001 // <std#error.error>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 47 pushl 0   
21 [0x15]:          movg @74 // @std#time_unit   
22 [0x16]:          movn #0   
24 [0x18]:          pushobj   
25 [0x19]:          call @1944 // <std#_enum_.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 38   
29 [0x1d]: line: 48 ipushl #1   
30 [0x1e]:          movi #1000000, ebx   
32 [0x20]:          loadval ecx   
33 [0x21]:          mul ecx, ebx -> ebx   
34 [0x22]:          rstore ebx   
35 [0x23]:          call @3582 // <std#time.adjust_time>   
36 [0x24]:          ipopl 1   
37 [0x25]:          jmp @68   
38 [0x26]:          pushl 0   
39 [0x27]:          movg @74 // @std#time_unit   
40 [0x28]:          movn #1   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @1944 // <std#_enum_.operator==>   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 56   
47 [0x2f]: line: 50 ipushl #1   
48 [0x30]:          movi #1000, ebx   
50 [0x32]:          loadval ecx   
51 [0x33]:          mul ecx, ebx -> ebx   
52 [0x34]:          rstore ebx   
53 [0x35]:          call @3582 // <std#time.adjust_time>   
54 [0x36]:          ipopl 1   
55 [0x37]:          jmp @68   
56 [0x38]:          pushl 0   
57 [0x39]:          movg @74 // @std#time_unit   
58 [0x3a]:          movn #2   
60 [0x3c]:          pushobj   
61 [0x3d]:          call @1944 // <std#_enum_.operator==>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 68   
65 [0x41]: line: 52 ipushl #1   
66 [0x42]:          call @3582 // <std#time.adjust_time>   
67 [0x43]:          ipopl 1   
68 [0x44]:          nop   
69 [0x45]: line: 55 loadl ebx, fp+1   : protected asm start
70 [0x46]:          sleep ebx   
71 [0x47]:          ret   : protected asm end


function: std#time.wait[3581] params(2) in file: lib\support\0.2.9/time.sharp:61:15: note:  
		    static def wait(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 62 ipushl #1   
1 [0x1]:          movg @72 // @std#time   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          tne ecx, ebx   
9 [0x9]:          jne 69   
10 [0xa]: line: 63 loadl ecx, fp+1   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          lt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 29   
17 [0x11]: line: 64 new_class @0 // app#__srt_global   
18 [0x12]:          div adx, adx -> adx   
19 [0x13]:          dup    
20 [0x14]:          new_class @0 // app#__srt_global   
21 [0x15]:          checknull   
22 [0x16]:          dup    
23 [0x17]:          newstr @44 // cannot sleep for negative time:    
24 [0x18]:          call @3469 // <std#string.string>   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @3501 // <std#string.operator+>   
27 [0x1b]:          call @2001 // <std#error.error>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 66 pushl 0   
31 [0x1f]:          movg @74 // @std#time_unit   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          call @1944 // <std#_enum_.operator==>   
36 [0x24]:          loadval ebx   
37 [0x25]:          movr cmt, ebx   
38 [0x26]:          jne 43   
39 [0x27]: line: 67 movi #1000, ebx   
41 [0x29]:          mull ebx, fp@1   
42 [0x2a]:          jmp @68   
43 [0x2b]:          pushl 0   
44 [0x2c]:          movg @74 // @std#time_unit   
45 [0x2d]:          movn #2   
47 [0x2f]:          pushobj   
48 [0x30]:          call @1944 // <std#_enum_.operator==>   
49 [0x31]:          loadval ebx   
50 [0x32]:          movr cmt, ebx   
51 [0x33]:          jne 56   
52 [0x34]: line: 69 movi #1000, ebx   
54 [0x36]:          divl ebx, fp@1   
55 [0x37]:          jmp @68   
56 [0x38]:          pushl 0   
57 [0x39]:          movg @74 // @std#time_unit   
58 [0x3a]:          movn #3   
60 [0x3c]:          pushobj   
61 [0x3d]:          call @1944 // <std#_enum_.operator==>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 68   
65 [0x41]: line: 71 movi #1000000, ebx   
67 [0x43]:          divl ebx, fp@1   
68 [0x44]:          nop   
69 [0x45]:          nop   
70 [0x46]: line: 75 loadl adx, fp+1   : protected asm start
71 [0x47]:          int 0x14   
72 [0x48]:          ret   : protected asm end


function: std#time.adjust_time[3582] params(1) in file: lib\support\0.2.9/time.sharp:87:23: note:  
		    private static def adjust_time(usec: var) : var {
		                      ^

0 [0x0]: line: 89 call @2279 // <platform#build.is_windows>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 11   
4 [0x4]: line: 90 ipushl #0   
5 [0x5]:          movi #1000, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          div ecx, ebx -> ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   
11 [0xb]:          nop   
12 [0xc]: line: 93 loadl ebx, fp+0   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#time.measure[3583] params(2) in file: lib\support\0.2.9/time.sharp:96:15: note:  
		    static def measure(tm_unit: time_unit, block: ()()) : var {
		              ^

0 [0x0]: line: 97 call @3573 // <std#time.nano_time>   
1 [0x1]:          ipopl 2   
2 [0x2]:          istorel 0, fp+3   
4 [0x4]: line: 98 ipushl #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]: line: 99 call @3573 // <std#time.nano_time>   
8 [0x8]:          ipopl 3   
9 [0x9]: line: 101 pushl 0   
10 [0xa]:           movg @74 // @std#time_unit   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           call @1944 // <std#_enum_.operator==>   
15 [0xf]:           loadval ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 25   
18 [0x12]: line: 103 ipushl #2   
19 [0x13]:           call @3577 // <std#time.nano_to_secs>   
20 [0x14]:           ipopl 2   
21 [0x15]: line: 104 ipushl #3   
22 [0x16]:           call @3577 // <std#time.nano_to_secs>   
23 [0x17]:           ipopl 3   
24 [0x18]:           jmp @56   
25 [0x19]:           pushl 0   
26 [0x1a]:           movg @74 // @std#time_unit   
27 [0x1b]:           movn #1   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @1944 // <std#_enum_.operator==>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 41   
34 [0x22]: line: 107 ipushl #2   
35 [0x23]:           call @3576 // <std#time.nano_to_mills>   
36 [0x24]:           ipopl 2   
37 [0x25]: line: 108 ipushl #3   
38 [0x26]:           call @3576 // <std#time.nano_to_mills>   
39 [0x27]:           ipopl 3   
40 [0x28]:           jmp @56   
41 [0x29]:           pushl 0   
42 [0x2a]:           movg @74 // @std#time_unit   
43 [0x2b]:           movn #2   
45 [0x2d]:           pushobj   
46 [0x2e]:           call @1944 // <std#_enum_.operator==>   
47 [0x2f]:           loadval ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 56   
50 [0x32]: line: 111 ipushl #2   
51 [0x33]:           call @3575 // <std#time.nano_to_micro>   
52 [0x34]:           ipopl 2   
53 [0x35]: line: 112 ipushl #3   
54 [0x36]:           call @3575 // <std#time.nano_to_micro>   
55 [0x37]:           ipopl 3   
56 [0x38]:           nop   
57 [0x39]: line: 116 ipushl #3   
58 [0x3a]:           loadl ebx, fp+2   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           sub ecx, ebx -> ebx   
61 [0x3d]:           return_val ebx   
62 [0x3e]:           ret   


function: std#time.measure[3584] params(3) in file: lib\support\0.2.9/time.sharp:119:15: note:  
		    static def measure(tm_unit: time_unit, args: object[], block: (object[])()) : var {
		              ^

0 [0x0]: line: 120 call @3573 // <std#time.nano_time>   
1 [0x1]:           ipopl 3   
2 [0x2]:           istorel 0, fp+4   
4 [0x4]: line: 121 ipushl #2   
5 [0x5]:           pushl 1   
6 [0x6]:           smov ebx, sp+[-1]   
7 [0x7]:           calld ebx   
8 [0x8]: line: 122 call @3573 // <std#time.nano_time>   
9 [0x9]:           ipopl 4   
10 [0xa]: line: 124 pushl 0   
11 [0xb]:           movg @74 // @std#time_unit   
12 [0xc]:           movn #0   
14 [0xe]:           pushobj   
15 [0xf]:           call @1944 // <std#_enum_.operator==>   
16 [0x10]:           loadval ebx   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 26   
19 [0x13]: line: 126 ipushl #3   
20 [0x14]:           call @3577 // <std#time.nano_to_secs>   
21 [0x15]:           ipopl 3   
22 [0x16]: line: 127 ipushl #4   
23 [0x17]:           call @3577 // <std#time.nano_to_secs>   
24 [0x18]:           ipopl 4   
25 [0x19]:           jmp @57   
26 [0x1a]:           pushl 0   
27 [0x1b]:           movg @74 // @std#time_unit   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           call @1944 // <std#_enum_.operator==>   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 42   
35 [0x23]: line: 130 ipushl #3   
36 [0x24]:           call @3576 // <std#time.nano_to_mills>   
37 [0x25]:           ipopl 3   
38 [0x26]: line: 131 ipushl #4   
39 [0x27]:           call @3576 // <std#time.nano_to_mills>   
40 [0x28]:           ipopl 4   
41 [0x29]:           jmp @57   
42 [0x2a]:           pushl 0   
43 [0x2b]:           movg @74 // @std#time_unit   
44 [0x2c]:           movn #2   
46 [0x2e]:           pushobj   
47 [0x2f]:           call @1944 // <std#_enum_.operator==>   
48 [0x30]:           loadval ebx   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 57   
51 [0x33]: line: 134 ipushl #3   
52 [0x34]:           call @3575 // <std#time.nano_to_micro>   
53 [0x35]:           ipopl 3   
54 [0x36]: line: 135 ipushl #4   
55 [0x37]:           call @3575 // <std#time.nano_to_micro>   
56 [0x38]:           ipopl 4   
57 [0x39]:           nop   
58 [0x3a]: line: 139 ipushl #4   
59 [0x3b]:           loadl ebx, fp+3   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           sub ecx, ebx -> ebx   
62 [0x3e]:           return_val ebx   
63 [0x3f]:           ret   


constructor: std#time.time[3585] params(0) in file: lib\support\0.2.9/time.sharp:6:6: note:  
		class time {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std#unique.hash[3586] params(0) in file: lib\support\0.2.9/unique.sharp:11:8: note:  
		    def hash() : long;
		       ^



std#unique.guid[3587] params(0) in file: lib\support\0.2.9/unique.sharp:12:8: note:  
		    def guid() : long;
		       ^



constructor: std#unique.unique[3588] params(0) in file: lib\support\0.2.9/unique.sharp:10:10: note:  
		interface unique {
		         ^

0 [0x0]:         ret   


std#loopable<std#string>.get_elements[3589] params(0) in file: lib\support\0.2.9/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<std#string>.loopable[3590] params(0) in file: lib\support\0.2.9/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#list<std#string>.list[3591] params(0) in file: lib\support\0.2.9/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std#string[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std#string>.list[3592] params(1) in file: lib\support\0.2.9/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std#string[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<std#string>.list[3593] params(1) in file: lib\support\0.2.9/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3604 // <std#list<std#string>.add_all>   
4 [0x4]:          ret   


function: std#list<std#string>.empty[3594] params(0) in file: lib\support\0.2.9/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std#string>.set_compact[3595] params(1) in file: lib\support\0.2.9/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<std#string>.get_elements[3596] params(0) in file: lib\support\0.2.9/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2092 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<std#string>.operator[[3597] params(1) in file: lib\support\0.2.9/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3618 // <std#list<std#string>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std#string>.at[3598] params(1) in file: lib\support\0.2.9/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3618 // <std#list<std#string>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std#string>.last[3599] params(0) in file: lib\support\0.2.9/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3598 // <std#list<std#string>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<std#string>.put[3600] params(2) in file: lib\support\0.2.9/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3618 // <std#list<std#string>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std#list<std#string>.expand[3601] params(0) in file: lib\support\0.2.9/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2072 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2072 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<std#string>.clear[3602] params(0) in file: lib\support\0.2.9/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std#string[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#list<std#string>.add_all[3603] params(1) in file: lib\support\0.2.9/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2092 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #70, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<std#string>.add_all[3604] params(1) in file: lib\support\0.2.9/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2092 // <std.io#__srt_global.copy>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #70, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // std#string[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std#list<std#string>.add[3605] params(1) in file: lib\support\0.2.9/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3601 // <std#list<std#string>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std#list<std#string>.indexof[3606] params(1) in file: lib\support\0.2.9/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 36   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          call @3487 // <std#string.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 32   
29 [0x1d]: line: 97 loadl ebx, fp+2   
30 [0x1e]:          return_val ebx   
31 [0x1f]:          ret   
32 [0x20]:          nop   
33 [0x21]:          iaddl 1, fp@2   
35 [0x23]:          jmp @2   
36 [0x24]: line: 101 istorel -1, fp+0   
38 [0x26]:           ret   


function: std#list<std#string>.pop_back[3607] params(0) in file: lib\support\0.2.9/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<std#string>.size[3608] params(0) in file: lib\support\0.2.9/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<std#string>.insert[3609] params(2) in file: lib\support\0.2.9/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3618 // <std#list<std#string>.out_of_bounds_msg>   
24 [0x18]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3605 // <std#list<std#string>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3601 // <std#list<std#string>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<std#string>.find[3610] params(2) in file: lib\support\0.2.9/list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#list<std#string>.remove[3611] params(1) in file: lib\support\0.2.9/list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 37   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           call @3487 // <std#string.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 143 pushl 0   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           call @3615 // <std#list<std#string>.remove_at>   
32 [0x20]: line: 144 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@2   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: std#list<std#string>.remove[3612] params(2) in file: lib\support\0.2.9/list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3615 // <std#list<std#string>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<std#string>.replace[3613] params(2) in file: lib\support\0.2.9/list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<std#string>.linear_sort[3614] params(1) in file: lib\support\0.2.9/list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<std#string>.remove_at[3615] params(1) in file: lib\support\0.2.9/list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3618 // <std#list<std#string>.out_of_bounds_msg>   
24 [0x18]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2082 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3607 // <std#list<std#string>.pop_back>   
77 [0x4d]:           ret   


function: std#list<std#string>.indexof[3616] params(2) in file: lib\support\0.2.9/list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<std#string>.to_string[3617] params(0) in file: lib\support\0.2.9/list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // app#__srt_global   
1 [0x1]:           returnobj   
2 [0x2]:           dup    
3 [0x3]:           call @3572 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @110 // [    
8 [0x8]:           call @3568 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3565 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @111 // ,    
56 [0x38]:           call @3568 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @112 //  ]   
64 [0x40]:           call @3568 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3545 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<std#string>.out_of_bounds_msg[3618] params(1) in file: lib\support\0.2.9/list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @113 // Index:    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3501 // <std#string.operator+>   
7 [0x7]:           newstr @114 // , size:    
8 [0x8]:           call @3481 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3501 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable[3619] params(1) in file: lib\support\0.2.9/hashtable.sharp:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 11 loadl ebx, fp+1   
17 [0x11]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          loadval ecx   
35 [0x23]:          mul ecx, ebx -> ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #2   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          ret   


constructor: std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable[3620] params(0) in file: lib\support\0.2.9/hashtable.sharp:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 16 movi #128, ebx   
18 [0x12]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          popobj   
24 [0x18]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.set_threshold[3621] params(1) in file: lib\support\0.2.9/hashtable.sharp:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 21 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 22 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          loadval ecx   
17 [0x11]:          mul ecx, ebx -> ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          movl 0   
25 [0x19]:          _ulck   
26 [0x1a]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.hash[3622] params(1) in file: lib\support\0.2.9/hashtable.sharp:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]: line: 27 pushl 1   
1 [0x1]:          call @2197 // <std.io#thread.hash>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @301 // <std#integer<_int64>.operator%>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.resize[3623] params(0) in file: lib\support\0.2.9/hashtable.sharp:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          popobj   
22 [0x16]: line: 33 movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          sizeof ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #2   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 34 istorel -1, fp+3   
43 [0x2b]:          pushl 1   
44 [0x2c]:          popl 4   
45 [0x2d]:          iaddl 1, fp@3   
47 [0x2f]:          movl 4   
48 [0x30]:          sizeof ecx   
49 [0x31]:          loadl ebx, fp+3   
50 [0x32]:          lt ebx, ecx   
51 [0x33]:          jne 100   
52 [0x34]:          movnd ebx   
53 [0x35]:          pushobj   
54 [0x36]:          popl 2   
55 [0x37]: line: 36 movl 2   
56 [0x38]:          checknull   
57 [0x39]:          not ebx, ebx   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 99   
60 [0x3c]: line: 38 movl 2   
61 [0x3d]:          movn #2   
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]: line: 39 pushl 0   
65 [0x41]:          movl 2   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          call @3622 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
70 [0x46]:          ipopl 6   
71 [0x47]: line: 40 movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          loadl ebx, fp+6   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          pushobj   
81 [0x51]:          movl 2   
82 [0x52]:          movn #2   
84 [0x54]:          popobj   
85 [0x55]: line: 41 pushl 2   
86 [0x56]:          movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+6   
91 [0x5b]:          popobj2    
92 [0x5c]:          movr adx, ebx   
93 [0x5d]:          chklen adx   
94 [0x5e]:          movnd adx   
95 [0x5f]:          popobj   
96 [0x60]: line: 42 movl 5   
97 [0x61]:          smovr_3 fp+2   
98 [0x62]:          jmp @55   
99 [0x63]:          jmp @45   
100 [0x64]: line: 46 pushnull    
101 [0x65]:          popobj2    
102 [0x66]:          smovr_3 fp+1   
103 [0x67]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.at[3624] params(1) in file: lib\support\0.2.9/hashtable.sharp:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 51 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3622 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
5 [0x5]:          ipopl 2   
6 [0x6]: line: 52 istorel -1, fp+3   
8 [0x8]: line: 53 movl 4   
9 [0x9]:          del   
10 [0xa]: line: 55 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          loadl ebx, fp+2   
15 [0xf]:          popobj2    
16 [0x10]:          movr adx, ebx   
17 [0x11]:          chklen adx   
18 [0x12]:          movnd adx   
19 [0x13]:          pushobj   
20 [0x14]:          pushnull    
21 [0x15]:          itest ebx   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 56 pushl 4   
25 [0x19]:          movl 0   
26 [0x1a]:          _ulck   
27 [0x1b]:          popobj2    
28 [0x1c]:          returnobj   
29 [0x1d]:          ret   
30 [0x1e]:          jmp @88   
31 [0x1f]: line: 58 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          smovr_3 fp+5   
41 [0x29]: line: 59 movl 5   
42 [0x2a]:          checknull   
43 [0x2b]:          not ebx, ebx   
44 [0x2c]:          skne ebx // pc = 60   
45 [0x2d]:          movl 5   
46 [0x2e]:          movn #0   
48 [0x30]:          pushobj   
49 [0x31]:          pushl 1   
50 [0x32]:          itest ebx   
51 [0x33]:          not ebx, ebx   
52 [0x34]:          skne ebx // pc = 60   
53 [0x35]:          movl 5   
54 [0x36]:          movn #2   
56 [0x38]:          pushobj   
57 [0x39]:          pushnull    
58 [0x3a]:          itest ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 61 movl 5   
63 [0x3f]:          movn #2   
65 [0x41]:          smovr_3 fp+5   
66 [0x42]:          jmp @41   
67 [0x43]: line: 63 movl 5   
68 [0x44]:          checknull   
69 [0x45]:          movr cmt, ebx   
70 [0x46]:          jne 78   
71 [0x47]: line: 64 pushl 4   
72 [0x48]:          movl 0   
73 [0x49]:          _ulck   
74 [0x4a]:          popobj2    
75 [0x4b]:          returnobj   
76 [0x4c]:          ret   
77 [0x4d]:          jmp @87   
78 [0x4e]: line: 66 movl 5   
79 [0x4f]:          movn #1   
81 [0x51]:          pushobj   
82 [0x52]:          movl 0   
83 [0x53]:          _ulck   
84 [0x54]:          popobj2    
85 [0x55]:          returnobj   
86 [0x56]:          ret   
87 [0x57]:          nop   
88 [0x58]:          nop   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.put[3625] params(2) in file: lib\support\0.2.9/hashtable.sharp:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3622 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
5 [0x5]:          ipopl 3   
6 [0x6]: line: 75 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 76 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+3   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          smovr_3 fp+5   
18 [0x12]: line: 78 movl 5   
19 [0x13]:          checknull   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          skne ebx // pc = 29   
22 [0x16]:          movl 5   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          pushl 1   
27 [0x1b]:          itest ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 38   
31 [0x1f]: line: 79 movl 5   
32 [0x20]:          smovr_3 fp+4   
33 [0x21]: line: 80 movl 5   
34 [0x22]:          movn #2   
36 [0x24]:          smovr_3 fp+5   
37 [0x25]:          jmp @18   
38 [0x26]: line: 83 movl 5   
39 [0x27]:          checknull   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 89   
42 [0x2a]: line: 84 movl 0   
43 [0x2b]:          movn #3   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]: line: 85 new_class @0 // app#__srt_global   
54 [0x36]:          itest adx   
55 [0x37]:          dup    
56 [0x38]:          pushl 1   
57 [0x39]:          pushl 2   
58 [0x3a]:          call @3783 // <std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry>   
59 [0x3b]:          popobj2    
60 [0x3c]:          smovr_3 fp+5   
61 [0x3d]: line: 86 movl 4   
62 [0x3e]:          checknull   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 77   
65 [0x41]: line: 87 pushl 5   
66 [0x42]:          movl 0   
67 [0x43]:          movn #0   
69 [0x45]:          pushobj   
70 [0x46]:          loadl ebx, fp+3   
71 [0x47]:          popobj2    
72 [0x48]:          movr adx, ebx   
73 [0x49]:          chklen adx   
74 [0x4a]:          movnd adx   
75 [0x4b]:          popobj   
76 [0x4c]:          jmp @82   
77 [0x4d]: line: 89 pushl 5   
78 [0x4e]:          movl 4   
79 [0x4f]:          movn #2   
81 [0x51]:          popobj   
82 [0x52]:          nop   
83 [0x53]: line: 92 istorel 1, fp+0   
85 [0x55]:          movl 0   
86 [0x56]:          _ulck   
87 [0x57]:          ret   
88 [0x58]:          jmp @99   
89 [0x59]: line: 94 pushl 2   
90 [0x5a]:          movl 5   
91 [0x5b]:          movn #1   
93 [0x5d]:          popobj   
94 [0x5e]: line: 95 istorel 0, fp+0   
96 [0x60]:          movl 0   
97 [0x61]:          _ulck   
98 [0x62]:          ret   
99 [0x63]:          nop   
100 [0x64]:          movl 0   
101 [0x65]:          _ulck   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.remove[3626] params(1) in file: lib\support\0.2.9/hashtable.sharp:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 102 pushl 0   
3 [0x3]:           pushl 1   
4 [0x4]:           call @3622 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
5 [0x5]:           ipopl 2   
6 [0x6]: line: 103 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           popobj2    
12 [0xc]:           movr adx, ebx   
13 [0xd]:           chklen adx   
14 [0xe]:           movnd adx   
15 [0xf]:           pushobj   
16 [0x10]:           pushnull    
17 [0x11]:           itest ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 100   
20 [0x14]: line: 104 movl 3   
21 [0x15]:           del   
22 [0x16]: line: 105 movl 0   
23 [0x17]:           movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           smovr_3 fp+4   
32 [0x20]: line: 106 movl 4   
33 [0x21]:           checknull   
34 [0x22]:           not ebx, ebx   
35 [0x23]:           skne ebx // pc = 43   
36 [0x24]:           movl 4   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           pushl 1   
41 [0x29]:           itest ebx   
42 [0x2a]:           not ebx, ebx   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 52   
45 [0x2d]: line: 107 movl 4   
46 [0x2e]:           smovr_3 fp+3   
47 [0x2f]: line: 108 movl 4   
48 [0x30]:           movn #2   
50 [0x32]:           smovr_3 fp+4   
51 [0x33]:           jmp @32   
52 [0x34]: line: 111 movl 4   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           pushl 1   
57 [0x39]:           call @2214 // <std.io#thread.operator==>   
58 [0x3a]:           loadval ebx   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 99   
61 [0x3d]: line: 112 movl 3   
62 [0x3e]:           checknull   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 81   
65 [0x41]: line: 113 movl 4   
66 [0x42]:           movn #2   
68 [0x44]:           smovr_3 fp+5   
69 [0x45]: line: 114 pushl 5   
70 [0x46]:           movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           pushobj   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           popobj2    
76 [0x4c]:           movr adx, ebx   
77 [0x4d]:           chklen adx   
78 [0x4e]:           movnd adx   
79 [0x4f]:           popobj   
80 [0x50]:           jmp @93   
81 [0x51]: line: 116 movl 4   
82 [0x52]:           movn #2   
84 [0x54]:           smovr_3 fp+6   
85 [0x55]: line: 117 pushl 6   
86 [0x56]:           movl 3   
87 [0x57]:           movn #2   
89 [0x59]:           popobj   
90 [0x5a]: line: 118 pushnull    
91 [0x5b]:           popobj2    
92 [0x5c]:           smovr_3 fp+4   
93 [0x5d]:           nop   
94 [0x5e]: line: 121 istorel 1, fp+0   
96 [0x60]:           movl 0   
97 [0x61]:           _ulck   
98 [0x62]:           ret   
99 [0x63]:           nop   
100 [0x64]:           nop   
101 [0x65]: line: 125 istorel 0, fp+0   
103 [0x67]:           movl 0   
104 [0x68]:           _ulck   
105 [0x69]:           ret   
106 [0x6a]:           movl 0   
107 [0x6b]:           _ulck   


constructor: std#hashtable<std#int,std.io#thread>.hashtable[3627] params(1) in file: lib\support\0.2.9/hashtable.sharp:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 11 loadl ebx, fp+1   
17 [0x11]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          loadval ecx   
35 [0x23]:          mul ecx, ebx -> ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #2   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          ret   


constructor: std#hashtable<std#int,std.io#thread>.hashtable[3628] params(0) in file: lib\support\0.2.9/hashtable.sharp:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 16 movi #128, ebx   
18 [0x12]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          popobj   
24 [0x18]:          ret   


function: std#hashtable<std#int,std.io#thread>.set_threshold[3629] params(1) in file: lib\support\0.2.9/hashtable.sharp:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 21 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 22 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          loadval ecx   
17 [0x11]:          mul ecx, ebx -> ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          movl 0   
25 [0x19]:          _ulck   
26 [0x1a]:          ret   


function: std#hashtable<std#int,std.io#thread>.hash[3630] params(1) in file: lib\support\0.2.9/hashtable.sharp:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]: line: 27 pushl 1   
1 [0x1]:          call @638 // <std#integer<_int32>.hash>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @301 // <std#integer<_int64>.operator%>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std#hashtable<std#int,std.io#thread>.resize[3631] params(0) in file: lib\support\0.2.9/hashtable.sharp:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          popobj   
22 [0x16]: line: 33 movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          sizeof ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #2   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 34 istorel -1, fp+3   
43 [0x2b]:          pushl 1   
44 [0x2c]:          popl 4   
45 [0x2d]:          iaddl 1, fp@3   
47 [0x2f]:          movl 4   
48 [0x30]:          sizeof ecx   
49 [0x31]:          loadl ebx, fp+3   
50 [0x32]:          lt ebx, ecx   
51 [0x33]:          jne 100   
52 [0x34]:          movnd ebx   
53 [0x35]:          pushobj   
54 [0x36]:          popl 2   
55 [0x37]: line: 36 movl 2   
56 [0x38]:          checknull   
57 [0x39]:          not ebx, ebx   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 99   
60 [0x3c]: line: 38 movl 2   
61 [0x3d]:          movn #2   
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]: line: 39 pushl 0   
65 [0x41]:          movl 2   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          call @3630 // <std#hashtable<std#int,std.io#thread>.hash>   
70 [0x46]:          ipopl 6   
71 [0x47]: line: 40 movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          loadl ebx, fp+6   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          pushobj   
81 [0x51]:          movl 2   
82 [0x52]:          movn #2   
84 [0x54]:          popobj   
85 [0x55]: line: 41 pushl 2   
86 [0x56]:          movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+6   
91 [0x5b]:          popobj2    
92 [0x5c]:          movr adx, ebx   
93 [0x5d]:          chklen adx   
94 [0x5e]:          movnd adx   
95 [0x5f]:          popobj   
96 [0x60]: line: 42 movl 5   
97 [0x61]:          smovr_3 fp+2   
98 [0x62]:          jmp @55   
99 [0x63]:          jmp @45   
100 [0x64]: line: 46 pushnull    
101 [0x65]:          popobj2    
102 [0x66]:          smovr_3 fp+1   
103 [0x67]:          ret   


function: std#hashtable<std#int,std.io#thread>.at[3632] params(1) in file: lib\support\0.2.9/hashtable.sharp:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 51 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3630 // <std#hashtable<std#int,std.io#thread>.hash>   
5 [0x5]:          ipopl 2   
6 [0x6]: line: 52 istorel -1, fp+3   
8 [0x8]: line: 53 movl 4   
9 [0x9]:          del   
10 [0xa]: line: 55 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          loadl ebx, fp+2   
15 [0xf]:          popobj2    
16 [0x10]:          movr adx, ebx   
17 [0x11]:          chklen adx   
18 [0x12]:          movnd adx   
19 [0x13]:          pushobj   
20 [0x14]:          pushnull    
21 [0x15]:          itest ebx   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 56 pushl 4   
25 [0x19]:          movl 0   
26 [0x1a]:          _ulck   
27 [0x1b]:          popobj2    
28 [0x1c]:          returnobj   
29 [0x1d]:          ret   
30 [0x1e]:          jmp @88   
31 [0x1f]: line: 58 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          smovr_3 fp+5   
41 [0x29]: line: 59 movl 5   
42 [0x2a]:          checknull   
43 [0x2b]:          not ebx, ebx   
44 [0x2c]:          skne ebx // pc = 60   
45 [0x2d]:          movl 5   
46 [0x2e]:          movn #0   
48 [0x30]:          pushobj   
49 [0x31]:          pushl 1   
50 [0x32]:          call @645 // <std#integer<_int32>.operator!=>   
51 [0x33]:          loadval ebx   
52 [0x34]:          skne ebx // pc = 60   
53 [0x35]:          movl 5   
54 [0x36]:          movn #2   
56 [0x38]:          pushobj   
57 [0x39]:          pushnull    
58 [0x3a]:          itest ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 61 movl 5   
63 [0x3f]:          movn #2   
65 [0x41]:          smovr_3 fp+5   
66 [0x42]:          jmp @41   
67 [0x43]: line: 63 movl 5   
68 [0x44]:          checknull   
69 [0x45]:          movr cmt, ebx   
70 [0x46]:          jne 78   
71 [0x47]: line: 64 pushl 4   
72 [0x48]:          movl 0   
73 [0x49]:          _ulck   
74 [0x4a]:          popobj2    
75 [0x4b]:          returnobj   
76 [0x4c]:          ret   
77 [0x4d]:          jmp @87   
78 [0x4e]: line: 66 movl 5   
79 [0x4f]:          movn #1   
81 [0x51]:          pushobj   
82 [0x52]:          movl 0   
83 [0x53]:          _ulck   
84 [0x54]:          popobj2    
85 [0x55]:          returnobj   
86 [0x56]:          ret   
87 [0x57]:          nop   
88 [0x58]:          nop   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   


function: std#hashtable<std#int,std.io#thread>.put[3633] params(2) in file: lib\support\0.2.9/hashtable.sharp:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3630 // <std#hashtable<std#int,std.io#thread>.hash>   
5 [0x5]:          ipopl 3   
6 [0x6]: line: 75 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 76 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+3   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          smovr_3 fp+5   
18 [0x12]: line: 78 movl 5   
19 [0x13]:          checknull   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          skne ebx // pc = 29   
22 [0x16]:          movl 5   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          pushl 1   
27 [0x1b]:          call @645 // <std#integer<_int32>.operator!=>   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 38   
31 [0x1f]: line: 79 movl 5   
32 [0x20]:          smovr_3 fp+4   
33 [0x21]: line: 80 movl 5   
34 [0x22]:          movn #2   
36 [0x24]:          smovr_3 fp+5   
37 [0x25]:          jmp @18   
38 [0x26]: line: 83 movl 5   
39 [0x27]:          checknull   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 89   
42 [0x2a]: line: 84 movl 0   
43 [0x2b]:          movn #3   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]: line: 85 new_class @0 // app#__srt_global   
54 [0x36]:          invoke_delegate 0 { static=0, args=0 }   
56 [0x38]:          pushl 1   
57 [0x39]:          pushl 2   
58 [0x3a]:          call @3786 // <std.io#entry<std#int,std.io#thread>.entry>   
59 [0x3b]:          popobj2    
60 [0x3c]:          smovr_3 fp+5   
61 [0x3d]: line: 86 movl 4   
62 [0x3e]:          checknull   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 77   
65 [0x41]: line: 87 pushl 5   
66 [0x42]:          movl 0   
67 [0x43]:          movn #0   
69 [0x45]:          pushobj   
70 [0x46]:          loadl ebx, fp+3   
71 [0x47]:          popobj2    
72 [0x48]:          movr adx, ebx   
73 [0x49]:          chklen adx   
74 [0x4a]:          movnd adx   
75 [0x4b]:          popobj   
76 [0x4c]:          jmp @82   
77 [0x4d]: line: 89 pushl 5   
78 [0x4e]:          movl 4   
79 [0x4f]:          movn #2   
81 [0x51]:          popobj   
82 [0x52]:          nop   
83 [0x53]: line: 92 istorel 1, fp+0   
85 [0x55]:          movl 0   
86 [0x56]:          _ulck   
87 [0x57]:          ret   
88 [0x58]:          jmp @99   
89 [0x59]: line: 94 pushl 2   
90 [0x5a]:          movl 5   
91 [0x5b]:          movn #1   
93 [0x5d]:          popobj   
94 [0x5e]: line: 95 istorel 0, fp+0   
96 [0x60]:          movl 0   
97 [0x61]:          _ulck   
98 [0x62]:          ret   
99 [0x63]:          nop   
100 [0x64]:          movl 0   
101 [0x65]:          _ulck   


function: std#hashtable<std#int,std.io#thread>.remove[3634] params(1) in file: lib\support\0.2.9/hashtable.sharp:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 102 pushl 0   
3 [0x3]:           pushl 1   
4 [0x4]:           call @3630 // <std#hashtable<std#int,std.io#thread>.hash>   
5 [0x5]:           ipopl 2   
6 [0x6]: line: 103 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           popobj2    
12 [0xc]:           movr adx, ebx   
13 [0xd]:           chklen adx   
14 [0xe]:           movnd adx   
15 [0xf]:           pushobj   
16 [0x10]:           pushnull    
17 [0x11]:           itest ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 100   
20 [0x14]: line: 104 movl 3   
21 [0x15]:           del   
22 [0x16]: line: 105 movl 0   
23 [0x17]:           movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           smovr_3 fp+4   
32 [0x20]: line: 106 movl 4   
33 [0x21]:           checknull   
34 [0x22]:           not ebx, ebx   
35 [0x23]:           skne ebx // pc = 43   
36 [0x24]:           movl 4   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           pushl 1   
41 [0x29]:           call @645 // <std#integer<_int32>.operator!=>   
42 [0x2a]:           loadval ebx   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 52   
45 [0x2d]: line: 107 movl 4   
46 [0x2e]:           smovr_3 fp+3   
47 [0x2f]: line: 108 movl 4   
48 [0x30]:           movn #2   
50 [0x32]:           smovr_3 fp+4   
51 [0x33]:           jmp @32   
52 [0x34]: line: 111 movl 4   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           pushl 1   
57 [0x39]:           call @646 // <std#integer<_int32>.operator==>   
58 [0x3a]:           loadval ebx   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 99   
61 [0x3d]: line: 112 movl 3   
62 [0x3e]:           checknull   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 81   
65 [0x41]: line: 113 movl 4   
66 [0x42]:           movn #2   
68 [0x44]:           smovr_3 fp+5   
69 [0x45]: line: 114 pushl 5   
70 [0x46]:           movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           pushobj   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           popobj2    
76 [0x4c]:           movr adx, ebx   
77 [0x4d]:           chklen adx   
78 [0x4e]:           movnd adx   
79 [0x4f]:           popobj   
80 [0x50]:           jmp @93   
81 [0x51]: line: 116 movl 4   
82 [0x52]:           movn #2   
84 [0x54]:           smovr_3 fp+6   
85 [0x55]: line: 117 pushl 6   
86 [0x56]:           movl 3   
87 [0x57]:           movn #2   
89 [0x59]:           popobj   
90 [0x5a]: line: 118 pushnull    
91 [0x5b]:           popobj2    
92 [0x5c]:           smovr_3 fp+4   
93 [0x5d]:           nop   
94 [0x5e]: line: 121 istorel 1, fp+0   
96 [0x60]:           movl 0   
97 [0x61]:           _ulck   
98 [0x62]:           ret   
99 [0x63]:           nop   
100 [0x64]:           nop   
101 [0x65]: line: 125 istorel 0, fp+0   
103 [0x67]:           movl 0   
104 [0x68]:           _ulck   
105 [0x69]:           ret   
106 [0x6a]:           movl 0   
107 [0x6b]:           _ulck   


std.io#receive_channel<var>.read[3635] params(0) in file: lib\support\0.2.9/io//receive_channel.sharp:4:8: note:  
		    def read() : t;
		       ^



std.io#receive_channel<var>.read[3636] params(1) in file: lib\support\0.2.9/io//receive_channel.sharp:6:8: note:  
		    def read(filter: var) : t;
		       ^



std.io#receive_channel<var>.read_next[3637] params(2) in file: lib\support\0.2.9/io//receive_channel.sharp:8:8: note:  
		    def read_next(count: var, filter: var) : list<t>;
		       ^



std.io#receive_channel<var>.read_next[3638] params(1) in file: lib\support\0.2.9/io//receive_channel.sharp:10:8: note:  
		    def read_next(filter: var) : list<t>;
		       ^



std.io#receive_channel<var>.avail_data[3639] params(1) in file: lib\support\0.2.9/io//receive_channel.sharp:12:8: note:  
		    def avail_data(filter: var) : var;
		       ^



constructor: std.io#receive_channel<var>.receive_channel[3640] params(0) in file: lib\support\0.2.9/io//receive_channel.sharp:3:10: note:  
		interface receive_channel<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std.io#send_channel<var>.send[3641] params(1) in file: lib\support\0.2.9/io//send_channel.sharp:4:8: note:  
		    def send(data : t);
		       ^



std.io#send_channel<var>.send[3642] params(2) in file: lib\support\0.2.9/io//send_channel.sharp:6:8: note:  
		    def send(data : t, filter: var);
		       ^



std.io#send_channel<var>.close[3643] params(0) in file: lib\support\0.2.9/io//send_channel.sharp:8:8: note:  
		    def close();
		       ^



std.io#send_channel<var>.open[3644] params(0) in file: lib\support\0.2.9/io//send_channel.sharp:10:8: note:  
		    def open();
		       ^



constructor: std.io#send_channel<var>.send_channel[3645] params(0) in file: lib\support\0.2.9/io//send_channel.sharp:3:10: note:  
		interface send_channel<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std#loopable<var>.get_elements[3646] params(0) in file: lib\support\0.2.9/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<var>.loopable[3647] params(0) in file: lib\support\0.2.9/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io#channel<var>.channel[3648] params(1) in file: lib\support\0.2.9/io//channel.sharp:14:12: note:  
		    channel(capacity : var) {
		           ^

0 [0x0]:         movg @92 // @std.io#channel<t>.channel_state   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         movl 0   
5 [0x5]:         movn #3   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]: line: 15 pushl 0   
10 [0xa]:          ipushl #1   
11 [0xb]:          istore 1   
13 [0xd]:          call @3649 // <std.io#channel<var>.channel>   
14 [0xe]:          ret   


constructor: std.io#channel<var>.channel[3649] params(2) in file: lib\support\0.2.9/io//channel.sharp:18:12: note:  
		    channel(capacity : var, filters: var) {
		           ^

0 [0x0]:         movg @92 // @std.io#channel<t>.channel_state   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         movl 0   
5 [0x5]:         movn #3   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]: line: 19 pushl 0   
10 [0xa]:          ipushl #2   
11 [0xb]:          call @3652 // <std.io#channel<var>.add_filters>   
12 [0xc]: line: 21 ipushl #1   
13 [0xd]:          movi #0, ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          gt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 53   
20 [0x14]: line: 22 ipushl #1   
21 [0x15]:          movl 0   
22 [0x16]:          movn #2   
24 [0x18]:          loadval ebx   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          rmov adx, ebx   
28 [0x1c]: line: 23 ipushl #1   
29 [0x1d]:          movi #1, ebx   
31 [0x1f]:          loadval ecx   
32 [0x20]:          test ecx, ebx   
33 [0x21]:          jne 43   
34 [0x22]: line: 24 movg @21 // @std.io#buffer_type   
35 [0x23]:          movn #1   
37 [0x25]:          pushobj   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          popobj   
42 [0x2a]:          jmp @51   
43 [0x2b]: line: 26 movg @21 // @std.io#buffer_type   
44 [0x2c]:          movn #3   
46 [0x2e]:          pushobj   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #1   
50 [0x32]:          popobj   
51 [0x33]:          nop   
52 [0x34]:          jmp @59   
53 [0x35]: line: 29 new_class @0 // app#__srt_global   
54 [0x36]:          cast adx   
55 [0x37]:          dup    
56 [0x38]:          newstr @115 // channel capacity cannot be < 0   
57 [0x39]:          call @1961 // <std#illegal_state_exception.illegal_state_exception>   
58 [0x3a]:          throw    
59 [0x3b]:          nop   
60 [0x3c]:          ret   


constructor: std.io#channel<var>.channel[3650] params(1) in file: lib\support\0.2.9/io//channel.sharp:33:12: note:  
		    channel(buff_type : buffer_type) {
		           ^

0 [0x0]:         movg @92 // @std.io#channel<t>.channel_state   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         movl 0   
5 [0x5]:         movn #3   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]: line: 34 pushl 0   
10 [0xa]:          pushl 1   
11 [0xb]:          istore 1   
13 [0xd]:          call @3651 // <std.io#channel<var>.channel>   
14 [0xe]:          ret   


constructor: std.io#channel<var>.channel[3651] params(2) in file: lib\support\0.2.9/io//channel.sharp:38:12: note:  
		    channel(buff_type : buffer_type, filters: var) {
		           ^

0 [0x0]:         movg @92 // @std.io#channel<t>.channel_state   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         movl 0   
5 [0x5]:         movn #3   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]: line: 39 pushl 1   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          popobj   
14 [0xe]: line: 40 pushl 0   
15 [0xf]:          ipushl #2   
16 [0x10]:          call @3652 // <std.io#channel<var>.add_filters>   
17 [0x11]: line: 42 pushl 1   
18 [0x12]:          movg @21 // @std.io#buffer_type   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          call @1944 // <std#_enum_.operator==>   
23 [0x17]:          loadval ebx   
24 [0x18]:          movr cmt, ebx   
25 [0x19]:          je 35   
26 [0x1a]:          pushl 1   
27 [0x1b]:          movg @21 // @std.io#buffer_type   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          call @1944 // <std#_enum_.operator==>   
32 [0x20]:          loadval ebx   
33 [0x21]:          movr cmt, ebx   
34 [0x22]:          jne 44   
35 [0x23]: line: 44 movi #1, ebx   
37 [0x25]:          movl 0   
38 [0x26]:          movn #2   
40 [0x28]:          movi #0, adx   
42 [0x2a]:          rmov adx, ebx   
43 [0x2b]:          jmp @79   
44 [0x2c]:          pushl 1   
45 [0x2d]:          movg @21 // @std.io#buffer_type   
46 [0x2e]:          movn #2   
48 [0x30]:          pushobj   
49 [0x31]:          call @1944 // <std#_enum_.operator==>   
50 [0x32]:          loadval ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 62   
53 [0x35]: line: 47 movi #-1, ebx   
55 [0x37]:          movl 0   
56 [0x38]:          movn #2   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]:          jmp @79   
62 [0x3e]:          pushl 1   
63 [0x3f]:          movg @21 // @std.io#buffer_type   
64 [0x40]:          movn #3   
66 [0x42]:          pushobj   
67 [0x43]:          call @1944 // <std#_enum_.operator==>   
68 [0x44]:          loadval ebx   
69 [0x45]:          movr cmt, ebx   
70 [0x46]:          jne 79   
71 [0x47]: line: 50 movi #10, ebx   
73 [0x49]:          movl 0   
74 [0x4a]:          movn #2   
76 [0x4c]:          movi #0, adx   
78 [0x4e]:          rmov adx, ebx   
79 [0x4f]:          nop   
80 [0x50]:          ret   


function: std.io#channel<var>.add_filters[3652] params(1) in file: lib\support\0.2.9/io//channel.sharp:55:16: note:  
		    private def add_filters(filter_count : var) {
		               ^

0 [0x0]: line: 56 ipushl #1   
1 [0x1]:          movi #0, ebx   
3 [0x3]:          loadval ecx   
4 [0x4]:          lte ecx, ebx   
5 [0x5]:          movr ebx, cmt   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 14   
8 [0x8]: line: 57 new_class @0 // app#__srt_global   
9 [0x9]:          cast adx   
10 [0xa]:          dup    
11 [0xb]:          newstr @116 // channels must have at least 1 filter   
12 [0xc]:          call @1961 // <std#illegal_state_exception.illegal_state_exception>   
13 [0xd]:          throw    
14 [0xe]:          nop   
15 [0xf]: line: 60 new_class @0 // app#__srt_global   
16 [0x10]:          isadd 0, sp+112   
18 [0x12]:          ipushl #1   
19 [0x13]:          call @3800 // <std#list<app#filter<var>>.list>   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          popobj   
24 [0x18]: line: 61 istorel 0, fp+2   
26 [0x1a]:          ipushl #2   
27 [0x1b]:          loadl ebx, fp+1   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          lt ecx, ebx   
30 [0x1e]:          movr ebx, cmt   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 45   
33 [0x21]: line: 62 movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          new_class @0 // app#__srt_global   
38 [0x26]:          get adx   
39 [0x27]:          dup    
40 [0x28]:          call @3796 // <app#filter<var>.filter>   
41 [0x29]:          call @3813 // <std#list<app#filter<var>>.add>   
42 [0x2a]:          iaddl 1, fp@2   
44 [0x2c]:          jmp @26   
45 [0x2d]:          ret   


function: std.io#channel<var>.get_capacity[3653] params(0) in file: lib\support\0.2.9/io//channel.sharp:66:8: note:  
		    def get_capacity() := capacity;
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#channel<var>.get_buffer_type[3654] params(0) in file: lib\support\0.2.9/io//channel.sharp:67:8: note:  
		    def get_buffer_type() := buff_type;
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#channel<var>.get_state[3655] params(0) in file: lib\support\0.2.9/io//channel.sharp:68:8: note:  
		    def get_state() : channel_state {
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 70 movl 0   
3 [0x3]:          movn #3   
5 [0x5]:          pushobj   
6 [0x6]:          movl 0   
7 [0x7]:          _ulck   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   
11 [0xb]:          movl 0   
12 [0xc]:          _ulck   


function: std.io#channel<var>.send[3656] params(1) in file: lib\support\0.2.9/io//channel.sharp:74:8: note:  
		    def send(data : t) {
		       ^

0 [0x0]: line: 75 pushl 0   
1 [0x1]:          ipushl #1   
2 [0x2]:          ldc ebx // 0   
3 [0x3]:          rstore ebx   
4 [0x4]:          call @3657 // <std.io#channel<var>.send>   
5 [0x5]:          ret   


function: std.io#channel<var>.send[3657] params(2) in file: lib\support\0.2.9/io//channel.sharp:78:8: note:  
		    def send(data : t, filter: var) {
		       ^

0 [0x0]: line: 79 ipushl #2   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          pushobj   
5 [0x5]:          call @3816 // <std#list<app#filter<var>>.size>   
6 [0x6]:          loadval ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+2   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 38   
18 [0x12]: line: 80 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          new_class @0 // app#__srt_global   
22 [0x16]:          checknull   
23 [0x17]:          dup    
24 [0x18]:          newstr @117 // invalid send on filter (   
25 [0x19]:          call @3469 // <std#string.string>   
26 [0x1a]:          ipushl #2   
27 [0x1b]:          call @3501 // <std#string.operator+>   
28 [0x1c]:          newstr @118 // ) when max filter is    
29 [0x1d]:          call @3481 // <std#string.operator+>   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          pushobj   
34 [0x22]:          call @3816 // <std#list<app#filter<var>>.size>   
35 [0x23]:          call @3501 // <std#string.operator+>   
36 [0x24]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
37 [0x25]:          throw    
38 [0x26]:          nop   
39 [0x27]: line: 83 movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          pushobj   
43 [0x2b]:          ipushl #2   
44 [0x2c]:          call @3805 // <std#list<app#filter<var>>.operator[>   
45 [0x2d]:          ipushl #1   
46 [0x2e]:          pushl 0   
47 [0x2f]:          call @3795 // <app#filter<var>.send>   
48 [0x30]:          ret   


function: std.io#channel<var>.read[3658] params(0) in file: lib\support\0.2.9/io//channel.sharp:86:8: note:  
		    def read() : t {
		       ^

0 [0x0]: line: 87 pushl 0   
1 [0x1]:          ldc ebx // 0   
2 [0x2]:          rstore ebx   
3 [0x3]:          call @3659 // <std.io#channel<var>.read>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.io#channel<var>.read[3659] params(1) in file: lib\support\0.2.9/io//channel.sharp:90:8: note:  
		    def read(filter: var) : t {
		       ^

0 [0x0]: line: 91 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          pushobj   
5 [0x5]:          call @3816 // <std#list<app#filter<var>>.size>   
6 [0x6]:          loadval ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 38   
18 [0x12]: line: 92 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          new_class @0 // app#__srt_global   
22 [0x16]:          checknull   
23 [0x17]:          dup    
24 [0x18]:          newstr @117 // invalid send on filter (   
25 [0x19]:          call @3469 // <std#string.string>   
26 [0x1a]:          ipushl #1   
27 [0x1b]:          call @3501 // <std#string.operator+>   
28 [0x1c]:          newstr @118 // ) when max filter is    
29 [0x1d]:          call @3481 // <std#string.operator+>   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          pushobj   
34 [0x22]:          call @3816 // <std#list<app#filter<var>>.size>   
35 [0x23]:          call @3501 // <std#string.operator+>   
36 [0x24]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
37 [0x25]:          throw    
38 [0x26]:          nop   
39 [0x27]: line: 95 movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          pushobj   
43 [0x2b]:          ipushl #1   
44 [0x2c]:          call @3805 // <std#list<app#filter<var>>.operator[>   
45 [0x2d]:          pushl 0   
46 [0x2e]:          call @3794 // <app#filter<var>.read>   
47 [0x2f]:          loadval ebx   
48 [0x30]:          return_val ebx   
49 [0x31]:          ret   


function: std.io#channel<var>.close[3660] params(0) in file: lib\support\0.2.9/io//channel.sharp:98:8: note:  
		    def close() {
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 100 movg @92 // @std.io#channel<t>.channel_state   
3 [0x3]:           movn #1   
5 [0x5]:           pushobj   
6 [0x6]:           movl 0   
7 [0x7]:           movn #3   
9 [0x9]:           popobj   
10 [0xa]:           movl 0   
11 [0xb]:           _ulck   
12 [0xc]:           ret   


function: std.io#channel<var>.open[3661] params(0) in file: lib\support\0.2.9/io//channel.sharp:104:8: note:  
		    def open() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 106 movg @92 // @std.io#channel<t>.channel_state   
3 [0x3]:           movn #0   
5 [0x5]:           pushobj   
6 [0x6]:           movl 0   
7 [0x7]:           movn #3   
9 [0x9]:           popobj   
10 [0xa]:           movl 0   
11 [0xb]:           _ulck   
12 [0xc]:           ret   


function: std.io#channel<var>.read_next[3662] params(2) in file: lib\support\0.2.9/io//channel.sharp:110:8: note:  
		    def read_next(count: var, filter: var) : list<t> {
		       ^

0 [0x0]: line: 111 ipushl #2   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @3816 // <std#list<app#filter<var>>.size>   
6 [0x6]:           loadval ebx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+2   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 38   
18 [0x12]: line: 112 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           new_class @0 // app#__srt_global   
22 [0x16]:           checknull   
23 [0x17]:           dup    
24 [0x18]:           newstr @117 // invalid send on filter (   
25 [0x19]:           call @3469 // <std#string.string>   
26 [0x1a]:           ipushl #2   
27 [0x1b]:           call @3501 // <std#string.operator+>   
28 [0x1c]:           newstr @118 // ) when max filter is    
29 [0x1d]:           call @3481 // <std#string.operator+>   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           pushobj   
34 [0x22]:           call @3816 // <std#list<app#filter<var>>.size>   
35 [0x23]:           call @3501 // <std#string.operator+>   
36 [0x24]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
37 [0x25]:           throw    
38 [0x26]:           nop   
39 [0x27]: line: 115 new_class @0 // app#__srt_global   
40 [0x28]:           pushl 0   
41 [0x29]:           dup    
42 [0x2a]:           call @3752 // <std#list<var>.list>   
43 [0x2b]:           popobj2    
44 [0x2c]:           smovr_3 fp+3   
45 [0x2d]: line: 116 movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           pushobj   
49 [0x31]:           ipushl #2   
50 [0x32]:           call @3805 // <std#list<app#filter<var>>.operator[>   
51 [0x33]:           popobj2    
52 [0x34]:           smovr_3 fp+4   
53 [0x35]: line: 118 istorel 0, fp+5   
55 [0x37]:           ipushl #5   
56 [0x38]:           loadl ebx, fp+1   
57 [0x39]:           loadval ecx   
58 [0x3a]:           lt ecx, ebx   
59 [0x3b]:           movr ebx, cmt   
60 [0x3c]:           movr cmt, ebx   
61 [0x3d]:           jne 83   
62 [0x3e]: line: 119 pushl 4   
63 [0x3f]:           pushl 0   
64 [0x40]:           call @3792 // <app#filter<var>.wait_for_data_or_close>   
65 [0x41]: line: 121 pushl 4   
66 [0x42]:           call @3793 // <app#filter<var>.avail_data>   
67 [0x43]:           loadval ebx   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 76   
70 [0x46]: line: 122 pushl 3   
71 [0x47]:           pushl 4   
72 [0x48]:           pushl 0   
73 [0x49]:           call @3794 // <app#filter<var>.read>   
74 [0x4a]:           call @3766 // <std#list<var>.add>   
75 [0x4b]:           jmp @79   
76 [0x4c]: line: 124 movl 3   
77 [0x4d]:           returnobj   
78 [0x4e]:           ret   
79 [0x4f]:           nop   
80 [0x50]:           iaddl 1, fp@5   
82 [0x52]:           jmp @55   
83 [0x53]: line: 128 movl 3   
84 [0x54]:           returnobj   
85 [0x55]:           ret   


function: std.io#channel<var>.read_next[3663] params(1) in file: lib\support\0.2.9/io//channel.sharp:131:8: note:  
		    def read_next(filter: var) : list<t> {
		       ^

0 [0x0]: line: 132 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @3816 // <std#list<app#filter<var>>.size>   
6 [0x6]:           loadval ebx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 38   
18 [0x12]: line: 133 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           new_class @0 // app#__srt_global   
22 [0x16]:           checknull   
23 [0x17]:           dup    
24 [0x18]:           newstr @117 // invalid send on filter (   
25 [0x19]:           call @3469 // <std#string.string>   
26 [0x1a]:           ipushl #1   
27 [0x1b]:           call @3501 // <std#string.operator+>   
28 [0x1c]:           newstr @118 // ) when max filter is    
29 [0x1d]:           call @3481 // <std#string.operator+>   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           pushobj   
34 [0x22]:           call @3816 // <std#list<app#filter<var>>.size>   
35 [0x23]:           call @3501 // <std#string.operator+>   
36 [0x24]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
37 [0x25]:           throw    
38 [0x26]:           nop   
39 [0x27]: line: 136 new_class @0 // app#__srt_global   
40 [0x28]:           pushl 0   
41 [0x29]:           dup    
42 [0x2a]:           call @3752 // <std#list<var>.list>   
43 [0x2b]:           popobj2    
44 [0x2c]:           smovr_3 fp+2   
45 [0x2d]: line: 137 movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           pushobj   
49 [0x31]:           ipushl #1   
50 [0x32]:           call @3805 // <std#list<app#filter<var>>.operator[>   
51 [0x33]:           popobj2    
52 [0x34]:           smovr_3 fp+3   
53 [0x35]: line: 139 pushl 3   
54 [0x36]: line: 140 pushl 0   
55 [0x37]:           call @3792 // <app#filter<var>.wait_for_data_or_close>   
56 [0x38]: line: 142 pushl 3   
57 [0x39]:           call @3793 // <app#filter<var>.avail_data>   
58 [0x3a]:           loadval ebx   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 67   
61 [0x3d]: line: 143 pushl 2   
62 [0x3e]:           pushl 3   
63 [0x3f]:           pushl 0   
64 [0x40]:           call @3794 // <app#filter<var>.read>   
65 [0x41]:           call @3766 // <std#list<var>.add>   
66 [0x42]:           jmp @70   
67 [0x43]: line: 145 movl 2   
68 [0x44]:           returnobj   
69 [0x45]:           ret   
70 [0x46]:           nop   
71 [0x47]:           jmp @53   
72 [0x48]: line: 149 pushnull    
73 [0x49]:           popobj2    
74 [0x4a]:           returnobj   
75 [0x4b]:           ret   


function: std.io#channel<var>.get_elements[3664] params(0) in file: lib\support\0.2.9/io//channel.sharp:152:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 153 pushl 0   
1 [0x1]:           ldc ebx // 0   
2 [0x2]:           rstore ebx   
3 [0x3]:           call @3663 // <std.io#channel<var>.read_next>   
4 [0x4]:           call @3757 // <std#list<var>.get_elements>   
5 [0x5]:           popobj2    
6 [0x6]:           smovr_3 fp+1   
7 [0x7]: line: 154 movl 1   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std.io#channel<var>.avail_data[3665] params(1) in file: lib\support\0.2.9/io//channel.sharp:157:8: note:  
		    def avail_data(filter: var) : var {
		       ^

0 [0x0]: line: 158 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @3816 // <std#list<app#filter<var>>.size>   
6 [0x6]:           loadval ebx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 38   
18 [0x12]: line: 159 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           new_class @0 // app#__srt_global   
22 [0x16]:           checknull   
23 [0x17]:           dup    
24 [0x18]:           newstr @117 // invalid send on filter (   
25 [0x19]:           call @3469 // <std#string.string>   
26 [0x1a]:           ipushl #1   
27 [0x1b]:           call @3501 // <std#string.operator+>   
28 [0x1c]:           newstr @118 // ) when max filter is    
29 [0x1d]:           call @3481 // <std#string.operator+>   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           pushobj   
34 [0x22]:           call @3816 // <std#list<app#filter<var>>.size>   
35 [0x23]:           call @3501 // <std#string.operator+>   
36 [0x24]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
37 [0x25]:           throw    
38 [0x26]:           nop   
39 [0x27]: line: 162 movl 0   
40 [0x28]:           movn #0   
42 [0x2a]:           pushobj   
43 [0x2b]:           ipushl #1   
44 [0x2c]:           call @3805 // <std#list<app#filter<var>>.operator[>   
45 [0x2d]:           popobj2    
46 [0x2e]:           smovr_3 fp+2   
47 [0x2f]: line: 163 pushl 2   
48 [0x30]:           call @3793 // <app#filter<var>.avail_data>   
49 [0x31]:           loadval ebx   
50 [0x32]:           return_val ebx   
51 [0x33]:           ret   


constructor: std.io#channel<var>.channel[3666] params(0) in file: lib\support\0.2.9/io//channel.sharp:3:6: note:  
		class channel<t> : receive_channel<t>, send_channel<t>, loopable<t> {
		     ^

0 [0x0]:         movg @92 // @std.io#channel<t>.channel_state   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         movl 0   
5 [0x5]:         movn #3   
7 [0x7]:         popobj   
8 [0x8]:         ret   


function: std#throwable.get_stack_trace[3667] params(0) in file: lib\support\0.2.9/exceptions.sharp:13:25: note:  
		    stack_trace : string;
		                        ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 17   
8 [0x8]: line: 16 movl 0   
9 [0x9]:          movn #2   
11 [0xb]:          pushobj   
12 [0xc]:          call @2296 // <platform.kernel#vm.get_stack_trace>   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          popobj   
17 [0x11]:          nop   
18 [0x12]: line: 20 movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          returnobj   
22 [0x16]:          ret   


constructor: std#list<std.io#thread>.list[3668] params(0) in file: lib\support\0.2.9/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std.io#thread[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std.io#thread>.list[3669] params(1) in file: lib\support\0.2.9/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<std.io#thread>.list[3670] params(1) in file: lib\support\0.2.9/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3681 // <std#list<std.io#thread>.add_all>   
4 [0x4]:          ret   


function: std#list<std.io#thread>.empty[3671] params(0) in file: lib\support\0.2.9/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std.io#thread>.set_compact[3672] params(1) in file: lib\support\0.2.9/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<std.io#thread>.get_elements[3673] params(0) in file: lib\support\0.2.9/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2092 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<std.io#thread>.operator[[3674] params(1) in file: lib\support\0.2.9/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3695 // <std#list<std.io#thread>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std.io#thread>.at[3675] params(1) in file: lib\support\0.2.9/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3695 // <std#list<std.io#thread>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std.io#thread>.last[3676] params(0) in file: lib\support\0.2.9/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3675 // <std#list<std.io#thread>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<std.io#thread>.put[3677] params(2) in file: lib\support\0.2.9/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3695 // <std#list<std.io#thread>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std#list<std.io#thread>.expand[3678] params(0) in file: lib\support\0.2.9/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2072 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2072 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<std.io#thread>.clear[3679] params(0) in file: lib\support\0.2.9/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#list<std.io#thread>.add_all[3680] params(1) in file: lib\support\0.2.9/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2092 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #32, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<std.io#thread>.add_all[3681] params(1) in file: lib\support\0.2.9/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2092 // <std.io#__srt_global.copy>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #32, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // std.io#thread[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std#list<std.io#thread>.add[3682] params(1) in file: lib\support\0.2.9/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3678 // <std#list<std.io#thread>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std#list<std.io#thread>.indexof[3683] params(1) in file: lib\support\0.2.9/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 36   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          call @2214 // <std.io#thread.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 32   
29 [0x1d]: line: 97 loadl ebx, fp+2   
30 [0x1e]:          return_val ebx   
31 [0x1f]:          ret   
32 [0x20]:          nop   
33 [0x21]:          iaddl 1, fp@2   
35 [0x23]:          jmp @2   
36 [0x24]: line: 101 istorel -1, fp+0   
38 [0x26]:           ret   


function: std#list<std.io#thread>.pop_back[3684] params(0) in file: lib\support\0.2.9/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<std.io#thread>.size[3685] params(0) in file: lib\support\0.2.9/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<std.io#thread>.insert[3686] params(2) in file: lib\support\0.2.9/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3695 // <std#list<std.io#thread>.out_of_bounds_msg>   
24 [0x18]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3682 // <std#list<std.io#thread>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3678 // <std#list<std.io#thread>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<std.io#thread>.find[3687] params(2) in file: lib\support\0.2.9/list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#list<std.io#thread>.remove[3688] params(1) in file: lib\support\0.2.9/list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 37   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           call @2214 // <std.io#thread.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 143 pushl 0   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           call @3692 // <std#list<std.io#thread>.remove_at>   
32 [0x20]: line: 144 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@2   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: std#list<std.io#thread>.remove[3689] params(2) in file: lib\support\0.2.9/list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3692 // <std#list<std.io#thread>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<std.io#thread>.replace[3690] params(2) in file: lib\support\0.2.9/list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<std.io#thread>.linear_sort[3691] params(1) in file: lib\support\0.2.9/list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<std.io#thread>.remove_at[3692] params(1) in file: lib\support\0.2.9/list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3695 // <std#list<std.io#thread>.out_of_bounds_msg>   
24 [0x18]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2082 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3684 // <std#list<std.io#thread>.pop_back>   
77 [0x4d]:           ret   


function: std#list<std.io#thread>.indexof[3693] params(2) in file: lib\support\0.2.9/list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<std.io#thread>.to_string[3694] params(0) in file: lib\support\0.2.9/list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // app#__srt_global   
1 [0x1]:           returnobj   
2 [0x2]:           dup    
3 [0x3]:           call @3572 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @110 // [    
8 [0x8]:           call @3568 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3564 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @111 // ,    
56 [0x38]:           call @3568 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @112 //  ]   
64 [0x40]:           call @3568 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3545 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<std.io#thread>.out_of_bounds_msg[3695] params(1) in file: lib\support\0.2.9/list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @113 // Index:    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3501 // <std#string.operator+>   
7 [0x7]:           newstr @114 // , size:    
8 [0x8]:           call @3481 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3501 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


std#loopable<std.io.task#job>.get_elements[3696] params(0) in file: lib\support\0.2.9/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<std.io.task#job>.loopable[3697] params(0) in file: lib\support\0.2.9/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#synced_list<std.io.task#job>.synced_list[3698] params(0) in file: lib\support\0.2.9/synced_list.sharp:13:16: note:  
		    synced_list() {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std.io.task#job[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#synced_list<std.io.task#job>.synced_list[3699] params(1) in file: lib\support\0.2.9/synced_list.sharp:17:16: note:  
		    synced_list(starting_capacity: var) {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std.io.task#job[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: std#synced_list<std.io.task#job>.set_compact[3700] params(1) in file: lib\support\0.2.9/synced_list.sharp:21:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 23 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #2   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          _ulck   
12 [0xc]:          ret   


function: std#synced_list<std.io.task#job>.get_elements[3701] params(0) in file: lib\support\0.2.9/synced_list.sharp:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 23   
14 [0xe]:          pushnull    
15 [0xf]:          popobj2    
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          _ulck   
19 [0x13]:          popobj2    
20 [0x14]:          returnobj   
21 [0x15]:          ret   
22 [0x16]:          jmp @44   
23 [0x17]: line: 30 movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          istore 0   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @2092 // <std.io#__srt_global.copy>   
37 [0x25]:          popobj2    
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          nop   
45 [0x2d]:          movl 0   
46 [0x2e]:          _ulck   


overload function: std#synced_list<std.io.task#job>.operator[[3702] params(1) in file: lib\support\0.2.9/synced_list.sharp:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 36 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 37 new_class @0 // app#__srt_global   
21 [0x15]:          mov8 adx, adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3751 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
26 [0x1a]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 38 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: std#synced_list<std.io.task#job>.at[3703] params(1) in file: lib\support\0.2.9/synced_list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 44 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 45 new_class @0 // app#__srt_global   
21 [0x15]:          mov8 adx, adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3751 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
26 [0x1a]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 46 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: std#synced_list<std.io.task#job>.last[3704] params(0) in file: lib\support\0.2.9/synced_list.sharp:50:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 51 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3703 // <std#synced_list<std.io.task#job>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#synced_list<std.io.task#job>.put[3705] params(2) in file: lib\support\0.2.9/synced_list.sharp:54:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 57 new_class @0 // app#__srt_global   
21 [0x15]:          mov8 adx, adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3751 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
26 [0x1a]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 59 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          smovr_3 fp+3   
39 [0x27]: line: 60 pushl 2   
40 [0x28]:          movl 0   
41 [0x29]:          movn #1   
43 [0x2b]:          pushobj   
44 [0x2c]:          loadl ebx, fp+1   
45 [0x2d]:          popobj2    
46 [0x2e]:          movr adx, ebx   
47 [0x2f]:          chklen adx   
48 [0x30]:          movnd adx   
49 [0x31]:          popobj   
50 [0x32]: line: 61 pushl 3   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]:          popobj2    
54 [0x36]:          returnobj   
55 [0x37]:          ret   
56 [0x38]:          movl 0   
57 [0x39]:          _ulck   


function: std#synced_list<std.io.task#job>.expand[3706] params(0) in file: lib\support\0.2.9/synced_list.sharp:65:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 67 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2072 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 69 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2072 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#synced_list<std.io.task#job>.clear[3707] params(0) in file: lib\support\0.2.9/synced_list.sharp:72:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io.task#job[]   
6 [0x6]:          movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          popobj   
10 [0xa]: line: 75 movi #0, ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]:          movl 0   
19 [0x13]:          _ulck   
20 [0x14]:          ret   


constructor: std#list<std.io.task#job>.list[3708] params(0) in file: lib\support\0.2.9/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std.io.task#job[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std.io.task#job>.list[3709] params(1) in file: lib\support\0.2.9/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std.io.task#job[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<std.io.task#job>.list[3710] params(1) in file: lib\support\0.2.9/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3721 // <std#list<std.io.task#job>.add_all>   
4 [0x4]:          ret   


function: std#list<std.io.task#job>.empty[3711] params(0) in file: lib\support\0.2.9/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std.io.task#job>.set_compact[3712] params(1) in file: lib\support\0.2.9/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<std.io.task#job>.get_elements[3713] params(0) in file: lib\support\0.2.9/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2092 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<std.io.task#job>.operator[[3714] params(1) in file: lib\support\0.2.9/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3735 // <std#list<std.io.task#job>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std.io.task#job>.at[3715] params(1) in file: lib\support\0.2.9/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3735 // <std#list<std.io.task#job>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std.io.task#job>.last[3716] params(0) in file: lib\support\0.2.9/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3715 // <std#list<std.io.task#job>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<std.io.task#job>.put[3717] params(2) in file: lib\support\0.2.9/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3735 // <std#list<std.io.task#job>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std#list<std.io.task#job>.expand[3718] params(0) in file: lib\support\0.2.9/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2072 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2072 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<std.io.task#job>.clear[3719] params(0) in file: lib\support\0.2.9/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std.io.task#job[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#list<std.io.task#job>.add_all[3720] params(1) in file: lib\support\0.2.9/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2092 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #26, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<std.io.task#job>.add_all[3721] params(1) in file: lib\support\0.2.9/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2092 // <std.io#__srt_global.copy>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #26, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // std.io.task#job[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std#list<std.io.task#job>.add[3722] params(1) in file: lib\support\0.2.9/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3718 // <std#list<std.io.task#job>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std#list<std.io.task#job>.indexof[3723] params(1) in file: lib\support\0.2.9/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: std#list<std.io.task#job>.pop_back[3724] params(0) in file: lib\support\0.2.9/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<std.io.task#job>.size[3725] params(0) in file: lib\support\0.2.9/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<std.io.task#job>.insert[3726] params(2) in file: lib\support\0.2.9/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3735 // <std#list<std.io.task#job>.out_of_bounds_msg>   
24 [0x18]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3722 // <std#list<std.io.task#job>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3718 // <std#list<std.io.task#job>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<std.io.task#job>.find[3727] params(2) in file: lib\support\0.2.9/list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#list<std.io.task#job>.remove[3728] params(1) in file: lib\support\0.2.9/list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @3732 // <std#list<std.io.task#job>.remove_at>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: std#list<std.io.task#job>.remove[3729] params(2) in file: lib\support\0.2.9/list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3732 // <std#list<std.io.task#job>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<std.io.task#job>.replace[3730] params(2) in file: lib\support\0.2.9/list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<std.io.task#job>.linear_sort[3731] params(1) in file: lib\support\0.2.9/list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<std.io.task#job>.remove_at[3732] params(1) in file: lib\support\0.2.9/list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3735 // <std#list<std.io.task#job>.out_of_bounds_msg>   
24 [0x18]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2082 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3724 // <std#list<std.io.task#job>.pop_back>   
77 [0x4d]:           ret   


function: std#list<std.io.task#job>.indexof[3733] params(2) in file: lib\support\0.2.9/list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<std.io.task#job>.to_string[3734] params(0) in file: lib\support\0.2.9/list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // app#__srt_global   
1 [0x1]:           returnobj   
2 [0x2]:           dup    
3 [0x3]:           call @3572 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @110 // [    
8 [0x8]:           call @3568 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3564 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @111 // ,    
56 [0x38]:           call @3568 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @112 //  ]   
64 [0x40]:           call @3568 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3545 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<std.io.task#job>.out_of_bounds_msg[3735] params(1) in file: lib\support\0.2.9/list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @113 // Index:    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3501 // <std#string.operator+>   
7 [0x7]:           newstr @114 // , size:    
8 [0x8]:           call @3481 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3501 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std#synced_list<std.io.task#job>.add_all[3736] params(1) in file: lib\support\0.2.9/synced_list.sharp:79:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 81 movl 1   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2092 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #26, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 82 movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movl 0   
38 [0x26]:          _ulck   
39 [0x27]:          ret   


function: std#synced_list<std.io.task#job>.add[3737] params(1) in file: lib\support\0.2.9/synced_list.sharp:86:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 88 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          sizeof ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gte ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 20   
18 [0x12]: line: 89 pushl 0   
19 [0x13]:          call @3706 // <std#synced_list<std.io.task#job>.expand>   
20 [0x14]:          nop   
21 [0x15]: line: 90 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #1   
25 [0x19]:          pushobj   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          iaload ebx, adx   
32 [0x20]:          movr egx, ebx   
33 [0x21]:          inc ebx   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movr ebx, egx   
38 [0x26]:          popobj2    
39 [0x27]:          movr adx, ebx   
40 [0x28]:          chklen adx   
41 [0x29]:          movnd adx   
42 [0x2a]:          popobj   
43 [0x2b]:          movl 0   
44 [0x2c]:          _ulck   
45 [0x2d]:          ret   


function: std#synced_list<std.io.task#job>.indexof[3738] params(1) in file: lib\support\0.2.9/synced_list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 96 istorel 0, fp+2   
4 [0x4]:          ipushl #2   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          lt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 39   
16 [0x10]: line: 97 pushl 1   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          loadl ebx, fp+2   
22 [0x16]:          popobj2    
23 [0x17]:          movr adx, ebx   
24 [0x18]:          chklen adx   
25 [0x19]:          movnd adx   
26 [0x1a]:          pushobj   
27 [0x1b]:          itest ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 35   
30 [0x1e]: line: 98 loadl ebx, fp+2   
31 [0x1f]:          return_val ebx   
32 [0x20]:          movl 0   
33 [0x21]:          _ulck   
34 [0x22]:          ret   
35 [0x23]:          nop   
36 [0x24]:          iaddl 1, fp@2   
38 [0x26]:          jmp @4   
39 [0x27]: line: 102 istorel -1, fp+0   
41 [0x29]:           movl 0   
42 [0x2a]:           _ulck   
43 [0x2b]:           ret   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   


function: std#synced_list<std.io.task#job>.pop_back[3739] params(0) in file: lib\support\0.2.9/synced_list.sharp:106:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 108 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 109 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#synced_list<std.io.task#job>.size[3740] params(0) in file: lib\support\0.2.9/synced_list.sharp:113:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 115 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           return_val ebx   
9 [0x9]:           movl 0   
10 [0xa]:           _ulck   
11 [0xb]:           ret   
12 [0xc]:           movl 0   
13 [0xd]:           _ulck   


function: std#synced_list<std.io.task#job>.empty[3741] params(0) in file: lib\support\0.2.9/synced_list.sharp:119:8: note:  
		    def empty() : var {
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 121 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #0, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           test ecx, ebx   
13 [0xd]:           return_val cmt   
14 [0xe]:           movl 0   
15 [0xf]:           _ulck   
16 [0x10]:           ret   
17 [0x11]:           movl 0   
18 [0x12]:           _ulck   


function: std#synced_list<std.io.task#job>.insert[3742] params(2) in file: lib\support\0.2.9/synced_list.sharp:125:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 127 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 128 new_class @0 // app#__srt_global   
21 [0x15]:           mov8 adx, adx   
22 [0x16]:           dup    
23 [0x17]:           pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3751 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
26 [0x1a]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 130 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #0, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           test ecx, ebx   
40 [0x28]:           jne 45   
41 [0x29]: line: 131 pushl 0   
42 [0x2a]:           pushl 2   
43 [0x2b]:           call @3737 // <std#synced_list<std.io.task#job>.add>   
44 [0x2c]:           jmp @134   
45 [0x2d]: line: 133 movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 0   
53 [0x35]:           movn #1   
55 [0x37]:           sizeof ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           gte ecx, ebx   
58 [0x3a]:           movr ebx, cmt   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 63   
61 [0x3d]: line: 134 pushl 0   
62 [0x3e]:           call @3706 // <std#synced_list<std.io.task#job>.expand>   
63 [0x3f]:           nop   
64 [0x40]: line: 135 movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           movi #0, adx   
69 [0x45]:           iaload ebx, adx   
70 [0x46]:           movr egx, ebx   
71 [0x47]:           inc ebx   
72 [0x48]:           movi #0, adx   
74 [0x4a]:           rmov adx, ebx   
75 [0x4b]: line: 136 movl 0   
76 [0x4c]:           movn #0   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #1, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           smovr_2 ebx, fp+3   
87 [0x57]:           ipushl #3   
88 [0x58]:           loadl ebx, fp+1   
89 [0x59]:           loadval ecx   
90 [0x5a]:           gt ecx, ebx   
91 [0x5b]:           movr ebx, cmt   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 123   
94 [0x5e]: line: 137 movl 0   
95 [0x5f]:           movn #1   
97 [0x61]:           pushobj   
98 [0x62]:           ipushl #3   
99 [0x63]:           movi #1, ebx   
101 [0x65]:           loadval ecx   
102 [0x66]:           sub ecx, ebx -> ebx   
103 [0x67]:           popobj2    
104 [0x68]:           movr adx, ebx   
105 [0x69]:           chklen adx   
106 [0x6a]:           movnd adx   
107 [0x6b]:           pushobj   
108 [0x6c]:           movl 0   
109 [0x6d]:           movn #1   
111 [0x6f]:           pushobj   
112 [0x70]:           loadl ebx, fp+3   
113 [0x71]:           popobj2    
114 [0x72]:           movr adx, ebx   
115 [0x73]:           chklen adx   
116 [0x74]:           movnd adx   
117 [0x75]:           popobj   
118 [0x76]:           loadl ebx, fp+3   
119 [0x77]:           movr egx, ebx   
120 [0x78]:           dec ebx   
121 [0x79]:           smovr_2 ebx, fp+3   
122 [0x7a]:           jmp @87   
123 [0x7b]: line: 138 pushl 2   
124 [0x7c]:           movl 0   
125 [0x7d]:           movn #1   
127 [0x7f]:           pushobj   
128 [0x80]:           loadl ebx, fp+1   
129 [0x81]:           popobj2    
130 [0x82]:           movr adx, ebx   
131 [0x83]:           chklen adx   
132 [0x84]:           movnd adx   
133 [0x85]:           popobj   
134 [0x86]:           nop   
135 [0x87]:           movl 0   
136 [0x88]:           _ulck   
137 [0x89]:           ret   


function: std#synced_list<std.io.task#job>.remove[3743] params(1) in file: lib\support\0.2.9/synced_list.sharp:144:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 146 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 40   
16 [0x10]: line: 147 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+2   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           itest ebx   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 148 pushl 0   
31 [0x1f]:           ipushl #2   
32 [0x20]:           call @3745 // <std#synced_list<std.io.task#job>.remove_at>   
33 [0x21]: line: 149 movl 0   
34 [0x22]:           _ulck   
35 [0x23]:           ret   
36 [0x24]:           nop   
37 [0x25]:           iaddl 1, fp@2   
39 [0x27]:           jmp @4   
40 [0x28]:           movl 0   
41 [0x29]:           _ulck   
42 [0x2a]:           ret   


function: std#synced_list<std.io.task#job>.remove[3744] params(2) in file: lib\support\0.2.9/synced_list.sharp:155:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 157 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 43   
16 [0x10]: line: 158 ipushl #2   
17 [0x11]:           pushl 1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #1   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+3   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           movnd adx   
27 [0x1b]:           pushobj   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 39   
33 [0x21]: line: 159 pushl 0   
34 [0x22]:           ipushl #3   
35 [0x23]:           call @3745 // <std#synced_list<std.io.task#job>.remove_at>   
36 [0x24]: line: 160 movl 0   
37 [0x25]:           _ulck   
38 [0x26]:           ret   
39 [0x27]:           nop   
40 [0x28]:           iaddl 1, fp@3   
42 [0x2a]:           jmp @4   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           ret   


function: std#synced_list<std.io.task#job>.remove_at[3745] params(1) in file: lib\support\0.2.9/synced_list.sharp:166:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 168 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 169 new_class @0 // app#__srt_global   
21 [0x15]:           mov8 adx, adx   
22 [0x16]:           dup    
23 [0x17]:           pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3751 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
26 [0x1a]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 171 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           loadl ebx, fp+1   
37 [0x25]:           loadval ecx   
38 [0x26]:           sub ecx, ebx -> ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           sub ecx, ebx -> ebx   
44 [0x2c]:           smovr_2 ebx, fp+2   
45 [0x2d]: line: 172 ipushl #2   
46 [0x2e]:           movi #0, ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           gt ecx, ebx   
50 [0x32]:           movr ebx, cmt   
51 [0x33]:           movr cmt, ebx   
52 [0x34]:           jne 76   
53 [0x35]: line: 173 movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           pushobj   
57 [0x39]:           movl 0   
58 [0x3a]:           movn #1   
60 [0x3c]:           pushobj   
61 [0x3d]:           ipushl #1   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           movi #0, adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           call @2082 // <std.io#__srt_global.memcopy>   
76 [0x4c]:           nop   
77 [0x4d]: line: 175 pushl 0   
78 [0x4e]:           call @3739 // <std#synced_list<std.io.task#job>.pop_back>   
79 [0x4f]:           movl 0   
80 [0x50]:           _ulck   
81 [0x51]:           ret   


function: std#synced_list<std.io.task#job>.indexof[3746] params(2) in file: lib\support\0.2.9/synced_list.sharp:179:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 180 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 181 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 42   
16 [0x10]: line: 182 ipushl #2   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+3   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           pushl 1   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 38   
33 [0x21]: line: 183 loadl ebx, fp+3   
34 [0x22]:           return_val ebx   
35 [0x23]:           movl 0   
36 [0x24]:           _ulck   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @4   
42 [0x2a]: line: 187 istorel -1, fp+0   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   
46 [0x2e]:           ret   
47 [0x2f]:           movl 0   
48 [0x30]:           _ulck   


function: std#synced_list<std.io.task#job>.linear_sort[3747] params(1) in file: lib\support\0.2.9/synced_list.sharp:191:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 193 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 134   
16 [0x10]: line: 195 istorel 0, fp+3   
18 [0x12]:           ipushl #3   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           movi #0, adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           lt ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 131   
30 [0x1e]: line: 196 ipushl #3   
31 [0x1f]:           movi #1, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           add ecx, ebx -> ebx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movl 0   
37 [0x25]:           movn #0   
39 [0x27]:           movi #0, adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           lt ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 127   
47 [0x2f]: line: 198 ipushl #1   
48 [0x30]:           movl 0   
49 [0x31]:           movn #1   
51 [0x33]:           pushobj   
52 [0x34]:           loadl ebx, fp+3   
53 [0x35]:           popobj2    
54 [0x36]:           movr adx, ebx   
55 [0x37]:           chklen adx   
56 [0x38]:           movnd adx   
57 [0x39]:           pushobj   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #3   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           popobj2    
68 [0x44]:           movr adx, ebx   
69 [0x45]:           chklen adx   
70 [0x46]:           movnd adx   
71 [0x47]:           pushobj   
72 [0x48]:           smov ebx, sp+[-2]   
73 [0x49]:           calld ebx   
74 [0x4a]:           loadval ebx   
75 [0x4b]:           movr cmt, ebx   
76 [0x4c]:           jne 126   
77 [0x4d]: line: 199 movl 0   
78 [0x4e]:           movn #1   
80 [0x50]:           pushobj   
81 [0x51]:           loadl ebx, fp+3   
82 [0x52]:           popobj2    
83 [0x53]:           movr adx, ebx   
84 [0x54]:           chklen adx   
85 [0x55]:           movnd adx   
86 [0x56]:           smovr_3 fp+4   
87 [0x57]: line: 200 movl 0   
88 [0x58]:           movn #1   
90 [0x5a]:           pushobj   
91 [0x5b]:           ipushl #3   
92 [0x5c]:           movi #1, ebx   
94 [0x5e]:           loadval ecx   
95 [0x5f]:           add ecx, ebx -> ebx   
96 [0x60]:           popobj2    
97 [0x61]:           movr adx, ebx   
98 [0x62]:           chklen adx   
99 [0x63]:           movnd adx   
100 [0x64]:           pushobj   
101 [0x65]:           movl 0   
102 [0x66]:           movn #1   
104 [0x68]:           pushobj   
105 [0x69]:           loadl ebx, fp+3   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           movnd adx   
110 [0x6e]:           popobj   
111 [0x6f]: line: 201 pushl 4   
112 [0x70]:           movl 0   
113 [0x71]:           movn #1   
115 [0x73]:           pushobj   
116 [0x74]:           ipushl #3   
117 [0x75]:           movi #1, ebx   
119 [0x77]:           loadval ecx   
120 [0x78]:           add ecx, ebx -> ebx   
121 [0x79]:           popobj2    
122 [0x7a]:           movr adx, ebx   
123 [0x7b]:           chklen adx   
124 [0x7c]:           movnd adx   
125 [0x7d]:           popobj   
126 [0x7e]:           nop   
127 [0x7f]:           nop   
128 [0x80]:           iaddl 1, fp@3   
130 [0x82]:           jmp @18   
131 [0x83]:           iaddl 1, fp@2   
133 [0x85]:           jmp @4   
134 [0x86]:           movl 0   
135 [0x87]:           _ulck   
136 [0x88]:           ret   


function: std#synced_list<std.io.task#job>.find[3748] params(2) in file: lib\support\0.2.9/synced_list.sharp:209:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 211 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 52   
16 [0x10]: line: 212 ipushl #2   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+3   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           pushl 1   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 48   
33 [0x21]: line: 213 movl 0   
34 [0x22]:           movn #1   
36 [0x24]:           pushobj   
37 [0x25]:           loadl ebx, fp+3   
38 [0x26]:           popobj2    
39 [0x27]:           movr adx, ebx   
40 [0x28]:           chklen adx   
41 [0x29]:           movnd adx   
42 [0x2a]:           pushobj   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           popobj2    
46 [0x2e]:           returnobj   
47 [0x2f]:           ret   
48 [0x30]:           nop   
49 [0x31]:           iaddl 1, fp@3   
51 [0x33]:           jmp @4   
52 [0x34]: line: 217 movl 4   
53 [0x35]:           del   
54 [0x36]: line: 218 pushl 4   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   
57 [0x39]:           popobj2    
58 [0x3a]:           returnobj   
59 [0x3b]:           ret   
60 [0x3c]:           movl 0   
61 [0x3d]:           _ulck   


function: std#synced_list<std.io.task#job>.replace[3749] params(2) in file: lib\support\0.2.9/synced_list.sharp:222:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 223 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 224 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 53   
16 [0x10]: line: 225 ipushl #2   
17 [0x11]:           pushl 1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #1   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+3   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           movnd adx   
27 [0x1b]:           pushobj   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 49   
33 [0x21]: line: 226 pushl 1   
34 [0x22]:           movl 0   
35 [0x23]:           movn #1   
37 [0x25]:           pushobj   
38 [0x26]:           loadl ebx, fp+3   
39 [0x27]:           popobj2    
40 [0x28]:           movr adx, ebx   
41 [0x29]:           chklen adx   
42 [0x2a]:           movnd adx   
43 [0x2b]:           popobj   
44 [0x2c]: line: 227 istorel 1, fp+0   
46 [0x2e]:           movl 0   
47 [0x2f]:           _ulck   
48 [0x30]:           ret   
49 [0x31]:           nop   
50 [0x32]:           iaddl 1, fp@3   
52 [0x34]:           jmp @4   
53 [0x35]: line: 231 istorel 0, fp+0   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   
57 [0x39]:           ret   
58 [0x3a]:           movl 0   
59 [0x3b]:           _ulck   


function: std#synced_list<std.io.task#job>.to_string[3750] params(0) in file: lib\support\0.2.9/synced_list.sharp:235:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 236 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 237 new_class @0 // app#__srt_global   
3 [0x3]:           returnobj   
4 [0x4]:           dup    
5 [0x5]:           call @3572 // <std#string_builder.string_builder>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 239 pushl 1   
9 [0x9]:           newstr @110 // [    
10 [0xa]:           call @3568 // <std#string_builder.operator+=>   
11 [0xb]:           pop   
12 [0xc]: line: 240 istorel 0, fp+2   
14 [0xe]:           ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           loadval ecx   
22 [0x16]:           lt ecx, ebx   
23 [0x17]:           movr ebx, cmt   
24 [0x18]:           movr cmt, ebx   
25 [0x19]:           jne 64   
26 [0x1a]: line: 241 pushl 1   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           loadl ebx, fp+2   
32 [0x20]:           popobj2    
33 [0x21]:           movr adx, ebx   
34 [0x22]:           chklen adx   
35 [0x23]:           movnd adx   
36 [0x24]:           pushobj   
37 [0x25]:           call @3564 // <std#string_builder.operator+=>   
38 [0x26]:           pop   
39 [0x27]: line: 243 ipushl #2   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           add ecx, ebx -> ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           loadval ecx   
52 [0x34]:           lt ecx, ebx   
53 [0x35]:           movr ebx, cmt   
54 [0x36]:           movr cmt, ebx   
55 [0x37]:           jne 60   
56 [0x38]: line: 244 pushl 1   
57 [0x39]:           newstr @111 // ,    
58 [0x3a]:           call @3568 // <std#string_builder.operator+=>   
59 [0x3b]:           pop   
60 [0x3c]:           nop   
61 [0x3d]:           iaddl 1, fp@2   
63 [0x3f]:           jmp @14   
64 [0x40]: line: 248 pushl 1   
65 [0x41]:           newstr @112 //  ]   
66 [0x42]:           call @3568 // <std#string_builder.operator+=>   
67 [0x43]:           pop   
68 [0x44]: line: 249 pushl 1   
69 [0x45]:           call @3545 // <std#string_builder.to_string>   
70 [0x46]:           popobj2    
71 [0x47]:           pushobj   
72 [0x48]:           movl 0   
73 [0x49]:           _ulck   
74 [0x4a]:           popobj2    
75 [0x4b]:           returnobj   
76 [0x4c]:           ret   
77 [0x4d]:           movl 0   
78 [0x4e]:           _ulck   


function: std#synced_list<std.io.task#job>.out_of_bounds_msg[3751] params(1) in file: lib\support\0.2.9/synced_list.sharp:253:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 254 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @113 // Index:    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3501 // <std#string.operator+>   
7 [0x7]:           newstr @114 // , size:    
8 [0x8]:           call @3481 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3501 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std#list<var>.list[3752] params(0) in file: lib\support\0.2.9/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          newarry ebx: 8   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<var>.list[3753] params(1) in file: lib\support\0.2.9/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          newarry ebx: 8   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]:          ret   


constructor: std#list<var>.list[3754] params(1) in file: lib\support\0.2.9/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3765 // <std#list<var>.add_all>   
4 [0x4]:          ret   


function: std#list<var>.empty[3755] params(0) in file: lib\support\0.2.9/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<var>.set_compact[3756] params(1) in file: lib\support\0.2.9/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<var>.get_elements[3757] params(0) in file: lib\support\0.2.9/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2093 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<var>.operator[[3758] params(1) in file: lib\support\0.2.9/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3779 // <std#list<var>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          return_val ebx   
37 [0x25]:          ret   


function: std#list<var>.at[3759] params(1) in file: lib\support\0.2.9/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3779 // <std#list<var>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          return_val ebx   
37 [0x25]:          ret   


function: std#list<var>.last[3760] params(0) in file: lib\support\0.2.9/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3759 // <std#list<var>.at>   
14 [0xe]:          loadval ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


function: std#list<var>.put[3761] params(2) in file: lib\support\0.2.9/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3779 // <std#list<var>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          smovr_2 ebx, fp+3   
37 [0x25]: line: 57 ipushl #2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          loadval ebx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]: line: 58 loadl ebx, fp+3   
49 [0x31]:          return_val ebx   
50 [0x32]:          ret   


function: std#list<var>.expand[3762] params(0) in file: lib\support\0.2.9/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2073 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2073 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<var>.clear[3763] params(0) in file: lib\support\0.2.9/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          newarry ebx: 8   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 70 movi #0, ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]:          ret   


function: std#list<var>.add_all[3764] params(1) in file: lib\support\0.2.9/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2093 // <std.io#__srt_global.copy>   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          popobj   
18 [0x12]: line: 75 movl 1   
19 [0x13]:          movn #0   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          ret   


function: std#list<var>.add_all[3765] params(1) in file: lib\support\0.2.9/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 25   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2093 // <std.io#__srt_global.copy>   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          popobj   
16 [0x10]: line: 81 movl 1   
17 [0x11]:          sizeof ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          jmp @40   
25 [0x19]: line: 83 movi #0, ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]: line: 84 movi #10, ebx   
35 [0x23]:          newarry ebx: 8   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          popobj   
40 [0x28]:          nop   
41 [0x29]:          ret   


function: std#list<var>.add[3766] params(1) in file: lib\support\0.2.9/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3762 // <std#list<var>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 ipushl #1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          loadval ebx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]:          ret   


function: std#list<var>.indexof[3767] params(1) in file: lib\support\0.2.9/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 34   
14 [0xe]: line: 96 ipushl #1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          loadval ecx   
25 [0x19]:          test ecx, ebx   
26 [0x1a]:          jne 30   
27 [0x1b]: line: 97 loadl ebx, fp+2   
28 [0x1c]:          return_val ebx   
29 [0x1d]:          ret   
30 [0x1e]:          nop   
31 [0x1f]:          iaddl 1, fp@2   
33 [0x21]:          jmp @2   
34 [0x22]: line: 101 istorel -1, fp+0   
36 [0x24]:           ret   


function: std#list<var>.pop_back[3768] params(0) in file: lib\support\0.2.9/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 istorel 0, fp+1   
16 [0x10]: line: 107 ipushl #1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           loadval ebx   
37 [0x25]:           rmov adx, ebx   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<var>.size[3769] params(0) in file: lib\support\0.2.9/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<var>.insert[3770] params(2) in file: lib\support\0.2.9/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3779 // <std#list<var>.out_of_bounds_msg>   
24 [0x18]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           ipushl #2   
41 [0x29]:           call @3766 // <std#list<var>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3762 // <std#list<var>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           iaload ebx, adx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           loadval ebx   
115 [0x73]:           rmov adx, ebx   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 ipushl #2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           loadval ebx   
131 [0x83]:           rmov adx, ebx   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<var>.find[3771] params(2) in file: lib\support\0.2.9/list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           rstore ebx   
25 [0x19]:           ipushl #1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           return_val ebx   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 istorel 0, fp+4   
48 [0x30]: line: 137 loadl ebx, fp+4   
49 [0x31]:           return_val ebx   
50 [0x32]:           ret   


function: std#list<var>.remove[3772] params(1) in file: lib\support\0.2.9/list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 35   
14 [0xe]: line: 142 ipushl #1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           loadval ecx   
25 [0x19]:           test ecx, ebx   
26 [0x1a]:           jne 31   
27 [0x1b]: line: 143 pushl 0   
28 [0x1c]:           ipushl #2   
29 [0x1d]:           call @3776 // <std#list<var>.remove_at>   
30 [0x1e]: line: 144 ret   
31 [0x1f]:           nop   
32 [0x20]:           iaddl 1, fp@2   
34 [0x22]:           jmp @2   
35 [0x23]:           ret   


function: std#list<var>.remove[3773] params(2) in file: lib\support\0.2.9/list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           ipushl #1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3776 // <std#list<var>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<var>.replace[3774] params(2) in file: lib\support\0.2.9/list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           ipushl #1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 ipushl #1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           loadval ebx   
41 [0x29]:           rmov adx, ebx   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<var>.linear_sort[3775] params(1) in file: lib\support\0.2.9/list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           rstore ebx   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           iaload ebx, adx   
69 [0x45]:           rstore ebx   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           smovr_2 ebx, fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           iaload ebx, adx   
98 [0x62]:           rstore ebx   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           loadval ebx   
108 [0x6c]:           rmov adx, ebx   
109 [0x6d]: line: 176 ipushl #4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           loadval ebx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<var>.remove_at[3776] params(1) in file: lib\support\0.2.9/list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3779 // <std#list<var>.out_of_bounds_msg>   
24 [0x18]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2083 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3768 // <std#list<var>.pop_back>   
77 [0x4d]:           ret   


function: std#list<var>.indexof[3777] params(2) in file: lib\support\0.2.9/list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           rstore ebx   
25 [0x19]:           ipushl #1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<var>.to_string[3778] params(0) in file: lib\support\0.2.9/list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // app#__srt_global   
1 [0x1]:           returnobj   
2 [0x2]:           dup    
3 [0x3]:           call @3572 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @110 // [    
8 [0x8]:           call @3568 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           call @3563 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @111 // ,    
56 [0x38]:           call @3568 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @112 //  ]   
64 [0x40]:           call @3568 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3545 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<var>.out_of_bounds_msg[3779] params(1) in file: lib\support\0.2.9/list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @113 // Index:    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3501 // <std#string.operator+>   
7 [0x7]:           newstr @114 // , size:    
8 [0x8]:           call @3481 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3501 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std#_nil_.set_instance[3780] params(1) in file: lib\support\0.2.9/nil.sharp:11:44: note:  
		    static instance : _nil_ = new _nil_ { };
		                                           ^

0 [0x0]:         ret   


function: std.reflect#reflect.set_reflect_obj[3781] params(1) in file: lib\support\0.2.9/reflect//reflection.sharp:5:35: note:  
		        get { return reflect_obj; }
		                                  ^

0 [0x0]:         ret   


function: std.reflect#reflect.get_reflect_obj[3782] params(0) in file: lib\support\0.2.9/reflect//reflection.sharp:4:25: note:  
		    reflect_obj : object;
		                        ^

0 [0x0]: line: 5 movl 0   
1 [0x1]:         movn #0   
3 [0x3]:         returnobj   
4 [0x4]:         ret   


constructor: std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry[3783] params(2) in file: lib\support\0.2.9/hashtable.sharp:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 135 pushl 1   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           popobj   
6 [0x6]: line: 136 pushl 2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #1   
10 [0xa]:           popobj   
11 [0xb]:           ret   


function: std.io.task#entry<std.io#thread,std.io.task#job_controller>.to_string[3784] params(0) in file: lib\support\0.2.9/hashtable.sharp:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 140 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @119 // key    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3483 // <std#string.operator+>   
10 [0xa]:           newstr @120 //  value    
11 [0xb]:           call @3481 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @3483 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry[3785] params(0) in file: lib\support\0.2.9/hashtable.sharp:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io#entry<std#int,std.io#thread>.entry[3786] params(2) in file: lib\support\0.2.9/hashtable.sharp:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 135 pushl 1   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           popobj   
6 [0x6]: line: 136 pushl 2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #1   
10 [0xa]:           popobj   
11 [0xb]:           ret   


function: std.io#entry<std#int,std.io#thread>.to_string[3787] params(0) in file: lib\support\0.2.9/hashtable.sharp:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 140 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @119 // key    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @3483 // <std#string.operator+>   
10 [0xa]:           newstr @120 //  value    
11 [0xb]:           call @3481 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @3483 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std.io#entry<std#int,std.io#thread>.entry[3788] params(0) in file: lib\support\0.2.9/hashtable.sharp:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: app#filter<var>.filo[3789] params(0) in file: lib\support\0.2.9/io//channel.sharp:176:11: note:  
		       def filo() : t {
		          ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           smovr_2 ebx, fp+1   
9 [0x9]: line: 178 movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movn #1   
14 [0xe]:           pushobj   
15 [0xf]:           movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           popobj   
19 [0x13]: line: 179 movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           pushnull    
24 [0x18]:           itest ebx   
25 [0x19]:           movr cmt, ebx   
26 [0x1a]:           jne 31   
27 [0x1b]: line: 180 movl 0   
28 [0x1c]:           movn #1   
30 [0x1e]:           del   
31 [0x1f]:           nop   
32 [0x20]: line: 181 loadl ebx, fp+1   
33 [0x21]:           return_val ebx   
34 [0x22]:           ret   


function: app#filter<var>.wait_for_data[3790] params(0) in file: lib\support\0.2.9/io//channel.sharp:184:19: note:  
		       private def wait_for_data() {
		                  ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           jne 33   
12 [0xc]: line: 186 pushl 0   
13 [0xd]:           call @2275 // <std#_object_._unlock>   
14 [0xe]: line: 187 movl 0   
15 [0xf]:           movn #2   
17 [0x11]:           movi #0, adx   
19 [0x13]:           iaload ebx, adx   
20 [0x14]:           rstore ebx   
21 [0x15]:           movi #0, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           test ecx, ebx   
25 [0x19]:           jne 31   
26 [0x1a]: line: 188 istore 2   
28 [0x1c]:           call @2194 // <std.io#thread.sleep>   
29 [0x1d]: line: 189 call @2198 // <std.io#thread.yield>   
30 [0x1e]:           jmp @14   
31 [0x1f]: line: 192 pushl 0   
32 [0x20]:           call @2274 // <std#_object_._lock>   
33 [0x21]:           nop   
34 [0x22]:           ret   


function: app#filter<var>.wait_for_consume[3791] params(0) in file: lib\support\0.2.9/io//channel.sharp:196:19: note:  
		       private def wait_for_consume() {
		                  ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 17   
12 [0xc]: line: 198 istore 2   
14 [0xe]:           call @2194 // <std.io#thread.sleep>   
15 [0xf]: line: 199 call @2198 // <std.io#thread.yield>   
16 [0x10]:           jmp @0   
17 [0x11]:           ret   


function: app#filter<var>.wait_for_data_or_close[3792] params(1) in file: lib\support\0.2.9/io//channel.sharp:203:11: note:  
		       def wait_for_data_or_close(chan: channel<t>) {
		          ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           test ecx, ebx   
11 [0xb]:           jne 43   
12 [0xc]: line: 205 movl 0   
13 [0xd]:           movn #2   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #0, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           test ecx, ebx   
23 [0x17]:           jne 43   
24 [0x18]: line: 206 movl 1   
25 [0x19]:           movn #3   
27 [0x1b]:           pushobj   
28 [0x1c]:           movg @92 // @std.io#channel<t>.channel_state   
29 [0x1d]:           movn #1   
31 [0x1f]:           pushobj   
32 [0x20]:           call @1944 // <std#_enum_.operator==>   
33 [0x21]:           loadval ebx   
34 [0x22]:           movr cmt, ebx   
35 [0x23]:           jne 37   
36 [0x24]: line: 207 jmp @43   
37 [0x25]:           nop   
38 [0x26]: line: 209 istore 2   
40 [0x28]:           call @2194 // <std.io#thread.sleep>   
41 [0x29]: line: 210 call @2198 // <std.io#thread.yield>   
42 [0x2a]:           jmp @12   
43 [0x2b]:           nop   
44 [0x2c]:           ret   


function: app#filter<var>.avail_data[3793] params(0) in file: lib\support\0.2.9/io//channel.sharp:215:11: note:  
		       def avail_data() : var {
		          ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: app#filter<var>.read[3794] params(1) in file: lib\support\0.2.9/io//channel.sharp:219:11: note:  
		       def read(chan: channel<t>) : t {
		          ^

0 [0x0]: line: 220 pushl 0   
1 [0x1]:           call @2274 // <std#_object_._lock>   
2 [0x2]: line: 221 movl 1   
3 [0x3]:           movn #1   
5 [0x5]:           pushobj   
6 [0x6]:           movg @21 // @std.io#buffer_type   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           call @1944 // <std#_enum_.operator==>   
11 [0xb]:           loadval ebx   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 223 pushl 0   
15 [0xf]:           call @3790 // <app#filter<var>.wait_for_data>   
16 [0x10]: line: 225 movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           movn #0   
21 [0x15]:           movi #0, adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           smovr_2 ebx, fp+2   
25 [0x19]: line: 226 movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           del   
29 [0x1d]: line: 227 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           del   
33 [0x21]: line: 228 movi #0, ebx   
35 [0x23]:           movl 0   
36 [0x24]:           movn #2   
38 [0x26]:           movi #0, adx   
40 [0x28]:           rmov adx, ebx   
41 [0x29]: line: 230 pushl 0   
42 [0x2a]:           call @2275 // <std#_object_._unlock>   
43 [0x2b]: line: 231 loadl ebx, fp+2   
44 [0x2c]:           return_val ebx   
45 [0x2d]:           ret   
46 [0x2e]:           jmp @206   
47 [0x2f]:           movl 1   
48 [0x30]:           movn #1   
50 [0x32]:           pushobj   
51 [0x33]:           movg @21 // @std.io#buffer_type   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           call @1944 // <std#_enum_.operator==>   
56 [0x38]:           loadval ebx   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 92   
59 [0x3b]: line: 234 pushl 0   
60 [0x3c]:           call @3790 // <app#filter<var>.wait_for_data>   
61 [0x3d]: line: 236 movl 0   
62 [0x3e]:           movn #0   
64 [0x40]:           movn #0   
66 [0x42]:           movi #0, adx   
68 [0x44]:           iaload ebx, adx   
69 [0x45]:           smovr_2 ebx, fp+3   
70 [0x46]: line: 237 movl 0   
71 [0x47]:           movn #1   
73 [0x49]:           del   
74 [0x4a]: line: 238 movl 0   
75 [0x4b]:           movn #0   
77 [0x4d]:           del   
78 [0x4e]: line: 239 movi #0, ebx   
80 [0x50]:           movl 0   
81 [0x51]:           movn #2   
83 [0x53]:           movi #0, adx   
85 [0x55]:           rmov adx, ebx   
86 [0x56]: line: 240 pushl 0   
87 [0x57]:           call @2275 // <std#_object_._unlock>   
88 [0x58]: line: 241 loadl ebx, fp+3   
89 [0x59]:           return_val ebx   
90 [0x5a]:           ret   
91 [0x5b]:           jmp @206   
92 [0x5c]:           movl 1   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           movg @21 // @std.io#buffer_type   
97 [0x61]:           movn #2   
99 [0x63]:           pushobj   
100 [0x64]:           call @1944 // <std#_enum_.operator==>   
101 [0x65]:           loadval ebx   
102 [0x66]:           movr cmt, ebx   
103 [0x67]:           jne 126   
104 [0x68]: line: 244 pushl 0   
105 [0x69]:           call @3790 // <app#filter<var>.wait_for_data>   
106 [0x6a]: line: 246 movl 0   
107 [0x6b]:           movn #2   
109 [0x6d]:           movi #0, adx   
111 [0x6f]:           iaload ebx, adx   
112 [0x70]:           movr egx, ebx   
113 [0x71]:           dec ebx   
114 [0x72]:           movi #0, adx   
116 [0x74]:           rmov adx, ebx   
117 [0x75]: line: 247 pushl 0   
118 [0x76]:           call @3789 // <app#filter<var>.filo>   
119 [0x77]:           ipopl 4   
120 [0x78]: line: 249 pushl 0   
121 [0x79]:           call @2275 // <std#_object_._unlock>   
122 [0x7a]: line: 250 loadl ebx, fp+4   
123 [0x7b]:           return_val ebx   
124 [0x7c]:           ret   
125 [0x7d]:           jmp @206   
126 [0x7e]:           movl 1   
127 [0x7f]:           movn #1   
129 [0x81]:           pushobj   
130 [0x82]:           movg @21 // @std.io#buffer_type   
131 [0x83]:           movn #3   
133 [0x85]:           pushobj   
134 [0x86]:           call @1944 // <std#_enum_.operator==>   
135 [0x87]:           loadval ebx   
136 [0x88]:           movr cmt, ebx   
137 [0x89]:           jne 199   
138 [0x8a]: line: 253 pushl 0   
139 [0x8b]:           call @3790 // <app#filter<var>.wait_for_data>   
140 [0x8c]: line: 255 movl 0   
141 [0x8d]:           movn #2   
143 [0x8f]:           movi #0, adx   
145 [0x91]:           iaload ebx, adx   
146 [0x92]:           rstore ebx   
147 [0x93]:           movl 1   
148 [0x94]:           movn #2   
150 [0x96]:           movi #0, adx   
152 [0x98]:           iaload ebx, adx   
153 [0x99]:           loadval ecx   
154 [0x9a]:           lt ecx, ebx   
155 [0x9b]:           movr ebx, cmt   
156 [0x9c]:           movr cmt, ebx   
157 [0x9d]:           jne 178   
158 [0x9e]: line: 256 movl 0   
159 [0x9f]:           movn #2   
161 [0xa1]:           movi #0, adx   
163 [0xa3]:           iaload ebx, adx   
164 [0xa4]:           movr egx, ebx   
165 [0xa5]:           dec ebx   
166 [0xa6]:           movi #0, adx   
168 [0xa8]:           rmov adx, ebx   
169 [0xa9]: line: 257 pushl 0   
170 [0xaa]:           call @3789 // <app#filter<var>.filo>   
171 [0xab]:           ipopl 5   
172 [0xac]: line: 259 pushl 0   
173 [0xad]:           call @2275 // <std#_object_._unlock>   
174 [0xae]: line: 260 loadl ebx, fp+5   
175 [0xaf]:           return_val ebx   
176 [0xb0]:           ret   
177 [0xb1]:           jmp @197   
178 [0xb2]: line: 262 movl 0   
179 [0xb3]:           movn #2   
181 [0xb5]:           movi #0, adx   
183 [0xb7]:           iaload ebx, adx   
184 [0xb8]:           movr egx, ebx   
185 [0xb9]:           dec ebx   
186 [0xba]:           movi #0, adx   
188 [0xbc]:           rmov adx, ebx   
189 [0xbd]: line: 263 pushl 0   
190 [0xbe]:           call @3789 // <app#filter<var>.filo>   
191 [0xbf]:           ipopl 6   
192 [0xc0]: line: 264 pushl 0   
193 [0xc1]:           call @2275 // <std#_object_._unlock>   
194 [0xc2]: line: 265 loadl ebx, fp+6   
195 [0xc3]:           return_val ebx   
196 [0xc4]:           ret   
197 [0xc5]:           nop   
198 [0xc6]:           jmp @206   
199 [0xc7]: line: 269 istorel 0, fp+7   
201 [0xc9]: line: 270 pushl 0   
202 [0xca]:           call @2275 // <std#_object_._unlock>   
203 [0xcb]: line: 271 loadl ebx, fp+7   
204 [0xcc]:           return_val ebx   
205 [0xcd]:           ret   
206 [0xce]:           nop   


function: app#filter<var>.send[3795] params(2) in file: lib\support\0.2.9/io//channel.sharp:276:11: note:  
		       def send(data : t, chan: channel<t>) {
		          ^

0 [0x0]: line: 277 pushl 0   
1 [0x1]:           call @2274 // <std#_object_._lock>   
2 [0x2]: line: 279 movl 2   
3 [0x3]:           movn #3   
5 [0x5]:           pushobj   
6 [0x6]:           movg @92 // @std.io#channel<t>.channel_state   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           call @1944 // <std#_enum_.operator==>   
11 [0xb]:           loadval ebx   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 342   
14 [0xe]: line: 280 movl 2   
15 [0xf]:           movn #1   
17 [0x11]:           pushobj   
18 [0x12]:           movg @21 // @std.io#buffer_type   
19 [0x13]:           movn #0   
21 [0x15]:           pushobj   
22 [0x16]:           call @1944 // <std#_enum_.operator==>   
23 [0x17]:           loadval ebx   
24 [0x18]:           movr cmt, ebx   
25 [0x19]:           jne 62   
26 [0x1a]: line: 282 new_class @0 // app#__srt_global   
27 [0x1b]:           jne 0   
28 [0x1c]:           loadl ebx, fp+1   
29 [0x1d]:           movsl #0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           chklen adx   
35 [0x23]:           rmov adx, ebx   
36 [0x24]:           movl 0   
37 [0x25]:           movn #0   
39 [0x27]:           popobj   
40 [0x28]: line: 283 movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           pushobj   
44 [0x2c]:           movl 0   
45 [0x2d]:           movn #1   
47 [0x2f]:           popobj   
48 [0x30]: line: 284 movi #1, ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #2   
53 [0x35]:           movi #0, adx   
55 [0x37]:           rmov adx, ebx   
56 [0x38]: line: 285 pushl 0   
57 [0x39]:           call @2275 // <std#_object_._unlock>   
58 [0x3a]: line: 286 pushl 0   
59 [0x3b]:           call @3791 // <app#filter<var>.wait_for_consume>   
60 [0x3c]: line: 287 ret   
61 [0x3d]:           jmp @341   
62 [0x3e]:           movl 2   
63 [0x3f]:           movn #1   
65 [0x41]:           pushobj   
66 [0x42]:           movg @21 // @std.io#buffer_type   
67 [0x43]:           movn #1   
69 [0x45]:           pushobj   
70 [0x46]:           call @1944 // <std#_enum_.operator==>   
71 [0x47]:           loadval ebx   
72 [0x48]:           movr cmt, ebx   
73 [0x49]:           jne 125   
74 [0x4a]: line: 290 movl 0   
75 [0x4b]:           movn #0   
77 [0x4d]:           pushobj   
78 [0x4e]:           pushnull    
79 [0x4f]:           itest ebx   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 105   
82 [0x52]: line: 291 new_class @0 // app#__srt_global   
83 [0x53]:           jne 0   
84 [0x54]:           loadl ebx, fp+1   
85 [0x55]:           movsl #0   
86 [0x56]:           movn #0   
88 [0x58]:           movi #0, adx   
90 [0x5a]:           chklen adx   
91 [0x5b]:           rmov adx, ebx   
92 [0x5c]:           movl 0   
93 [0x5d]:           movn #0   
95 [0x5f]:           popobj   
96 [0x60]: line: 292 movl 0   
97 [0x61]:           movn #0   
99 [0x63]:           pushobj   
100 [0x64]:           movl 0   
101 [0x65]:           movn #1   
103 [0x67]:           popobj   
104 [0x68]:           jmp @115   
105 [0x69]: line: 294 ipushl #1   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #0   
109 [0x6d]:           movn #0   
111 [0x6f]:           loadval ebx   
112 [0x70]:           movi #0, adx   
114 [0x72]:           rmov adx, ebx   
115 [0x73]:           nop   
116 [0x74]: line: 297 movi #1, ebx   
118 [0x76]:           movl 0   
119 [0x77]:           movn #2   
121 [0x79]:           movi #0, adx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]:           jmp @341   
125 [0x7d]:           movl 2   
126 [0x7e]:           movn #1   
128 [0x80]:           pushobj   
129 [0x81]:           movg @21 // @std.io#buffer_type   
130 [0x82]:           movn #2   
132 [0x84]:           pushobj   
133 [0x85]:           call @1944 // <std#_enum_.operator==>   
134 [0x86]:           loadval ebx   
135 [0x87]:           movr cmt, ebx   
136 [0x88]:           jne 207   
137 [0x89]: line: 300 movl 0   
138 [0x8a]:           movn #0   
140 [0x8c]:           pushobj   
141 [0x8d]:           pushnull    
142 [0x8e]:           itest ebx   
143 [0x8f]:           movr cmt, ebx   
144 [0x90]:           jne 168   
145 [0x91]: line: 301 new_class @0 // app#__srt_global   
146 [0x92]:           jne 0   
147 [0x93]:           loadl ebx, fp+1   
148 [0x94]:           movsl #0   
149 [0x95]:           movn #0   
151 [0x97]:           movi #0, adx   
153 [0x99]:           chklen adx   
154 [0x9a]:           rmov adx, ebx   
155 [0x9b]:           movl 0   
156 [0x9c]:           movn #0   
158 [0x9e]:           popobj   
159 [0x9f]: line: 302 movl 0   
160 [0xa0]:           movn #0   
162 [0xa2]:           pushobj   
163 [0xa3]:           movl 0   
164 [0xa4]:           movn #1   
166 [0xa6]:           popobj   
167 [0xa7]:           jmp @194   
168 [0xa8]: line: 304 new_class @0 // app#__srt_global   
169 [0xa9]:           jne 0   
170 [0xaa]:           loadl ebx, fp+1   
171 [0xab]:           movsl #0   
172 [0xac]:           movn #0   
174 [0xae]:           movi #0, adx   
176 [0xb0]:           chklen adx   
177 [0xb1]:           rmov adx, ebx   
178 [0xb2]:           movl 0   
179 [0xb3]:           movn #1   
181 [0xb5]:           movn #1   
183 [0xb7]:           popobj   
184 [0xb8]: line: 305 movl 0   
185 [0xb9]:           movn #1   
187 [0xbb]:           movn #1   
189 [0xbd]:           pushobj   
190 [0xbe]:           movl 0   
191 [0xbf]:           movn #1   
193 [0xc1]:           popobj   
194 [0xc2]:           nop   
195 [0xc3]: line: 308 movl 0   
196 [0xc4]:           movn #2   
198 [0xc6]:           movi #0, adx   
200 [0xc8]:           iaload ebx, adx   
201 [0xc9]:           movr egx, ebx   
202 [0xca]:           inc ebx   
203 [0xcb]:           movi #0, adx   
205 [0xcd]:           rmov adx, ebx   
206 [0xce]:           jmp @341   
207 [0xcf]:           movl 2   
208 [0xd0]:           movn #1   
210 [0xd2]:           pushobj   
211 [0xd3]:           movg @21 // @std.io#buffer_type   
212 [0xd4]:           movn #3   
214 [0xd6]:           pushobj   
215 [0xd7]:           call @1944 // <std#_enum_.operator==>   
216 [0xd8]:           loadval ebx   
217 [0xd9]:           movr cmt, ebx   
218 [0xda]:           jne 341   
219 [0xdb]: line: 311 movl 0   
220 [0xdc]:           movn #2   
222 [0xde]:           movi #0, adx   
224 [0xe0]:           iaload ebx, adx   
225 [0xe1]:           rstore ebx   
226 [0xe2]:           movl 2   
227 [0xe3]:           movn #2   
229 [0xe5]:           movi #0, adx   
231 [0xe7]:           iaload ebx, adx   
232 [0xe8]:           loadval ecx   
233 [0xe9]:           test ecx, ebx   
234 [0xea]:           jne 260   
235 [0xeb]: line: 312 pushl 0   
236 [0xec]:           call @2275 // <std#_object_._unlock>   
237 [0xed]: line: 313 movl 0   
238 [0xee]:           movn #2   
240 [0xf0]:           movi #0, adx   
242 [0xf2]:           iaload ebx, adx   
243 [0xf3]:           rstore ebx   
244 [0xf4]:           movl 2   
245 [0xf5]:           movn #2   
247 [0xf7]:           movi #0, adx   
249 [0xf9]:           iaload ebx, adx   
250 [0xfa]:           loadval ecx   
251 [0xfb]:           test ecx, ebx   
252 [0xfc]:           jne 258   
253 [0xfd]: line: 314 istore 2   
255 [0xff]:           call @2194 // <std.io#thread.sleep>   
256 [0x100]: line: 315 call @2198 // <std.io#thread.yield>   
257 [0x101]:           jmp @237   
258 [0x102]: line: 317 pushl 0   
259 [0x103]:           call @2274 // <std#_object_._lock>   
260 [0x104]:           nop   
261 [0x105]: line: 320 movl 0   
262 [0x106]:           movn #0   
264 [0x108]:           pushobj   
265 [0x109]:           pushnull    
266 [0x10a]:           itest ebx   
267 [0x10b]:           movr cmt, ebx   
268 [0x10c]:           jne 303   
269 [0x10d]: line: 321 new_class @0 // app#__srt_global   
270 [0x10e]:           jne 0   
271 [0x10f]:           loadl ebx, fp+1   
272 [0x110]:           movsl #0   
273 [0x111]:           movn #0   
275 [0x113]:           movi #0, adx   
277 [0x115]:           chklen adx   
278 [0x116]:           rmov adx, ebx   
279 [0x117]:           movl 0   
280 [0x118]:           movn #0   
282 [0x11a]:           popobj   
283 [0x11b]: line: 322 movl 0   
284 [0x11c]:           movn #0   
286 [0x11e]:           pushobj   
287 [0x11f]:           movl 0   
288 [0x120]:           movn #1   
290 [0x122]:           popobj   
291 [0x123]: line: 323 movl 0   
292 [0x124]:           movn #2   
294 [0x126]:           movi #0, adx   
296 [0x128]:           iaload ebx, adx   
297 [0x129]:           movr egx, ebx   
298 [0x12a]:           inc ebx   
299 [0x12b]:           movi #0, adx   
301 [0x12d]:           rmov adx, ebx   
302 [0x12e]:           jmp @340   
303 [0x12f]: line: 325 new_class @0 // app#__srt_global   
304 [0x130]:           jne 0   
305 [0x131]:           loadl ebx, fp+1   
306 [0x132]:           movsl #0   
307 [0x133]:           movn #0   
309 [0x135]:           movi #0, adx   
311 [0x137]:           chklen adx   
312 [0x138]:           rmov adx, ebx   
313 [0x139]:           movl 0   
314 [0x13a]:           movn #1   
316 [0x13c]:           movn #1   
318 [0x13e]:           popobj   
319 [0x13f]: line: 326 movl 0   
320 [0x140]:           movn #1   
322 [0x142]:           movn #1   
324 [0x144]:           pushobj   
325 [0x145]:           movl 0   
326 [0x146]:           movn #1   
328 [0x148]:           popobj   
329 [0x149]: line: 327 movl 0   
330 [0x14a]:           movn #2   
332 [0x14c]:           movi #0, adx   
334 [0x14e]:           iaload ebx, adx   
335 [0x14f]:           movr egx, ebx   
336 [0x150]:           inc ebx   
337 [0x151]:           movi #0, adx   
339 [0x153]:           rmov adx, ebx   
340 [0x154]:           nop   
341 [0x155]:           nop   
342 [0x156]:           nop   
343 [0x157]: line: 333 pushl 0   
344 [0x158]:           call @2275 // <std#_object_._unlock>   
345 [0x159]:           ret   


constructor: app#filter<var>.filter[3796] params(0) in file: lib\support\0.2.9/io//channel.sharp:171:10: note:  
		    class filter<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std#loopable<app#filter<var>>.get_elements[3797] params(0) in file: lib\support\0.2.9/loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<app#filter<var>>.loopable[3798] params(0) in file: lib\support\0.2.9/loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#list<app#filter<var>>.list[3799] params(0) in file: lib\support\0.2.9/list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // app#filter<var>[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<app#filter<var>>.list[3800] params(1) in file: lib\support\0.2.9/list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // app#filter<var>[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<app#filter<var>>.list[3801] params(1) in file: lib\support\0.2.9/list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3812 // <std#list<app#filter<var>>.add_all>   
4 [0x4]:          ret   


function: std#list<app#filter<var>>.empty[3802] params(0) in file: lib\support\0.2.9/list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<app#filter<var>>.set_compact[3803] params(1) in file: lib\support\0.2.9/list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<app#filter<var>>.get_elements[3804] params(0) in file: lib\support\0.2.9/list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2092 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<app#filter<var>>.operator[[3805] params(1) in file: lib\support\0.2.9/list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3826 // <std#list<app#filter<var>>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<app#filter<var>>.at[3806] params(1) in file: lib\support\0.2.9/list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3826 // <std#list<app#filter<var>>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<app#filter<var>>.last[3807] params(0) in file: lib\support\0.2.9/list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3806 // <std#list<app#filter<var>>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<app#filter<var>>.put[3808] params(2) in file: lib\support\0.2.9/list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // app#__srt_global   
19 [0x13]:          mov8 adx, adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3826 // <std#list<app#filter<var>>.out_of_bounds_msg>   
24 [0x18]:          call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std#list<app#filter<var>>.expand[3809] params(0) in file: lib\support\0.2.9/list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2072 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2072 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<app#filter<var>>.clear[3810] params(0) in file: lib\support\0.2.9/list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // app#filter<var>[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#list<app#filter<var>>.add_all[3811] params(1) in file: lib\support\0.2.9/list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2092 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #103, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<app#filter<var>>.add_all[3812] params(1) in file: lib\support\0.2.9/list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2092 // <std.io#__srt_global.copy>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #103, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // app#filter<var>[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std#list<app#filter<var>>.add[3813] params(1) in file: lib\support\0.2.9/list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3809 // <std#list<app#filter<var>>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std#list<app#filter<var>>.indexof[3814] params(1) in file: lib\support\0.2.9/list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: std#list<app#filter<var>>.pop_back[3815] params(0) in file: lib\support\0.2.9/list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<app#filter<var>>.size[3816] params(0) in file: lib\support\0.2.9/list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<app#filter<var>>.insert[3817] params(2) in file: lib\support\0.2.9/list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3826 // <std#list<app#filter<var>>.out_of_bounds_msg>   
24 [0x18]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3813 // <std#list<app#filter<var>>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3809 // <std#list<app#filter<var>>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<app#filter<var>>.find[3818] params(2) in file: lib\support\0.2.9/list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#list<app#filter<var>>.remove[3819] params(1) in file: lib\support\0.2.9/list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @3823 // <std#list<app#filter<var>>.remove_at>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: std#list<app#filter<var>>.remove[3820] params(2) in file: lib\support\0.2.9/list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3823 // <std#list<app#filter<var>>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<app#filter<var>>.replace[3821] params(2) in file: lib\support\0.2.9/list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<app#filter<var>>.linear_sort[3822] params(1) in file: lib\support\0.2.9/list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<app#filter<var>>.remove_at[3823] params(1) in file: lib\support\0.2.9/list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // app#__srt_global   
19 [0x13]:           mov8 adx, adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3826 // <std#list<app#filter<var>>.out_of_bounds_msg>   
24 [0x18]:           call @1965 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2082 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3815 // <std#list<app#filter<var>>.pop_back>   
77 [0x4d]:           ret   


function: std#list<app#filter<var>>.indexof[3824] params(2) in file: lib\support\0.2.9/list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<app#filter<var>>.to_string[3825] params(0) in file: lib\support\0.2.9/list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // app#__srt_global   
1 [0x1]:           returnobj   
2 [0x2]:           dup    
3 [0x3]:           call @3572 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @110 // [    
8 [0x8]:           call @3568 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @3564 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @111 // ,    
56 [0x38]:           call @3568 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @112 //  ]   
64 [0x40]:           call @3568 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @3545 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<app#filter<var>>.out_of_bounds_msg[3826] params(1) in file: lib\support\0.2.9/list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // app#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           newstr @113 // Index:    
4 [0x4]:           call @3469 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @3501 // <std#string.operator+>   
7 [0x7]:           newstr @114 // , size:    
8 [0x8]:           call @3481 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3501 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: app#channel_data<var>.channel_data[3827] params(0) in file: lib\support\0.2.9/io//channel.sharp:337:10: note:  
		    class channel_data<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: app#__srt_global.$03internal_static_init[3828] params(0) in file: tests/syntax.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         rmov adx, adx   
2 [0x2]:         dup    
3 [0x3]:         movg @21 // @std.io#buffer_type   
4 [0x4]:         movn #3   
6 [0x6]:         pushobj   
7 [0x7]:         istore 2   
9 [0x9]:         call @3651 // <std.io#channel<var>.channel>   
10 [0xa]:         movg @0 // @app#__srt_global   
11 [0xb]:         movn #0   
13 [0xd]:         popobj   
14 [0xe]:         ret   


function: std.io#__srt_global.$03internal_static_init[3829] params(0) in file: lib\support\0.2.9/io//critical_section.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         _putc adx   
2 [0x2]:         dup    
3 [0x3]:         movg @20 // @std.io#__srt_global   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std.io#file.$03internal_static_init[3830] params(0) in file: lib\support\0.2.9/io//file.sharp:17:13: note:  
		public class file {
		            ^

0 [0x0]:         call @2050 // <std.io#file.get_file_system>   
1 [0x1]:         movg @22 // @std.io#file   
2 [0x2]:         movn #0   
4 [0x4]:         popobj   
5 [0x5]:         movg @22 // @std.io#file   
6 [0x6]:         movn #0   
8 [0x8]:         pushobj   
9 [0x9]:         invoke_delegate 2052 { static=0, args=0 }   
11 [0xb]:         movg @22 // @std.io#file   
12 [0xc]:         movn #1   
14 [0xe]:         loadval ebx   
15 [0xf]:         movi #0, adx   
17 [0x11]:         rmov adx, ebx   
18 [0x12]:         ret   
19 [0x13]:         ret   


function: std.io.task#job.$03internal_static_init[3831] params(0) in file: lib\support\0.2.9/io//task//job.sharp:5:13: note:  
		public class job {
		            ^

0 [0x0]:         istore 0   
2 [0x2]:         movg @26 // @std.io.task#job   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: std.io.task#__srt_global.$03internal_static_init[3832] params(0) in file: lib\support\0.2.9/io//task//task.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         movr adx, adx   
2 [0x2]:         dup    
3 [0x3]:         call @2150 // <std.io.task#job_master.job_master>   
4 [0x4]:         movg @24 // @std.io.task#__srt_global   
5 [0x5]:         movn #5   
7 [0x7]:         popobj   
8 [0x8]:         ret   


function: std.io#thread_group.$03internal_static_init[3833] params(0) in file: lib\support\0.2.9/io//thread_group.sharp:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         lt adx, adx   
2 [0x2]:         dup    
3 [0x3]:         new_class @0 // app#__srt_global   
4 [0x4]:         checknull   
5 [0x5]:         dup    
6 [0x6]:         newstr @2 // main   
7 [0x7]:         call @3469 // <std#string.string>   
8 [0x8]:         call @2215 // <std.io#thread_group.thread_group>   
9 [0x9]:         movg @33 // @std.io#thread_group   
10 [0xa]:         movn #0   
12 [0xc]:         popobj   
13 [0xd]:         ret   
14 [0xe]:         ret   


function: std#_nil_.$03internal_static_init[3834] params(0) in file: lib\support\0.2.9/nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         new_class @0 // app#__srt_global   
1 [0x1]:         put adx   
2 [0x2]:         movg @40 // @std#_nil_   
3 [0x3]:         movn #0   
5 [0x5]:         popobj   
6 [0x6]:         ret   
7 [0x7]:         ret   


function: std#__srt_global.$03internal_static_init[3835] params(0) in file: lib\support\0.2.9/object.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         istore 0   
2 [0x2]:         movg @1 // @std#__srt_global   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std#string.$03internal_static_init[3836] params(0) in file: lib\support\0.2.9/string.sharp:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @70 // @std#string   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @70 // @std#string   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std#string_builder.$03internal_static_init[3837] params(0) in file: lib\support\0.2.9/string_builder.sharp:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @71 // @std#string_builder   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @71 // @std#string_builder   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std#time.$03internal_static_init[3838] params(0) in file: lib\support\0.2.9/time.sharp:6:6: note:  
		class time {
		     ^

0 [0x0]:         istore 4294967295   
2 [0x2]:         movg @72 // @std#time   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: std.io#thread_result.$03internal_static_init[3839] params(0) in file: lib\support\0.2.9/io//thread_kernel.sharp:3:5: note:  
		import platform.kernel;
		    ^

0 [0x0]: line: 43 istorel 0, fp+0   
2 [0x2]: line: 44 movi #17, ebx   
4 [0x4]:          new_classarray ebx  // std.io#thread_result[]   
6 [0x6]:          movg @35 // @std.io#thread_result   
7 [0x7]:          movn #17   
9 [0x9]:          popobj   
10 [0xa]: line: 45 movg @35 // @std.io#thread_result   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movg @35 // @std.io#thread_result   
15 [0xf]:          movn #17   
17 [0x11]:          pushobj   
18 [0x12]:          loadl ebx, fp+0   
19 [0x13]:          movr egx, ebx   
20 [0x14]:          inc ebx   
21 [0x15]:          smovr_2 ebx, fp+0   
22 [0x16]:          movr ebx, egx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          popobj   
28 [0x1c]: line: 46 movg @35 // @std.io#thread_result   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movg @35 // @std.io#thread_result   
33 [0x21]:          movn #17   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+0   
37 [0x25]:          movr egx, ebx   
38 [0x26]:          inc ebx   
39 [0x27]:          smovr_2 ebx, fp+0   
40 [0x28]:          movr ebx, egx   
41 [0x29]:          popobj2    
42 [0x2a]:          movr adx, ebx   
43 [0x2b]:          chklen adx   
44 [0x2c]:          movnd adx   
45 [0x2d]:          popobj   
46 [0x2e]: line: 47 movg @35 // @std.io#thread_result   
47 [0x2f]:          movn #2   
49 [0x31]:          pushobj   
50 [0x32]:          movg @35 // @std.io#thread_result   
51 [0x33]:          movn #17   
53 [0x35]:          pushobj   
54 [0x36]:          loadl ebx, fp+0   
55 [0x37]:          movr egx, ebx   
56 [0x38]:          inc ebx   
57 [0x39]:          smovr_2 ebx, fp+0   
58 [0x3a]:          movr ebx, egx   
59 [0x3b]:          popobj2    
60 [0x3c]:          movr adx, ebx   
61 [0x3d]:          chklen adx   
62 [0x3e]:          movnd adx   
63 [0x3f]:          popobj   
64 [0x40]: line: 48 movg @35 // @std.io#thread_result   
65 [0x41]:          movn #3   
67 [0x43]:          pushobj   
68 [0x44]:          movg @35 // @std.io#thread_result   
69 [0x45]:          movn #17   
71 [0x47]:          pushobj   
72 [0x48]:          loadl ebx, fp+0   
73 [0x49]:          movr egx, ebx   
74 [0x4a]:          inc ebx   
75 [0x4b]:          smovr_2 ebx, fp+0   
76 [0x4c]:          movr ebx, egx   
77 [0x4d]:          popobj2    
78 [0x4e]:          movr adx, ebx   
79 [0x4f]:          chklen adx   
80 [0x50]:          movnd adx   
81 [0x51]:          popobj   
82 [0x52]: line: 49 movg @35 // @std.io#thread_result   
83 [0x53]:          movn #4   
85 [0x55]:          pushobj   
86 [0x56]:          movg @35 // @std.io#thread_result   
87 [0x57]:          movn #17   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+0   
91 [0x5b]:          movr egx, ebx   
92 [0x5c]:          inc ebx   
93 [0x5d]:          smovr_2 ebx, fp+0   
94 [0x5e]:          movr ebx, egx   
95 [0x5f]:          popobj2    
96 [0x60]:          movr adx, ebx   
97 [0x61]:          chklen adx   
98 [0x62]:          movnd adx   
99 [0x63]:          popobj   
100 [0x64]: line: 50 movg @35 // @std.io#thread_result   
101 [0x65]:          movn #5   
103 [0x67]:          pushobj   
104 [0x68]:          movg @35 // @std.io#thread_result   
105 [0x69]:          movn #17   
107 [0x6b]:          pushobj   
108 [0x6c]:          loadl ebx, fp+0   
109 [0x6d]:          movr egx, ebx   
110 [0x6e]:          inc ebx   
111 [0x6f]:          smovr_2 ebx, fp+0   
112 [0x70]:          movr ebx, egx   
113 [0x71]:          popobj2    
114 [0x72]:          movr adx, ebx   
115 [0x73]:          chklen adx   
116 [0x74]:          movnd adx   
117 [0x75]:          popobj   
118 [0x76]: line: 51 movg @35 // @std.io#thread_result   
119 [0x77]:          movn #6   
121 [0x79]:          pushobj   
122 [0x7a]:          movg @35 // @std.io#thread_result   
123 [0x7b]:          movn #17   
125 [0x7d]:          pushobj   
126 [0x7e]:          loadl ebx, fp+0   
127 [0x7f]:          movr egx, ebx   
128 [0x80]:          inc ebx   
129 [0x81]:          smovr_2 ebx, fp+0   
130 [0x82]:          movr ebx, egx   
131 [0x83]:          popobj2    
132 [0x84]:          movr adx, ebx   
133 [0x85]:          chklen adx   
134 [0x86]:          movnd adx   
135 [0x87]:          popobj   
136 [0x88]: line: 52 movg @35 // @std.io#thread_result   
137 [0x89]:          movn #7   
139 [0x8b]:          pushobj   
140 [0x8c]:          movg @35 // @std.io#thread_result   
141 [0x8d]:          movn #17   
143 [0x8f]:          pushobj   
144 [0x90]:          loadl ebx, fp+0   
145 [0x91]:          movr egx, ebx   
146 [0x92]:          inc ebx   
147 [0x93]:          smovr_2 ebx, fp+0   
148 [0x94]:          movr ebx, egx   
149 [0x95]:          popobj2    
150 [0x96]:          movr adx, ebx   
151 [0x97]:          chklen adx   
152 [0x98]:          movnd adx   
153 [0x99]:          popobj   
154 [0x9a]: line: 53 movg @35 // @std.io#thread_result   
155 [0x9b]:          movn #8   
157 [0x9d]:          pushobj   
158 [0x9e]:          movg @35 // @std.io#thread_result   
159 [0x9f]:          movn #17   
161 [0xa1]:          pushobj   
162 [0xa2]:          loadl ebx, fp+0   
163 [0xa3]:          movr egx, ebx   
164 [0xa4]:          inc ebx   
165 [0xa5]:          smovr_2 ebx, fp+0   
166 [0xa6]:          movr ebx, egx   
167 [0xa7]:          popobj2    
168 [0xa8]:          movr adx, ebx   
169 [0xa9]:          chklen adx   
170 [0xaa]:          movnd adx   
171 [0xab]:          popobj   
172 [0xac]: line: 54 movg @35 // @std.io#thread_result   
173 [0xad]:          movn #9   
175 [0xaf]:          pushobj   
176 [0xb0]:          movg @35 // @std.io#thread_result   
177 [0xb1]:          movn #17   
179 [0xb3]:          pushobj   
180 [0xb4]:          loadl ebx, fp+0   
181 [0xb5]:          movr egx, ebx   
182 [0xb6]:          inc ebx   
183 [0xb7]:          smovr_2 ebx, fp+0   
184 [0xb8]:          movr ebx, egx   
185 [0xb9]:          popobj2    
186 [0xba]:          movr adx, ebx   
187 [0xbb]:          chklen adx   
188 [0xbc]:          movnd adx   
189 [0xbd]:          popobj   
190 [0xbe]: line: 55 movg @35 // @std.io#thread_result   
191 [0xbf]:          movn #10   
193 [0xc1]:          pushobj   
194 [0xc2]:          movg @35 // @std.io#thread_result   
195 [0xc3]:          movn #17   
197 [0xc5]:          pushobj   
198 [0xc6]:          loadl ebx, fp+0   
199 [0xc7]:          movr egx, ebx   
200 [0xc8]:          inc ebx   
201 [0xc9]:          smovr_2 ebx, fp+0   
202 [0xca]:          movr ebx, egx   
203 [0xcb]:          popobj2    
204 [0xcc]:          movr adx, ebx   
205 [0xcd]:          chklen adx   
206 [0xce]:          movnd adx   
207 [0xcf]:          popobj   
208 [0xd0]: line: 56 movg @35 // @std.io#thread_result   
209 [0xd1]:          movn #11   
211 [0xd3]:          pushobj   
212 [0xd4]:          movg @35 // @std.io#thread_result   
213 [0xd5]:          movn #17   
215 [0xd7]:          pushobj   
216 [0xd8]:          loadl ebx, fp+0   
217 [0xd9]:          movr egx, ebx   
218 [0xda]:          inc ebx   
219 [0xdb]:          smovr_2 ebx, fp+0   
220 [0xdc]:          movr ebx, egx   
221 [0xdd]:          popobj2    
222 [0xde]:          movr adx, ebx   
223 [0xdf]:          chklen adx   
224 [0xe0]:          movnd adx   
225 [0xe1]:          popobj   
226 [0xe2]: line: 57 movg @35 // @std.io#thread_result   
227 [0xe3]:          movn #12   
229 [0xe5]:          pushobj   
230 [0xe6]:          movg @35 // @std.io#thread_result   
231 [0xe7]:          movn #17   
233 [0xe9]:          pushobj   
234 [0xea]:          loadl ebx, fp+0   
235 [0xeb]:          movr egx, ebx   
236 [0xec]:          inc ebx   
237 [0xed]:          smovr_2 ebx, fp+0   
238 [0xee]:          movr ebx, egx   
239 [0xef]:          popobj2    
240 [0xf0]:          movr adx, ebx   
241 [0xf1]:          chklen adx   
242 [0xf2]:          movnd adx   
243 [0xf3]:          popobj   
244 [0xf4]: line: 58 movg @35 // @std.io#thread_result   
245 [0xf5]:          movn #13   
247 [0xf7]:          pushobj   
248 [0xf8]:          movg @35 // @std.io#thread_result   
249 [0xf9]:          movn #17   
251 [0xfb]:          pushobj   
252 [0xfc]:          loadl ebx, fp+0   
253 [0xfd]:          movr egx, ebx   
254 [0xfe]:          inc ebx   
255 [0xff]:          smovr_2 ebx, fp+0   
256 [0x100]:          movr ebx, egx   
257 [0x101]:          popobj2    
258 [0x102]:          movr adx, ebx   
259 [0x103]:          chklen adx   
260 [0x104]:          movnd adx   
261 [0x105]:          popobj   
262 [0x106]: line: 59 movg @35 // @std.io#thread_result   
263 [0x107]:          movn #14   
265 [0x109]:          pushobj   
266 [0x10a]:          movg @35 // @std.io#thread_result   
267 [0x10b]:          movn #17   
269 [0x10d]:          pushobj   
270 [0x10e]:          loadl ebx, fp+0   
271 [0x10f]:          movr egx, ebx   
272 [0x110]:          inc ebx   
273 [0x111]:          smovr_2 ebx, fp+0   
274 [0x112]:          movr ebx, egx   
275 [0x113]:          popobj2    
276 [0x114]:          movr adx, ebx   
277 [0x115]:          chklen adx   
278 [0x116]:          movnd adx   
279 [0x117]:          popobj   
280 [0x118]: line: 60 movg @35 // @std.io#thread_result   
281 [0x119]:          movn #15   
283 [0x11b]:          pushobj   
284 [0x11c]:          movg @35 // @std.io#thread_result   
285 [0x11d]:          movn #17   
287 [0x11f]:          pushobj   
288 [0x120]:          loadl ebx, fp+0   
289 [0x121]:          movr egx, ebx   
290 [0x122]:          inc ebx   
291 [0x123]:          smovr_2 ebx, fp+0   
292 [0x124]:          movr ebx, egx   
293 [0x125]:          popobj2    
294 [0x126]:          movr adx, ebx   
295 [0x127]:          chklen adx   
296 [0x128]:          movnd adx   
297 [0x129]:          popobj   
298 [0x12a]: line: 61 movg @35 // @std.io#thread_result   
299 [0x12b]:          movn #16   
301 [0x12d]:          pushobj   
302 [0x12e]:          movg @35 // @std.io#thread_result   
303 [0x12f]:          movn #17   
305 [0x131]:          pushobj   
306 [0x132]:          loadl ebx, fp+0   
307 [0x133]:          movr egx, ebx   
308 [0x134]:          inc ebx   
309 [0x135]:          smovr_2 ebx, fp+0   
310 [0x136]:          movr ebx, egx   
311 [0x137]:          popobj2    
312 [0x138]:          movr adx, ebx   
313 [0x139]:          chklen adx   
314 [0x13a]:          movnd adx   
315 [0x13b]:          popobj   
316 [0x13c]:          ret   
317 [0x13d]:          ret   


function: std#tmp.$03internal_static_init[3840] params(0) in file: lib\support\0.2.9/random.sharp:32:5: note:  
		class tmp {
		    ^

0 [0x0]: line: 34 call @1922 // <std#__srt_global.utc_mills_time>   
1 [0x1]:          loadval ebx   
2 [0x2]:          rstore ebx   
3 [0x3]:          movi #4, ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          shr ecx, ebx -> ebx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movg @1 // @std#__srt_global   
9 [0x9]:          movn #1   
11 [0xb]:          loadval ebx   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]: line: 35 movg @1 // @std#__srt_global   
16 [0x10]:          movn #1   
18 [0x12]:          movi #0, adx   
20 [0x14]:          iaload ebx, adx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2315 // <platform.kernel#vm.random_seed>   
23 [0x17]:          ret   
24 [0x18]:          ret   


lambda: std.io.task#__srt_global.anon_func$3841[3841] params(2) in file: lib\support\0.2.9/io//task//job_master.sharp:71:35: note:  
				job_queue.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                  ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: std.io.task#__srt_global.anon_func$3842[3842] params(2) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:89:52: note:  
		                        jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                                   ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: std.io.task#__srt_global.anon_func$3843[3843] params(2) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:104:48: note:  
		                    jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                               ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #15   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #15   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


lambda: std.io.task#__srt_global.anon_func$3844[3844] params(1) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:128:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 129 pushl 0   
1 [0x1]:           movg @24 // @std.io.task#__srt_global   
2 [0x2]:           movn #3   
4 [0x4]:           pushobj   
5 [0x5]:           call @2214 // <std.io#thread.operator==>   
6 [0x6]:           loadval ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 12   
9 [0x9]:           istorel 0, fp+0   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 131 movg @24 // @std.io.task#__srt_global   
14 [0xe]:           movn #5   
16 [0x10]:           pushobj   
17 [0x11]:           pushl 0   
18 [0x12]:           call @2155 // <std.io.task#job_master.get_host_controller>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           pushnull    
24 [0x18]:           itest ebx   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   


lambda: std.io.task#__srt_global.anon_func$3845[3845] params(1) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:162:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 163 pushl 0   
1 [0x1]:           movg @24 // @std.io.task#__srt_global   
2 [0x2]:           movn #3   
4 [0x4]:           pushobj   
5 [0x5]:           call @2214 // <std.io#thread.operator==>   
6 [0x6]:           loadval ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 12   
9 [0x9]:           istorel 0, fp+0   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 164 movg @24 // @std.io.task#__srt_global   
14 [0xe]:           movn #5   
16 [0x10]:           pushobj   
17 [0x11]:           pushl 0   
18 [0x12]:           call @2155 // <std.io.task#job_master.get_host_controller>   
19 [0x13]:           popobj2    
20 [0x14]:           smovr_3 fp+1   
21 [0x15]: line: 166 movl 1   
22 [0x16]:           movn #0   
24 [0x18]:           pushobj   
25 [0x19]:           pushnull    
26 [0x1a]:           itest ebx   
27 [0x1b]:           skne ebx // pc = 61   
28 [0x1c]:           movl 1   
29 [0x1d]:           movn #1   
31 [0x1f]:           movi #0, adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movi #0, ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           gt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           skne ebx // pc = 61   
41 [0x29]:           movg @24 // @std.io.task#__srt_global   
42 [0x2a]:           movn #4   
44 [0x2c]:           movi #0, adx   
46 [0x2e]:           iaload ebx, adx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movl 1   
49 [0x31]:           movn #1   
51 [0x33]:           movi #0, adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           loadval ecx   
55 [0x37]:           sub ecx, ebx -> ebx   
56 [0x38]:           rstore ebx   
57 [0x39]:           movi #180000, ebx   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           gt ecx, ebx   
61 [0x3d]:           return_val cmt   
62 [0x3e]:           ret   


lambda: std.io.task#__srt_global.anon_func$3846[3846] params(1) in file: lib\support\0.2.9/io//task//job_scheduler.sharp:177:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 178 movg @24 // @std.io.task#__srt_global   
1 [0x1]:           movn #5   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @2155 // <std.io.task#job_master.get_host_controller>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 179 movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           skne ebx // pc = 48   
15 [0xf]:           movl 1   
16 [0x10]:           movn #1   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           rstore ebx   
22 [0x16]:           movi #0, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           gt ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           skne ebx // pc = 48   
28 [0x1c]:           movg @24 // @std.io.task#__srt_global   
29 [0x1d]:           movn #4   
31 [0x1f]:           movi #0, adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movl 1   
36 [0x24]:           movn #1   
38 [0x26]:           movi #0, adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           rstore ebx   
44 [0x2c]:           movi #180000, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           return_val cmt   
49 [0x31]:           ret   


